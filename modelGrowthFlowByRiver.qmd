# Growth in mass by river/area

```{r}
#| label: dataModelByRiverFlowOptions
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
#| label: librariesModelsFlowByRiver
#| echo: false

# for gams
library(gratia)
library(arm)
library(relaimpo)
library(GGally)
# library(linkedModels)
library(arrayhelpers)
library(mgcv)

library(getWBData)
library(lubridate)
library(kableExtra)
library(GGally)
library(lme4)
library(targets)
library(relaimpo)
library(caret)
library(pscl)
library(gridExtra)

library(viridis)
library(tidyverse)

`%notin%` <- Negate(`%in%`)

source('./R/generalFunctions.R') #to get global_labeller_WB
```

```{r}
#| label: labellerModelsFlowByRiver
#| echo: false
# labelsIntSeason <- c(
#   "1" = "Spring",
#   "2" = "Summer",
#   "3" = "Autumn",
#   "4" = "Winter"
# )
# 
# labelsIntRiver <- c(
#   "west brook" = "West Brook",
#   "wb jimmy" = "Open Large",
#   "wb mitchell" = "Open Small",
#   "wb obear" = "Isolated Small"
# )
# 
# global_labellerInt <- labeller(
#   season = labelsIntSeason,
#   river = labelsIntRiver
#   #.default = label_both
# )
```

Read in fish and environmental data
```{r}
#| label: getDataGam
#| cache: false

library(targets) #Seems to be needed with cache: false

cd1 <- tar_read(cd1_target)  # from modelGrowthInMass_target
dGAM <- tar_read(dGAM_target) # from modelGrowthInMass_target

kIn = 4
speciesIn <- "Brook trout"

envData <- tar_read(envDataWB_target)
```

Read in flow duration curve data
```{r}
#| label: getFDC
#| cache: false
#| 
library(targets) #Seems to be needed with cache: false

fdcStats <- tar_read(fdcStats_target)
fdcStatsY <- tar_read(fdcStatsY_target)
fdcStatsS <- tar_read(fdcStatsS)
fdcStatsYS <- tar_read(fdcStatsYS_target)

envDataWB_fdcThresh <- tar_read(envDataWB_fdcThresh_target)
propFDC_aboveBelow <- tar_read(propFDC_aboveBelow_target)

```


## Raw daily flow data

Raw data by day.

Four types of flow data:\
\
Primary flow data types  
- *flowByArea_flowExt* (green), flow from the flow extension model scaled by watershed area as a proportion of WB area.\
- *FlowByRiver* (blue), flows for each river hindcast from Jenn's model based on tributary-specific flow estimates.\
\
Additional flow data types  
- *Flow* (red), flow extension model for the West Brook from the Mill River.\
- *FlowByArea_ByRiver* (orange), flow from the West Brook from Jenn's models scaled to tributaries based on relative tributary area.  

### Frequency plots of flow data types

```{r}
#| label: flow_envFlowFreq
#| fig-cap: "Stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)"

ggplot(envData |> filter(!is.na(season)), aes(flow)) +
  #geom_density(color = viridis(10)[1], adjust = 2.5) +
  geom_density(color = "red3", adjust = 2.5, size = 2) +
  geom_density(aes(flowByRiver), color = "blue3", adjust = 2.5) +
  geom_density(aes(flowByArea_flowExt), color = "green4", adjust = 2.5) +
  geom_density(aes(flowByArea_ByRiver), color = "orange2", adjust = 2.5) +
  labs(x = "Flow m3/s") +
  scale_x_log10() +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

### Time series

::: panel-tabset
#### West Brook
```{r}
#| label: flowRawWB
#| fig-cap: "West Brook stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)"

ggplot(envData |> filter(river == "west brook", year > 1999), aes(yday, flow)) +
  #geom_point(color = "red3") +
  geom_point(aes(yday, flowByRiver), color = "blue3", size = 0.1) +
  geom_point(aes(yday, flowByArea_flowExt), color = "green4", size = 0.5) +
  geom_point(aes(yday, flowByArea_ByRiver), color = "orange2", size = 0.5) +
  scale_y_log10() +
  facet_wrap(~year)

```

#### Open Large
```{r}
#| label: flowRawOL
#| fig-cap: "Open Large stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)"

ggplot(envData |> filter(river == "wb jimmy", year > 1999), aes(yday, flow)) +
  #geom_point(color = "red3") +
  geom_point(aes(yday, flowByRiver), color = "blue3", size = 0.1) +
  geom_point(aes(yday, flowByArea_flowExt), color = "green4", size = 0.5) +
  geom_point(aes(yday, flowByArea_ByRiver), color = "orange2", size = 0.5) +
  scale_y_log10() +
  facet_wrap(~year)

```

#### Open Small
```{r}
#| label: flowRawOS
#| fig-cap: "Open Small stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)"

ggplot(envData |> filter(river == "wb mitchell", year > 1999), aes(date, flow)) +
  #geom_line(color = "red3") +
  geom_point(aes(yday, flowByRiver), color = "blue3", size = 0.1) +
  geom_point(aes(yday, flowByArea_flowExt), color = "green4", size = 0.5) +
  geom_point(aes(yday, flowByArea_ByRiver), color = "orange2", size = 0.5) +
  scale_y_log10() +
  facet_wrap(~year)

```

#### Isolated Small
```{r}
#| label: flowRawIS
#| fig-cap: "Isolated Small stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)"

ggplot(envData |> filter(river == "wb obear", year > 1999), aes(date, flow)) +
  #geom_line(color = "red3") +
  geom_point(aes(yday, flowByRiver), color = "blue3", size = 0.1) +
  geom_point(aes(yday, flowByArea_flowExt), color = "green4", size = 0.5) +
  geom_point(aes(yday, flowByArea_ByRiver), color = "orange2", size = 0.1) +
  scale_y_log10() +
  facet_wrap(~year)

```
:::

#### Summary stats
```{r}
#| label: timeSeriesFlwoStats

summaryStats <- envData |> 
  filter(!is.na(season)) |> 
  group_by(river, season) |> 
  summarize(meanflowByRiver = mean(flowByRiver, na.rm = TRUE),
            sdflowByRiver = sd(flowByRiver, na.rm = TRUE),
            meanflowByArea = mean(flowByArea_flowExt),
            sdflowByArea = sd(flowByArea_flowExt))


```



### Flow duration curves

#### Across all years and seasons

90% for low flow - look for inflection point

Peak flow analysis for spring

```{r}
#| label: flowDurationCurves

ggplot(fdcStats, aes(stat, perc, color = variable)) +
  geom_line() +
  geom_point(size = 1) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  facet_wrap(~river, scales = "free", labeller = global_labellerInt_WB)
```

#### Grouped by year

::: panel-tabset
#### West Brook
```{r}
#| label: fdcWB

ggplot(fdcStatsY |> filter(river == "west brook"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Open Large
```{r}
#| label: fdcOL

ggplot(fdcStatsY |> filter(river == "wb jimmy"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Open Small
```{r}
#| label: fdcOS

ggplot(fdcStatsY |> filter(river == "wb mitchell"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Isolated Small
```{r}
#| label: fdcIS

ggplot(fdcStatsY |> filter(river == "wb obear"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```
:::

#### Grouped by season

::: panel-tabset
#### West Brook
```{r}
#| label: fdcSWB

ggplot(fdcStatsS |> filter(river == "west brook", !is.na(season)), aes(stat, perc, color = factor(season))) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Open Large
```{r}
#| label: fdcSOL

ggplot(fdcStatsS |> filter(river == "wb jimmy", !is.na(season)), aes(stat, perc, color = factor(season))) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Open Small
```{r}
#| label: fdcSOS

ggplot(fdcStatsS |> filter(river == "wb mitchell", !is.na(season)), aes(stat, perc, color = factor(season))) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```

#### Isolated Small
```{r}
#| label: fdcSIS

ggplot(fdcStatsS |> filter(river == "wb obear", !is.na(season)), aes(stat, perc, color = factor(season))) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt_WB)
```
:::


#### Grouped by year and season

::: panel-tabset
#### West Brook
```{r}
#| label: flowDurationCurvesYearSeasonWB

ggplot(fdcStatsYS |> filter(river == "west brook"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_grid(season~variable, scales = "free", labeller = global_labellerInt_WB)
```

#### Open Large
```{r}
#| label: flowDurationCurvesYearSeasonOL

ggplot(fdcStatsYS |> filter(river == "wb jimmy"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_grid(season~variable, scales = "free", labeller = global_labellerInt_WB)
```

#### Open Small
```{r}
#| label: flowDurationCurvesYearSeasonOS

ggplot(fdcStatsYS |> filter(river == "wb mitchell"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_grid(season~variable, scales = "free", labeller = global_labellerInt_WB)
```

#### Isolated small
```{r}
#| label: flowDurationCurvesYearSeasonIS

ggplot(fdcStatsYS |> filter(river == "wb obear"), aes(stat, perc, color = year, group = year)) +
  geom_line() +
  geom_point(size = 0.5) +
  labs(x = "Flow percentile", y = "Flow") +
  scale_y_log10() +
  scale_color_viridis() +
  facet_grid(season~variable, scales = "free", labeller = global_labellerInt_WB)
```
:::

#### Proportion of days above/below flow duration curve thresholds  
Thresholds defined in `fdcThresholds_target` in modelFDC_targets.R. Based on season-specific flow duration curves.  

::: panel-tabset
#### By river, high flows
```{r}
#| label: flowDurationCurvesBelowByRiver

ggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows higher than the high flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```

#### By river, low flows
```{r}
#| label: flowDurationCurvesAboveByRiver

ggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propAboveHiFlowThreshRiver, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows lower than the low flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```

#### By area, high flows
```{r}
#| label: flowDurationCurvesBelowByArea

ggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows higher than the high flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```

#### By area, low flows
```{r}
#| label: flowDurationCurvesAboveByArea

ggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows lower than the low flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```
:::
#### Proportion of days above/below flow duration curve thresholds for individual fish data      
Thresholds defined in `fdcThresholds_target` in modelFDC_targets.R. Based on season-specific flow duration curves. 
Individual-specific proportion of days calculated in `addEnvironmental3()` in `getDAtaElectro.R` and in `addEnvrionmental()` in `getDataCMR_targets.R`.  
This series of figures confirms that values from `cd1` are similar to seasonal values from `propFDC_aboveBelow` and also shows the indvidual variation in proportion of days stats.  
 
::: panel-tabset
#### By river, high flows
```{r}
#| label: flowDurationCurvescd1BelowByRiver

ggplot(cd1 |> filter(year > 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) +
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows higher than the high flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)
```

#### By river, low flows
```{r}
#| label: flowDurationCurvescd1AboveByRiver

ggplot(cd1 |> filter(year > 1999), aes(year, propAboveHiFlowThreshByRiver, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows lower than the low flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```

#### By area, high flows
```{r}
#| label: flowDurationCurvescd1BelowByArea

ggplot(cd1 |> filter(year > 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows higher than the high flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```

#### By area, low flows
```{r}
#| label: flowDurationCurvescd1AboveByArea

ggplot(cd1 |> filter(year > 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + 
  geom_point() +
  geom_line() +
  scale_color_discrete() +
  labs(x = "Year", y = "Proportion of days with flows lower than the low flow threshold") +
  facet_wrap(~season, labeller = global_labellerInt_WB)

```
:::

### Raw *mean* flow data

Mean flow data that go into models as independent data. Calculated for each fish based on dates of capture for each interval.  
#### Mean flow data types plotted against each other

```{r}
#| label: flow_flowByRiverRaw1
#| fig-cap: "Stream flow (m3/s) for the West Brook against stream flow by river"
#| 
ggplot(cd1, aes(meanFlow, meanFlowByRiver)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

```

```{r}
#| label: flow_flowByRiverRaw2
#| fig-cap: "Stream flow (m3/s) against stream flow by area"

ggplot(cd1, aes(meanFlow, meanFlowByArea_flowExt)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

```{r}
#| label: flow_flowByRiverRaw3
#| fig-cap: "Stream flow by river (m3/s) against stream flow by area"

ggplot(cd1, aes(meanFlowByRiver, meanFlowByArea_flowExt)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

```

#### Frequency plots of mean flow data types

```{r}
#| label: flow_flowByRiverRawFreqs3
#| fig-cap: "Stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1, aes(meanFlow)) +
  #geom_density(color = viridis(10)[1], adjust = 2.5) +
  geom_density(color = "red3", adjust = 2.5) +
  geom_density(aes(meanFlowByRiver), color = "blue3", adjust = 2.5) +
  geom_density(aes(meanFlowByArea_flowExt), color = "green4", adjust = 2.5) +
  labs(x = "Flow m3/s") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

#### Time series plots of flow data types

```{r}
#| label: flow_flowByRiverRawTimeSeries
#| fig-cap: "Stream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1) +
  #geom_point(aes(date, meanFlowByRiver), color = "blue3") +
  geom_line(aes(date, meanFlowByRiver), color = "blue3") +
  geom_line(aes(date, meanFlowByArea_flowExt), color = "green4", adjust = 2.5) +
  labs(x = "Date", y = "Stream flow") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

### Raw *sd* flow data
```{r}
#| label: flow_sdflowByRiverRaw1
#| fig-cap: "Standard deviation of stream flow (m3/s) for the West Brook against stream flow by river"
#| 
ggplot(cd1, aes(sdFlowByArea_flowExt, sdFlowByRiver)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

```

#### Frequency plots of sd flow data types

```{r}
#| label: flow_sdflowSDByRiverRawFreqs3
#| fig-cap: "Standard deviation in stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1, aes(sdFlow)) +
  #geom_density(color = viridis(10)[1], adjust = 2.5) +
  geom_density(color = "red3", adjust = 2.5) +
  geom_density(aes(sdFlowByRiver), color = "blue3", adjust = 2.5) +
  geom_density(aes(sdFlowByArea_flowExt), color = "green4", adjust = 2.5) +
  geom_density(aes(sdFlowByArea_ByRiver), color = "orange2", adjust = 2.5) +
  labs(x = "Flow m3/s") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

#### Time series plots of standard deviation of flow data types

```{r}
#| label: flow_sdflowByRiverRawTimeSeries
#| fig-cap: "Stream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1) +
  #geom_point(aes(date, meanFlowByRiver), color = "blue3") +
  #geom_line(aes(date, sdFlow), color = "red3") +
  geom_line(aes(date, sdFlowByRiver), color = "blue3") +
  geom_line(aes(date, sdFlowByArea_flowExt), color = "green4") +
  labs(x = "Date", y = "Stream flow") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```



## Scaled mean flow data
### Scaled by season

```{r}
#| label: flow_flowByRiverBySeason

ggplot(cd1, aes(meanFlowByArea_flowExtScaledBySeason, meanFlowByRiverScaledBySeason, color = cohort)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

ggplot(cd1, aes(meanFlowScaledBySeason)) +
  geom_density(color = "red3", adjust = 2.5) +
  geom_density(aes(meanFlowByRiverScaledBySeason), color = "blue3", adjust = 2.5) +
  geom_density(aes(meanFlowByArea_flowExtScaledBySeason), color = "green4", adjust = 2.5) +
  labs(x = "Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

ggplot(cd1, aes(meanTemperatureScaledBySeason)) +
  geom_density(color = "red3", adjust = 2.5) +
  #geom_density(aes(meanTemperatureByRiverScaledBySeason), color = "blue3", adjust = 2.5) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

#### Time series plots of flow data types scaled by season

```{r}
#| label: flow_flowByRiverRawTimeSeriesScaledbyS
#| fig-cap: "Stream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1) +
  #geom_point(aes(date, meanFlowByRiver), color = "blue3") +
  geom_line(aes(date, meanFlowByRiverScaledBySeason), color = "blue3") +
  geom_line(aes(date, meanFlowByArea_flowExtScaledBySeason), color = "green4", adjust = 2.5) +
  labs(x = "Date", y = "Stream flow") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

### Scaled by season and river

```{r}
#| label: flow_flowByRiverBySeasonRiver

ggplot(cd1, aes(meanFlowScaledBySeasonRiver, meanFlowByRiverScaledBySeasonRiver, color = cohort)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)

ggplot(cd1, aes(meanFlowScaledBySeasonRiver)) +
  geom_density(color = "red3", adjust = 2.5, linewidth = 2) +
  geom_density(aes(meanFlowByRiverScaledBySeasonRiver), color = "blue3", adjust = 2.5, linewidth = 1) +
  geom_density(aes(meanFlowByArea_flowExtScaledBySeasonRiver), color = "green4", adjust = 2.5, linewidth = 0.75) +
  labs(x = "Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)") +
  facet_grid(river~season, labeller = global_labellerInt_WB)#, scales = 'free')

```

#### Time series plots of flow data types scaled by season and river

```{r}
#| label: flow_flowByRiverRawTimeSeriesScaledbySR
#| fig-cap: "Stream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"

ggplot(cd1) +
  #geom_point(aes(date, meanFlowByRiver), color = "blue3") +
  geom_line(aes(date, meanFlowByRiverScaledBySeasonRiver), color = "blue3") +
  geom_line(aes(date, meanFlowByArea_flowExtScaledBySeasonRiver), color = "green4", adjust = 2.5) +
  labs(x = "Date", y = "Stream flow") +
  facet_grid(river~season, scales = 'free', labeller = global_labellerInt_WB)
```

Check cumulative flow\
Stream power as flow metric??  


## Growth models  
### Flow duration curve data  

```{r}
#| label: fdc_growthByRiver

plotFDC_GR_byRiver <- function(d, r){
  fig1 <- ggplot(d |> filter(riverGG == r), aes(propBelowLoFlowThreshByRiverRiver, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Proportion of high flow days", y = "Growth in mass") +
    scale_color_discrete() +
    ggtitle("Flow by river") +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  fig2 <- ggplot(d |> filter(riverGG == r), aes(propAboveHiFlowThreshByRiverRiver, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Proportion of low flow days", y = "Growth in mass") +
    scale_color_discrete() +
    ggtitle("Flow by river") +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  grid.arrange(fig1, fig2, ncol = 2)
}

plotFDC_GR_byArea <- function(d, r){
  fig1 <- ggplot(d |> filter(riverGG == r), aes(propBelowLoFlowThreshByRiverArea_flowExt, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Proportion of high flow days", y = "Growth in mass") +
    scale_color_discrete() +
    ggtitle("Flow by area") +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  fig2 <- ggplot(d |> filter(riverGG == r), aes(propAboveHiFlowThreshByRiverArea_flowExt, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Proportion of low flow days", y = "Growth in mass") +
    scale_color_discrete() +
    ggtitle("Flow by area") +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  grid.arrange(fig1, fig2, ncol = 2)
}


plotFlowGR_byRiverOverlay <- function(d, r){
  ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "grey3") +
    
    geom_point(alpha = 0.05, color = "green4", aes(meanFlowByArea_flowExt, grWeight))  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "green4", aes(meanFlowByArea_flowExt, grWeight)) +
    
    labs(x = "Mean flow by river (black = byRiver, green = byArea)", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

```

::: panel-tabset
#### West Brook
```{r}
#| label: fdc_growthByRiver_wb

plotFDC_GR_byRiver(dGAM, "West Brook")
plotFDC_GR_byArea(dGAM, "West Brook")
```

#### Open Large
```{r}
#| label: fdc_growthByRiver_ol

plotFDC_GR_byRiver(dGAM, "Open Large")
plotFDC_GR_byArea(dGAM, "Open Large")
```

#### Open Small
```{r}
#| label: fdc_growthByRiver_os

plotFDC_GR_byRiver(dGAM, "Open Small")
plotFDC_GR_byArea(dGAM, "Open Small")
```

#### Isolated small
```{r}
#| label: fdc_growthByRiver_is

plotFDC_GR_byRiver(dGAM, "Isolated Small")
plotFDC_GR_byArea(dGAM, "Isolated Small")
```
:::

#### Flow compared with flow duration curve metrics
```{r}
#| label: fdcBelow_meanFlow
#| fig-cap: "By river in black and by area in green"
#| 
 ggplot(dGAM, aes(flowByRiverS, propBelowLoFlowThreshByRiver)) +
   geom_point() +
   geom_point(aes(flowByRiverS, propBelowLoFlowThreshByArea_flowExt), color  = "green4") +
   facet_grid(seasonGG ~ riverGG, scales = "free")
```

```{r}
#| label: fdcAbove_meanFlow
#| fig-cap: "By river in black and by area in green"

 ggplot(dGAM, aes(flowByRiverS, propAboveHiFlowThreshByRiver)) +
   geom_point() +
   geom_point(aes(flowByRiverS, propAboveHiFlowThreshByArea_flowExt), color  = "green4") +
   facet_grid(seasonGG ~ riverGG, scales = "free")
```




### Flow standardized by season
#### Environment/growth raw data graphs
```{r}
#| label: growthEnvRaw


```

```{r}
#| label: flow_growthByRiver

plotFlowGR_byRiver <- function(d, r){
  fig1 <- ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Mean flow by river", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  fig2 <- ggplot(d |> filter(riverGG == r), aes(meanFlowByArea_flowExt, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    #geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Mean flow by area", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  grid.arrange(fig1, fig2, ncol = 2)
}

plotFlowGR_byRiverOverlay <- function(d, r){
  ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "grey3") +
    
    geom_point(alpha = 0.05, color = "green4", aes(meanFlowByArea_flowExt, grWeight))  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "green4", aes(meanFlowByArea_flowExt, grWeight)) +
    
    labs(x = "Mean flow by river", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

```

::: panel-tabset
#### West Brook
```{r}
#| label: flow_growthByRiver_wb

plotFlowGR_byRiver(dGAM, "West Brook")
plotFlowGR_byRiverOverlay(dGAM, "West Brook")
```

#### Open Large
```{r}
#| label: flow_growthByRiver_ol

plotFlowGR_byRiver(dGAM, "Open Large")
plotFlowGR_byRiverOverlay(dGAM, "Open Large")
```

#### Open Small
```{r}
#| label: flow_growthByRiver_os

plotFlowGR_byRiver(dGAM, "Open Small")
plotFlowGR_byRiverOverlay(dGAM, "Open Small")
```

#### Isolated small
```{r}
#| label: flow_growthByRiver_is

plotFlowGR_byRiver(dGAM, "Isolated Small")
plotFlowGR_byRiverOverlay(dGAM, "Isolated Small")
```
:::


#### Brook trout - flow

```{r}
#| label: gamSModsBKT2

gamS0 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS)^2 + cohortF * ageF +             
               s(flowS, bs = "cr", k = kIn, by = riverGG) +
               s(flowS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

gamS1 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS)^2 + cohortF +             
               s(flowS, bs = "cr", k = kIn, by = riverGG) +
               s(flowS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamS2 <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowS)^2 + cohortF * ageF +             
               s(flowS, bs = "cr", k = kIn, by = riverGG) +
               s(flowS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamS3 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS) + cohortF * ageF +             
               s(flowS, bs = "cr", k = kIn, by = riverGG) +
               s(flowS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

AIC(gamS0, gamS1, gamS2, gamS3) |> arrange(AIC)
```

#### Brook trout - flow by river

```{r}
#| label: gamSModsBKTFBR2

gamS1ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamS2ByRiver <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowByRiverS)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamS3ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS) + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

#####
# add in lo flow thresh
gamS4ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS + 
                                propBelowLoFlowThreshByRiver)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# add in high flow thresh
gamS5ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS + 
                                propAboveHiFlowThreshByRiver)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# both lo and high flow thresh
gamS6ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS + 
                                propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# take out flow
gamS7ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS +  
                                propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2 + cohortF +             
               s(flowByRiverS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

AIC(gamS1ByRiver, gamS2ByRiver, gamS3ByRiver, gamS4ByRiver, 
    gamS5ByRiver, gamS6ByRiver, gamS7ByRiver) |> arrange(AIC)
```

#### Brook trout - flow by area

```{r}
#| label: gamSModsBKTFBA2

gamS1ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamS2ByArea <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowByAreaS)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamS3ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS) + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

#####
# add in lo flow thresh
gamS4ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS + 
                               propBelowLoFlowThreshByArea_flowExt)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# add in high flow thresh
gamS5ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS + 
                               propAboveHiFlowThreshByArea_flowExt)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# both lo and high flow thresh
gamS6ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS + 
                               propBelowLoFlowThreshByArea_flowExt + propAboveHiFlowThreshByArea_flowExt)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# take out flow
gamS7ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS +  
                               propBelowLoFlowThreshByArea_flowExt + propAboveHiFlowThreshByArea_flowExt)^2 + cohortF +             
               s(flowByAreaS, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaS, bs = "cr", k = kIn, by = seasonGG) +
               s(tempS, bs = "cr", k = kIn, by = riverGG) +
               s(tempS, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

AIC(gamS1ByArea, gamS2ByArea, gamS3ByArea, gamS4ByArea, 
    gamS5ByArea, gamS6ByArea, gamS7ByArea) |> arrange(AIC)

```



#### Brook trout - compare flow and flow by river gams

```{r}
#| label: gamModsCompare2

predictBKTgamS <- function(dIn, modInFlowByRiver, modInFlowByArea){

  predMatByRiver0 <- 
    expand.grid(
      flowByRiverS = seq(-1.5, 1.5, 0.5), 
      propBelowLoFlowThreshByRiver = seq(0, 0.8, 0.2),
      propAboveHiFlowThreshByRiver = seq(0, 0.6, 0.2),
      tempS = seq(-1.5, 1.5, 0.55), 
      riverGG = unique(dIn$riverGG), 
      seasonGG= unique(dIn$seasonGG),
      observedWeight = c(2, 30, 60), #seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
      cohortF = 2000:2013,#uunique(dIn$cohortF),
      byRiver = TRUE
  )
  
  predMatByRiver <- 
    add_column(
      pred = predict.bam(modInFlowByRiver, predMatByRiver0),
      predMatByRiver0
    ) |> 
    rename(flow = flowByRiverS, temp = tempS,
           loFlowThresh = propBelowLoFlowThreshByRiver, hiFlowThresh = propAboveHiFlowThreshByRiver)
  
  predMatByArea0 <- 
    expand.grid(
      flowByAreaS = seq(-1.5, 1.5, 0.5),
      propBelowLoFlowThreshByArea_flowExt = seq(0, 0.8, 0.2),
      propAboveHiFlowThreshByArea_flowExt = seq(0, 0.6, 0.2),
      tempS = seq(-1.5, 1.5, 0.5), 
      riverGG = unique(dIn$riverGG), 
      seasonGG= unique(dIn$seasonGG),
      observedWeight = c(2, 30, 60), #seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
      cohortF = 2000:2013,#unique(dIn$cohortF),
      byRiver = FALSE
    ) 
  predMatByArea <- 
    add_column(
      pred = predict.bam(modInFlowByArea, predMatByArea0),
      predMatByArea0
    ) |> 
    rename(flow = flowByAreaS, temp = tempS,
           loFlowThresh = propBelowLoFlowThreshByArea_flowExt, hiFlowThresh = propAboveHiFlowThreshByArea_flowExt)

  return(add_row(predMatByRiver, predMatByArea))
}
gamSBKTPredictions <- predictBKTgamS(dGAM, gamS6ByRiver, gamS6ByArea)

```

#### Graph predictions   
Across cohorts, small fish
```{r}
#| label: graphGAMPredictionsByRiverSmallFish

ggplot(
  gamSBKTPredictions |> 
    filter(
      observedWeight %in% c(2),
      loFlowThresh == 0,
      hiFlowThresh == 0
      #cohortF == 2012, 
    ), 
  aes(temp, pred, color = (flow), group = (flow))) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream temperature", y = "Predicted growth rate") +
  ylim(-0.02, 0.06) +
  #geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')
```

Across cohorts, large fish
```{r}
#| label: graphGAMPredictionsByRiverBigFish

ggplot(
  gamSBKTPredictions |> 
    filter(
      observedWeight %in% c(122), 
      #cohortF == 2012, 
      ageF == 0
    ), 
  aes(temp, pred, color = (flow), group = (flow))) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream temperature", y = "Predicted growth rate") +
  ylim(-0.03, 0.04) +
  #geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')
```


### Flow std by season/river

```{r}
#| label: flow_growthByRiverSR

plotFlowGR_SR_byRiver <- function(d, r){
  fig1 <- ggplot(d |> filter(riverGG == r), aes(flowByRiverSR, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Mean flow by river", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  fig2 <- ggplot(d |> filter(riverGG == r), aes(flowByAreaSR, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se = FALSE) +
    geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Mean flow by area", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
  
  grid.arrange(fig1, fig2, ncol = 2)
}

plotFlowGR_SR_byRiverOverlay <- function(d, r){
  ggplot(d |> filter(riverGG == r), aes(flowByRiverSR, grWeight)) +
    geom_point(alpha = 0.05)  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "grey3") +
    
    geom_point(alpha = 0.05, color = "green4", aes(flowByAreaSR, grWeight))  +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = "green4", aes(flowByAreaSR, grWeight)) +
    
    labs(x = "Mean flow by river", y = "Growth in mass") +
    scale_color_discrete() +
    #ggtitle(r) +
    facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

```

::: panel-tabset
#### West Brook
```{r}
#| label: flow_growthByRiverSR_wb

plotFlowGR_SR_byRiver(dGAM, "West Brook")
plotFlowGR_SR_byRiverOverlay(dGAM, "West Brook")
```

#### Open Large
```{r}
#| label: flow_growthByRiverSR_ol

plotFlowGR_SR_byRiver(dGAM, "Open Large")
plotFlowGR_SR_byRiverOverlay(dGAM, "Open Large")
```

#### Open Small
```{r}
#| label: flow_growthByRiverSR_os

plotFlowGR_SR_byRiver(dGAM, "Open Small")
plotFlowGR_SR_byRiverOverlay(dGAM, "Open Small")
```

#### Isolated small
```{r}
#| label: flow_growthByRiverSR_is

plotFlowGR_SR_byRiver(dGAM, "Isolated Small")
plotFlowGR_SR_byRiverOverlay(dGAM, "Isolated Small")
```
:::


#### Brook trout - flow
use scale(temperature) instead of tempSR?
```{r}
#| label: gamModsBKT2
kIn = 4
speciesIn <- "Brook trout"

gamSR0 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             
               s(flowSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

gamSR1 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF +             
               s(flowSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamSR2 <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowSR)^2 + cohortF * ageF +             
               s(flowSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamSR3 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR) + cohortF * ageF +             
               s(flowSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

AIC(gamSR0, gamSR1, gamSR2, gamSR3) |> arrange(AIC)
```

#### Brook trout - flow by river

```{r}
#| label: gamSRModsBKTFBR2

gamSR0ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

gamSR1ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamSR2ByRiver <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamSR3ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

AIC(gamSR0ByRiver, gamSR1ByRiver, gamSR2ByRiver, gamSR3ByRiver) |> arrange(AIC)
```

#### Brook trout - flow by area

```{r}
#| label: gamSRModsBKTFBA2

gamSR0ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF * ageF +             
               s(flowByAreaSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

gamSR1ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF +             
               s(flowByAreaSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gamSR2ByArea <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByAreaSR)^2 + cohortF * ageF +             
               s(flowByAreaSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gamSR3ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR) + cohortF * ageF +             
               s(flowByAreaSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByAreaSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

AIC(gamSR0ByArea, gamSR1ByArea, gamSR2ByArea, gamSR3ByArea) |> arrange(AIC)
```


```{r}
#| label: gamSRModsCompareSR


predictBKTgamSR <- function(dIn, modInFlowByRiver, modInFlowByArea){

  predMatByRiver0 <- 
    expand.grid(
      flowByRiverSR = seq(-1.5,1.5,0.25), 
      tempSR = seq(-1.5,1.5,0.25), 
      riverGG = unique(dIn$riverGG), 
      seasonGG= unique(dIn$seasonGG),
      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
      cohortF = 2000:2013,#uunique(dIn$cohortF),
      ageF = 0:4,#unique(dIn$ageF),
      byRiver = TRUE
  )
  predMatByRiver <- 
    add_column(
      pred = predict.bam(modInFlowByRiver, predMatByRiver0),
      predMatByRiver0
    ) |> 
    rename(flow = flowByRiverSR, temp = tempSR)
  
  predMatByArea0 <- 
    expand.grid(
      flowByAreaSR = seq(-1.5,1.5,0.25), 
      tempSR = seq(-1.5,1.5,0.25), 
      riverGG = unique(dIn$riverGG), 
      seasonGG= unique(dIn$seasonGG),
      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
      cohortF = 2000:2013,#unique(dIn$cohortF),
      ageF = 0:4,#unique(dIn$ageF),
      byRiver = FALSE
    ) 
  predMatByArea <- 
    add_column(
      pred = predict.bam(modInFlowByArea, predMatByArea0),
      predMatByArea0
    ) |> 
    rename(flow = flowByAreaSR, temp = tempSR)

  return(add_row(predMatByRiver, predMatByArea))
}
gamSR_BKTPredictions <- predictBKTgamSR(dGAM, gamSR0ByRiver, gamSR0ByArea)


```

#### Graph predictions   
Across cohorts, small fish
```{r}
#| label: graphGAMSRPredictionsByRiverSmallFish

ggplot(
  gamSR_BKTPredictions |> 
    filter(
      observedWeight %in% c(22), 
      #cohortF == 2012, 
      ageF == 0
    ), 
  aes(temp, pred, color = (flow), group = (flow))) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream temperature", y = "Predicted growth rate") +
  ylim(-0.005, 0.02) +
  #geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')
```

Across cohorts, large fish
```{r}
#| label: graphGAMSRPredictionsByRiverBigFish

ggplot(
  gamSR_BKTPredictions |> 
    filter(
      observedWeight %in% c(122), 
      #cohortF == 2012, 
      ageF == 0
    ), 
  aes(temp, pred, color = (flow), group = (flow))) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream temperature", y = "Predicted growth rate") +
  ylim(-0.02, 0.02) +
  #geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')
```
