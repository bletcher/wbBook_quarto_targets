summarize(n = n()) %>%
arrange(desc(n))
countsByInd
e <- tar_read(getElectroData_target)
e <- tar_read(electroData_target)
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
e
w
all <- add_row(e, w)
?add_row
all <- e %>% add_row(w)
dim(e)
dim(w)
dim(a)
all <- w %>% add_row(e)
str9e
str(e)
all <- w %>% add_row(e)
all <- e %>% add_row(w)
w$aliveOrDead
all <- e %>% add_row(w)
w$instance
tar_make()
tar_make()
e1=e
w1=w
a1=a
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
str(e)
tmp=createCoreData(
sampleType = "electrofishing",  #"stationaryAntenna","portableAntenna"
# columnsToAdd = c("sampleNumber",
#                  "river",
#                  "survey",
#                  "pass",
#                  "observedLength",
#                  "observedWeight",
#                  "comments"),
# merged electro, wanding, and antenna
columnsToAdd = c("sampleNumber",
"detectionDate",
"river",
"area",
"section",
"survey",
#"cohort",
"sampleName",
"readerId",
"aliveOrDead",
"instance",
"pass",
"quarter",
"leftOrRight",
"habitat",
"cover",
"observedLength",
"observedWeight",
"justification",
"comment"),
includeUntagged = TRUE,
whichDrainage = "west"
)
str(tmp)
tmp=createCoreData(
sampleType = "electrofishing",  #"stationaryAntenna","portableAntenna"
# columnsToAdd = c("sampleNumber",
#                  "river",
#                  "survey",
#                  "pass",
#                  "observedLength",
#                  "observedWeight",
#                  "comments"),
# merged electro, wanding, and antenna
columnsToAdd = c("sampleNumber",
"detectionDate",
"river",
"area",
"section",
"survey",
#"cohort",
"sampleName",
"readerId",
"aliveOrDead",
"instance",
"pass",
"quarter",
"leftOrRight",
"habitat",
"cover",
"observedLength",
"observedWeight",
"justification",
"comments"),
includeUntagged = TRUE,
whichDrainage = "west"
)
all <- e %>% add_row(w)
tar_read()
tar_make(
)
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
e
cleanData
library(getPrepareWBData)
cleanData
mergeSites
tar_read(cdWB_electro0_target)
e
e
all <- e %>% add_row(w)
e$comment
e$comments
w$comment
a$comment
w$comments
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
w
w$j
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
str(e$section)
str(w$section)
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(w)
rlang::last_error()
all <- e %>% add_row(a)
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>% add_row(a)
all <- e %>% add_row(w)
all <- e %>% add_row(w %>% select(-riverOrdered))
all
all <- e %>%
add_row(w %>% select(-riverOrdered)) %>%
add_row(a %>% select(-riverOrdered)) %>%
mutate(
riverOrdered = factor(river, levels = c('west brook', 'wb jimmy', 'wb mitchell',"wb obear"),
labels = c("West Brook","WB Jimmy","WB Mitchell","WB OBear"), ordered = T
)
)
e %>%
add_row(w %>% select(-riverOrdered)) %>%
add_row(a %>% select(-riverOrdered))
tar_maake()
tar_make()
all <- e %>%
add_row(w %>% select(-riverOrdered)) %>%
add_row(a %>% select(-riverOrdered)) %>%
mutate(
riverOrdered = factor(river, levels = c('west brook', 'wb jimmy', 'wb mitchell',"wb obear"),
labels = c("West Brook","WB Jimmy","WB Mitchell","WB OBear"), ordered = T
)
)
e %>%
add_row(w %>% select(-riverOrdered))
e %>%
add_row(w %>% select(-riverOrdered)) %>%
add_row(a %>% select(-riverOrdered))
w %>%
add_row(a %>% select(-riverOrdered))
tar_make()
e <- tar_read(cdWB_electro_target)
w <- tar_read(cdWB_wanding0_target)
a <- tar_read(cdWB_antenna0_target)
all <- e %>%
add_row(w %>% select(-riverOrdered)) %>%
add_row(a %>% select(-riverOrdered)) %>%
mutate(
riverOrdered = factor(river, levels = c('west brook', 'wb jimmy', 'wb mitchell',"wb obear"),
labels = c("West Brook","WB Jimmy","WB Mitchell","WB OBear"), ordered = T
)
)
all
str(all)
tags <- all %>%
distinct(tag)
tags
tags <- all %>%
group_by(tag) %>%
summarize(n = n()) %>%
arrange(desc(tag))
tags
tags <- all %>%
group_by(tag) %>%
summarize(n = n()) %>%
arrange(desc(n))
tags
filter(!is.na(tag))
tags <- all %>%
group_by(tag) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
filter(!is.na(tag))
tags
tar_make()
quarto::quarto_render(output_format = "html")
library(tidyverse)
install.packages("dplyr")
tar_make()
install.packages(c("brew", "broom", "callr", "cli", "crayon", "desc", "dtplyr", "forcats", "future", "gargle", "gert", "gh", "gitcreds", "gtable", "haven", "hms", "httpuv", "igraph", "knitr", "lifecycle", "modelr", "openssl", "pillar", "ragg", "renv", "rlang", "rmarkdown", "rstan", "rstudioapi", "rversions", "rvest", "scales", "stringr", "tarchetypes", "targets", "tidyr", "tinytex", "vctrs", "viridisLite", "visNetwork", "vroom", "webshot", "xfun", "zip"))
quarto::quarto_render(output_format = "html")
tar_make()
library(targets)
library(quarto)
tar_make()
library(targets)
library(tarchetypes)
library(quarto)
quarto::quarto_render(output_format = "html")
quarto::quarto_render(output_format = "html")
tar_visnetwork()
renv::status()
renv::snapshot()
renv::status()
renv::snapshot()
install.packages(c("brew", "broom", "callr", "cli", "crayon", "desc", "dtplyr", "forcats", "future", "gargle", "gert", "gh", "gitcreds", "gtable", "haven", "hms", "httpuv", "igraph", "jsonlite", "knitr", "lifecycle", "modelr", "openssl", "pillar", "ragg", "readr", "renv", "rlang", "rmarkdown", "rstan", "rstudioapi", "rversions", "rvest", "scales", "stringr", "tarchetypes", "targets", "tidyr", "tinytex", "vctrs", "viridisLite", "visNetwork", "vroom", "webshot", "xfun", "zip"))
install.packages(c("cluster", "foreign", "Matrix", "nnet"), lib="C:/Users/bletcher/AppData/Local/Programs/R/R-4.2.0/library")
install.packages(c("brew", "broom", "callr", "cli", "crayon", "desc", "dtplyr", "forcats", "future", "gargle", "gert", "gh", "gitcreds", "gtable", "haven", "hms", "httpuv", "igraph", "jsonlite", "knitr", "lifecycle", "modelr", "openssl", "pillar", "ragg", "readr", "renv", "rlang", "rmarkdown", "rstan", "rstudioapi", "rversions", "rvest", "scales", "stringr", "tarchetypes", "targets", "tidyr", "tinytex", "vctrs", "viridisLite", "visNetwork", "vroom", "webshot", "xfun", "zip"))
install.packages(c("brew", "broom", "callr", "cli", "crayon", "desc", "dtplyr", "forcats", "future", "gargle", "gert", "gh", "gitcreds", "gtable", "haven", "hms", "httpuv", "igraph", "jsonlite", "knitr", "lifecycle", "modelr", "openssl", "pillar", "ragg", "readr", "renv", "rlang", "rmarkdown", "rstan", "rstudioapi", "rversions", "rvest", "scales", "stringr", "tarchetypes", "targets", "tidyr", "tinytex", "vctrs", "viridisLite", "visNetwork", "vroom", "webshot", "xfun", "zip"))
install.packages(c("brew", "broom", "callr", "cli", "crayon", "desc", "dtplyr", "forcats", "future", "gargle", "gert", "gh", "gitcreds", "gtable", "haven", "hms", "httpuv", "igraph", "jsonlite", "knitr", "lifecycle", "modelr", "openssl", "pillar", "ragg", "readr", "renv", "rlang", "rmarkdown", "rstan", "rstudioapi", "rversions", "rvest", "scales", "stringr", "tarchetypes", "targets", "tidyr", "tinytex", "vctrs", "viridisLite", "visNetwork", "vroom", "webshot", "xfun", "zip"))
renv::status()
renv::snapshot()
tar_make()
library(targets)
library(tarchetypes)
library(quarto)
tar_make()
library(tidyverse)
tar_make()
library(targets)
library(tarchetypes)
library(quarto)
# run when there is a change in the data
#tar_invalidate(c("envDataWB_Target", "cdWB_electro0_target", ...)
tar_make()
library(targets)
library(tarchetypes)
library(quarto)
# run when there is a change in the data
#tar_invalidate(c("envDataWB_Target", "cdWB_electro0_target", ...)
tar_make()
targets::tar_meta(fields = error, complete_only = TRUE)
library(targets)
library(tarchetypes)
library(quarto)
# run when there is a change in the data
#tar_invalidate(c("envDataWB_Target", "cdWB_electro0_target", ...)
tar_make()
targets::tar_meta(fields = error, complete_only = TRUE)
library(targets)
library(tarchetypes)
library(quarto)
# run when there is a change in the data
#tar_invalidate(c("envDataWB_Target", "cdWB_electro0_target", ...)
tar_make()
quarto::quarto_render(output_format = "html")
list.files("R", full.names = TRUE, recursive = TRUE)
list.files("R/*.R", full.names = TRUE, recursive = TRUE)
list.files("R/*.R")
list.files("R/")
list.files("R/*.R")
"R/*.R"
?list.files
list.files("R", pattern = "*.R")
list.files("R", , pattern = "*.R", full.names = TRUE, recursive = TRUE)
# Run the R scripts in the /R folder with your custom functions:
lapply(list.files("R", pattern = "*.R", full.names = TRUE, recursive = TRUE), source)
library(getWBData)
# Run the R scripts in the /R folder with your custom functions:
lapply(list.files("R", pattern = "*.R", full.names = TRUE, recursive = TRUE), source)
tar_make()
library(targets)
library(tarchetypes)
library(visNetwork)
tar_visnetwork()
tar_visnetwork()
quarto::quarto_render(output_format = "html")
library(getWBData)
library(tidyverse)
library(lubridate)
library(targets)
cdWB_electro <- tar_read(cdWB_electro_target)
str(cdWB_electro)
ggplot(cdWB_electro, aes(observedLength, observedWeight, color = species)) +
geom_point(size = 0.75, alpha = 0.1) +
scale_x_log10("Length (mm)") +
scale_y_log10("Mass (mg)") +
#  theme_publication() +
facet_wrap(~ species)
cdWB_electro %>%
group_by(species) %>%
summarize(n = n())
cdWB_electro %>%
group_by(tag) %>%
summarize(n = n())
cdWB_electro %>%
group_by(tag, species) %>%
summarize(n = n())
summarize(n = n())
cdWB_electro %>%
group_by(tag, species) %>%
summarize(n = n()) %>%
group_by(species) %>%
summarize(n = n())
cdWB_electro %>%
filter(is.na(tag)) %>%
group_by(species) %>%
summarize(n = n())
cdWB_electro %>%
filter(is.na(tag))
cdWB_electro %>%
filter(is.na(tag)) %>%
ggplot(aes(observedLength)) +
geom_freqpoly()
(untagged <- cdWB_electro %>%
filter(is.na(tag)))
(untagged <- cdWB_electro %>%
filter(is.na(tag))) %>%
summarize(n = n())
(untagged <- cdWB_electro %>%
filter(is.na(tag))) %>%
roup_by(species) %>%
summarize(n = n())
(untagged <- cdWB_electro %>%
filter(is.na(tag))) %>%
group_by(species) %>%
summarize(n = n())
untagged %>%
ggplot(aes(observedLength)) +
geom_freqpoly()
(untagged <- cdWB_electro %>%
filter(is.na(tag))) %>%
group_by(species) %>%
summarize(n = n())
untagged %>%
ggplot(aes(observedLength)) +
geom_freqpoly()
untagged
(untagged <- cdWB_electro %>%
filter(is.na(tag))) %>%
group_by(species) %>%
summarize(n = n()))
# # off tagged individuals/species
(tagged <- cdWB_electro %>%
group_by(tag, species))
tagged %>%
summarize(n = n()) %>%
group_by(species) %>%
summarize(n = n())
untagged <- cdWB_electro %>%
filter(is.na(tag))
untagged %>%
group_by(species) %>%
summarize(n = n()))
untagged %>%
group_by(species) %>%
summarize(n = n())
tagged %>%
ggplot(aes(observedLength)) +
geom_freqpoly()
cdWB_electro %>%
ggplot(aes(observedLength, color = is.na(tag))) +
geom_freqpoly()
tagged %>%
summarize(n = n()) %>%
group_by(species) %>%
summarize(n = n())
untagged %>%
group_by(species) %>%
summarize(n = n())
str(cdWB_electro)
table(cdWB_electro$aliveOrDead)
table(cdWB_electro$comments
)
table(cdWB_electro$comments
) %>% arrange()
table(cdWB_electro$comments
) %>% sort()
table(cdWB_electro$comments
) %>% sort() %>% head()
comments <- table(cdWB_electro$comments)
str(comments)
comments <- cdWB_electro %>%
select(comments) %>%
summarize(n = n())
comments
comments <- cdWB_electro %>%
group_by(comments) %>%
summarize(n = n())
comments
comments <- cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(n)
comments
comments <- cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n))
comments
head(20)
comments <- cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
head(20)
comments <-
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
head(20)
comments <-
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
head(20)
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
head(20)
?str_detect
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
str_detect(fruit, "^a")
str_detect(fruit, "a$")
str_detect(fruit, "b")
str_detect(fruit, "[aeiou]")
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
str_detect(comments, "mort")
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
as_tibble() %>%
str_detect(comments, "mort")
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
head(20)
tmp=cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
as_tibble()
str(tmp)
tmp=cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n))
str(tmp)
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
filter(str_detect(comments, "mort"))
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
filter(str_detect(comments, "mort")) %>%
head(50)
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
filter(str_detect(comments, "mort")) %>%
print(50)
cdWB_electro %>%
group_by(comments) %>%
summarize(n = n()) %>%
arrange(desc(n)) %>%
filter(str_detect(comments, "mort")) %>%
print(n = 50)
install.packages(c("bit", "bslib", "callr", "commonmark", "cpp11", "curl", "data.table", "devtools", "digest", "evaluate", "fontawesome", "future", "gert", "ggplot2", "isoband", "jsonlite", "lifecycle", "lme4", "lubridate", "markdown", "minqa", "modelr", "nimble", "openssl", "overlapping", "pkgload", "plyr", "processx", "ps", "purrr", "ragg", "RcppEigen", "rmarkdown", "roxygen2", "rsconnect", "Rttf2pt1", "shiny", "sys", "tarchetypes", "targets", "testthat", "tidyselect", "vctrs", "writexl", "xfun", "yaml", "zip"))
install.packages(c("Matrix", "mgcv", "nlme", "rpart"), lib="C:/Users/bletcher/AppData/Local/Temp/4/RtmpUDgRoY/renv-system-library")
library(targets)
library(tarchetypes)
library(quarto)
tar_make()
library(tidyverse)
