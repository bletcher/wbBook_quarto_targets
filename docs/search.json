[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The West Brook story",
    "section": "",
    "text": "Introduction"
  },
  {
    "objectID": "index.html#the-west-brook-stream-network",
    "href": "index.html#the-west-brook-stream-network",
    "title": "The West Brook story",
    "section": "The West Brook stream network",
    "text": "The West Brook stream network\nThe Ecology Section at the USGS Conte Laboratory has studied fish in the West Brook (MA, USA) since 1997. The goal is to understand the strength and direction of drivers on fish growth, movement, reproduction and survival in a small stream network. We hope to provide a comprehensive understanding of fish population dynamics and ultimately individual fitness (natural selection and evolution) in the study area.\nSee below or here for interactive applications to explore the raw data.\n\n\n\n\nData extraction and manipulation and models are run using targets from the R package targets. Run the following code to rebuild all the targets.\nlibrary(targets) library(quarto)\ntar_make()\nRun this code to rebuild the book.\nquarto::quarto_render(output_format = \"html\")"
  },
  {
    "objectID": "index.html#mainstem-and-tributary-names",
    "href": "index.html#mainstem-and-tributary-names",
    "title": "The West Brook story",
    "section": "Mainstem and tributary names",
    "text": "Mainstem and tributary names\nThere are four locations within the study area. Here are the primary names and aliases:\n\n\nTable 1: River names and aliases\n\n\nPrimary name\nAlias\nAlias-long\nRiver #\n\n\n\n\nWest Brook\nWB\nWest Brook\n1\n\n\nJimmy Brook\nOL\nOpen Large\n2\n\n\nMitchell Brook\nOS\nOpen Small\n3\n\n\nOBear Brook\nIL\nIsolated Large\n4\n\n\n\n\n\n\nCode\n#if/when .qmd's are in quarto subdir\n#tar_config_set(store = \"../_targets\")"
  },
  {
    "objectID": "vizTargets.html",
    "href": "vizTargets.html",
    "title": "1  Visualize targets",
    "section": "",
    "text": "Run code in buildBook.R to update targets and run quarto_render()\nData processing and model running is controlled by targets. Targets are only re-run if the upstream data source changes\n\n\n\nVisualize the targets network\n\n\nCode\ntar_visnetwork()\n\n\n[1] \"loading .Rprofile\"\nLoading required package: dplyr\n\nAttaching package: 'dplyr'\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nLoading required package: DBI\nLoading required package: RPostgres\n\fWarning message:\nIn result_fetch(res@ptr, n = n) :\n  Don't need to call dbFetch() for statements, only for queries"
  },
  {
    "objectID": "getData.html#databases",
    "href": "getData.html#databases",
    "title": "2  Get data info",
    "section": "2.1 Databases",
    "text": "2.1 Databases\nWe have two types of databases: Environmental and Fish\nThe environmental database contains daily mean temperature and flow data. Flow data are of 2 types 1) from a flow extension model - not tributary-specific and 2) hindcasted based on tributarty-specific flows from 2021 on (these flow variables are labelled ‘…byRiver’). Temperature data are from tributary-specific loggers.\nThere are four main fish databases we want to create:\n1. cdWB_electro West Brook electrofishing data, 3 species (brook trout, brown trout and Atlantic salmon), tagged and untagged fish\n2. cdWB_CMR West Brook electrofishing data formatted for Capture-Mark-Recapture (CMR) analysis for tagged individuals\n3. cdWB_wanding West Brook wanding (portable antenna) data, all tagged salmonids\n4. cdWB_antenna West Brook stationary antenna data, all tagged salmonids\n“cd” stands for “core data”."
  },
  {
    "objectID": "getDataEnv.html#get-environmental-data-target-and-show-data-frame-structure",
    "href": "getDataEnv.html#get-environmental-data-target-and-show-data-frame-structure",
    "title": "3  Get environmental data",
    "section": "3.1 Get environmental data target and show data frame structure",
    "text": "3.1 Get environmental data target and show data frame structure\n\n\nCode\nenvDataWB <- tar_read(envDataWB_Target)\nstr(envDataWB)\n\n\ntibble [32,189 × 22] (S3: tbl_df/tbl/data.frame)\n $ river         : chr [1:32189] \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" ...\n $ date          : POSIXct[1:32189], format: \"1997-05-14 04:00:00\" \"1997-05-15 04:00:00\" ...\n $ temperature   : num [1:32189] 11.57 10.4 10.55 8.84 9.09 ...\n $ daily_max_temp: num [1:32189] 11.6 12.3 11.9 10.2 11.6 ...\n $ daily_min_temp: num [1:32189] 11.57 8.96 9.73 7.74 7.45 ...\n $ flow          : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ dateDate      : Date[1:32189], format: \"1997-05-14\" \"1997-05-15\" ...\n $ yday          : num [1:32189] 134 135 136 137 138 139 140 141 142 143 ...\n $ year          : num [1:32189] 1997 1997 1997 1997 1997 ...\n $ riverOrdered  : Ord.factor w/ 4 levels \"West Brook\"<\"WB Jimmy\"<..: 2 2 2 2 2 2 2 2 2 2 ...\n $ dayLength     : num [1:32189] 51770 51896 52019 52140 52258 ...\n $ precip        : num [1:32189] 0 1.15 0 0 2.34 ...\n $ solarRadiation: num [1:32189] 587 562 259 434 446 ...\n $ swe           : num [1:32189] 78.7 73.6 67.9 63 59.5 ...\n $ airTempMax    : num [1:32189] 20.1 21.2 12.7 15.1 18.9 ...\n $ airTempMin    : num [1:32189] 4.03 6.28 7.47 5.64 2.38 6.59 7.91 3.28 4.98 3.99 ...\n $ vaporPressure : num [1:32189] 815 953 1034 911 725 ...\n $ airTempMedian : num [1:32189] 12.1 13.7 10.1 10.4 10.6 ...\n $ ETmm          : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ Pmm           : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ flowByRiver   : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ flowByRiverm3s: num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n\n\nCode\nojs_define(envDataWB_OJS = transpose(envDataWB))"
  },
  {
    "objectID": "getDataEnv.html#plot-flow-over-time-for-the-west-brook-by-year",
    "href": "getDataEnv.html#plot-flow-over-time-for-the-west-brook-by-year",
    "title": "3  Get environmental data",
    "section": "3.2 Plot flow over time for the West Brook by year",
    "text": "3.2 Plot flow over time for the West Brook by year\n\n\nCode\nggplot(envDataWB %>% filter(riverOrdered == \"West Brook\"), aes(yday, flow)) +\n  geom_point(size = 0.1) +\n  geom_point(size = 0.1, color = \"blue\", aes(yday, flowByRiverm3s)) +\n  #geom_line() +\n  scale_x_continuous(\"Day of year\") +\n  scale_y_continuous(\"Stream flow (m^3/s)\") +\n  facet_wrap(~year(date))\n\n\n\n\n\nFigure 3.1: Stream flow (m3/s) for the West Brook\n\n\n\n\n\n\nCode\nggplot(envDataWB %>% filter(riverOrdered == \"West Brook\", year %in% (1998:2021)), aes(flow, flowByRiverm3s, color = yday)) +\n  geom_point(size = 0.1) +\n  geom_abline(slope = 1) +\n  scale_y_continuous(\"Stream flow (m^3/s) from Jenn's model\") +\n  scale_x_continuous(\"Stream flow (m^3/s) from flow extension\") +\n  facet_wrap(~year(date))\n\n\n\n\n\nFigure 3.2: Stream flow (m3/s) for the West Brook with Jenn’s model predictions\n\n\n\n\n\n\nCode\nviewof rangeYear = Inputs.range([1997, 2022], {\n  label: \"Which year?\",\n  value: 2002,\n  step: 1\n})\n\nenvDataWB_OJSplot = envDataWB_OJS.filter(d => d.year === rangeYear)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    width: width,\n    height: 350,\n    inset: 10,\n    color: {\n      scheme: \"greys\"\n    },\n    x: { label: \"Stream flow (m3/s)\" },\n    y: { label: \"Stream flow (m3/s) from Jenn's model\" },\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"flow\",\n        y: \"flowByRiverm3s\"\n      })\n    ],\n    facet: {\n      data: envDataWB_OJSplot,\n      x: \"riverOrdered\"\n    }\n  });\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    width: width,\n    height: 350,\n    inset: 10,\n    color: {\n      type: \"categorical\"\n    },\n    x: { label: \"Day of year\" },\n    y: { label: \"Stream flow (m3/s)\" },\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"dateDate\",\n        y: \"flowByRiverm3s\"\n      })\n    ],\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"dateDate\",\n        y: \"flow\"\n      })\n    ],\n    facet: {\n      data: envDataWB_OJSplot,\n      x: \"riverOrdered\"\n    }\n  });\n\n\n\n\n\n\n\nTest: referring to Figure 3.1."
  },
  {
    "objectID": "getDataEnv.html#plot-temperature-over-time-for-each-tributary",
    "href": "getDataEnv.html#plot-temperature-over-time-for-each-tributary",
    "title": "3  Get environmental data",
    "section": "3.3 Plot temperature over time for each tributary",
    "text": "3.3 Plot temperature over time for each tributary\n\n\nCode\nggplot(envDataWB, aes(date, temperature)) +\n  geom_point(size = 0.2) +\n  scale_x_continuous(\"Date\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.3: Stream temperature (C) by river"
  },
  {
    "objectID": "getDataEnv.html#plot-air-and-water-temperature-over-time-for-each-tributary",
    "href": "getDataEnv.html#plot-air-and-water-temperature-over-time-for-each-tributary",
    "title": "3  Get environmental data",
    "section": "3.4 Plot air and water temperature over time for each tributary",
    "text": "3.4 Plot air and water temperature over time for each tributary\n\n\nCode\ngetTempYear <- function(d, yearIn){\n  d %>% filter(year == yearIn)\n}\n\ntempYear <- getTempYear(envDataWB, 2002)\n#write.csv(tempYear, \"./data/tempYear.csv\")\nojs_define(tempYearOJS0 = tempYear)\n\nggplot(tempYear, aes(date, temperature)) +\n  geom_point(size = 0.2) +\n  geom_point(aes(date, airTempMedian), color = \"blue\", size = 0.2) +\n  scale_x_continuous(\"Date\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\nggplot(tempYear, aes(airTempMedian, temperature, color = yday)) +\n  geom_point(size = 0.2) +\n  scale_x_continuous(\"Air Temperature\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.4: Stream and air temperature (C) by river\n\n\n\n\n\n\n\nFigure 3.5: Stream and air temperature (C) by river\n\n\n\n\nWill move this to its own chapter\n\n\nCode\ntempYearOJS = transpose(tempYearOJS0)\n\n//tempYearOJS0\n//tempYearOJS\ndateChunks\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndateChunks = {\n  let daysCount = rangeWindowWidth;\n  let days = [\n    {\n      daysCount0: 0,\n      start: tempYearOJS[0].dateDate,\n      end: tempYearOJS[rangeWindowWidth].dateDate,\n      daysCount: rangeWindowWidth,\n      data: tempYearOJS.filter(\n        (d) => d.yday >= 0 && d.yday <= 0 + rangeWindowWidth\n      )\n    }\n  ];\n\n  do {\n    if (daysCount < 365) {\n      // dont push if the whole year is seleceted, array will be empty\n      days.push({\n        daysCount0: daysCount,\n        start: tempYearOJS[daysCount].dateDate,\n        end: tempYearOJS[daysCount + rangeWindowWidth].dateDate,\n        daysCount: daysCount,\n        data: tempYearOJS.filter(\n          (d) =>\n            d.yday >= daysCount + 1 && d.yday <= daysCount + rangeWindowWidth\n        )\n      });\n    }\n    daysCount = daysCount + rangeWindowWidth;\n  } while (daysCount <= 365);\n  return days;\n}\n\n\n\n\n\n\n\nUse the slider below to set the length (# of days) of each data chunk.\nNumber of data chunks: \nStart date = \nend date = \n\n\nCode\nviewof rangeWindowWidth = Inputs.range([1, 365 - 0], {\n  label: \"Data chunk length\",\n  value: 14,\n  step: 1\n})\n\n\n\n\n\n\n\nOf the data chunks defined above which one should we graph. 0 is the first one and you won’t be able to go past the last one (range updates automatically) but you might get as few as one observation in the last chunk.\n\n\nCode\nviewof rangeWhichWindow = Inputs.range([0, dateChunks.length - 1], {\n  label: \"Which data chunk?\",\n  step: 1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Air temperature (C)\" },\n  y: { label: \"Water temperature (C)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(dateChunks[rangeWhichWindow].data, {\n      x: \"airTempMedian\",\n      y: \"temperature\",\n      stroke: \"yday\"\n    })//,\n //   Plot.linearRegressionY(dateChunks[rangeWhichWindow].data, {\n//      x: \"airTempMedian\",\n //     y: \"temperature\"\n //   })\n  ],\n  facet: {\n    data: dateChunks[rangeWhichWindow].data,\n    x: \"river\"\n  }\n})\n\n\n\n\n\n\n\n=======================================================\nsome integration alternatives - most are not so slick and are independent from the ojs code blocks above\nSeems like it is best to devleop in observable and copy/paste code blocks in here.\nimport chunk from ‘Playground’\n\n\nCode\nimport { plotChunk } from \"@bletcher/Playground\"\nplotChunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niframe in html block\n\nruntime with javascript in html block\n\n\n\nCredit: Playground by Ben Letcher"
  },
  {
    "objectID": "getDataElectro.html#get-electrofishing-data-target",
    "href": "getDataElectro.html#get-electrofishing-data-target",
    "title": "4  Get electrofishing data",
    "section": "4.1 Get electrofishing data target",
    "text": "4.1 Get electrofishing data target\nShow variables in the dataframe\n\n\nCode\ncdWB_electro <- tar_read(cdWB_electro_target)\nstr(cdWB_electro)\n\n\ntibble [91,103 × 57] (S3: tbl_df/tbl/data.frame)\n $ tag                   : chr [1:91103] \"00088cbed0\" \"00088cbed3\" \"00088cbed4\" \"00088cbed4\" ...\n $ detectionDate         : POSIXct[1:91103], format: \"2013-03-25 04:00:00\" \"2012-06-07 13:03:00\" ...\n $ sampleName            : chr [1:91103] \"84\" \"81\" \"84\" \"85\" ...\n $ sampleNumber          : num [1:91103] 73 70 73 74 70 71 73 79 80 71 ...\n $ river                 : chr [1:91103] \"wb obear\" \"west brook\" \"west brook\" \"west brook\" ...\n $ section               : num [1:91103] 7 1 40 44 25 32 32 3 3 23 ...\n $ area                  : chr [1:91103] \"trib\" \"inside\" \"inside\" \"inside\" ...\n $ observedLength        : num [1:91103] 62 62 109 154 113 120 147 70 74 86 ...\n $ survey                : chr [1:91103] \"shock\" \"shock\" \"shock\" \"shock\" ...\n $ pass                  : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ observedWeight        : num [1:91103] 1.9 2.7 12.6 41.3 15.5 18.3 30.4 3.5 4.8 6.7 ...\n $ comments              : chr [1:91103] \"additional genetic sample\" NA NA NA ...\n $ cohort                : num [1:91103] 2012 2012 2012 2012 2011 ...\n $ species               : chr [1:91103] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated         : Date[1:91103], format: NA NA ...\n $ sex                   : chr [1:91103] NA NA NA NA ...\n $ year                  : num [1:91103] 2013 2012 2013 2013 2012 ...\n $ season                : num [1:91103] 1 2 1 2 2 3 1 3 4 3 ...\n $ proportionSampled     : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ lagDetectionDate      : POSIXct[1:91103], format: NA NA ...\n $ meanTemperature       : num [1:91103] NaN NaN 10.7 NaN 16.5 ...\n $ meanFlow              : num [1:91103] NaN NaN 0.5247 NaN 0.0338 ...\n $ riverOrdered          : Ord.factor w/ 4 levels \"west brook\"<\"wb jimmy\"<..: 4 1 1 1 1 1 1 4 4 1 ...\n $ readerId              : logi [1:91103] NA NA NA NA NA NA ...\n $ sectionN              : num [1:91103] 7 1 40 44 25 32 32 3 3 23 ...\n $ aliveOrDead           : chr [1:91103] \"alive\" \"alive\" \"alive\" \"alive\" ...\n $ instance              : logi [1:91103] NA NA NA NA NA NA ...\n $ quarter               : logi [1:91103] NA NA NA NA NA NA ...\n $ leftOrRight           : logi [1:91103] NA NA NA NA NA NA ...\n $ habitat               : logi [1:91103] NA NA NA NA NA NA ...\n $ cover                 : logi [1:91103] NA NA NA NA NA NA ...\n $ justification         : logi [1:91103] NA NA NA NA NA NA ...\n $ sectionWQuarter       : logi [1:91103] NA NA NA NA NA NA ...\n $ j                     : logi [1:91103] NA NA NA NA NA NA ...\n $ date                  : Date[1:91103], format: \"2013-03-25\" \"2012-06-07\" ...\n $ sectionOriginal       : chr [1:91103] \"7\" \"1\" \"40\" \"44\" ...\n $ inside                : logi [1:91103] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ yday                  : num [1:91103] 84 159 88 176 160 271 87 260 335 270 ...\n $ ageInSamples          : num [1:91103] 3 0 3 4 4 5 7 1 2 1 ...\n $ isYOY                 : logi [1:91103] TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ lagSection            : num [1:91103] NA NA 44 NA 32 32 NA 3 NA 24 ...\n $ distMoved             : num [1:91103] NA NA -4 NA -7 0 NA 0 NA -1 ...\n $ lagObservedWeight     : num [1:91103] NA NA 41.3 NA 18.3 30.4 NA 4.8 NA 12.7 ...\n $ lagObservedLength     : num [1:91103] NA NA 154 NA 120 147 NA 74 NA 108 ...\n $ grWeight              : num [1:91103] NA NA 3.30e+10 NA 1.48e-01 ...\n $ grLength              : num [1:91103] NA NA 0.5102 NA 0.0631 ...\n $ minSample             : num [1:91103] 73 70 73 73 70 70 70 79 79 71 ...\n $ maxSample             : num [1:91103] 73 70 74 74 73 73 73 80 80 74 ...\n $ minYear               : num [1:91103] 1997 1997 1997 1997 1997 ...\n $ moveDir               : num [1:91103] NA NA -1 NA -1 0 NA 0 NA -1 ...\n $ sampleInterval        : num [1:91103] NA NA 88.2 NA 110.9 ...\n $ drainage              : chr [1:91103] \"west\" \"west\" \"west\" \"west\" ...\n $ quarter_length        : num [1:91103] 5 5.2 5.03 4.83 4.75 ...\n $ river_meter           : num [1:91103] 5252 4394 5208 5292 4903 ...\n $ confluence_river_meter: num [1:91103] 5114 0 0 0 0 ...\n $ riverMeter            : num [1:91103] 5252 4394 5208 5292 4903 ...\n $ nPasses               : num [1:91103] 1 2 1 2 2 2 1 1 1 2 ..."
  },
  {
    "objectID": "getDataElectro.html#counts-by-species",
    "href": "getDataElectro.html#counts-by-species",
    "title": "4  Get electrofishing data",
    "section": "4.2 Counts by species",
    "text": "4.2 Counts by species\nWhat are the counts by species for tagged fish?\n\n\nCode\n# # off tagged individuals/species\ntagged <- cdWB_electro %>%\n  group_by(tag, species)\n \ntagged %>%\n  summarize(n = n()) %>%\n  group_by(species) %>%\n  summarize(n = n())\n\n\n# A tibble: 3 × 2\n  species     n\n  <chr>   <int>\n1 ats      7875\n2 bkt     14611\n3 bnt      7204\n\n\nWhat are the counts by species for untagged fish?\n\n\nCode\n#####\nuntagged <- cdWB_electro %>%\n  filter(is.na(tag))\n\nuntagged %>%\n  group_by(species) %>%\n  summarize(n = n())\n\n\n# A tibble: 3 × 2\n  species     n\n  <chr>   <int>\n1 ats      3419\n2 bkt     16013\n3 bnt      6732\n\n\nPlot length distributions of tagged and untagged fish\n\n\nCode\n######\ncdWB_electro %>%\n  ggplot(aes(observedLength, color = is.na(tag))) +\n  geom_freqpoly()"
  },
  {
    "objectID": "getDataElectro.html#mortality-comments",
    "href": "getDataElectro.html#mortality-comments",
    "title": "4  Get electrofishing data",
    "section": "4.3 Mortality comments",
    "text": "4.3 Mortality comments\nShow comments related to mortalities\n\n\nCode\ncdWB_electro %>%\n  group_by(comments) %>%\n  summarize(n = n()) %>%\n  arrange(desc(n)) %>%\n  filter(str_detect(comments, \"mort\")) %>%\n  print(n = 50)\n\n\n# A tibble: 96 × 2\n   comments                                                                    n\n   <chr>                                                                   <int>\n 1 shock scars/mort                                                          264\n 2 shock mort                                                                136\n 3 tagging mort                                                               52\n 4 shocking mortality                                                         42\n 5 shocking mortality; no picture                                             14\n 6 shocking mort                                                               9\n 7 mort                                                                        8\n 8 shock scars/mort/too small to tag                                           7\n 9 shocking mortality; kept for guts                                           7\n10 tag mort                                                                    5\n11 shock scars/mort/time is estimated based on effort                          3\n12 shocking mort; no video                                                     3\n13 tagging mortality                                                           3\n14 mortality due to lack of oxygen; kept for otoliths                          2\n15 mortality due to ms222 or warm weather                                      2\n16 mortality due to shocking                                                   2\n17 mortality due to shocking; no picture                                       2\n18 mortality due to tagging or warm weather                                    2\n19 ms222 mortality; kept for otoliths                                          2\n20 shocking mortality; kept                                                    2\n21 shocking mortality; kept for guts; no picture                               2\n22 shocking mortality; no tag; no picture                                      2\n23 smolt, shock scars/mort                                                     2\n24 tagging or ms222 mortality? kept for otoliths                               2\n25 walking mortality                                                           2\n26 additional genetic sample / tagging mort                                    1\n27 additional genetic sample/shock scars/mort                                  1\n28 braid sec 29&30/shock scars/mort                                            1\n29 bucket mortality; no picture                                                1\n30 dope mort-with wrong picture label (as 7-1)                                 1\n31 electrofishing mortality (tim did it)                                       1\n32 ethanol mortality courtesy of melissa                                       1\n33 fin clip but no tag and shock mort                                          1\n34 four was a stepped on mort                                                  1\n35 isolated pool/shock scars/mort                                              1\n36 mort (222, tag?)                                                            1\n37 mort (looks like a bnt)                                                     1\n38 mort found                                                                  1\n39 mort stepped on                                                             1\n40 mort; chunk out of side (bird)                                              1\n41 mort; no tag or scales                                                      1\n42 mortality ; found the fish dead; looks like bites on the head and scra…     1\n43 mortality ; no picture                                                      1\n44 mortality due to eating; tag found in bnt (249 mm, 173.4 g)                 1\n45 mortality due to lack of oxygen (stuck on side of bucket)                   1\n46 mortality due to lavage                                                     1\n47 mortality; cause unknown                                                    1\n48 mortality; stepped on                                                       1\n49 mortality; stepped on; no picture                                           1\n50 mortality; tag/ms222?                                                       1\n# … with 46 more rows"
  },
  {
    "objectID": "getDataElectro.html#length-weight-graph",
    "href": "getDataElectro.html#length-weight-graph",
    "title": "4  Get electrofishing data",
    "section": "4.4 Length-weight graph",
    "text": "4.4 Length-weight graph\n\n\nCode\nggplot(cdWB_electro, aes(observedLength, observedWeight, color = species)) +\n  geom_point(size = 0.75, alpha = 0.1) +\n  scale_x_log10(\"Length (mm)\") +\n  scale_y_log10(\"Mass (mg)\") +\n#  theme_publication() +\n  facet_wrap(~ species)\n\n\n\n\n\nFigure 4.1: Length - mass graph"
  },
  {
    "objectID": "getDataElectro.html#length-weight-regression",
    "href": "getDataElectro.html#length-weight-regression",
    "title": "4  Get electrofishing data",
    "section": "4.5 Length-weight regression",
    "text": "4.5 Length-weight regression\nSimple linear regression statistics\n\n\nCode\nlwReg <- cdWB_electro %>%\n  nest_by(species) %>%\n  mutate(reg = list(lm(log(observedWeight) ~ log(observedLength), data = data)))\n\nlwReg %>% summarise(broom::tidy(reg))  \n\n\n# A tibble: 6 × 6\n# Groups:   species [3]\n  species term                estimate std.error statistic p.value\n  <chr>   <chr>                  <dbl>     <dbl>     <dbl>   <dbl>\n1 ats     (Intercept)           -11.4    0.00942    -1210.       0\n2 ats     log(observedLength)     3.00   0.00208     1442.       0\n3 bkt     (Intercept)           -11.5    0.00621    -1859.       0\n4 bkt     log(observedLength)     3.02   0.00140     2155.       0\n5 bnt     (Intercept)           -11.5    0.00686    -1670.       0\n6 bnt     log(observedLength)     3.01   0.00149     2023.       0\n\n\nCode\nlwReg %>% summarise(broom::glance(reg))\n\n\n# A tibble: 3 × 13\n# Groups:   species [3]\n  species r.squared adj.r.…¹  sigma stati…² p.value    df logLik     AIC     BIC\n  <chr>       <dbl>    <dbl>  <dbl>   <dbl>   <dbl> <dbl>  <dbl>   <dbl>   <dbl>\n1 ats         0.989    0.989 0.0945  2.08e6       0     1 22663. -45319. -45295.\n2 bkt         0.991    0.991 0.112   4.64e6       0     1 32555. -65105. -65079.\n3 bnt         0.996    0.996 0.0858  4.09e6       0     1 18345. -36683. -36660.\n# … with 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>, and\n#   abbreviated variable names ¹​adj.r.squared, ²​statistic"
  },
  {
    "objectID": "getDataElectro.html#electrofishing-data-metadata",
    "href": "getDataElectro.html#electrofishing-data-metadata",
    "title": "4  Get electrofishing data",
    "section": "4.6 Electrofishing data metadata",
    "text": "4.6 Electrofishing data metadata\n\n4.6.1 adapted from https://github.com/Conte-Ecology/westBrookData/blob/master/getWBData/vignettes/westBrookDataIntro.Rmd\n\n4.6.1.1 Column explanations\ntag PIT tag number, unique identifier, character\ncohort year the fish was born, assigned based on size at initial capture and size distributions of fish of known age\ndetectionDate mostly self explanatory, but filled in for unobserved fish as the median capture date for all observed fish.\nsampleName An ordered identifier for sampling mostly for recognition by people who did the sampling. This is not very clean because early in the study samples were not taken at strictly seasonal intervals. sampleNumber is probably more useful and intuitive.\nsampleNumber A tidier identifier for samples that strictly increases by one for each season (4/yr)\nriver River the fish was observed in. NA if the fish was not observed.\nwest brook The mainstem\nwb jimmy Larger tributary that fish can move back and forth into from WB section 31 (Open Large from Letcher et al 2015)\nwb mitchell Smaller tributary that fish can move back and forth into from WB section 35 (Open Small from Letcher et al 2015)\nwb obear Smaller tributary that has a waterfall at its mouth, so fish can only move downstream into WB section 20 (Isolated Small from Letcher et al 2015)\nsection Identifier for the 20m section that the fish was captured in. This is ordered from downstream to upstream starting at 1 within each river.\narea inside = section 1:47 in the west brook, trib = tributary (not west brook), below = sections below inside sections, above = sections above the inside sections\nobservedLength in mm\nsurvey shock = electroshocking survey\npass electrofishing pass. 1 or 2 in the west brook (inside), 1 in tribs\nobservedWeight in g wet weight\nspecies\nbkt = brook trout (native, self-sustained population)\nbnt = brown trout (non-native, self-sustained population)\nats = atlantic salmon (stocked through 2005, no reproduction)\ndateEmigrated date of emigration from inside/tribs if observed to emigrate. Coded as emigrated if last observation was on PIT antenna or captured below or above\nsex NA = unknown, f = female, m = male, p = precocious male (salmon only)\nenc\nLogical, was the fish observed? (1 = yes, 0 = no)\nageInSamples number of seasons since summer of the year of birth (1st summer = 0)\nsampleIndex sampleNumber rescaled to start at 1 and end at length(unique(sampleNumber)) for ease of looping in JAGS\ntagIndex ordered, unique individual identifier 1:N\nyear of sample\nseason 1 = spring, 2 = summer, 3 = fall, 4 = winter\nproportionSampled Occasionally the sample was not complete (e.g., skipped west brook but did the tributaries). This is the proportion of sections in the river of capture that were sampled.\nlagDetectionDate detection date lagged back one observation\nmeanTemperature mean temperature between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlow mean flow between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nknownZ z is alive state, so this is ‘1’ between first and last capture, and NA otherwise, unless the fish was known to be dead (e.g. tagging mortality or observed dead) in which case the value is set to ‘2’. There is also an option in the addKnownZ() function to useAntenna. This is useAntenna = FALSE by default, but could be set to TRUE to set knownZ to 1 up to the last antenna observation."
  },
  {
    "objectID": "getDataCMR.html#get-electrofishing-data-target-wb",
    "href": "getDataCMR.html#get-electrofishing-data-target-wb",
    "title": "5  Create Capture-Recapture data",
    "section": "5.1 Get electrofishing data target WB",
    "text": "5.1 Get electrofishing data target WB\nWest brook and 3 tributaries\n\n\nCode\ncdWB_CMR0_WB <- tar_read(eh_WB_2002_2014_target)\nstr(cdWB_CMR0_WB)\n\n\nList of 16\n $ eh         : num [1:19981, 1:12] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flow       : num [1:19981, 1:12] -0.707 -0.679 -0.556 -0.767 -0.531 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flowByRiver: num [1:19981, 1:12] -0.949 0.323 0.615 -0.951 0.652 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ temperature: num [1:19981, 1:12] 0.0892 -0.324 0.3839 -0.3903 0.298 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ river      : chr [1:19981, 1:12] \"wb obear\" \"west brook\" \"west brook\" \"wb obear\" ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ section    : num [1:19981, 1:12] 82 23 30 87 42 20 84 90 27 51 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ riverN     : num [1:19981, 1:12] 4 1 1 4 1 1 4 4 1 2 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ isYOY      : num [1:19981, 1:12] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ length     : num [1:19981, 1:12] 70 86 89 61 60 64 70 62 87 73 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ tags       : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ tag: chr [1:19981] \"00088cbed7\" \"00088cbed8\" \"00088cbedb\" \"00088cbedd\" ...\n $ cohorts    : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ cohort: num [1:19981] 2014 2012 2014 2012 2014 ...\n $ seasons    : tibble [79,133 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ season: num [1:79133] 3 4 1 2 3 4 1 2 3 4 ...\n $ species    : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ species: chr [1:19981] \"bkt\" \"bnt\" \"bkt\" \"bkt\" ...\n $ first      : int [1:19981] 1 1 1 1 1 1 1 1 1 1 ...\n $ last       : num [1:19981] 4 12 4 12 4 12 12 4 12 4 ...\n $ data       : tibble [199,614 × 47] (S3: tbl_df/tbl/data.frame)\n  ..$ cohort               : num [1:199614] 2012 2012 2012 2012 2012 ...\n  ..$ tag                  : chr [1:199614] \"00088cbed0\" \"00088cbed0\" \"00088cbed0\" \"00088cbed0\" ...\n  ..$ detectionDate        : POSIXct[1:199614], format: \"2013-03-25 04:00:00\" \"2013-06-05 04:00:00\" ...\n  ..$ sampleName           : chr [1:199614] \"84\" \"85\" \"86\" \"87\" ...\n  ..$ sampleNumber         : num [1:199614] 73 74 75 76 77 78 79 80 81 82 ...\n  ..$ river                : chr [1:199614] \"wb obear\" \"wb obear\" \"wb obear\" \"wb obear\" ...\n  ..$ section              : chr [1:199614] \"7\" NA NA NA ...\n  ..$ area                 : chr [1:199614] \"trib\" NA NA NA ...\n  ..$ observedLength       : num [1:199614] 62 NA NA NA NA NA NA NA NA NA ...\n  ..$ survey               : chr [1:199614] \"shock\" NA NA NA ...\n  ..$ pass                 : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ observedWeight       : num [1:199614] 1.9 NA NA NA NA NA NA NA NA NA ...\n  ..$ species              : chr [1:199614] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n  ..$ dateEmigrated        : Date[1:199614], format: NA NA ...\n  ..$ sex                  : chr [1:199614] NA NA NA NA ...\n  ..$ enc                  : num [1:199614] 1 0 0 0 0 0 0 0 0 0 ...\n  ..$ ageInSamples         : num [1:199614] 3 4 5 6 7 8 9 10 11 12 ...\n  ..$ sampleIndex          : num [1:199614] 63 64 65 66 67 68 69 70 71 72 ...\n  ..$ tagIndex             : num [1:199614] 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ year                 : num [1:199614] 2013 2013 2013 2013 2014 ...\n  ..$ season               : num [1:199614] 1 2 3 4 1 2 3 4 1 2 ...\n  ..$ proportionSampled    : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ lagDetectionDate     : POSIXct[1:199614], format: \"2013-06-05 04:00:00\" \"2013-09-18 04:00:00\" ...\n  ..$ meanTemperature      : num [1:199614] 8.62 16.51 9.44 0.94 10.52 ...\n  ..$ meanFlow             : num [1:199614] 0.38874 0.30331 0.00882 0.31319 0.58363 ...\n  ..$ meanFlowByRiver      : num [1:199614] 0.0217 0.1632 0.0432 0.0732 0.2446 ...\n  ..$ knownZ               : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ firstObserved        : num [1:199614] 73 73 73 73 73 73 73 73 73 73 ...\n  ..$ lastObserved         : num [1:199614] 73 73 73 73 73 73 73 73 73 73 ...\n  ..$ isFirstObserved      : logi [1:199614] TRUE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ isLastObserved       : logi [1:199614] TRUE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ riverTagged          : chr [1:199614] \"wb obear\" \"wb obear\" \"wb obear\" \"wb obear\" ...\n  ..$ meanMeanFlow         : num [1:199614] 0.409 0.137 0.307 0.464 0.409 ...\n  ..$ sdMeanFlow           : num [1:199614] 0.155 0.126 0.246 0.113 0.155 ...\n  ..$ meanMeanFlowByRiver  : num [1:199614] 0.1368 0.0612 0.0891 0.1094 0.1368 ...\n  ..$ sdMeanFlowByRiver    : num [1:199614] 0.0837 0.0468 0.0819 0.0639 0.0837 ...\n  ..$ meanMeanTemperature  : num [1:199614] 10.39 16.23 8.42 1.65 10.39 ...\n  ..$ sdMeanTemperature    : num [1:199614] 1.202 0.711 1.455 0.616 1.202 ...\n  ..$ meanFlowScaled       : num [1:199614] -0.129 1.313 -1.215 -1.33 1.124 ...\n  ..$ meanFlowByRiverScaled: num [1:199614] -1.375 2.182 -0.56 -0.566 1.287 ...\n  ..$ meanTemperatureScaled: num [1:199614] -1.472 0.402 0.7 -1.149 0.105 ...\n  ..$ isYOY                : num [1:199614] 1 2 2 2 2 2 2 2 2 2 ...\n  ..$ riverN               : num [1:199614] 4 4 4 4 4 4 4 4 4 4 ...\n  ..$ riverOrdered         : Ord.factor w/ 4 levels \"West Brook\"<\"WB Jimmy\"<..: 4 4 4 4 4 4 4 4 4 4 ...\n  ..$ indexByCohort        : int [1:199614] 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ sectionTMP           : chr [1:199614] \"7\" NA NA NA ...\n  ..$ sectionRiverN        : num [1:199614] 86 NA NA NA NA NA NA NA NA NA ...\n\n\n\n\nCode\ncdWB_CMR0_WB$data %>% \n  group_by(riverOrdered, cohort) %>% \n  summarize(n = n()) %>%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %>%\n  kable() %>%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.1:  Count of CMR data (including 0’s) by river \n \n  \n    cohort \n    West Brook \n    WB Jimmy \n    WB Mitchell \n    WB OBear \n  \n \n\n  \n    2002 \n    13023 \n    1440 \n    626 \n    2139 \n  \n  \n    2003 \n    24489 \n    2396 \n    444 \n    2747 \n  \n  \n    2004 \n    24963 \n    3637 \n    2707 \n    1666 \n  \n  \n    2005 \n    5471 \n    943 \n    1003 \n    723 \n  \n  \n    2006 \n    6797 \n    1973 \n    533 \n    1322 \n  \n  \n    2007 \n    3958 \n    1530 \n    1068 \n    968 \n  \n  \n    2008 \n    8668 \n    1424 \n    131 \n    886 \n  \n  \n    2009 \n    18696 \n    3497 \n    1889 \n    5081 \n  \n  \n    2010 \n    7693 \n    689 \n    281 \n    453 \n  \n  \n    2011 \n    2202 \n    1792 \n    395 \n    394 \n  \n  \n    2012 \n    16663 \n    2377 \n    1721 \n    5305 \n  \n  \n    2013 \n    4999 \n    1246 \n    304 \n    729 \n  \n  \n    2014 \n    3853 \n    528 \n    427 \n    725 \n  \n\n\n\n\n\n\n\n\nCode\ncdWB_CMR0_WB$data %>% \n  filter(enc == 1) %>% \n  group_by(riverOrdered, cohort) %>% \n  summarize(n = n()) %>%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %>%\n  kable() %>%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.2:  Count of CMR data (encounters only) by river \n \n  \n    cohort \n    West Brook \n    WB Jimmy \n    WB Mitchell \n    WB OBear \n  \n \n\n  \n    2002 \n    2974 \n    379 \n    209 \n    564 \n  \n  \n    2003 \n    4932 \n    491 \n    142 \n    709 \n  \n  \n    2004 \n    5140 \n    734 \n    638 \n    426 \n  \n  \n    2005 \n    939 \n    216 \n    204 \n    163 \n  \n  \n    2006 \n    1350 \n    379 \n    77 \n    278 \n  \n  \n    2007 \n    882 \n    318 \n    273 \n    228 \n  \n  \n    2008 \n    1606 \n    273 \n    33 \n    193 \n  \n  \n    2009 \n    3375 \n    569 \n    403 \n    1075 \n  \n  \n    2010 \n    1294 \n    164 \n    73 \n    99 \n  \n  \n    2011 \n    470 \n    426 \n    71 \n    104 \n  \n  \n    2012 \n    2731 \n    490 \n    282 \n    1196 \n  \n  \n    2013 \n    1184 \n    433 \n    99 \n    216 \n  \n  \n    2014 \n    1431 \n    248 \n    236 \n    395"
  },
  {
    "objectID": "getDataCMR.html#get-electrofishing-data-target-ob",
    "href": "getDataCMR.html#get-electrofishing-data-target-ob",
    "title": "5  Create Capture-Recapture data",
    "section": "5.2 Get electrofishing data target OB",
    "text": "5.2 Get electrofishing data target OB\nO’Bear also known as Isolated Large\n\n\nCode\ncdWB_CMR0_OB <- tar_read(eh_OB_2002_2014_target)\n\n\n\n\nCode\ncdWB_CMR0_OB$data %>% \n  group_by(riverOrdered, cohort) %>% \n  summarize(n = n()) %>%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %>%\n  kable() %>%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.3:  Count of CMR data (including 0’s) by river \n \n  \n    cohort \n    West Brook \n    WB Jimmy \n    WB OBear \n  \n \n\n  \n    2002 \n    11 \n    NA \n    2139 \n  \n  \n    2003 \n    23 \n    NA \n    2747 \n  \n  \n    2004 \n    61 \n    9 \n    1666 \n  \n  \n    2006 \n    34 \n    NA \n    1322 \n  \n  \n    2007 \n    35 \n    NA \n    968 \n  \n  \n    2009 \n    170 \n    8 \n    5081 \n  \n  \n    2010 \n    10 \n    8 \n    453 \n  \n  \n    2011 \n    17 \n    NA \n    394 \n  \n  \n    2012 \n    116 \n    8 \n    5305 \n  \n  \n    2013 \n    12 \n    NA \n    729 \n  \n  \n    2014 \n    2 \n    NA \n    725 \n  \n  \n    2005 \n    NA \n    NA \n    723 \n  \n  \n    2008 \n    NA \n    NA \n    886 \n  \n\n\n\n\n\n\n\n\nCode\ncdWB_CMR0_OB$data %>% \n  filter(enc == 1) %>% \n  group_by(riverOrdered, cohort) %>% \n  summarize(n = n()) %>%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %>%\n  kable() %>%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.4:  Count of CMR data (encounters only) by river \n \n  \n    cohort \n    West Brook \n    WB Jimmy \n    WB OBear \n  \n \n\n  \n    2002 \n    2 \n    NA \n    564 \n  \n  \n    2003 \n    5 \n    NA \n    709 \n  \n  \n    2004 \n    15 \n    2 \n    426 \n  \n  \n    2006 \n    7 \n    NA \n    278 \n  \n  \n    2007 \n    8 \n    NA \n    228 \n  \n  \n    2009 \n    27 \n    1 \n    1075 \n  \n  \n    2010 \n    1 \n    1 \n    99 \n  \n  \n    2011 \n    2 \n    NA \n    104 \n  \n  \n    2012 \n    13 \n    1 \n    1196 \n  \n  \n    2013 \n    4 \n    NA \n    216 \n  \n  \n    2014 \n    1 \n    NA \n    395 \n  \n  \n    2005 \n    NA \n    NA \n    163 \n  \n  \n    2008 \n    NA \n    NA \n    193"
  },
  {
    "objectID": "getDataWanding.html#get-wanding-data-targets",
    "href": "getDataWanding.html#get-wanding-data-targets",
    "title": "6  Get wanding data",
    "section": "6.1 Get wanding data targets",
    "text": "6.1 Get wanding data targets\n\n\nCode\ncdWB_wanding0 <- tar_read(cdWB_wanding0_target)\nstr(cdWB_wanding0)\n\n\ntibble [14,880 × 25] (S3: tbl_df/tbl/data.frame)\n $ tag            : chr [1:14880] \"00088cf41b\" \"00088cf41b\" \"00088cf41b\" \"00088cf435\" ...\n $ detectionDate  : POSIXct[1:14880], format: \"2010-09-27 15:08:45\" \"2010-10-18 18:16:22\" ...\n $ sampleName     : chr [1:14880] \"92710.00\" \"101810.00\" \"102510.00\" \"12610.00\" ...\n $ river          : chr [1:14880] \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" ...\n $ section        : num [1:14880] 13 14 14 2 6 8 8 11 12 10 ...\n $ area           : chr [1:14880] \"trib\" \"trib\" \"trib\" \"trib\" ...\n $ survey         : chr [1:14880] \"portableAntenna\" \"portableAntenna\" \"portableAntenna\" \"portableAntenna\" ...\n $ readerId       : chr [1:14880] \"iso\" \"iso\" \"iso\" \"iso\" ...\n $ aliveOrDead    : chr [1:14880] \"alive\" \"alive\" NA \"alive\" ...\n $ instance       : num [1:14880] 1 2 3 1 1 1 2 1 1 1 ...\n $ pass           : num [1:14880] NA NA NA NA NA NA NA NA NA NA ...\n $ quarter        : num [1:14880] 2 1 1 4 2 4 4 3 4 2 ...\n $ leftOrRight    : chr [1:14880] \"l\" \"m\" NA \"r\" ...\n $ habitat        : chr [1:14880] \"pool\" \"run\" NA \"pool\" ...\n $ cover          : chr [1:14880] NA NA NA NA ...\n $ justification  : chr [1:14880] NA NA NA NA ...\n $ cohort         : num [1:14880] 2010 2010 2010 2010 2009 ...\n $ species        : chr [1:14880] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated  : Date[1:14880], format: NA NA ...\n $ sex            : chr [1:14880] NA NA NA NA ...\n $ riverOrdered   : Ord.factor w/ 4 levels \"West Brook\"<\"WB Jimmy\"<..: 2 2 2 2 2 2 2 2 2 3 ...\n $ sectionN       : num [1:14880] 13 14 14 2 6 8 8 11 12 10 ...\n $ year           : num [1:14880] 2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n $ j              : num [1:14880] 270 291 298 340 333 305 313 270 270 236 ...\n $ sectionWQuarter: num [1:14880] 13.25 14 14 2.75 6.25 ...\n\n\nCode\ncdWB_wandingTribs3 <- tar_read(cdWB_wandingTribs3_target)\n\ncdWB_wandingWB2 <- tar_read(cdWB_wandingWB2_target)\ncdWB_wandingWB3 <- tar_read(cdWB_wandingWB3_target)\n\n\n\n\nCode\ncdWB_wanding0 %>% \n  group_by(riverOrdered, cohort) %>% \n  summarize(n = n()) %>%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %>%\n  arrange(cohort) %>%\n  kable() %>%\n  kable_styling(full_width = T)\n\n\n\n\nTable 6.1:  Count of wanding data by river \n \n  \n    cohort \n    West Brook \n    WB Jimmy \n    WB Mitchell \n    WB OBear \n  \n \n\n  \n    1996 \n    4 \n    NA \n    NA \n    NA \n  \n  \n    1997 \n    9 \n    NA \n    NA \n    NA \n  \n  \n    1998 \n    33 \n    41 \n    4 \n    NA \n  \n  \n    1999 \n    141 \n    44 \n    2 \n    2 \n  \n  \n    2000 \n    352 \n    211 \n    116 \n    66 \n  \n  \n    2001 \n    1966 \n    1022 \n    414 \n    639 \n  \n  \n    2002 \n    2169 \n    615 \n    467 \n    894 \n  \n  \n    2003 \n    80 \n    650 \n    277 \n    1004 \n  \n  \n    2004 \n    195 \n    118 \n    298 \n    3 \n  \n  \n    2005 \n    61 \n    51 \n    90 \n    NA \n  \n  \n    2006 \n    NA \n    95 \n    126 \n    NA \n  \n  \n    2007 \n    NA \n    125 \n    256 \n    NA \n  \n  \n    2008 \n    NA \n    186 \n    41 \n    NA \n  \n  \n    2009 \n    NA \n    1089 \n    840 \n    NA \n  \n  \n    2010 \n    NA \n    50 \n    28 \n    NA \n  \n  \n    NA \n    6 \n    NA \n    NA \n    NA"
  },
  {
    "objectID": "getDataWanding.html#all-wanding-data",
    "href": "getDataWanding.html#all-wanding-data",
    "title": "6  Get wanding data",
    "section": "6.2 All wanding data",
    "text": "6.2 All wanding data\nBased on the following, looks like best data for analysis are trout in the tribs in 2009 2010. Need to decide what to do for salmon\n\n\nCode\n#everything\nggplot(cdWB_wanding0, aes(j, sectionWQuarter, color = tag) )+\n  geom_point()+\n  geom_line() +\n  scale_y_continuous(limits = c(0,50))+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Everything\") +\n  facet_grid(riverOrdered ~ year)\n\n\n\n\n\nCode\n#everything\nggplot(filter(cdWB_wanding0, aliveOrDead != 'dead'), aes(j, sectionWQuarter, color = tag) )+\n  geom_point()+\n  geom_line() +\n  scale_y_continuous(limits = c(0, 50))+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Not dead\") +\n  facet_grid(river~year)"
  },
  {
    "objectID": "getDataWanding.html#tributaries",
    "href": "getDataWanding.html#tributaries",
    "title": "6  Get wanding data",
    "section": "6.3 Tributaries",
    "text": "6.3 Tributaries\n\n\nCode\n# Tribs\n# Loop over species\nfor (s in c(\"bkt\",\"bnt\") ) {\n  tmp2 <-\n    ggplot(filter(cdWB_wanding0, river!=\"west brook\" & species == s & aliveOrDead != 'dead'), \n           aes(detectionDate,sectionWQuarter, group = tag))+\n    geom_point(aes(shape = aliveOrDead), size = 2)+\n    geom_line() +\n    scale_y_continuous(limits = c(-2, 15))+\n    #  theme(legend.position=\"none\")+\n    ggtitle(paste(\"Tribs\", s, \"not dead\")) +\n    facet_grid(river ~ year, scales = 'free')\n  print(tmp2)\n}\n\n\n\n\n\n\n\n\n\n6.3.1 Which species_year_tributary?\nRaw data graphs for the 4 sets of data to focus on\n\n\nCode\n# Tribs - focus on a year\nfor (s in c(\"bkt\", \"bnt\") ) {\n  for (y in c(2009, 2010) ) {\n    for (r in c(\"wb mitchell\", \"wb jimmy\", \"wb obear\")) {\n\n      tmp <-\n        ggplot(filter(cdWB_wanding0, river == r & species == s & year == y & aliveOrDead != 'dead'), \n               aes(detectionDate,sectionWQuarter, color = tag))+\n        geom_point(aes(shape=aliveOrDead),size=2)+\n        geom_line() +\n        #  scale_y_continuous(limits=c(0,15))+\n        theme(legend.position=\"none\")+\n        ggtitle(paste(\"Tribs\", s, y, r, \"not dead\"))\n      #  facet_grid(species~year,scales='free')\n\n      print(tmp)\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.2 Movement\nCounts of observations by month, river, year\n\n\nCode\ntable(cdWB_wandingTribs3$month, cdWB_wandingTribs3$river, cdWB_wandingTribs3$year)\n\n\n, ,  = 2009\n\n    \n     wb jimmy wb mitchell\n  9        42          66\n  10      185         161\n  11      170         117\n\n, ,  = 2010\n\n    \n     wb jimmy wb mitchell\n  9        20          14\n  10       46          17\n  11       21          12\n\n\nCode\n ggplot(cdWB_wandingTribs3, aes(moveRate, color = species)) +\n   geom_freqpoly() +\n   facet_grid(river ~ year)\n\n\n\n\n\nFrequency distribution of movement rates\n\n\nCode\nggplot(cdWB_wandingTribs3, aes(moveRate, linetype = species)) +\n  geom_freqpoly(binwidth=5, boundary = min(cdWB_wandingTribs3$moveRate)) +\n  scale_x_continuous(\"Movement rate (m/week)\") +\n  scale_y_continuous(\"Frequency\") +\n  theme_bw(base_size=25)+\n  theme( strip.background = element_blank()\n         #strip.text = element_blank()\n         #legend.position = \"none\"\n         ) +\n  facet_grid(~ river)\n\n\n\n\n\n\n\n6.3.3 Intervals\n\n\nCode\n# #Cut moveTime into intervals to make sure patterns look same for recaptures of different intervals\n\n# ggplot(cdWB_wandingTribs4_target, aes( moveRate, color=interval ) ) +\n#   geom_freqpoly() +\n#   facet_grid(river~year+species)\n\n #Try a boxplot\n ggplot( cdWB_wandingTribs3 %>% filter(month %in% 9:11), \n         aes( factor(month),moveRate, color = species ) ) +\n   geom_boxplot() +\n   facet_grid(river~year)\n\n\n\n\n\n\n\n6.3.4 Random effect models\n\n\nCode\n# RE model for individual movement variation\n# \n mod0 <- lmer(abs(moveRate) ~ (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod1 <- lmer(abs(moveRate) ~ factor(species) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod2 <- lmer(abs(moveRate) ~ factor(species) * factor(month) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod3 <- lmer(abs(moveRate) ~ factor(species) + factor(month) + factor(year) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod4 <- lmer(abs(moveRate) ~ factor(species) * factor(month) * factor(year) + (1|tag), data = cdWB_wandingTribs3)\n# \n AIC(mod0,mod1,mod2,mod3,mod4) %>% arrange(AIC)\n\n\n     df      AIC\nmod4 14 7388.654\nmod2  8 7429.937\nmod3  7 7434.280\nmod1  4 7460.786\nmod0  3 7466.674\n\n\nCode\n# \n summary(mod4)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: abs(moveRate) ~ factor(species) * factor(month) * factor(year) +  \n    (1 | tag)\n   Data: cdWB_wandingTribs3\n\nREML criterion at convergence: 7360.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.4602 -0.2715 -0.1552 -0.0014  9.1656 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n tag      (Intercept)  31.14    5.581  \n Residual             266.81   16.334  \nNumber of obs: 871, groups:  tag, 326\n\nFixed effects:\n                                                    Estimate Std. Error t value\n(Intercept)                                           15.462      1.774   8.714\nfactor(species)bnt                                    -9.948      4.965  -2.004\nfactor(month)10                                      -10.510      1.989  -5.283\nfactor(month)11                                      -11.744      2.049  -5.733\nfactor(year)2010                                      -8.289      3.486  -2.378\nfactor(species)bnt:factor(month)10                     6.680      5.466   1.222\nfactor(species)bnt:factor(month)11                     8.700      5.652   1.539\nfactor(species)bnt:factor(year)2010                    2.813     18.086   0.156\nfactor(month)10:factor(year)2010                       9.706      4.219   2.300\nfactor(month)11:factor(year)2010                      21.045      4.745   4.435\nfactor(species)bnt:factor(month)10:factor(year)2010   -3.630     19.402  -0.187\nfactor(species)bnt:factor(month)11:factor(year)2010  -17.396     20.572  -0.846\n\nCorrelation of Fixed Effects:\n            (Intr) fctr() fc()10 fc()11 f()201 fc():()10 fc():()11 f():()2\nfctr(spcs)b -0.357                                                        \nfctr(mnt)10 -0.850  0.304                                                 \nfctr(mnt)11 -0.831  0.297  0.739                                          \nfctr(y)2010 -0.500  0.179  0.432  0.423                                   \nfctr():()10  0.309 -0.879 -0.364 -0.269 -0.157                            \nfctr():()11  0.301 -0.856 -0.268 -0.362 -0.153  0.779                     \nfc():()2010  0.096 -0.274 -0.083 -0.082 -0.193  0.241     0.235           \nf()10:()201  0.397 -0.142 -0.470 -0.346 -0.799  0.171     0.125     0.154 \nf()11:()201  0.361 -0.129 -0.319 -0.431 -0.706  0.116     0.156     0.136 \nf():()10:() -0.086  0.247  0.102  0.075  0.174 -0.281    -0.218    -0.915 \nf():()11:() -0.083  0.235  0.074  0.099  0.163 -0.214    -0.275    -0.851 \n            f()10: f()11: f():()10:\nfctr(spcs)b                        \nfctr(mnt)10                        \nfctr(mnt)11                        \nfctr(y)2010                        \nfctr():()10                        \nfctr():()11                        \nfc():()2010                        \nf()10:()201                        \nf()11:()201  0.582                 \nf():()10:() -0.217 -0.127          \nf():()11:() -0.134 -0.231  0.789   \n\n\nCode\n# \n randoms <- REsim( mod4, n.sims = 1000 )\n plotREsim(randoms)\n\n\n\n\n\nCode\n# \n\n ggplot(randoms, aes(mean)) + \n   geom_histogram(binwidth = 0.75, boundary = min(randoms$mean)) +\n   scale_x_continuous(\"Indivdual random effect for movement rate (m/week)\") +\n   scale_y_continuous(\"Frequency\") +\n   theme_bw(base_size = 25)\n\n\n\n\n\nCode\n# # % of fish with CI that don't overlap 0\n randoms$lCI <- randoms$mean - randoms$sd * 1.96\n randoms$uCI <- randoms$mean + randoms$sd * 1.96\n randoms$sig <- (randoms$uCI < 0 | randoms$lCI > 0)\n# \n count(randoms, sig)$n/nrow(randoms)\n\n\n[1] 0.98159509 0.01840491\n\n\n\n\n6.3.5 Young-of-year fish\n\n\nCode\nggplot(cdWB_wandingTribs3, aes(moveRate, linetype = species)) +\n  geom_freqpoly() +\n  scale_x_continuous(\"Movement rate (m/week)\") +\n  scale_y_continuous(\"Frequency\") +\n  #theme_bw(base_size=25)+\n  facet_grid(month ~ yoy + river)"
  },
  {
    "objectID": "getDataWanding.html#west-brook",
    "href": "getDataWanding.html#west-brook",
    "title": "6  Get wanding data",
    "section": "6.4 West Brook",
    "text": "6.4 West Brook\nDid not filter by moveTime > 1 because there were within-day samples in the WB (in contrast to the tribs)\n\n6.4.1 West brook wanding data\nCalculate and plot movement\n\n\nCode\n# Loop over species\nfor (s in unique(cdWB_wanding0$species)) {\n  tmp <-\n    ggplot(filter(cdWB_wanding0, river == \"west brook\" & species==s & aliveOrDead != 'dead'), \n           aes(detectionDate,sectionWQuarter, color = tag))+\n    geom_point(size=2)+\n    geom_line() +\n    scale_y_continuous(limits = c(30,35))+\n    theme(legend.position = \"none\")+\n    ggtitle(paste(\"WB\", s, \"not dead\")) +\n    facet_wrap(~ year, scales = 'free')\n  print(tmp)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.4.2 Movement\n\n\nCode\ntable(cdWB_wandingWB3$species, cdWB_wandingWB3$month, cdWB_wandingWB3$river, cdWB_wandingWB3$year)\n\n\n, ,  = west brook,  = 2002\n\n     \n        4   5   6   8   9  10  11  12\n  ats   0   0   0  28  11  14 149   8\n  bkt   0   0   0  18   3  12 101   5\n\n, ,  = west brook,  = 2003\n\n     \n        4   5   6   8   9  10  11  12\n  ats 186 281 147   0   0   0   0   0\n  bkt  90 180  93   0   0   0   0   0\n\n\nCode\n# \n# # raw\n ggplot(cdWB_wandingWB3, aes(j, sectionWQuarter, color = tag)) +\n   geom_point()+\n   geom_line() +\n   #  scale_y_continuous(limits=c(0,50))+\n   theme(legend.position=\"none\")+\n   ggtitle(\"Not dead\") +\n   facet_grid(river~year)\n\n\n\n\n\nCode\n ggplot(cdWB_wandingWB3, aes(moveRate, color = species)) +\n   geom_freqpoly() +\n   facet_grid(river ~ year)\n\n\n\n\n\nCode\n ggplot(cdWB_wandingWB3, aes(moveRate, linetype=species)) +\n   geom_freqpoly(binwidth = 5, boundary = min(cdWB_wandingWB3$moveRate, na.rm=T)) +\n   scale_x_continuous(\"Movement rate (m/week)\") +\n   scale_y_continuous(\"Frequency\") +\n   theme_bw(base_size=25)+\n   theme( strip.background = element_blank()\n          #strip.text = element_blank(),\n          #legend.position = \"none\"\n          ) \n\n\n\n\n\nCode\n# #ats is solid line\n\n# \n\n\n\n\n6.4.3 Random effects models\n\n\nCode\n  mod0WB <- lmer( abs(moveRate) ~ (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod1WB <- lmer( abs(moveRate) ~ factor(species) + (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod2WB <- lmer( abs(moveRate) ~ factor(species) * factor(month) + (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod3WB <- lmer( abs(moveRate) ~ factor(species) + factor(month) + factor(year) + (1|tag), data=cdWB_wandingWB3 )\n \n \n  AIC(mod0WB,mod1WB,mod2WB,mod3WB) %>% arrange(AIC)\n\n\n       df      AIC\nmod2WB 18 12944.76\nmod3WB 11 13001.44\nmod1WB  4 13052.68\nmod0WB  3 13060.72\n\n\nCode\n  summary(mod2WB)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: abs(moveRate) ~ factor(species) * factor(month) + (1 | tag)\n   Data: cdWB_wandingWB3\n\nREML criterion at convergence: 12908.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.5703 -0.4130 -0.1898  0.0996 10.7899 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n tag      (Intercept)  531.2   23.05   \n Residual             2369.0   48.67   \nNumber of obs: 1216, groups:  tag, 124\n\nFixed effects:\n                                   Estimate Std. Error t value\n(Intercept)                          15.257      4.977   3.066\nfactor(species)bkt                    7.872      8.440   0.933\nfactor(month)5                        7.095      4.977   1.426\nfactor(month)6                        2.478      6.373   0.389\nfactor(month)8                        8.650     10.720   0.807\nfactor(month)9                      -12.233     15.934  -0.768\nfactor(month)10                     -10.745     18.187  -0.591\nfactor(month)11                      -2.775      5.712  -0.486\nfactor(month)12                     -18.671     18.086  -1.032\nfactor(species)bkt:factor(month)5     7.775      8.643   0.900\nfactor(species)bkt:factor(month)6    23.543     10.572   2.227\nfactor(species)bkt:factor(month)8   -31.321     18.194  -1.722\nfactor(species)bkt:factor(month)9   -10.230     33.752  -0.303\nfactor(species)bkt:factor(month)10   59.008     25.208   2.341\nfactor(species)bkt:factor(month)11   -8.667      9.734  -0.890\nfactor(species)bkt:factor(month)12    4.149     31.494   0.132\n\n\nCode\n  randomsWB <- REsim(mod2WB, n.sims = 1000)\n  plotREsim(randomsWB)\n\n\n\n\n\nCode\n  ggplot(randomsWB, aes(mean)) +\n    geom_histogram(binwidth = 4.75, boundary = min(randomsWB$mean)) +\n    scale_x_continuous(\"Indivdual random effect for movement rate (m/week)\") +\n    scale_y_continuous(\"Frequency\") +\n    theme_bw(base_size = 25)\n\n\n\n\n\nCode\n  # % of fish with CI that don't overlap 0\n  randomsWB$lCI <- randomsWB$mean - randomsWB$sd * 1.96\n  randomsWB$uCI <- randomsWB$mean + randomsWB$sd * 1.96\n  randomsWB$sig <- (randomsWB$uCI < 0 | randomsWB$lCI > 0)\n  \n  count(randomsWB,sig)$n/nrow(randomsWB)\n\n\n[1] 0.8951613 0.1048387"
  },
  {
    "objectID": "getDataAntenna.html#get-antenna-data-target",
    "href": "getDataAntenna.html#get-antenna-data-target",
    "title": "7  Get antenna data",
    "section": "7.1 Get antenna data target",
    "text": "7.1 Get antenna data target\n\n\nCode\ncdWB_antenna0 <- tar_read(cdWB_antenna0_target)\nstr(cdWB_antenna0)\n\n\ntibble [410,915 × 23] (S3: tbl_df/tbl/data.frame)\n $ tag                   : chr [1:410915] \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" ...\n $ detectionDate         : POSIXct[1:410915], format: \"2014-10-18 00:22:33\" \"2014-10-24 19:34:31\" ...\n $ river                 : chr [1:410915] \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" ...\n $ riverMeter            : num [1:410915] 4797 4797 4830 4830 5524 ...\n $ survey                : chr [1:410915] \"stationaryAntenna\" \"stationaryAntenna\" \"stationaryAntenna\" \"stationaryAntenna\" ...\n $ cohort                : num [1:410915] 2013 2013 2013 2013 2013 ...\n $ species               : chr [1:410915] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated         : Date[1:410915], format: \"2014-10-25\" \"2014-10-25\" ...\n $ sex                   : chr [1:410915] NA NA NA NA ...\n $ riverOrdered          : Ord.factor w/ 4 levels \"West Brook\"<\"WB Jimmy\"<..: 3 3 3 3 1 2 2 2 2 2 ...\n $ drainage              : chr [1:410915] \"west\" \"west\" \"west\" \"west\" ...\n $ area                  : chr [1:410915] NA NA NA NA ...\n $ section               : num [1:410915] NA NA NA NA NA NA NA NA NA NA ...\n $ quarter_length        : num [1:410915] NA NA NA NA NA NA NA NA NA NA ...\n $ confluence_river_meter: num [1:410915] NA NA NA NA NA NA NA NA NA NA ...\n $ sectionOriginal       : chr [1:410915] NA NA NA NA ...\n $ inside                : logi [1:410915] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ year                  : num [1:410915] 2014 2014 2014 2014 2014 ...\n $ yday                  : num [1:410915] 291 297 297 297 298 258 260 260 289 289 ...\n $ date                  : Date[1:410915], format: \"2014-10-18\" \"2014-10-24\" ...\n $ lagSection            : num [1:410915] NA NA NA NA NA NA NA NA NA NA ...\n $ distMoved             : num [1:410915] NA NA NA NA NA NA NA NA NA NA ...\n $ moveDir               : logi [1:410915] NA NA NA NA NA NA ...\n\n\nNeed to find previous antanna analysis - lower left drawer in office desk."
  },
  {
    "objectID": "dataAll.html#merge-all-data",
    "href": "dataAll.html#merge-all-data",
    "title": "8  All data",
    "section": "8.1 Merge All data",
    "text": "8.1 Merge All data\n\n\n\n\n8.1.1 Read merged data target\nVariables in the all data dataset\n\n\ntibble [450,099 × 61] (S3: tbl_df/tbl/data.frame)\n $ tag                   : chr [1:450099] \"00088cbed4\" \"00088cbed6\" \"00088cbed7\" \"00088cbed8\" ...\n $ detectionDate         : POSIXct[1:450099], format: \"2013-03-29 14:08:00\" \"2012-06-08 18:21:00\" ...\n $ sampleName            : chr [1:450099] \"84\" \"81\" \"90\" \"84\" ...\n $ sampleNumber          : num [1:450099] 73 70 79 73 71 72 78 71 72 73 ...\n $ river                 : chr [1:450099] \"west brook\" \"west brook\" \"wb obear\" \"west brook\" ...\n $ section               : num [1:450099] 40 25 3 24 8 6 60 5 5 5 ...\n $ area                  : chr [1:450099] \"inside\" \"inside\" \"trib\" \"inside\" ...\n $ observedLength        : num [1:450099] 109 113 70 108 61 63 126 70 80 86 ...\n $ survey                : chr [1:450099] \"shock\" \"shock\" \"shock\" \"shock\" ...\n $ pass                  : num [1:450099] 1 1 1 1 1 1 1 1 1 1 ...\n $ observedWeight        : num [1:450099] 12.6 15.5 3.5 12.7 2.4 2.4 23.2 4.6 4.9 6.3 ...\n $ comments              : chr [1:450099] NA NA NA NA ...\n $ cohort                : num [1:450099] 2012 2011 2014 2012 2012 ...\n $ species               : chr [1:450099] \"bkt\" \"bnt\" \"bkt\" \"bnt\" ...\n $ dateEmigrated         : Date[1:450099], format: NA NA ...\n $ sex                   : chr [1:450099] NA NA NA NA ...\n $ year                  : num [1:450099] 2013 2012 2014 2013 2012 ...\n $ season                : num [1:450099] 1 2 3 1 3 4 2 3 4 1 ...\n $ proportionSampled     : num [1:450099] 1 1 1 1 1 1 1 1 1 1 ...\n $ lagDetectionDate      : POSIXct[1:450099], format: \"2013-06-25 18:51:00\" \"2012-09-27 16:50:00\" ...\n $ meanTemperature       : num [1:450099] 10.7 16.5 8.55 10.2 7.85 ...\n $ meanFlow              : num [1:450099] 0.5247 0.0338 0.1334 0.5389 0.1188 ...\n $ riverOrdered          : Ord.factor w/ 4 levels \"West Brook\"<\"WB Jimmy\"<..: 1 1 4 1 4 4 1 4 4 4 ...\n $ readerId              : chr [1:450099] NA NA NA NA ...\n $ sectionN              : num [1:450099] 40 25 3 24 8 6 60 5 5 5 ...\n $ aliveOrDead           : chr [1:450099] \"alive\" \"alive\" \"alive\" \"alive\" ...\n $ instance              : num [1:450099] NA NA NA NA NA NA NA NA NA NA ...\n $ quarter               : num [1:450099] NA NA NA NA NA NA NA NA NA NA ...\n $ leftOrRight           : chr [1:450099] NA NA NA NA ...\n $ habitat               : chr [1:450099] NA NA NA NA ...\n $ cover                 : chr [1:450099] NA NA NA NA ...\n $ justification         : chr [1:450099] NA NA NA NA ...\n $ sectionWQuarter       : num [1:450099] NA NA NA NA NA NA NA NA NA NA ...\n $ j                     : num [1:450099] NA NA NA NA NA NA NA NA NA NA ...\n $ date                  : Date[1:450099], format: \"2013-03-29\" \"2012-06-08\" ...\n $ sectionOriginal       : chr [1:450099] \"40\" \"25\" \"3\" \"24\" ...\n $ inside                : logi [1:450099] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ yday                  : num [1:450099] 88 160 260 87 265 347 170 264 347 84 ...\n $ ageInSamples          : num [1:450099] 3 4 1 3 1 2 4 1 2 3 ...\n $ isYOY                 : logi [1:450099] TRUE FALSE TRUE TRUE TRUE TRUE ...\n $ lagSection            : num [1:450099] 44 32 3 24 6 6 37 5 5 5 ...\n $ distMoved             : num [1:450099] -4 -7 0 0 2 0 23 0 0 0 ...\n $ lagObservedWeight     : num [1:450099] 41.3 18.3 4.8 38.8 2.4 2.3 22.8 4.9 6.3 18.2 ...\n $ lagObservedLength     : num [1:450099] 154 120 74 150 63 67 130 80 86 117 ...\n $ lagSampleNumber       : num [1:450099] 74 71 80 74 72 73 79 72 73 74 ...\n $ sampleNumberDiff      : num [1:450099] 1 1 1 1 1 1 1 1 1 1 ...\n $ grWeight              : num [1:450099] 0.01346 0.0015 0.00421 0.0138 0 ...\n $ grLength              : num [1:450099] 0.5102 0.0631 0.0533 0.5188 0.0244 ...\n $ minSample             : num [1:450099] 73 70 79 71 71 71 78 71 71 71 ...\n $ maxSample             : num [1:450099] 74 73 80 74 73 73 79 74 74 74 ...\n $ minYear               : num [1:450099] 1997 1997 1997 1997 1997 ...\n $ moveDir               : num [1:450099] -1 -1 0 0 1 0 1 0 0 0 ...\n $ sampleInterval        : num [1:450099] 88.2 110.9 75 81 82 ...\n $ drainage              : chr [1:450099] \"west\" \"west\" \"west\" \"west\" ...\n $ quarter_length        : num [1:450099] 5.03 4.75 4.95 5.28 5.25 ...\n $ river_meter           : num [1:450099] 5208 4903 5164 4883 5272 ...\n $ confluence_river_meter: num [1:450099] 0 0 5114 0 5114 ...\n $ riverMeter            : num [1:450099] 5208 4903 5164 4883 5272 ...\n $ nPasses               : num [1:450099] 1 2 1 1 1 1 2 1 1 1 ...\n $ wGR_Slope             : num [1:450099] -0.367 -0.278 -0.347 -0.369 -0.347 ...\n $ grWeightS             : num [1:450099] 0.004307 0.000683 0.002583 0.004426 0 ...\n\n\n\n\n\n\n\n\n\n\nCode\nallOJS = transpose(allOJS0)\n\ntags = tidy(allOJS, groupBy(\"tag\", [summarize({ n: n() })]), arrange([desc(\"n\")]))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviewof selectTag = Inputs.select(\n  tags.map((d) => d.tag),\n  {\n    //value: \"1bf20ebcae\",\n    label: \"Tags:\",\n    multiple: true\n  }\n)\n\n\n\n\n\n\n\nFacet by river, symbol identifies survey type\n\n\nCode\ntagsToPlot = allOJS.filter((d) => selectTag.includes(d.tag))\n\n\ntagsOverTime = Plot.plot({\n  marks: [\n    Plot.dot(tagsToPlot, { x: \"detectionDate\", y: \"section\", stroke: \"tag\", symbol: \"survey\" }),\n    Plot.line(tagsToPlot, { x: \"detectionDate\", y: \"section\", stroke: \"tag\" })\n  ],\n  facet: {\n    data: tagsToPlot, x: \"river\"\n  },\n  // Include a legend for the color channel \n  color: {\n    legend: true,\n  },\n  symbol: {\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne panel, symbol identifies river\n\n\nCode\ntagsOverTimeRiver = Plot.plot({\n  marks: [\n    Plot.dot(tagsToPlot, {\n      x: \"detectionDate\",\n      y: \"section\",\n      stroke: \"tag\",\n      symbol: \"river\"\n    }),\n    Plot.line(tagsToPlot, { x: \"detectionDate\", y: \"section\", stroke: \"tag\" })\n  ],\n  // Include a legend for the color channel\n  color: {\n    legend: true\n  },\n    symbol: {\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\nCode\nselectTag\n\n\n\n\n\n\n\n\n\nCode\ntagsToPlot\n\n\n\n\n\n\n\n\n\nCode\nallOJS\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {tidy, max, nDistinct, groupBy, mutate, filter, summarize, first, last, distinct, count, n, arrange, mutateWithSummary, desc, debug, sum, slice, mean, deviation, variance, meanRate, median, min, total, sliceMax, innerJoin, leftJoin, pivotLonger, pivotWider, select, rename, complete, contains, when} from \"@pbeshai/tidyjs\""
  },
  {
    "objectID": "modelYOY.html#raw-data-for-yoy-model",
    "href": "modelYOY.html#raw-data-for-yoy-model",
    "title": "9  Young-of-year size model",
    "section": "9.1 Raw data for YOY model",
    "text": "9.1 Raw data for YOY model\n\nEnvironmental data (flow, temperature) are from 1, 3, or 5 months prior to date of individual capture. Also can used fixed dates: assumed spawning dates, assumed emergence dates and actual observation (sample) dates.\nAll fish data are from age-0 in autumn.\nAbundance data."
  },
  {
    "objectID": "modelYOY.html#get-data-from-targets",
    "href": "modelYOY.html#get-data-from-targets",
    "title": "9  Young-of-year size model",
    "section": "9.2 Get data from targets",
    "text": "9.2 Get data from targets\nWest Brook environmental data (flow and temperature) and electrofishing data\n\n\nCode\nenvDataWB <- tar_read(envDataWB_target)\ncdWB_electro <- tar_read(cdWB_electro_target)"
  },
  {
    "objectID": "modelYOY.html#get-first-observations",
    "href": "modelYOY.html#get-first-observations",
    "title": "9  Young-of-year size model",
    "section": "9.3 Get first observations",
    "text": "9.3 Get first observations\n\nFilter cdWB_electro for first observations in the autumn for age-0 fish (ageInsamples == 1). Including both tagged and untagged fish.\n\n\n\nCode\nfirstObs_noTag <- tar_read(firstObs_noTag_target)\nfirstObs_tag <- tar_read(firstObs_tag_target)\nfirstObs0 <- tar_read(firstObs0_target)\n\n\nFor each date in firstObs0 that at least one fish was captured, calculate summary stats for flow and temperature for different time periods:\n1. Assumed spawning to capture\n2. Assumed spawning to assumed emergence\n3. Assumed emergence to capture\n4. One month preceding capture\n5. Three months preceding capture\n5. Five months preceding capture\nThen merge results with firstObs0 to create firstObs.\n\n\nCode\nfirstObsDates <- tar_read(firstObsDates_target) \n    \nfirstObs_Env <- tar_read(firstObs_Env_target)\n# merge env data into firstObs0\nfirstObs <- tar_read(firstObs_target)\n\n\nUnnest firstObs so environmental summary stats are available as data frame with the name of the time interval as the prefix to the statisticVariable name\n\n\nCode\nfirstObsUnnested <- tar_read(firstObsUnnested_target)\n\nggplot(firstObsUnnested, aes(oneMonth_sumTScaled, fiveMonth_sumTScaled)) +\n geom_point() +\n facet_wrap(~river)\n\n\n\n\n\n\n9.3.1 Counts of captured fish\nMin and max years (inclusive) for standardizing counts This is in targets, not sure if needed here\n\n\nCode\nminYear <- 2000\nmaxYear <- 2015\n\n\nCounts by river and species\n\n\nCode\ncountsRSY <- tar_read(countsRSY_target)\n\nggplot(countsRSY, aes(year, countRS_Scaled, color = species)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~ river)\n\n\n\n\n\nCounts by river\n\n\nCode\ncountsRY <- tar_read(countsRY_target)\n\nggplot(countsRY, aes(year, countR_Scaled, color = river)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\nCounts for the metaPopulation (WB, Jimmy, Mitchell)\nUse these for modelling.\n\n\nCode\ncountsMetaY <- tar_read(countsMetaY_target)\n\nggplot(countsMetaY, aes(year, count_Scaled)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\nMerge metapopulation scaled counts into firstObsUnnested\n\n\nCode\nfirstObsUnnested <- tar_read(firstObsUnnested_target)\nfirstObsUnnestedWB <- tar_read(firstObsUnnestedWB_target)"
  },
  {
    "objectID": "modelYOY.html#raw-data-plots",
    "href": "modelYOY.html#raw-data-plots",
    "title": "9  Young-of-year size model",
    "section": "9.4 Raw data plots",
    "text": "9.4 Raw data plots\n\n9.4.1 Frequency plots by species and river\n\n\n9.4.2 Brook Trout, West brook\n\n\nCode\n  #cd1 <- cdWB_electro %>% filter(ageInSamples == 1, species != 'ats')\n\n  plotSppRiv = function(s, r) { \n    ggplot(firstObs %>% filter(species == s, river == r), aes(observedLength, color = is.na(tag))) +\n      geom_freqpoly() +\n      geom_vline(xintercept = 60) +\n      ggtitle(paste(s, r, sep = ', ')) +\n      xlim(c(30,125)) +\n      facet_wrap(~ year, scales = \"free_y\")\n  }\n  \n  species = 'bkt'\n  riverOrdered = \"west brook\"\n\n  plotSppRiv(species, riverOrdered)\n\n\n\n\n\n\n\n9.4.3 Brook Trout, wb jimmy\n\n\n\n\n\n\n\n9.4.4 Brook Trout, wb mitchell\n\n\n\n\n\n\n\n9.4.5 Brook Trout, wb obear\n\n\n\n\n\n\n\n9.4.6 Brown Trout, West brook\n\n\n\n\n\n\n\n9.4.7 Brown Trout, wb jimmy\n\n\n\n\n\n\n\n9.4.8 Brown Trout, wb mitchell\n\n\n\n\n\n\n\n9.4.9 Brown Trout, wb obear - there are no Brown trout in O’Bear\n\n\n9.4.10 Trout, in the WB mainstem only\n\n\nCode\n  ggplot(firstObs %>% filter(species != \"ats\"), aes(observedLength)) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60, color = 'orange') +\n    facet_grid(species ~ year)\n\n\n\n\n\nCode\n  ggplot(firstObs %>% filter(species != \"ats\"), aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60, color = 'orange') +\n    facet_grid(species ~ year)\n\n\n\n\n\n\n\n9.4.11 Why are there untagged fish bigger than 60mm?\nCheck 2002/bkt/WB, as an example Answer: because they are outside the study area (area = ‘above’ or ‘below’) or were tagging mortalities\n\n\nCode\n  firstObs2002BKT <- firstObs %>% filter(year == 2002, species == \"bkt\")\n  table(is.na(firstObs2002BKT$tag))\n\n\n\nFALSE  TRUE \n  295   253 \n\n\nCode\n  ggplot(firstObs2002BKT, aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60)\n\n\n\n\n\nCode\n  # looks like untagged area=inside fish wee morts, the rest were above or below\n  ggplot(firstObs2002BKT, aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60) +\n    facet_grid(~area)\n\n\n\n\n\nCode\n  # check 2003\n  ggplot(firstObs %>% filter(year == 2003, species == \"bkt\"), aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60) +\n    facet_grid(~area)\n\n\n\n\n\nCode\n  # same story as 2002"
  },
  {
    "objectID": "modelYOY.html#models-based-on-yearly-means",
    "href": "modelYOY.html#models-based-on-yearly-means",
    "title": "9  Young-of-year size model",
    "section": "9.5 Models based on yearly means",
    "text": "9.5 Models based on yearly means\nFilter firstObsUnnestedWB for bkt, bnt and min/maxYear\n\n\nCode\nd_WB_BKT_BNT <- firstObsUnnestedWB %>% filter(species != \"ats\", year %in% minYear:maxYear) %>%\n  mutate(species01 = ifelse(species == \"bkt\", 1, 0))\n\nhist(d_WB_BKT_BNT$detectionDate, breaks = 250)\n\n\n\n\n\nCode\nd_BKT_BNT <- firstObsUnnested %>% filter(species != \"ats\", year %in% minYear:maxYear) %>%\n  mutate(species01 = ifelse(species == \"bkt\", 1, 0))\n\n\nMean model functions\n\n\nCode\ngetMeansData <- function(d, t, f) {\n  means <- d %>% \n    group_by(species, year) %>% \n    summarize(meanLength = mean(observedLength, na.rm = TRUE), \n              meanEmerge_detect_sumTScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanEmerge_detect_sumFScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanTTime_sumTScaled = mean(get(t), na.rm = TRUE),\n              meanFTime_sumFScaled = mean(get(f), na.rm = TRUE),\n              meanYdayScaled = mean(ydayScaled, na.rm = TRUE),\n              meanCount_Scaled = mean(count_Scaled, na.rm = TRUE)\n              )\n  return(means)\n}\n\ngetMeansDataByRiver <- function(d, t, f) {\n  means <- d %>% \n    group_by(species, year, river) %>% \n    summarize(meanLength = mean(observedLength, na.rm = TRUE), \n              meanEmerge_detect_sumTScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanEmerge_detect_sumFScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanTTime_sumTScaled = mean(get(t), na.rm = TRUE),\n              meanFTime_sumFScaled = mean(get(f), na.rm = TRUE),\n              meanYdayScaled = mean(ydayScaled, na.rm = TRUE),\n              meanCount_Scaled = mean(count_Scaled, na.rm = TRUE)\n              )\n  return(means)\n}\n\nplotMeans <- function(means){\n  out <- list()\n  out[[1]] <- ggplot(means, aes(meanTTime_sumTScaled, meanLength, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  \n  out[[2]] <- ggplot(means, aes(meanFTime_sumFScaled, meanLength, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  \n  out[[3]] <- ggplot(means, aes(meanTTime_sumTScaled, meanFTime_sumFScaled, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  return(out)\n}\n\nrunMeanModels <- function(means) {\n  modLMMeans1 <- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), data = means)\n  modLMMeans2 <- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled)^2, data = means)\n  modLMMeans3 <- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled)^3, data = means)\n  return(list(modLMMeans1, modLMMeans2, modLMMeans3))\n}\n\n\nMean lengths by river. This is information only. Using the WB data only shown here and in the next graph for the models.\n\n\n\n\n\nMean lengths for the mean length model.\n\n\n\n\n\nGraphs for variables that do not depend on number of months\n\n\n\n\n\n\n\n\n\n9.5.0.1 Models with flow and temperature from previous one month\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod1[[2]] 17 176.2075\nmod1[[3]] 27 181.7035\nmod1[[1]]  7 181.8187\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.2779 -1.9839 -0.8754  1.0981 10.5908 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           72.4359     1.0722  67.558  < 2e-16 ***\nfactor(species)bnt     0.6550     1.3128   0.499 0.622039    \nmeanFTime_sumFScaled   1.6769     0.3849   4.356 0.000184 ***\nmeanTTime_sumTScaled -10.3842     2.3734  -4.375 0.000175 ***\nmeanYdayScaled        -3.4856     1.7314  -2.013 0.054554 .  \nmeanCount_Scaled      -2.5187     0.7068  -3.564 0.001443 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.695 on 26 degrees of freedom\nMultiple R-squared:  0.6966,    Adjusted R-squared:  0.6383 \nF-statistic: 11.94 on 5 and 26 DF,  p-value: 4.544e-06\n\n\nRelative importance for main effects model\n\n\n     factor(species) meanFTime_sumFScaled meanTTime_sumTScaled \n          0.00395522           0.24940595           0.19990058 \n      meanYdayScaled     meanCount_Scaled \n          0.06280977           0.18053989 \n\n\n\n\n9.5.0.2 Models with flow and temperature from previous three months\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod3[[3]] 27 177.0683\nmod3[[2]] 17 181.7547\nmod3[[1]]  7 187.3979\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-6.3569 -2.8523  0.3445  1.8018  9.2951 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           73.4882     1.8809  39.070  < 2e-16 ***\nfactor(species)bnt     0.8334     1.4312   0.582 0.565351    \nmeanFTime_sumFScaled   2.2450     0.5866   3.827 0.000732 ***\nmeanTTime_sumTScaled  -8.8499     3.6769  -2.407 0.023489 *  \nmeanYdayScaled         0.7120     1.4287   0.498 0.622411    \nmeanCount_Scaled      -3.1604     0.7937  -3.982 0.000490 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.032 on 26 degrees of freedom\nMultiple R-squared:  0.6388,    Adjusted R-squared:  0.5694 \nF-statistic: 9.197 on 5 and 26 DF,  p-value: 3.902e-05\n\n\nRelative importance for main effects model\n\n\n     factor(species) meanFTime_sumFScaled meanTTime_sumTScaled \n         0.004325792          0.281631981          0.060776249 \n      meanYdayScaled     meanCount_Scaled \n         0.066333713          0.225756051 \n\n\n\n\n9.5.0.3 Models with flow and temperature from previous five months\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod5[[3]] 27 167.4034\nmod5[[1]]  7 193.2144\nmod5[[2]] 17 208.3847\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.9186 -3.3732  0.3856  2.4470 11.8564 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           71.1144     1.9342  36.767  < 2e-16 ***\nfactor(species)bnt     0.8911     1.5671   0.569  0.57450    \nmeanFTime_sumFScaled   2.6934     0.8705   3.094  0.00468 ** \nmeanTTime_sumTScaled  -3.5748     2.9746  -1.202  0.24029    \nmeanYdayScaled         3.2403     1.5506   2.090  0.04657 *  \nmeanCount_Scaled      -2.8957     0.8613  -3.362  0.00240 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.415 on 26 degrees of freedom\nMultiple R-squared:  0.5668,    Adjusted R-squared:  0.4835 \nF-statistic: 6.805 on 5 and 26 DF,  p-value: 0.0003537\n\n\nRelative importance for main effects model\n\n\n     factor(species) meanFTime_sumFScaled meanTTime_sumTScaled \n         0.004330339          0.226812955          0.017322018 \n      meanYdayScaled     meanCount_Scaled \n         0.107186866          0.211177826 \n\n\nr-squared values and AICs for 1st, 2nd (2-way interactions) and 3rd (3-way interactions) order models\n\n\n\n\n \n  \n    Order \n    r2 \n    numMonths \n  \n \n\n  \n    1 \n    0.697 \n    1 \n  \n  \n    2 \n    0.864 \n    1 \n  \n  \n    3 \n    0.913 \n    1 \n  \n\n\n\n\n\n\n\n \n  \n    Order \n    r2 \n    numMonths \n  \n \n\n  \n    1 \n    0.639 \n    3 \n  \n  \n    2 \n    0.838 \n    3 \n  \n  \n    3 \n    0.925 \n    3 \n  \n\n\n\n\n\n\n\n \n  \n    Order \n    r2 \n    numMonths \n  \n \n\n  \n    1 \n    0.567 \n    5 \n  \n  \n    2 \n    0.628 \n    5 \n  \n  \n    3 \n    0.945 \n    5 \n  \n\n\n\n\n\n\n\n \n  \n      \n    df \n    AIC \n    numMonths \n  \n \n\n  \n    mod1[[2]] \n    17 \n    176.207 \n    1 \n  \n  \n    mod1[[3]] \n    27 \n    181.703 \n    1 \n  \n  \n    mod1[[1]] \n    7 \n    181.819 \n    1 \n  \n\n\n\n\n\n\n\n \n  \n      \n    df \n    AIC \n    numMonths \n  \n \n\n  \n    mod3[[3]] \n    27 \n    177.068 \n    3 \n  \n  \n    mod3[[2]] \n    17 \n    181.755 \n    3 \n  \n  \n    mod3[[1]] \n    7 \n    187.398 \n    3 \n  \n\n\n\n\n\n\n\n \n  \n      \n    df \n    AIC \n    numMonths \n  \n \n\n  \n    mod5[[3]] \n    27 \n    167.403 \n    5 \n  \n  \n    mod5[[1]] \n    7 \n    193.214 \n    5 \n  \n  \n    mod5[[2]] \n    17 \n    208.385 \n    5 \n  \n\n\n\n\n\nRelative importance of main effects models (repeat of above, but all in one place here)\n\n\n\n\n \n  \n    var \n    relImp \n    numMonths \n  \n \n\n  \n    factor(species) \n    0.004 \n    1 \n  \n  \n    meanFTime_sumFScaled \n    0.249 \n    1 \n  \n  \n    meanTTime_sumTScaled \n    0.200 \n    1 \n  \n  \n    meanYdayScaled \n    0.063 \n    1 \n  \n  \n    meanCount_Scaled \n    0.181 \n    1 \n  \n\n\n\n\n\n\n\n \n  \n    var \n    relImp \n    numMonths \n  \n \n\n  \n    factor(species) \n    0.004 \n    3 \n  \n  \n    meanFTime_sumFScaled \n    0.282 \n    3 \n  \n  \n    meanTTime_sumTScaled \n    0.061 \n    3 \n  \n  \n    meanYdayScaled \n    0.066 \n    3 \n  \n  \n    meanCount_Scaled \n    0.226 \n    3 \n  \n\n\n\n\n\n\n\n \n  \n    var \n    relImp \n    numMonths \n  \n \n\n  \n    factor(species) \n    0.004 \n    5 \n  \n  \n    meanFTime_sumFScaled \n    0.227 \n    5 \n  \n  \n    meanTTime_sumTScaled \n    0.017 \n    5 \n  \n  \n    meanYdayScaled \n    0.107 \n    5 \n  \n  \n    meanCount_Scaled \n    0.211 \n    5 \n  \n\n\n\n\n\n\n\n9.5.1 Models with extreme flow events (droughts)\nWe get negative cumulFlows because we have some negative flows from the flow extension model\n\n\nCode\n# put some of these calculations into envDataWB\nenvDataWBFlow = tar_read(envDataWBFlow_target)\n\nfirstObsYears <- firstObs %>%\n    filter(year %in% minYear:maxYear, \n           yday > 100, yday < 300)\n\nggplot(envDataWBFlow, aes(yday, flow)) +\n  geom_point(aes(yday, observedLength/20), size = 0.75, alpha = 0.2, color = 'lightblue', data = firstObsYears) +\n  geom_point(size = 0.5) +\n  scale_x_continuous(breaks = seq(0,300, 30)) +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulFlow / 10)) +\n  geom_point(aes(yday, observedLength / 20), size = 0.75, alpha = 0.2, color = 'lightblue', data = firstObsYears) +\n  geom_point(size = 0.5, color = 'darkgrey') +\n  geom_point(aes(yday, cumulTemp / 800), size = 0.5, color = \"orange\", data = envDataWBFlow) +\n  geom_point(aes(yday, flow), size = 0.5, data = envDataWBFlow) +\n  scale_x_continuous(breaks = seq(0, 300, 30)) +\n  #theme_publication() +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulFlow, color = (year))) +\n  geom_point() +\n  scale_x_continuous(breaks = seq(0, 300, 30)) \n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulTemp, color = (year))) +\n  geom_point() +\n  #geom_point(aes(yday, cumulTemp / 800, color = factor(year)), data = tmp) +\n  scale_x_continuous(breaks = seq(0, 300, 30))\n\n\n\n\n\nIs there a sampling section effect?\nNote: there are fish in sections > 50 for years 2002 and 2003, need to filter out early\n\n\nCode\nggplot(d_WB_BKT_BNT %>% filter( section <= 47), aes(factor(section), observedLength)) +\n  geom_boxplot() +\n  geom_smooth() +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(d_WB_BKT_BNT %>% filter( section <= 47), aes(factor(year), observedLength)) +\n  geom_boxplot() +\n  geom_smooth() +\n  facet_wrap(~section)"
  },
  {
    "objectID": "modelFlow.html",
    "href": "modelFlow.html",
    "title": "10  Flow model",
    "section": "",
    "text": "Code\ndataFlow <- tar_read(dataFlow_target)\ndFlow <- tar_read(dFlow_target)\ndFlowWide <- tar_read(dFlowWide_target)\n\n\n\n\nCode\ntibble(dataFlow)\n\n\n# A tibble: 582,388 × 9\n   Station_No Site_Name   DateTi…¹ GageH…² Disch…³ Water…⁴ AirPr…⁵ AirTe…⁶ X    \n        <int> <chr>       <chr>      <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <lgl>\n 1    1171000 Avery Brook 2/20/20…    4.17    5.37    32.0      NA      NA NA   \n 2    1171000 Avery Brook 2/20/20…    4.17    5.3     32.0      NA      NA NA   \n 3    1171000 Avery Brook 2/20/20…    4.16    5.17    32.0      NA      NA NA   \n 4    1171000 Avery Brook 2/20/20…    4.17    5.27    32.0      NA      NA NA   \n 5    1171000 Avery Brook 2/20/20…    4.17    5.3     32.0      NA      NA NA   \n 6    1171000 Avery Brook 2/20/20…    4.15    4.94    31.9      NA      NA NA   \n 7    1171000 Avery Brook 2/20/20…    4.13    4.56    31.9      NA      NA NA   \n 8    1171000 Avery Brook 2/20/20…    4.1     4.14    31.9      NA      NA NA   \n 9    1171000 Avery Brook 2/20/20…    4.08    3.84    31.9      NA      NA NA   \n10    1171000 Avery Brook 2/20/20…    4.09    4.02    31.9      NA      NA NA   \n# … with 582,378 more rows, and abbreviated variable names ¹​DateTime_EST,\n#   ²​GageHeight_Hobo_ft, ³​Discharge_Hobo_cfs, ⁴​WaterTemperature_HOBO_DegF,\n#   ⁵​AirPressure_PSI, ⁶​AirTemperature_HOBO_degF\n\n\nCode\ntable(dataFlow$Site_Name)\n\n\n\n         Avery Brook          Jimmy Brook       Mitchell Brook \n               56536                57849                56978 \n   Obear Brook Lower      Sanderson Brook         West Brook 0 \n               60392                55336                58548 \n    West Brook Lower West Brook Reservoir     West Brook Upper \n               61279                61059                57301 \n  West Whately Brook \n               57110 \n\n\nCode\n#check for real entries\ndFlow %>% filter(is.infinite(dischargeLog))\n\n\n [1] Station_No                 Site_Name                 \n [3] DateTime_EST               GageHeight_Hobo_ft        \n [5] Discharge_Hobo_cfs         WaterTemperature_HOBO_DegF\n [7] AirPressure_PSI            AirTemperature_HOBO_degF  \n [9] X                          date                      \n[11] site                       dischargeLog              \n<0 rows> (or 0-length row.names)\n\n\n\n\nCode\nggplot(dFlow, aes(date, dischargeLog, color = Site_Name)) +\n  geom_point(size = 0.02) +\n  facet_wrap(~Site_Name)\n\n\n\n\n\nCode\nggpairs(dFlowWide,\n          columns = 6:9,\n          mapping = ggplot2::aes(color = as.factor(year), alpha = 0.7),\n          #diag = list(continuous = myDens),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.1), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )\n\n\n\n\n\nCode\nggpairs(dFlowWide %>% filter(yday > 90, yday < 300),\n          columns = 6:9,\n          mapping = ggplot2::aes(color = as.factor(year)),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.1), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )\n\n\n\n\n\nCode\nggpairs(dFlowWide %>% filter(yday == 110),\n          columns = 8:11,\n          mapping = ggplot2::aes(color = as.factor(year)),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.2), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_OB.html",
    "href": "modelsCMR_ft_cohort_Flow_OB.html",
    "title": "11  Flow effects on survival (phi) models with cohort structure - O’Bear only",
    "section": "",
    "text": "Probability of survival (phi) model structure:\nlogit(phi[t,i]) <-\nbetaInt[ isYOY[i,t],season[t],cohort[i]] +\nbetaFlow[1,isYOY[i,t],season[t]] * flow[i,t] +\nbetaFlow[2,isYOY[i,t],season[t]] * temp[i,t] +\nbetaFlow[3,isYOY[i,t],season[t]] * temp[i,t] * flow[i,t]\nProbability of capture (p) model structure:\nlogit(p[t,i]) <- betaP[isYOY[i,t],season[t-1],cohort[i]]\nThe goal of this modelling exercise is to evaluate the effect of new tributary-specific stream flow estimates on survival of brook trout. Here, we compare survival within one tributary (O’Bear Brook) with flow input data as 1) single flow estimate for all locations (historical approach) and 2) hindcasted flows for each tributary based on new tributary-specific flows which are available since 2000.\nThe goal is to compare survival estimates with tributary-specific flow to estimates with common flow across locations.\nNote: a model without cohort structure is here modelsCMR_ft_Flow_OB.qmd but is not included because results are similar but without the cohort estimates.\nStructure options include [species, cohort, season, isYOY, flow, flow^2]\n\n\n\n\n11.0.1 Model with original flow data\nCohort-dependent estimates of phi and p with flow and temperature hierarchical effects\n\n11.0.1.1 Retrieve model results\nModel is run using targets in R/modelCMR_tt_ft_cohort_OB.R\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  out_flow <- tar_read(tt_modelOut_ft_cohort_OB_flow )\n\n  MCMCplot(object = out_flow$mcmc)\n\n\n\n\n\nCode\n  summary_flow <- MCMCsummary(object = out_flow$mcmc, round = 3) %>%\n    mutate(flowData = \"flow\") %>%\n    rownames_to_column(var = \"var\")\n  \n  #summary_flow %>% filter(grepl(\"betaIntYOYSeason\", var))\n  #summary_flow %>% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flow %>% filter(grepl(\"betaFlow\", var))\n  #summary_flow %>% filter(grepl(\"betaInt\", var))\n  \n  \n  priors <- runif(out_flow$runData$nIter * out_flow$runData$nChains, 0, 1)\n  MCMCtrace(object = out_flow$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaIntYOYSeason\", \"betaPhiYOYSeason\",\"betaPYOYSeason\"\n            #  \"betaIntTop\", \"betaPhiTop\",\"betaFlowTop\",\"betaPTop\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n    MCMCtrace(object = out_flow$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaIntYOY\", \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n11.0.2 Model with flow data hindcast for each rvier\nCohort-dependent estimates of phi and p with flowByRiver hierarchical effects\n\n11.0.2.1 Retrieve model results\nModel is run using targets in R/modelCMR_tt_ft_cohort_OB\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  out_flowByRiver <- tar_read(tt_modelOut_ft_cohort_OB_flowByRiver)\n\n  MCMCplot(object = out_flowByRiver$mcmc)\n\n\n\n\n\nCode\n  summary_flowByRiver <- MCMCsummary(object = out_flowByRiver$mcmc, round = 3) %>%\n    mutate(flowData = \"flowByRiver\") %>%\n    rownames_to_column(var = \"var\")\n  \n  #summary_flowByRiver %>% filter(grepl(\"betaIntYOYSeason\", var))\n  #summary_flowByRiver %>% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flowByRiver %>% filter(grepl(\"betaFlow\", var))\n  \n  \n  priors <- runif(out_flowByRiver$runData$nIter * out_flowByRiver$runData$nChains, 0, 1)\n  MCMCtrace(object = out_flowByRiver$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c( \"betaIntYOY\", \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\" ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n  # MCMCtrace(object = out_flowByRiver$mcmc,\n  #           #ISB = FALSE,\n  #           #exact = TRUE, \n  #           params = c(\"betaInt\"),\n  #           pdf = FALSE, \n  #           priors = priors)\n\n\n\n\n\n11.0.3 Compare parameter estimates of models with flow and flowByRiver\n\n\nCode\nboth <- bind_rows(summary_flow, summary_flowByRiver) %>%\n  rename(lo = '2.5%', hi = '97.5%')\n\nggplot(both %>% filter(grepl(\"betaFlowTop\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) \n\n\n\n\n\nCode\nggplot(both %>% filter(grepl(\"betaFlowYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %>% filter(grepl(\"betaIntYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %>% filter(grepl(\"betaIntYOYSeason\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %>% filter(grepl(\"betaInt\\\\[\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %>% filter(grepl(\"betaPYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\n# ggplot(both %>% filter(grepl(\"betaPOut\", var)), aes(color = flowData)) +\n#   geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n#   geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n11.0.4 Survival comparisons\n\n\nCode\ngetBetas <- function(d) {\n  #betaFlow\n  betaFlow <- d %>% \n    filter(grepl(\"betaInt\\\\[\", var)) %>%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %>% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3\n    ) %>%\n    select(-tmp)\n  \n  betaFlowYOY <- d %>% \n    filter(grepl(\"betaFlowYOY\", var)) %>%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %>% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n    ) %>%\n    select(-tmp)\n  \n  betaFlowTop <- d %>% \n    filter(grepl(\"betaFlowTop\", var)) %>%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %>% as.data.frame(),\n      param = tmp$V2\n    ) %>%\n    select(-tmp)\n  \n  \n}\n\ngetBetaIntOuts <- function(d, dataType = \"flow\") {\n  #betaFlow\n  betaInt <- d %>% \n    filter(grepl(\"betaIntOut\\\\[\", var)) %>%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %>% as.data.frame(),\n      isYOY = tmp$V1,\n      season = tmp$V2,\n      cohort = tmp$V3,\n      varName = \"betaInt\"\n    ) %>%\n    select(-tmp) %>%\n    filter(!(season == 2 & isYOY == 1))\n    \n  betaIntYOY <- d %>% \n    filter(grepl(\"betaIntYOYOut\\\\[\", var)) %>%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %>% as.data.frame(),\n      isYOY = tmp$V2,\n      varName = \"betaIntYOY\"\n    ) %>%\n    select(-tmp)\n  \n  betaIntYOYSeason <- d %>% \n    filter(grepl(\"betaIntYOYSeasonOut\\\\[\", var)) %>%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %>% as.data.frame(),\n      isYOY = tmp$V1,\n      season = tmp$V2,\n      varName = \"betaIntYOYSeason\"\n    ) %>%\n    select(-tmp) %>%\n    filter(!(season == 2 & isYOY == 1))\n\n  return(\n    bind_rows(betaInt, betaIntYOY, betaIntYOYSeason) %>%\n      mutate(cohort = as.numeric(cohort) + 2002 - 1)\n         )\n}\n\n\n\n11.0.4.1 Get betaIntOut estimates\n\n\nCode\nbetaIntFlow <- getBetaIntOuts(summary_flow, \"flow\")\nbetaIntFlowByRiver <- getBetaIntOuts(summary_flowByRiver, \"flowByRiver\")\n\nbetaInts <- bind_rows(betaIntFlow, betaIntFlowByRiver) %>%\n  rename(lo = '2.5%', hi = '97.5%', median = '50%')\n\n\n\n\nCode\n# Define the facet labeller function\nlabelsIntYOY <- c(\n  \"1\" = \"Growth year 1\",\n  \"2\" = \"Growth year 2\"\n)\n\nlabelsIntSeason <- c(\n  \"1\" = \"Spring\",\n  \"2\" = \"Summer\",\n  \"3\" = \"Autumn\",\n  \"4\" = \"Winter\"\n)\n\nglobal_labellerInt <- labeller(\n  isYOY = labelsIntYOY,\n  season = labelsIntSeason\n  #.default = label_both\n)\n\nggplot(betaInts %>% filter(varName == \"betaInt\"), aes(cohort, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(cohort, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_continuous(\"Cohort\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_grid(season~isYOY, labeller = global_labellerInt) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nglobal_labellerIntYOYSeason <- labeller(\n  isYOY = labelsIntYOY\n # season = labelsIntSeason\n  #.default = label_both\n)\n\nggplot(betaInts %>% filter(varName == \"betaIntYOYSeason\"), aes(season, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(season, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_discrete(\"Season\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_grid(~isYOY, labeller = global_labellerIntYOYSeason) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(betaInts %>% filter(varName == \"betaIntYOY\"), aes(isYOY, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(isYOY, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5))\n\n\n\n\n\n\n\n\n\n\n\n11.0.5 Flow effect predictions\n\n\nCode\ngetPredictions_FlowYOYSeasonCohort <- function(toSave, everyNIters = 10, flowStep = 0.5){\n  \n  mcmc <- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons,\n    cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] <- mcmc$chain1[[predictorsBetaInt[i, \"iter\"], \n                                                 paste0(\"betaInt[\", predictorsBetaInt[i, \"isYOY\"],\n                                                        \", \",       predictorsBetaInt[i, \"season\"],\n                                                        \", \",       predictorsBetaInt[i, \"cohort\"],\n                                                        \"]\")\n    ]]\n  }\n\n  # ## betaPhi\n  # predictorsBetaPhi <- expand.grid(\n  #   iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n  #   isYOY = 1:2,\n  #   season = 1:toSave$myConstants$nSeasons,\n  #   cohort = 1:toSave$myConstants$nCohorts\n  # )\n  # \n  # for(i in 1:nrow(predictorsBetaPhi)){\n  #   predictorsBetaPhi$betaPhi[i] <- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"], \n  #                                                paste0(\"betaPhi[\", predictorsBetaPhi[i, \"isYOY\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"season\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"cohort\"],\n  #                                                       \"]\")\n  #   ]]\n  # }\n  \n  ## betaFlow\n  predictorsBetaFlow <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  #  cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[1, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                      #     \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    predictorsBetaFlow$betaFlow2[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[2, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    \n    predictorsBetaFlow$betaFlow3[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[3, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n  }\n  \n\n  predictorsAll <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    cohort = 1:toSave$myConstants$nCohorts,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n  \n  preds <- predictorsAll %>%\n    left_join(predictorsBetaInt) %>%\n    left_join(predictorsBetaFlow) %>%\n #   left_join(predictorsBetaPhi) %>%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n  \n  return(preds)\n}\n\n\n\n\nCode\ngetPredictions_FlowYOYSeason <- function(toSave, everyNIters = 10, flowStep = 0.5){\n  \n  mcmc <- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n#    cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] <- mcmc$chain1[[predictorsBetaInt[i, \"iter\"], \n                                                 paste0(\"betaIntYOYSeason[\", predictorsBetaInt[i, \"isYOY\"],\n                                                        \", \",       predictorsBetaInt[i, \"season\"],\n                                                  #      \", \",       predictorsBetaInt[i, \"cohort\"],\n                                                        \"]\")\n    ]]\n  }\n\n#   ## betaPhi\n#   predictorsBetaPhi <- expand.grid(\n#     iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n#     isYOY = 1:2,\n#     season = 1:toSave$myConstants$nSeasons\n# #    cohort = 1:toSave$myConstants$nCohorts\n#   )\n#   \n#   for(i in 1:nrow(predictorsBetaPhi)){\n#     predictorsBetaPhi$betaPhi[i] <- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"], \n#                                                  paste0(\"betaPhiYOYSeason[\", predictorsBetaPhi[i, \"isYOY\"],\n#                                                         \", \",       predictorsBetaPhi[i, \"season\"],\n#                                                   #      \", \",       predictorsBetaPhi[i, \"cohort\"],\n#                                                         \"]\")\n#     ]]\n#   }\n  \n  ## betaFlow\n  predictorsBetaFlow <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  #  cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[1, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                      #     \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    predictorsBetaFlow$betaFlow2[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[2, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    \n    predictorsBetaFlow$betaFlow3[i] <- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[3, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n  }\n  \n\n  predictorsAll <- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n   # cohort = 1:toSave$myConstants$nCohorts,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n  \n  preds <- predictorsAll %>%\n    left_join(predictorsBetaInt) %>%\n    left_join(predictorsBetaFlow) %>%\n  #  left_join(predictorsBetaPhi) %>%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n  \n  return(preds)\n}\n\n\n\n\nCode\npredFlowYOYSeason <- getPredictions_FlowYOYSeason(out_flow, everyNIters = 5) %>%\n    mutate(flowData = \"flow\") \n\npredFlowByRiverYOYSeason <- getPredictions_FlowYOYSeason(out_flowByRiver, everyNIters = 5) %>%\n    mutate(flowData = \"flowByRiver\")\n\npredBoth <- bind_rows(predFlowYOYSeason, predFlowByRiverYOYSeason)\n\n\n\n11.0.5.1 Graph effect flow predictions\nPredictions based on flow from the flow extension curve - original approach\n\n\nCode\ncolors <- c(\"blue\", \"green\", \"red\")\n\nggplot(predFlowYOYSeason %>% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nPredictions based on flow from flowByRiver\n\n\nCode\nggplot(predFlowByRiverYOYSeason %>% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nSimilar format to to the 2015 paper\n\n\nCode\ncolors <- c(\"red\", \"green\", \"blue\")\n\nggplot(predFlowYOYSeason %>% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\n\n\n\n\n\n\n11.0.6 Flow effect predictions by cohort\n\n\nCode\npredFlowYOYSeasonCohort <- getPredictions_FlowYOYSeasonCohort(out_flow, everyNIters = 5) %>%\n    mutate(flowData = \"flow\") \n\npredFlowByRiverYOYSeasonCohort <- getPredictions_FlowYOYSeasonCohort(out_flowByRiver, everyNIters = 5) %>%\n    mutate(flowData = \"flowByRiver\")\n\npredBothCohort <- bind_rows(predFlowYOYSeasonCohort, predFlowByRiverYOYSeasonCohort)\n\n\n\n11.0.6.1 Graph flow predictions\nPredictions based on flow from the flow extension curve - original approach\n\n\nCode\ncolors <- c(\"blue\", \"green\", \"red\")\n\nggplot(predFlowYOYSeasonCohort %>% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY + cohort)\n\n\n\n\n\nPredictions based on flow from flowByRiver\n\n\nCode\nggplot(predFlowByRiverYOYSeasonCohort %>% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY + cohort)\n\n\n\n\n\nSimilar format to to the 2015 paper\n\n\nCode\nggplot(predFlowYOYSeasonCohort %>% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\n\n\n\n\n\n\n11.0.7 Relate flow/temp to survival\nGet flow average flow and temp data for each occasion (cohort/season)\nFlow data pathway -\n| Raw data in envDataWB_target from getDataEnv_targets.R\n| Data added to cdWB_CMR0_target using addEnvironmental() in getDataCMR_targets.R\n| Data scaled using scaleEnvData() in getDataCMR_targets.R\n| meanFlowScaled\n| meanFlowByRiverScaled\n| meanTemperatureScaled\n| cdWB_CMR0_target feeds into getEH_AIS() to create eh_WB_2002_2014_target\n| eh_WB_2002_2014_target\\(data contains filtered data that created the components of eh_WB_2002_2014_target that are used for CMR analysis. We can use `eh_WB_2002_2014_target`\\)data to get summary flow and temp data\n\n\nCode\neh_OB_2002_2014_target = tar_read(eh_OB_2002_2014_target)\n\nmFlowTemp <- eh_OB_2002_2014_target$data %>%\n  group_by(cohort, season) %>%\n  summarize(mFlow = mean(meanFlowScaled),\n            mFlowByRiver = mean(meanFlowByRiverScaled),\n            mTemp = mean(meanTemperatureScaled),\n            n = n()) %>%\n  mutate(season = as.character(season))\n\nbetaIntsFT <- betaInts %>% \n  left_join(mFlowTemp)\n\n\nHow do the flow metrics (river, byRiver) compare to each other?\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlow, mFlowByRiver, color = as.factor(cohort))) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nHow do flow/flowByRiver compare to temperature?\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlow, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlowByRiver, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nHow do the flow metrics (river, byRiver) compare to survival estimates?\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlow, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mTemp, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nHow do mean survival estimates compare to flow and flowByriver on the same graph?\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlow, mean), se = FALSE, color = \"#d46313\", method = lm) +\n  geom_point(aes(mFlow, mean), color = \"#d46313\") +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %>% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\") +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlow, mean), se = FALSE, color = \"#d46313\") +\n  geom_point(aes(mFlow, mean), color = \"#d46313\") +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY)"
  },
  {
    "objectID": "modelsCMR_Flow_4Rivers.html",
    "href": "modelsCMR_Flow_4Rivers.html",
    "title": "12  Flow effects on survival (phi) models - 4 rivers",
    "section": "",
    "text": "The goal of this modelling exercise is to evaluate the effect of new tributary-specific stream flow estimates on survival of brook trout and brown trout. We will compare survival across the WB and tributaries with flow input data as 1) single flow estimate for all locations (historical approach) and 2) hindcasted flows for each tributary based on new tributary-specific flows which are available since 2000.\nThe goal is to find the best structure for the survival model, then compare survival estimates with tributary-specific flow to estimates with common flow across locations.\nStructure options include [species, cohort, season, isYOY, flow, flow^2]\n\n\n\n\n12.0.0.1 Load pre-run model\nThis model is too big (88 Gb) and needs to be run on workbench\nOutput files are here: “C:- DOI-book4rivers”\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n\n  toSave <-  tar_read(toSave_ttt_WB_target)\n\n  MCMCplot(object = toSave$mcmc, params = \"betaPhiOut\")\n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = \"betaPhiRiverOut\")# \n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = c(\"betaPhiRiverCohortOut\"))\n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = \"betaPOut\")\n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = \"betaPRiverOut\")# \n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = c(\"betaPRiverCohortOut\"))\n\n\n\n\n\nCode\n  MCMCplot(object = toSave$mcmc, params = c(\"psi\"))\n\n\n\n\n\nCode\n   priors <- rnorm(toSave$nIter * toSave$nChains, 0, 1/sqrt(.1))\n  MCMCtrace(object = toSave$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"betaPhiRiverOut\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\nCode\n  priors <- runif(toSave$nIter * toSave$nChains, 0, 1)\n  MCMCtrace(object = toSave$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"betaPhiRiverCohortOut\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n   priors <- runif(toSave$nIter * toSave$nChains, 0, 1)\n   MCMCtrace(object = toSave$mcmc,\n             ISB = FALSE,\n             exact = TRUE,\n             params = c(\"psi[1, 1, 4, 4]\", \"psi[1, 2, 4, 4]\", \"psi[1, 3, 4, 4]\", \"psi[1, 4, 4, 4]\",\n                        \"psi[2, 1, 4, 4]\", \"psi[2, 2, 4, 4]\", \"psi[2, 3, 4, 4]\", \"psi[2, 4, 4, 4]\"),\n             pdf = FALSE,\n             priors = priors)\n\n\n\n\n\n\n\n\n\n\n\nCode from westBrook-book Needs to be run on workBench\n\n\nCode\n# copy code below into workbench for model runs\n# Put zipped output into ./models/cmrFlow4rivers/runsOut/fromWorkbench/rstudio-export.zip and then unzip\n\nif(!useWorkbenchRuns) {\n  \n  # Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/5_demo.html\n  if (rerunSurivalModels) {\n    \n    y <- eh$eh * eh$riverN\n    (nCohorts <- nrow(unique(eh$cohorts)))\n    (nSeasons <- nrow(unique(eh$seasons)))\n    (nRivers <- length(unique(eh$data$riverN)))# rivers 1:4\n    seasonArray <- c(3,4,1,2,3,4,1,2,3,4,1,2)\n               \n  \n    first <- eh$first #apply(y, 1, function(x) min(which(x !=0)))\n    last <- eh$last\n    cohort = ((eh$cohorts) - min(eh$cohorts) + 1)$cohort #can't be a data frame or tibble\n    \n    zinits <- y + 1 # non-detection -> alive\n    zinits[zinits == 2] <- 1 # dead -> alive\n    zInitsNA <- ifelse(is.na(eh$flow), NA, 1)\n    \n    # Proportion of fish in each river on the first observation\n    y1 <- y[,1]\n    deltaProps <- table(y1[y1>0]) / length(y1[y1>0])\n    \n    # alpha for the dirichlet prior\n    alpha <- c(1,1,1,1)\n    \n    # fill in entries for dirichlet priors where a[r,,t,c] sums to 1 for any r,t,c combo\n    getDirchPriors <- function(nRivers,myConstants, nCohorts, alpha){\n      a = array(rep(0, nRivers * nRivers * (myConstants$T - 1) * nCohorts) , c(nRivers, nRivers, (myConstants$T - 1), nCohorts ))\n      for(r in 1:nRivers){\n        for(t in 1:(myConstants$T - 1)){\n          for (c in 1:nCohorts){\n            dirch <- rdirch(1, alpha)\n            for (r2 in 1:nRivers){\n              a[r,r2,t,c] <- dirch[r2]\n            }\n          }\n        }\n      }\n      return(a)\n    }\n    \n    # Priors for psi where more likely to stay than move\n    alphaR <- list()\n    alphaR[[1]] <- alphaR1 <- c(0.7, 0.1, 0.1, 0.1)\n    alphaR[[2]] <- alphaR2 <- c(0.1, 0.7, 0.1, 0.1)\n    alphaR[[3]] <- alphaR3 <- c(0.1, 0.1, 0.7, 0.1)\n    alphaR[[4]] <- alphaR4 <- c(0.1, 0.1, 0.1, 0.7)\n    \n    getDirchPriorsR <- function(nRivers,myConstants, nCohorts, alpha){\n      a = array(rep(0, nRivers * nRivers * (myConstants$T - 1) * nCohorts) , c(nRivers, nRivers, (myConstants$T - 1), nCohorts ))\n      for(r in 1:nRivers){\n        for(t in 1:(myConstants$T - 1)){\n          for (c in 1:nCohorts){\n            dirch <- rdirch(1, alphaR[[r]])\n            for (r2 in 1:nRivers){\n              a[r,r2,t,c] <- dirch[r2]\n            }\n          }\n        }\n      }\n      return(a)\n    }\n      \n    #psi = getDirchPriorsR(nRivers, myConstants, nCohorts, alpha)\n    \n    #  For 3 states, we are using 4\n    # -------------------------------------------------\n    # Parameters for 3 sites (A, B, C):\n    # phiA: survival probability site A\n    # phiB: survival probability site B\n    # phiC: survival probability site B\n    # psiAA: movement probability from site A to site A (reference)\n    # psiAB = psiA[1]: movement probability from site A to site B\n    # psiAC = psiA[2]: movement probability from site A to site C \n    # psiBA = psiB[1]: movement probability from site B to site A\n    # psiBB: movement probability from site B to site B (reference)\n    # psiBC = psiB[2]: movement probability from site B to site C\n    # psiCA = psiC[1]: movement probability from site C to site A\n    # psiCB = psiC[2]: movement probability from site C to site B\n    # psiCC: movement probability from site C to site C (reference)\n    # pA: recapture probability site A\n    # pB: recapture probability site B\n    # pC: recapture probability site C\n    # -------------------------------------------------\n    # States (z):\n    # 1 alive at A\n    # 2 alive at B\n    # 3 alive at C\n    # 4 alive at D\n    # 5 dead\n    # Observations (y):  \n    # 1 not seen\n    # 2 seen at A \n    # 3 seen at B\n    # 4 seen at C\n    # 5 seen at D\n    # river names: c(\"west brook\" = 1, \"wb jimmy\" = 2, \"wb mitchell\" = 3, \"wb obear\" = 4)\n    # -------------------------------------------------\n    \n    ## model code using DHMMo distribution\n    hmm.phiT_pT_psiT_DHMM_dirch <- nimbleCode({\n        # Initial distribution among rivers\n        delta[1] <- deltaProps[1]                  # Pr(alive t = 1 and in river 1) = 0.4\n        delta[2] <- deltaProps[2]\n        delta[3] <- deltaProps[3]\n        delta[4] <- deltaProps[4]\n        delta[5] <- 0                    # Pr(dead t = 1) = 0\n    \n        for (r in 1:nRivers){\n            betaPhiRiver[r] ~ dnorm(0,sd = 1)\n            betaPRiver[r] ~ dnorm(0,sd = 1)\n            \n            betaPhiRiverOut[r] <- ilogit(betaPhiRiver[r])\n            betaPRiverOut[r] <- ilogit(betaPRiver[r])\n            \n            for (c in 1:nCohorts){\n                betaPhiRiverCohort[r,c] ~ dnorm(betaPhiRiver[r], sd = 1)\n                betaPRiverCohort[r,c] ~ dnorm(betaPRiver[r], sd = 1)\n   \n                betaPhiRiverCohortOut[r,c] <- ilogit(betaPhiRiverCohort[r,c])\n                betaPRiverCohortOut[r,c] <- ilogit(betaPRiverCohort[r,c])\n                for (t in 1:(T-1)){\n                    betaPhi[r,t,c] ~ dnorm(betaPhiRiverCohort[r,c], sd = 1)\n                    betaP[r,t,c] ~ dnorm(betaPRiverCohort[r,c], sd = 1)\n                    \n                    betaPhiOut[r,t,c] <- ilogit(betaPhi[r,t,c])\n                    betaPOut[r,t,c] <- ilogit(betaP[r,t,c])\n                    \n                    # move from river 'r' to one of river 1:nRivers\n                    # Nice description of effect of 'alpha' on probabilities:\n                    # https://stats.stackexchange.com/questions/244917/what-exactly-is-the-alpha-in-the-dirichlet-distribution\n                    #psi[r,1:nRivers,t,c] ~ ddirch(alpha[[r]][1:nRivers])\n                }\n            }\n        }\n        \n        for (t in 1:(T-1)){ # loop over time\n          for (c in 1:nCohorts){\n            psi[1,1:nRivers,t,c] ~ ddirch(alphaR1[1:nRivers])\n            psi[2,1:nRivers,t,c] ~ ddirch(alphaR2[1:nRivers])\n            psi[3,1:nRivers,t,c] ~ ddirch(alphaR3[1:nRivers])\n            psi[4,1:nRivers,t,c] ~ ddirch(alphaR4[1:nRivers])\n          }\n        }\n    \n        for (t in 1:(T-1)){ # loop over time\n          for (c in 1:nCohorts){\n  \n            gamma[1,1,t,c] <- ilogit(betaPhi[1,t,c]) * psi[1,1,t,c]\n            gamma[1,2,t,c] <- ilogit(betaPhi[1,t,c]) * psi[1,2,t,c]\n            gamma[1,3,t,c] <- ilogit(betaPhi[1,t,c]) * psi[1,3,t,c]\n            gamma[1,4,t,c] <- ilogit(betaPhi[1,t,c]) * psi[1,4,t,c]\n            gamma[1,5,t,c] <- 1 - ilogit(betaPhi[1,t,c])\n            gamma[2,1,t,c] <- ilogit(betaPhi[2,t,c]) * psi[2,1,t,c]\n            gamma[2,2,t,c] <- ilogit(betaPhi[2,t,c]) * psi[2,2,t,c]\n            gamma[2,3,t,c] <- ilogit(betaPhi[2,t,c]) * psi[2,3,t,c]\n            gamma[2,4,t,c] <- ilogit(betaPhi[2,t,c]) * psi[2,4,t,c]\n            gamma[2,5,t,c] <- 1 - ilogit(betaPhi[2,t,c])\n            gamma[3,1,t,c] <- ilogit(betaPhi[3,t,c]) * psi[3,1,t,c]\n            gamma[3,2,t,c] <- ilogit(betaPhi[3,t,c]) * psi[3,2,t,c]\n            gamma[3,3,t,c] <- ilogit(betaPhi[3,t,c]) * psi[3,3,t,c]\n            gamma[3,4,t,c] <- ilogit(betaPhi[3,t,c]) * psi[3,4,t,c]\n            gamma[3,5,t,c] <- 1 - ilogit(betaPhi[3,t,c])\n            gamma[4,1,t,c] <- ilogit(betaPhi[4,t,c]) * psi[4,1,t,c]\n            gamma[4,2,t,c] <- ilogit(betaPhi[4,t,c]) * psi[4,2,t,c]\n            gamma[4,3,t,c] <- ilogit(betaPhi[4,t,c]) * psi[4,3,t,c]\n            gamma[4,4,t,c] <- ilogit(betaPhi[4,t,c]) * psi[4,4,t,c]\n            gamma[4,5,t,c] <- 1 - ilogit(betaPhi[4,t,c])\n            gamma[5,1,t,c] <- 0\n            gamma[5,2,t,c] <- 0\n            gamma[5,3,t,c] <- 0\n            gamma[5,4,t,c] <- 0\n            gamma[5,5,t,c] <- 1\n          }\n        }\n         \n        # gamma for the last occasion  \n        for (c in 1:nCohorts){\n            for (a in 1:(nRivers+1)){\n                for (b in 1:nRivers){\n                    gamma[a,b,T,c] <- 0\n                }  \n                gamma[a,5,T,c] <- 1\n            }\n        }\n         \n         \n        for (i in 1:N){ # loop over individuals\n            # omega for first obs      \n            omega[1,1,first[i],i] <- 0          # Pr(alive A t -> non-detected t)\n            omega[1,2,first[i],i] <- 1          # Pr(alive A t -> detected A t)\n            omega[1,3,first[i],i] <- 0          # Pr(alive A t -> detected B t)\n            omega[1,4,first[i],i] <- 0          # Pr(alive A t -> detected C t)\n            omega[1,5,first[i],i] <- 0          # Pr(alive A t -> detected D t)\n            omega[2,1,first[i],i] <- 0          # Pr(alive B t -> non-detected t)\n            omega[2,2,first[i],i] <- 0          # Pr(alive B t -> detected A t)\n            omega[2,3,first[i],i] <- 1          # Pr(alive B t -> detected B t)\n            omega[2,4,first[i],i] <- 0          # Pr(alive B t -> detected C t)\n            omega[2,5,first[i],i] <- 0          # Pr(alive B t -> detected C t)\n            omega[3,1,first[i],i] <- 0          # Pr(alive C t -> non-detected t)\n            omega[3,2,first[i],i] <- 0          # Pr(alive C t -> detected A t)\n            omega[3,3,first[i],i] <- 0          # Pr(alive C t -> detected B t)\n            omega[3,4,first[i],i] <- 1          # Pr(alive C t -> detected C t)\n            omega[3,5,first[i],i] <- 0          # Pr(alive C t -> detected C t)\n            omega[4,1,first[i],i] <- 0          # Pr(dead t -> non-detected t)\n            omega[4,2,first[i],i] <- 0          # Pr(dead t -> detected A t)\n            omega[4,3,first[i],i] <- 0          # Pr(dead t -> detected B t)\n            omega[4,4,first[i],i] <- 0          # Pr(dead t -> detected C t)\n            omega[4,5,first[i],i] <- 1          # Pr(dead t -> detected C t)\n            omega[5,1,first[i],i] <- 1          # Pr(dead t -> non-detected t)\n            omega[5,2,first[i],i] <- 0          # Pr(dead t -> detected A t)\n            omega[5,3,first[i],i] <- 0          # Pr(dead t -> detected B t)\n            omega[5,4,first[i],i] <- 0          # Pr(dead t -> detected C t)\n            omega[5,5,first[i],i] <- 0          # Pr(dead t -> detected D t)\n         \n           \n            ## DT changes:\n            ## time t > first[i]:\n            for(t in (first[i]+1):last[i]) {\n                logit(pA[t,i]) <- betaP[1,t-1,cohort[i]]\n                logit(pB[t,i]) <- betaP[2,t-1,cohort[i]]\n                logit(pC[t,i]) <- betaP[3,t-1,cohort[i]]\n                logit(pD[t,i]) <- betaP[4,t-1,cohort[i]]\n               \n                # probabilities of y(t) given z(t)\n                # omega[z, y, t, i]\n                \n                # z=1 = alive in River 1, z=2 = alive in River 2...z=5 = dead\n                # y=1 = unobserved, y=2 = observed in River 1, y=3 = observed in River 2, etc\n                \n                omega[1,1,t,i] <- 1 - pA[t,i]     # Pr(alive A t -> non-detected t)\n                omega[1,2,t,i] <- pA[t,i]         # Pr(alive A t -> detected A t)\n                omega[1,3,t,i] <- 0               # Pr(alive A t -> detected B t)\n                omega[1,4,t,i] <- 0               # Pr(alive A t -> detected C t)\n                omega[1,5,t,i] <- 0               # Pr(alive A t -> detected D t)\n                omega[2,1,t,i] <- 1 - pB[t,i]     # Pr(alive B t -> non-detected t)\n                omega[2,2,t,i] <- 0               # Pr(alive B t -> detected A t)\n                omega[2,3,t,i] <- pB[t,i]         # Pr(alive B t -> detected B t)\n                omega[2,4,t,i] <- 0               # Pr(alive B t -> detected C t)\n                omega[2,5,t,i] <- 0               # Pr(alive B t -> detected C t)\n                omega[3,1,t,i] <- 1 - pC[t,i]     # Pr(alive C t -> non-detected t)\n                omega[3,2,t,i] <- 0               # Pr(alive C t -> detected A t)\n                omega[3,3,t,i] <- 0               # Pr(alive C t -> detected B t)\n                omega[3,4,t,i] <- pC[t,i]         # Pr(alive C t -> detected C t)\n                omega[3,5,t,i] <- 0               # Pr(alive C t -> detected C t)\n                omega[4,1,t,i] <- 1 - pD[t,i]     # Pr(alive D t -> non-detected t))\n                omega[4,2,t,i] <- 0               # Pr(dead D t -> detected A t)\n                omega[4,3,t,i] <- 0               # Pr(dead D t -> detected B t)\n                omega[4,4,t,i] <- 0               # Pr(dead D t -> detected C t)\n                omega[4,5,t,i] <- pD[t,i]         # Pr(alive D t -> detected D t)\n                omega[5,1,t,i] <- 1               # Pr(dead t -> non-detected t)\n                omega[5,2,t,i] <- 0               # Pr(dead t -> detected A t)\n                omega[5,3,t,i] <- 0               # Pr(dead t -> detected B t)\n                omega[5,4,t,i] <- 0               # Pr(dead t -> detected C t)\n                omega[5,5,t,i] <- 0               # Pr(dead t -> detected D t)\n            }\n           \n        } # i loop\n    \n        for (i in 1:N){\n            y[i,first[i]:last[i]] ~ dDHMMo(init = delta[1:5],\n                                           probTrans = gamma[1:5, 1:5, first[i]:last[i], cohort[i]],\n                                           probObs =   omega[1:5, 1:5, first[i]:last[i], i],\n                                           len = length[i],\n                                           checkRowSums = 1)\n        }\n    \n    })\n    \n    ##\n    myConstants0 <- list(N = nrow(y),\n                         T = ncol(y),\n                         first = first,\n                         last = last,\n                         cohort = cohort,\n                         nCohorts = nCohorts,\n                         nRivers = nRivers,\n                         season = seasonArray,\n                         #                     flow = eh$flow,\n                         length = last - first + 1,\n                         alpha = alpha,\n                         deltaProps = deltaProps\n                         )\n    \n    ## DT changes:\n    myData0 <- list(###yCJS = eh$eh, #y,    ## data for CJS distribution\n        y = y + 1\n    )   ## data for DHMM distribution\n    \n      ## if you change this FALSE to TRUE\n    ## this makes the dataset smaller - only 200 observations,\n    ## for quicker testing\n    if(FALSE) {\n        newN <- 20\n        oldN <- dim(y)[1]\n        set.seed(0)\n        indToKeep <- sample(1:oldN, size = newN, replace = FALSE)\n    }\n    \n    ## this removes fish that were only observed on the very last observation\n    if(TRUE) {\n        indToKeep <- which(first < ncol(y))\n        newN <- length(indToKeep)\n    }\n    \n    myConstants <- list(\n        N = newN,\n        T = myConstants0$T,\n        first = myConstants0$first[indToKeep],\n        last = myConstants0$last[indToKeep],\n        nRivers = myConstants0$nRivers,\n        cohort = myConstants0$cohort[indToKeep],\n        nCohorts = myConstants0$nCohorts,\n        #      season = myConstants$season,\n        #      flow = myConstants$flow[indToKeep,],\n        length = myConstants0$length[indToKeep],\n        alpha = myConstants0$alpha,\n        deltaProps = deltaProps\n    )\n    \n    myData <- list(\n        ##yCJS = myData0$yCJS[indToKeep,],\n        y = myData0$y[indToKeep,]\n    )\n    \n      initialValues <- function(){\n        list(\n            betaPhiRiver = array(runif(nRivers, 0, 1), c(nRivers)),\n            betaPhiRiverCohort = array(runif(nRivers * nCohorts, 0, 1), c(nRivers, nCohorts)),\n            betaPhi = array(rnorm(nRivers * (myConstants$T - 1) * nCohorts , 0, 1), c(nRivers, (myConstants$T - 1), nCohorts)),\n            \n            betaPRiver = array(runif(nRivers, 0, 1), c(nRivers)),\n            betaPRiverCohort = array(runif(nRivers * nCohorts, 0, 1), c(nRivers, nCohorts)),\n            betaP = array(rnorm(nRivers * (myConstants$T - 1) * nCohorts , 0, 1), c(nRivers, (myConstants$T - 1), nCohorts)),\n            \n            psi = getDirchPriorsR(nRivers, myConstants, nCohorts, alphaR)\n        )\n    }\n  \n    set.seed(0)\n    start = Sys.time()\n    \n    ## you'll get warnings that the data 'yCJS' is not used, and the 'z' initial\n    ## values are not in the model.  Those don't cause any problems,\n    ## and let us use the same myData and initialValue() for both models.\n    system.time(\n        Rmodel <- nimbleModel(\n            code = hmm.phiT_pT_psiT_DHMM_dirch,\n            constants = myConstants,\n            data = myData,              \n            inits = initialValues(),\n            calculate = FALSE\n        )\n    )\n    \n    #Rmodel$calculate()\n    \n    parametersToSave <- c(\"betaPhi\", \"betaPhiRiver\", \"betaPhiRiverCohort\", \n                          \"betaP\",   \"betaPRiver\",   \"betaPRiverCohort\",\n                          \"betaPhiOut\", \"betaPhiRiverOut\", \"betaPhiRiverCohortOut\", \n                          \"betaPOut\",   \"betaPRiverOut\",   \"betaPRiverCohortOut\",\n                          \n                          \"psi\"\n                          )\n    \n    nIter <- 15000 #30000\n    nBurnin <- 5000 #15000\n    nChains <- 2\n    thinRate <- 5\n    \n    rm(conf, Rmcmc, Cmodel, Cmcmc) # so old versions don't run if there is an error in an earlier step\n    system.time(\n        conf <- configureMCMC(\n            Rmodel,\n            monitors = parametersToSave\n        )\n    )\n    \n    Rmcmc <- buildMCMC(conf, useConjugacy = FALSE)\n    Cmodel <- compileNimble(Rmodel)\n    Cmcmc <- compileNimble(Rmcmc, project = Rmodel)\n    \n    mcmc.phiT_pT_psiT_DHMM_dirch <- runMCMC(\n        Cmcmc, \n        niter = nIter, \n        nburnin = nBurnin, \n        thin = thinRate, \n        nchains = nChains\n    )\n    \n    end <- Sys.time()\n    elapsed_phiT_pT_psiT_DHMM_dirch <- end - start\n    toSave <- list(\n        mcmc = mcmc.phiT_pT_psiT_DHMM_dirch, \n        elapsed = elapsed_phiT_pT_psiT_DHMM_dirch,\n        name = \"phiT_pT_psiT_DHMM_dirch\",\n        myConstants = myConstants, \n        nIter = nIter, \n        nBurnin = nBurnin,\n        thinRate = thinRate, \n        nSeasons = nSeasons, \n        nCohorts = nCohorts,\n        nChains = nChains\n    )\n    \n      save(toSave, file = paste0('./models/cmrFlow4rivers/runsOut/mcmc_phiT_pT_psiT_DHMM_dirch_', substr(end,1,13), '.RData'))\n      save(toSave, file = './models/cmrFlow4rivers/runsOut/mcmc_phiT_pT_psiT_DHMM_dirch_mostRecent.RData')\n  \n    # conduct more runs, will need to save into 'toSave'   \n    # Cmcmc$run(5000, reset = FALSE)  \n      \n  } else {\n    load('./models/cmrFlow4rivers/runsOut/mcmc_phiT_pT_psiT_DHMM_dirch_mostRecent.RData')\n  }\n    \n} else {\n  load('./models/cmrFlow4rivers/runsOut/fromWorkbench/rstudio-export/mcmc_phiT_pT_psiT_DHMM_dirch_mostRecent.RData')\n}"
  },
  {
    "objectID": "modelGrowthInMass.html",
    "href": "modelGrowthInMass.html",
    "title": "13  Growth in mass",
    "section": "",
    "text": "13.0.1 Get electrofishing data\n\n\nCode\ncd <- tar_read(cdWB_electro_target)\n\n\n\n\n13.0.2 Limit to consecutive sample captures (cd1)\nPrevious growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.\n\n\nCode\n# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> \n#   data.frame() |> \n#   filter(Freq > 0) |> \n#   arrange(Var1, Var2) |> \n#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> \n#   filter(year == 2010)\n\n`%notin%` <- Negate(`%in%`)\n\ncd1 <- cd |> \n  filter(sampleNumberDiff == 1,\n         tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> \n  mutate(negGrowth = grWeight < 0)\n\n\n\n\n13.0.3 Find outlier growth rates (negative)\n1bf20ebe4e and 1bf20ff490 have incorrect weights leading to very negative growth rates.\nExclude these tags above. The rest of the quite negative growth fish seem plausible (remember we can’t account for stomach contents).\n\n\nCode\ncd |> \n  arrange(grWeightS) |> \n  select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)\n\n\n# A tibble: 24,304 × 8\n   tag        species season sampleNumber lagSampleNu…¹ obser…² lagOb…³ grWeig…⁴\n   <chr>      <chr>    <dbl>        <dbl>         <dbl>   <dbl>   <dbl>    <dbl>\n 1 1bf20ebe4e bnt          3           55            56    46.5     4.3 -0.0320 \n 2 257c67e414 bkt          3           59            60     7.3     4.4 -0.00414\n 3 1bf0fec291 bkt          3           27            28     2.7     1.6 -0.00409\n 4 1bf20ff490 bnt          2           54            55   167.     41.8 -0.00378\n 5 257c67b532 bnt          3           63            64    34      25.5 -0.00371\n 6 00088d1ad4 bnt          3           63            64     4.5     3.6 -0.00330\n 7 257c67db60 bnt          3           63            64    24.2    19.5 -0.00317\n 8 00088d0b59 bnt          3           63            64     3.7     3   -0.00314\n 9 414b684955 ats          3           15            16     5.7     4.3 -0.00289\n10 0009f6ec56 bkt          3           75            76     3.5     2.7 -0.00288\n# … with 24,294 more rows, and abbreviated variable names ¹​lagSampleNumber,\n#   ²​observedWeight, ³​lagObservedWeight, ⁴​grWeightS\n\n\n\n\n13.0.4 Find outlier growth rates (positive)\nLots of very fast growth mostly in the spring. No clear way to exclude fish.\n\n\nCode\ncd1 |> \n  arrange(desc(grWeightS)) |> \n  select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> \n  print(n = 20)\n\n\n# A tibble: 24,299 × 8\n   tag        species season sampleNumber lagSampleNum…¹ obser…² lagOb…³ grWei…⁴\n   <chr>      <chr>    <dbl>        <dbl>          <dbl>   <dbl>   <dbl>   <dbl>\n 1 1bf1020623 bkt          1           29             30     1.3    14.4  0.0199\n 2 0009f6eef4 bkt          1           77             78     2.3    10.3  0.0160\n 3 413f4b1845 ats          1           13             14     1.8     8.3  0.0152\n 4 1bf16366cf bnt          1           33             34     2      10.7  0.0142\n 5 410a015165 ats          1           13             14     2.1     9.3  0.0142\n 6 00088d2d2c bkt          1           73             74     1.8     9.2  0.0141\n 7 410a0f0653 ats          1           13             14     2.2    10.9  0.0138\n 8 1bf18b7637 bkt          1           33             34     2.5    13.2  0.0137\n 9 1bf20e4e30 bnt          1           53             54     2.3    12.1  0.0137\n10 1bf1930917 ats          1           37             38     1.9    11.7  0.0136\n11 411a356c36 ats          1           17             18     2       7.8  0.0136\n12 413d675356 ats          1           13             14     2.2    10.3  0.0134\n13 41096c506c ats          1           13             14     2.5    10.4  0.0133\n14 1bf18b7083 bkt          1           33             34     2.3    10.7  0.0133\n15 41097c2230 ats          1           13             14     2.4    11.6  0.0132\n16 1bf18b6cc8 ats          1           33             34     2.7    17    0.0132\n17 410a043a56 ats          1           13             14     2.6    13.2  0.0130\n18 4109740f1b ats          1           13             14     2.4    11.3  0.0130\n19 1bf17f0114 bkt          1           33             34     2.3    10.5  0.0130\n20 1bf18b8453 bkt          1           33             34     2.3    10.1  0.0129\n# … with 24,279 more rows, and abbreviated variable names ¹​lagSampleNumber,\n#   ²​observedWeight, ³​lagObservedWeight, ⁴​grWeightS\n\n\n\n\n13.0.5 Raw length, weight data graphs\n\n\nCode\nggplot(cd1, aes(grWeightS, color = factor(season))) +\n  geom_freqpoly(bins = 100) +\n  facet_wrap(~season)\n\n\n\n\n\nCode\nggplot(cd1, aes(observedLength, observedWeight)) +\n  geom_point(alpha = 0.05) +\n  facet_grid(species~river, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1, aes(observedWeight, lagObservedWeight, color = factor(season))) +\n  geom_point(alpha = 0.05) +\n  facet_grid(species~river, scales = 'free')\n\n\n\n\n\n\n\n13.0.6 Get l-w relationships for size-adjusted growth model\nHere, we will explore size-independent growth in mass, see Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x. Size-independent growth (grWeightS) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().\ngrWeightS uses the slope of log(observedWeight) ~ log(grWeight) for each river and season and species to adjust growth.\nA simple linear models shows we need to get separate slopes for each river and season and species.\n\n\nCode\nggplot(cd1 |> filter(grWeight > 0), \n       aes(log(observedWeight), log(grWeight), color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species)\n\n\n\n\n\nCode\nmod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))\nmod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))\nmod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))\nmod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))\nmod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))\n\nAIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)\n\n\n     df      AIC\nmod4 73 43939.97\nmod2 33 47554.54\nmod3  9 48050.71\nmod1  9 64666.62\nmod0  3 64751.39\n\n\n\n\n13.0.7 Compare size-adjusted and instantaneous growth\nDifferences don’t seem big enough to warrant the extra complexity from the s-adjusted growth metric\n\n\nCode\nggplot(cd1, aes(grWeight, grWeightS, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_grid(season~species)\n\n\n\n\n\nCode\nggplot(cd1 |> \n         select(observedWeight, grWeight, grWeightS, season, species) |> \n         pivot_longer(cols = c(grWeight, grWeightS)),\n       \n       aes(log(observedWeight), value, color = name)) +\n  geom_point(alpha = 0.05 )  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Growth rate\") +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.0.8 Compare gorwth in length and mass\nGrowth rate in length vs size-independent growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeightS)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season~species)\n\n\n\n\n\nGrowth rate in length vs ‘instantaneous’ growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeight)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.0.9 Mean flow effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nggplot(cd1, aes(meanFlow, grWeight, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(season == 3), aes(meanFlow, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')\n\n\n\n\n\n\n\n13.0.10 Mean temperature effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nggplot(cd1, aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'bkt'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = brook trout') +\n  facet_wrap(~season, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'bnt'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = brown trout') +\n  facet_wrap(~season, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'ats'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = Atlantic salmon') +\n  facet_wrap(~season, scales = 'free')\n\n\n\n\n\n\n\n13.0.11 Proportion of fish with negative growth by species/river/season\n\n\nCode\nggplot(cd1, aes(negGrowth)) +\n  geom_bar() +\n  facet_grid(season~species+river, scales = \"free\")\n\n\n\n\n\nCode\npropNegSRS <- cd1 |> \n  group_by(species, river, season) |> \n  summarize(numNeg = sum(negGrowth, na.rm = TRUE),\n            n = n()\n            ) |> \n  mutate(numPos = n - numNeg,\n         propPos = numPos/n,\n         propNeg = numNeg/n)\n\nggplot(propNegSRS |> filter(n > 10), aes(season, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  facet_wrap(~species)\n\n\n\n\n\n\n\n13.0.12 Proportion of fish with negative growth by species/river/sampleNumber\n\n\nCode\npropNegSRsN <- cd1 |> \n  group_by(species, river, sampleNumber, season, year) |> \n  summarize(numNeg = sum(negGrowth, na.rm = TRUE),\n            n = n(),\n            mT = mean(meanTemperature, na.rm = TRUE),\n            mF = mean(meanFlow, na.rm = TRUE)\n            ) |> \n  mutate(numPos = n - numNeg,\n         propPos = numPos/n,\n         propNeg = numNeg/n)\n\nggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.0.13 Proportion of fish with negative growth by Flow\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mF, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Flow\") +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.0.14 Proportion of fish with negative growth by temperature\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(season~species, scales = \"free\")\n\n\n\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(species~season, scales = \"free\")"
  },
  {
    "objectID": "modelGrowthInMass.html#get-electrofishing-data",
    "href": "modelGrowthInMass.html#get-electrofishing-data",
    "title": "13  Growth in mass",
    "section": "13.1 Get electrofishing data",
    "text": "13.1 Get electrofishing data\n\n\nCode\ncd <- tar_read(cdWB_electro_target)"
  },
  {
    "objectID": "modelGrowthInMass.html#limit-to-consecutive-sample-captures-cd1",
    "href": "modelGrowthInMass.html#limit-to-consecutive-sample-captures-cd1",
    "title": "13  Growth in mass",
    "section": "13.2 Limit to consecutive sample captures (cd1)",
    "text": "13.2 Limit to consecutive sample captures (cd1)\nPrevious growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.\n\n\nCode\n# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> \n#   data.frame() |> \n#   filter(Freq > 0) |> \n#   arrange(Var1, Var2) |> \n#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> \n#   filter(year == 2010)\n\n`%notin%` <- Negate(`%in%`)\n\ncd1 <- cd |> \n  filter(sampleNumberDiff == 1,\n         tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> \n  mutate(negGrowth = grWeight < 0)"
  },
  {
    "objectID": "modelGrowthInMass.html#find-outlier-growth-rates",
    "href": "modelGrowthInMass.html#find-outlier-growth-rates",
    "title": "13  Growth in mass",
    "section": "13.3 Find outlier growth rates",
    "text": "13.3 Find outlier growth rates\n\n13.3.1 Negative outlier growth\n1bf20ebe4e and 1bf20ff490 have incorrect weights leading to very negative growth rates.\nExclude these tags above. The rest of the quite negative growth fish seem plausible (remember we can’t account for stomach contents or egg loss).\n\n\nCode\ncd |> \n  arrange(grWeightS) |> \n  select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)\n\n\n# A tibble: 24,304 × 8\n   tag        species season sampleNumber lagSampleNu…¹ obser…² lagOb…³ grWeig…⁴\n   <chr>      <chr>    <dbl>        <dbl>         <dbl>   <dbl>   <dbl>    <dbl>\n 1 1bf20ebe4e bnt          3           55            56    46.5     4.3 -0.0320 \n 2 257c67e414 bkt          3           59            60     7.3     4.4 -0.00414\n 3 1bf0fec291 bkt          3           27            28     2.7     1.6 -0.00409\n 4 1bf20ff490 bnt          2           54            55   167.     41.8 -0.00378\n 5 257c67b532 bnt          3           63            64    34      25.5 -0.00371\n 6 00088d1ad4 bnt          3           63            64     4.5     3.6 -0.00330\n 7 257c67db60 bnt          3           63            64    24.2    19.5 -0.00317\n 8 00088d0b59 bnt          3           63            64     3.7     3   -0.00314\n 9 414b684955 ats          3           15            16     5.7     4.3 -0.00289\n10 0009f6ec56 bkt          3           75            76     3.5     2.7 -0.00288\n# … with 24,294 more rows, and abbreviated variable names ¹​lagSampleNumber,\n#   ²​observedWeight, ³​lagObservedWeight, ⁴​grWeightS\n\n\n\n\n13.3.2 Positive outlier growth\nLots of very fast growth mostly in the spring. No clear way to exclude fish.\n\n\nCode\ncd1 |> \n  arrange(desc(grWeightS)) |> \n  select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> \n  print(n = 20)\n\n\n# A tibble: 24,299 × 8\n   tag        species season sampleNumber lagSampleNum…¹ obser…² lagOb…³ grWei…⁴\n   <chr>      <chr>    <dbl>        <dbl>          <dbl>   <dbl>   <dbl>   <dbl>\n 1 1bf1020623 bkt          1           29             30     1.3    14.4  0.0199\n 2 0009f6eef4 bkt          1           77             78     2.3    10.3  0.0160\n 3 413f4b1845 ats          1           13             14     1.8     8.3  0.0152\n 4 1bf16366cf bnt          1           33             34     2      10.7  0.0142\n 5 410a015165 ats          1           13             14     2.1     9.3  0.0142\n 6 00088d2d2c bkt          1           73             74     1.8     9.2  0.0141\n 7 410a0f0653 ats          1           13             14     2.2    10.9  0.0138\n 8 1bf18b7637 bkt          1           33             34     2.5    13.2  0.0137\n 9 1bf20e4e30 bnt          1           53             54     2.3    12.1  0.0137\n10 1bf1930917 ats          1           37             38     1.9    11.7  0.0136\n11 411a356c36 ats          1           17             18     2       7.8  0.0136\n12 413d675356 ats          1           13             14     2.2    10.3  0.0134\n13 41096c506c ats          1           13             14     2.5    10.4  0.0133\n14 1bf18b7083 bkt          1           33             34     2.3    10.7  0.0133\n15 41097c2230 ats          1           13             14     2.4    11.6  0.0132\n16 1bf18b6cc8 ats          1           33             34     2.7    17    0.0132\n17 410a043a56 ats          1           13             14     2.6    13.2  0.0130\n18 4109740f1b ats          1           13             14     2.4    11.3  0.0130\n19 1bf17f0114 bkt          1           33             34     2.3    10.5  0.0130\n20 1bf18b8453 bkt          1           33             34     2.3    10.1  0.0129\n# … with 24,279 more rows, and abbreviated variable names ¹​lagSampleNumber,\n#   ²​observedWeight, ³​lagObservedWeight, ⁴​grWeightS"
  },
  {
    "objectID": "modelGrowthInMass.html#raw-length-weight-data-graphs",
    "href": "modelGrowthInMass.html#raw-length-weight-data-graphs",
    "title": "13  Growth in mass",
    "section": "13.4 Raw length, weight data graphs",
    "text": "13.4 Raw length, weight data graphs\n\n13.4.1 Distribution of growth rates\n\n\nCode\nggplot(cd1, aes(grWeight, color = factor(season))) +\n  geom_freqpoly(bins = 100) +\n  facet_wrap(~season)\n\n\n\n\n\n\n\n13.4.2 Length vs weight\n\n\nCode\nggplot(cd1, aes(observedLength, observedWeight)) +\n  geom_point(alpha = 0.05) +\n  facet_grid(species~river, scales = 'free')\n\n\n\n\n\n\n\n13.4.3 Weight vs weight at next sample\n\n\nCode\nggplot(cd1, aes(observedWeight, lagObservedWeight, color = factor(season))) +\n  geom_point(alpha = 0.05) +\n  guides(color = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(species~river, scales = 'free')"
  },
  {
    "objectID": "modelGrowthInMass.html#size-adjusted-growth-model",
    "href": "modelGrowthInMass.html#size-adjusted-growth-model",
    "title": "13  Growth in mass",
    "section": "13.5 Size-adjusted growth model",
    "text": "13.5 Size-adjusted growth model\n\n13.5.1 Get l-w relationships for size-adjusted growth model\nHere, we will explore size-independent growth in mass, see Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x. Size-independent growth (grWeightS) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().\ngrWeightS uses the slope of log(observedWeight) ~ log(grWeight) for each river and season and species to adjust growth.\nA simple linear models shows we need to get separate slopes for each river and season and species.\n\n\nCode\nggplot(cd1 |> filter(grWeight > 0), \n       aes(log(observedWeight), log(grWeight), color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species)\n\n\n\n\n\nCode\nmod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))\nmod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))\nmod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))\nmod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))\nmod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))\n\nAIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)\n\n\n     df      AIC\nmod4 73 43939.97\nmod2 33 47554.54\nmod3  9 48050.71\nmod1  9 64666.62\nmod0  3 64751.39"
  },
  {
    "objectID": "modelGrowthInMass.html#compare-size-adjusted-and-instantaneous-growth",
    "href": "modelGrowthInMass.html#compare-size-adjusted-and-instantaneous-growth",
    "title": "13  Growth in mass",
    "section": "13.6 Compare size-adjusted and instantaneous growth",
    "text": "13.6 Compare size-adjusted and instantaneous growth\nDifferences don’t seem big enough to warrant the extra complexity from the s-adjusted growth metric\n\n\nCode\nggplot(cd1, aes(grWeight, grWeightS, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_grid(season~species)\n\n\n\n\n\nCode\nggplot(cd1 |> \n         select(observedWeight, grWeight, grWeightS, season, species) |> \n         pivot_longer(cols = c(grWeight, grWeightS)),\n       \n       aes(log(observedWeight), value, color = name)) +\n  geom_point(alpha = 0.05 )  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Growth rate\") +\n  facet_grid(season~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "href": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "title": "13  Growth in mass",
    "section": "13.7 Compare growth in length and mass",
    "text": "13.7 Compare growth in length and mass\n\n13.7.1 Growth rate in length vs size-independent growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeightS)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.7.2 Growth rate in length vs ‘instantaneous’ growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeight)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#mean-flow-effect-on-growth",
    "href": "modelGrowthInMass.html#mean-flow-effect-on-growth",
    "title": "13  Growth in mass",
    "section": "13.8 Mean flow effect on growth?",
    "text": "13.8 Mean flow effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nggplot(cd1, aes(meanFlow, grWeight, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')\n\n\n\n\n\nFall season only\n\n\nCode\nggplot(cd1 |> filter(season == 3), aes(meanFlow, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')"
  },
  {
    "objectID": "modelGrowthInMass.html#mean-temperature-effect-on-growth",
    "href": "modelGrowthInMass.html#mean-temperature-effect-on-growth",
    "title": "13  Growth in mass",
    "section": "13.9 Mean temperature effect on growth?",
    "text": "13.9 Mean temperature effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nggplot(cd1, aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_grid(season~species, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'bkt'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = brook trout') +\n  facet_wrap(~season, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'bnt'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = brown trout') +\n  facet_wrap(~season, scales = 'free')\n\n\n\n\n\nCode\nggplot(cd1 |> filter(species == 'ats'), aes(meanTemperature, grWeight, color = river)) +\n  geom_point(alpha = 0.1)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle('Species = Atlantic salmon') +\n  facet_wrap(~season, scales = 'free')"
  },
  {
    "objectID": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-speciesriverseason",
    "href": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-speciesriverseason",
    "title": "13  Growth in mass",
    "section": "13.10 Proportion of fish with negative growth by species/river/season",
    "text": "13.10 Proportion of fish with negative growth by species/river/season\n\n\nCode\nggplot(cd1, aes(negGrowth)) +\n  geom_bar() +\n  facet_grid(season~species+river, scales = \"free\")\n\n\n\n\n\nCode\npropNegSRS <- cd1 |> \n  group_by(species, river, season) |> \n  summarize(numNeg = sum(negGrowth, na.rm = TRUE),\n            n = n()\n            ) |> \n  mutate(numPos = n - numNeg,\n         propPos = numPos/n,\n         propNeg = numNeg/n)\n\nggplot(propNegSRS |> filter(n > 10), aes(season, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  facet_wrap(~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-speciesriversamplenumber",
    "href": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-speciesriversamplenumber",
    "title": "13  Growth in mass",
    "section": "13.11 Proportion of fish with negative growth by species/river/sampleNumber",
    "text": "13.11 Proportion of fish with negative growth by species/river/sampleNumber\nBreak down season by year\n\n\nCode\npropNegSRsN <- cd1 |> \n  group_by(species, river, sampleNumber, season, year) |> \n  summarize(numNeg = sum(negGrowth, na.rm = TRUE),\n            n = n(),\n            mT = mean(meanTemperature, na.rm = TRUE),\n            mF = mean(meanFlow, na.rm = TRUE)\n            ) |> \n  mutate(numPos = n - numNeg,\n         propPos = numPos/n,\n         propNeg = numNeg/n)\n\nggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  facet_grid(season~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#environmental-effects-on-proportion-of-fish-with-negative-growth",
    "href": "modelGrowthInMass.html#environmental-effects-on-proportion-of-fish-with-negative-growth",
    "title": "13  Growth in mass",
    "section": "13.12 Environmental effects on proportion of fish with negative growth",
    "text": "13.12 Environmental effects on proportion of fish with negative growth\n\n13.12.1 Proportion of fish with negative growth by flow\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mF, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Flow\") +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.12.2 Proportion of fish with negative growth by temperature\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(season~species, scales = \"free\")\n\n\n\n\n\nRotate graph so we can have free scales for each season\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(species~season, scales = \"free\")"
  },
  {
    "objectID": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-temperature",
    "href": "modelGrowthInMass.html#proportion-of-fish-with-negative-growth-by-temperature",
    "title": "13  Growth in mass",
    "section": "13.13 Proportion of fish with negative growth by temperature",
    "text": "13.13 Proportion of fish with negative growth by temperature\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(season~species, scales = \"free\")\n\n\n\n\n\nRotate graph so we can have free scales for each season\n\n\nCode\nggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of fish with negative growth in mass\") +\n  scale_x_continuous(\"Mean Temperature\") +\n  facet_grid(species~season, scales = \"free\")"
  },
  {
    "objectID": "modelGrowthInMass.html#models-for-environmental-effects-on-propneg",
    "href": "modelGrowthInMass.html#models-for-environmental-effects-on-propneg",
    "title": "13  Growth in mass",
    "section": "13.13 Models for environmental effects on propNeg",
    "text": "13.13 Models for environmental effects on propNeg\n\n13.13.1 Standardize flow and temperature\n\n\nCode\n# getZ <- function(d){\n#   list(\n#     mean = mean(d, na.rm = TRUE),\n#     sd = sd(d, na.rm = TRUE)\n#   )\n# }\n# fZ <- getZ(cd1$meanFlow)\n# fT <- getZ(cd1$meanTemperature)\n\nz <- cd1 |> \n  group_by(season) |> \n  summarize(fZMean = mean(meanFlow, na.rm = TRUE),\n            fZSd = sd(meanFlow, na.rm = TRUE),\n            fTMean = mean(meanTemperature, na.rm = TRUE),\n            fTSd = sd(meanTemperature, na.rm = TRUE)\n            )\n\ncd1 <- cd1 |> \n  left_join(z) |> \n  mutate(meanFlowZ = (meanFlow - fZMean)/fZSd,\n         meanTempZ = (meanTemperature - fTMean)/fTSd)\n\n\n\n\n13.13.2 Raw data with logistic fit for flow effect\n\n\nCode\nggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowZ, negGrowth * 1, color = river)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  facet_grid(season~species)\n\n\n\n\n\n\n\n13.13.3 Raw data with logistic fit for temperature effect\n\n\nCode\nggplot(cd1 |> filter(!is.na(negGrowth), meanTempZ > -4), aes(meanTempZ, negGrowth * 1, color = river)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  facet_grid(season~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature",
    "href": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature",
    "title": "13  Growth in mass",
    "section": "13.14 Logistic model for flow and temperature",
    "text": "13.14 Logistic model for flow and temperature\n\n13.14.1 Model selection\n\n\nCode\nmodFT0 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * species, family = \"binomial\", data = cd1)\nmodFT1 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river + species, family = \"binomial\", data = cd1)\nmodFT2 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river + species, family = \"binomial\", data = cd1)\nmodFT3 <- glm(negGrowth ~ meanFlowZ + meanTempZ + river + species, family = \"binomial\", data = cd1)\nmodFT4 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river , family = \"binomial\", data = cd1)\nmodFT5 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river , family = \"binomial\", data = cd1)\nmodFT6 <- glm(negGrowth ~ meanFlowZ * meanTempZ + species , family = \"binomial\", data = cd1)\nmodFT7 <- glm(negGrowth ~ meanFlowZ * meanTempZ, family = \"binomial\", data = cd1)\n\n\nmodFT8 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * season + species, family = \"binomial\", data = cd1)\nmodFT9 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * season * species, family = \"binomial\", data = cd1)\nmodFT10 <- glm(negGrowth ~ meanFlowZ + meanTempZ * river * season * species, family = \"binomial\", data = cd1)\nAIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10) |> arrange(AIC)\n\n\n        df      AIC\nmodFT9  72 18181.43\nmodFT8  34 18356.11\nmodFT1  18 18921.12\nmodFT0  36 18929.05\nmodFT10 37 18944.90\nmodFT2   9 19001.76\nmodFT3   8 19009.49\nmodFT6   6 19050.63\nmodFT4   7 19719.13\nmodFT5   7 19719.13\nmodFT7   4 19782.35\n\n\n\n\n13.14.2 Model results for additive model (not very good)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\nsummary(modFT3)\n\n\n\nCall:\nglm(formula = negGrowth ~ meanFlowZ + meanTempZ + river + species, \n    family = \"binomial\", data = cd1)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.9679  -0.6233  -0.4930  -0.3114   2.9738  \n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)      -1.18244    0.08169 -14.475  < 2e-16 ***\nmeanFlowZ        -0.42097    0.02158 -19.506  < 2e-16 ***\nmeanTempZ        -0.04338    0.02052  -2.115  0.03447 *  \nriverwb mitchell -0.74887    0.12842  -5.831 5.50e-09 ***\nriverwb obear    -0.52364    0.09306  -5.627 1.83e-08 ***\nriverwest brook  -0.20666    0.07724  -2.676  0.00746 ** \nspeciesbkt       -0.42067    0.04853  -8.668  < 2e-16 ***\nspeciesbnt       -1.68941    0.07414 -22.787  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 20259  on 24194  degrees of freedom\nResidual deviance: 18993  on 24187  degrees of freedom\n  (104 observations deleted due to missingness)\nAIC: 19009\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\nanova(modFT3)\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n          Df Deviance Resid. Df Resid. Dev\nNULL                      24194      20259\nmeanFlowZ  1   423.47     24193      19835\nmeanTempZ  1    53.39     24192      19782\nriver      3    70.06     24189      19712\nspecies    2   718.31     24187      18994\n\n\nCode\npscl::pR2(modFT3)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n  McFadden \n0.06245348 \n\n\nCode\ncaret::varImp(modFT3) |> arrange(desc(Overall))\n\n\n                   Overall\nspeciesbnt       22.787282\nmeanFlowZ        19.505786\nspeciesbkt        8.667797\nriverwb mitchell  5.831234\nriverwb obear     5.627176\nriverwest brook   2.675532\nmeanTempZ         2.114504\n\n\n\n\n13.14.3 Model results for full interactive model (best model)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\nsummary(modFT9)\n\n\n\nCall:\nglm(formula = negGrowth ~ meanFlowZ * meanTempZ * river * season * \n    species, family = \"binomial\", data = cd1)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.5920  -0.6501  -0.4319  -0.2103   4.2596  \n\nCoefficients: (24 not defined because of singularities)\n                                                         Estimate Std. Error\n(Intercept)                                             -7.970514   4.513971\nmeanFlowZ                                               -4.221874  10.678101\nmeanTempZ                                               -3.454993   8.250722\nriverwb mitchell                                        -1.608945   4.398136\nriverwb obear                                           -1.055200   0.341472\nriverwest brook                                          6.468546   4.514715\nseason                                                   3.879824   2.380492\nspeciesbkt                                               6.099801   4.519487\nspeciesbnt                                               3.587786   4.601704\nmeanFlowZ:meanTempZ                                     18.254907  11.260346\nmeanFlowZ:riverwb mitchell                              -5.503840   5.307157\nmeanFlowZ:riverwb obear                                 -0.008071   0.438639\nmeanFlowZ:riverwest brook                                3.406297  10.678642\nmeanTempZ:riverwb mitchell                              -8.185610   4.864325\nmeanTempZ:riverwb obear                                  0.511916   0.383715\nmeanTempZ:riverwest brook                                3.713182   8.251458\nmeanFlowZ:season                                         0.556441   3.954307\nmeanTempZ:season                                         3.702745   3.526023\nriverwb mitchell:season                                  0.196668   1.232851\nriverwb obear:season                                     0.215725   0.116134\nriverwest brook:season                                  -3.802421   2.380668\nmeanFlowZ:speciesbkt                                     4.017626  10.681847\nmeanFlowZ:speciesbnt                                     4.497031  10.724131\nmeanTempZ:speciesbkt                                     2.915068   8.254155\nmeanTempZ:speciesbnt                                     5.798065   8.338935\nriverwb mitchell:speciesbkt                             -0.565429   4.435619\nriverwb obear:speciesbkt                                       NA         NA\nriverwest brook:speciesbkt                              -7.499424   4.523762\nriverwb mitchell:speciesbnt                                    NA         NA\nriverwb obear:speciesbnt                                       NA         NA\nriverwest brook:speciesbnt                              -7.293409   4.620574\nseason:speciesbkt                                       -3.778026   2.381906\nseason:speciesbnt                                       -3.345804   2.397294\nmeanFlowZ:meanTempZ:riverwb mitchell                    -2.452681   5.113448\nmeanFlowZ:meanTempZ:riverwb obear                        0.623950   0.519752\nmeanFlowZ:meanTempZ:riverwest brook                    -17.094926  11.261114\nmeanFlowZ:meanTempZ:season                              -7.347981   4.329132\nmeanFlowZ:riverwb mitchell:season                        1.708351   1.413270\nmeanFlowZ:riverwb obear:season                          -0.141290   0.150828\nmeanFlowZ:riverwest brook:season                        -0.416630   3.954465\nmeanTempZ:riverwb mitchell:season                        2.157370   1.347565\nmeanTempZ:riverwb obear:season                          -0.020012   0.133861\nmeanTempZ:riverwest brook:season                        -3.843700   3.526261\nmeanFlowZ:meanTempZ:speciesbkt                         -17.210973  11.264228\nmeanFlowZ:meanTempZ:speciesbnt                         -18.905459  11.292635\nmeanFlowZ:riverwb mitchell:speciesbkt                    5.947980   5.336921\nmeanFlowZ:riverwb obear:speciesbkt                             NA         NA\nmeanFlowZ:riverwest brook:speciesbkt                    -6.692855  10.685740\nmeanFlowZ:riverwb mitchell:speciesbnt                          NA         NA\nmeanFlowZ:riverwb obear:speciesbnt                             NA         NA\nmeanFlowZ:riverwest brook:speciesbnt                    -8.008066  10.737656\nmeanTempZ:riverwb mitchell:speciesbkt                    9.254609   4.881349\nmeanTempZ:riverwb obear:speciesbkt                             NA         NA\nmeanTempZ:riverwest brook:speciesbkt                    -2.277514   8.256752\nmeanTempZ:riverwb mitchell:speciesbnt                          NA         NA\nmeanTempZ:riverwb obear:speciesbnt                             NA         NA\nmeanTempZ:riverwest brook:speciesbnt                    -4.970384   8.347631\nmeanFlowZ:season:speciesbkt                             -0.549356   3.955591\nmeanFlowZ:season:speciesbnt                             -0.728282   3.967715\nmeanTempZ:season:speciesbkt                             -3.576894   3.527162\nmeanTempZ:season:speciesbnt                             -4.448881   3.544775\nriverwb mitchell:season:speciesbkt                       0.099514   1.246967\nriverwb obear:season:speciesbkt                                NA         NA\nriverwest brook:season:speciesbkt                        4.091964   2.382957\nriverwb mitchell:season:speciesbnt                             NA         NA\nriverwb obear:season:speciesbnt                                NA         NA\nriverwest brook:season:speciesbnt                        4.071697   2.401064\nmeanFlowZ:meanTempZ:riverwb mitchell:season              0.705788   1.434507\nmeanFlowZ:meanTempZ:riverwb obear:season                -0.321660   0.180732\nmeanFlowZ:meanTempZ:riverwest brook:season               6.860332   4.329395\nmeanFlowZ:meanTempZ:riverwb mitchell:speciesbkt          0.817676   5.134243\nmeanFlowZ:meanTempZ:riverwb obear:speciesbkt                   NA         NA\nmeanFlowZ:meanTempZ:riverwest brook:speciesbkt          19.676492  11.267879\nmeanFlowZ:meanTempZ:riverwb mitchell:speciesbnt                NA         NA\nmeanFlowZ:meanTempZ:riverwb obear:speciesbnt                   NA         NA\nmeanFlowZ:meanTempZ:riverwest brook:speciesbnt          21.237367  11.303001\nmeanFlowZ:meanTempZ:season:speciesbkt                    6.979228   4.330423\nmeanFlowZ:meanTempZ:season:speciesbnt                    7.523195   4.338726\nmeanFlowZ:riverwb mitchell:season:speciesbkt            -1.673539   1.425995\nmeanFlowZ:riverwb obear:season:speciesbkt                      NA         NA\nmeanFlowZ:riverwest brook:season:speciesbkt              1.388862   3.956735\nmeanFlowZ:riverwb mitchell:season:speciesbnt                   NA         NA\nmeanFlowZ:riverwb obear:season:speciesbnt                      NA         NA\nmeanFlowZ:riverwest brook:season:speciesbnt              1.956243   3.971712\nmeanTempZ:riverwb mitchell:season:speciesbkt            -2.277592   1.355435\nmeanTempZ:riverwb obear:season:speciesbkt                      NA         NA\nmeanTempZ:riverwest brook:season:speciesbkt              3.412309   3.528251\nmeanTempZ:riverwb mitchell:season:speciesbnt                   NA         NA\nmeanTempZ:riverwb obear:season:speciesbnt                      NA         NA\nmeanTempZ:riverwest brook:season:speciesbnt              4.131189   3.547650\nmeanFlowZ:meanTempZ:riverwb mitchell:season:speciesbkt  -0.329277   1.444159\nmeanFlowZ:meanTempZ:riverwb obear:season:speciesbkt            NA         NA\nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbkt   -7.688993   4.331796\nmeanFlowZ:meanTempZ:riverwb mitchell:season:speciesbnt         NA         NA\nmeanFlowZ:meanTempZ:riverwb obear:season:speciesbnt            NA         NA\nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbnt   -8.198637   4.342214\n                                                       z value Pr(>|z|)   \n(Intercept)                                             -1.766   0.0774 . \nmeanFlowZ                                               -0.395   0.6926   \nmeanTempZ                                               -0.419   0.6754   \nriverwb mitchell                                        -0.366   0.7145   \nriverwb obear                                           -3.090   0.0020 **\nriverwest brook                                          1.433   0.1519   \nseason                                                   1.630   0.1031   \nspeciesbkt                                               1.350   0.1771   \nspeciesbnt                                               0.780   0.4356   \nmeanFlowZ:meanTempZ                                      1.621   0.1050   \nmeanFlowZ:riverwb mitchell                              -1.037   0.2997   \nmeanFlowZ:riverwb obear                                 -0.018   0.9853   \nmeanFlowZ:riverwest brook                                0.319   0.7497   \nmeanTempZ:riverwb mitchell                              -1.683   0.0924 . \nmeanTempZ:riverwb obear                                  1.334   0.1822   \nmeanTempZ:riverwest brook                                0.450   0.6527   \nmeanFlowZ:season                                         0.141   0.8881   \nmeanTempZ:season                                         1.050   0.2937   \nriverwb mitchell:season                                  0.160   0.8733   \nriverwb obear:season                                     1.858   0.0632 . \nriverwest brook:season                                  -1.597   0.1102   \nmeanFlowZ:speciesbkt                                     0.376   0.7068   \nmeanFlowZ:speciesbnt                                     0.419   0.6750   \nmeanTempZ:speciesbkt                                     0.353   0.7240   \nmeanTempZ:speciesbnt                                     0.695   0.4869   \nriverwb mitchell:speciesbkt                             -0.127   0.8986   \nriverwb obear:speciesbkt                                    NA       NA   \nriverwest brook:speciesbkt                              -1.658   0.0974 . \nriverwb mitchell:speciesbnt                                 NA       NA   \nriverwb obear:speciesbnt                                    NA       NA   \nriverwest brook:speciesbnt                              -1.578   0.1145   \nseason:speciesbkt                                       -1.586   0.1127   \nseason:speciesbnt                                       -1.396   0.1628   \nmeanFlowZ:meanTempZ:riverwb mitchell                    -0.480   0.6315   \nmeanFlowZ:meanTempZ:riverwb obear                        1.200   0.2300   \nmeanFlowZ:meanTempZ:riverwest brook                     -1.518   0.1290   \nmeanFlowZ:meanTempZ:season                              -1.697   0.0896 . \nmeanFlowZ:riverwb mitchell:season                        1.209   0.2267   \nmeanFlowZ:riverwb obear:season                          -0.937   0.3489   \nmeanFlowZ:riverwest brook:season                        -0.105   0.9161   \nmeanTempZ:riverwb mitchell:season                        1.601   0.1094   \nmeanTempZ:riverwb obear:season                          -0.149   0.8812   \nmeanTempZ:riverwest brook:season                        -1.090   0.2757   \nmeanFlowZ:meanTempZ:speciesbkt                          -1.528   0.1265   \nmeanFlowZ:meanTempZ:speciesbnt                          -1.674   0.0941 . \nmeanFlowZ:riverwb mitchell:speciesbkt                    1.114   0.2651   \nmeanFlowZ:riverwb obear:speciesbkt                          NA       NA   \nmeanFlowZ:riverwest brook:speciesbkt                    -0.626   0.5311   \nmeanFlowZ:riverwb mitchell:speciesbnt                       NA       NA   \nmeanFlowZ:riverwb obear:speciesbnt                          NA       NA   \nmeanFlowZ:riverwest brook:speciesbnt                    -0.746   0.4558   \nmeanTempZ:riverwb mitchell:speciesbkt                    1.896   0.0580 . \nmeanTempZ:riverwb obear:speciesbkt                          NA       NA   \nmeanTempZ:riverwest brook:speciesbkt                    -0.276   0.7827   \nmeanTempZ:riverwb mitchell:speciesbnt                       NA       NA   \nmeanTempZ:riverwb obear:speciesbnt                          NA       NA   \nmeanTempZ:riverwest brook:speciesbnt                    -0.595   0.5516   \nmeanFlowZ:season:speciesbkt                             -0.139   0.8895   \nmeanFlowZ:season:speciesbnt                             -0.184   0.8544   \nmeanTempZ:season:speciesbkt                             -1.014   0.3105   \nmeanTempZ:season:speciesbnt                             -1.255   0.2095   \nriverwb mitchell:season:speciesbkt                       0.080   0.9364   \nriverwb obear:season:speciesbkt                             NA       NA   \nriverwest brook:season:speciesbkt                        1.717   0.0859 . \nriverwb mitchell:season:speciesbnt                          NA       NA   \nriverwb obear:season:speciesbnt                             NA       NA   \nriverwest brook:season:speciesbnt                        1.696   0.0899 . \nmeanFlowZ:meanTempZ:riverwb mitchell:season              0.492   0.6227   \nmeanFlowZ:meanTempZ:riverwb obear:season                -1.780   0.0751 . \nmeanFlowZ:meanTempZ:riverwest brook:season               1.585   0.1131   \nmeanFlowZ:meanTempZ:riverwb mitchell:speciesbkt          0.159   0.8735   \nmeanFlowZ:meanTempZ:riverwb obear:speciesbkt                NA       NA   \nmeanFlowZ:meanTempZ:riverwest brook:speciesbkt           1.746   0.0808 . \nmeanFlowZ:meanTempZ:riverwb mitchell:speciesbnt             NA       NA   \nmeanFlowZ:meanTempZ:riverwb obear:speciesbnt                NA       NA   \nmeanFlowZ:meanTempZ:riverwest brook:speciesbnt           1.879   0.0603 . \nmeanFlowZ:meanTempZ:season:speciesbkt                    1.612   0.1070   \nmeanFlowZ:meanTempZ:season:speciesbnt                    1.734   0.0829 . \nmeanFlowZ:riverwb mitchell:season:speciesbkt            -1.174   0.2406   \nmeanFlowZ:riverwb obear:season:speciesbkt                   NA       NA   \nmeanFlowZ:riverwest brook:season:speciesbkt              0.351   0.7256   \nmeanFlowZ:riverwb mitchell:season:speciesbnt                NA       NA   \nmeanFlowZ:riverwb obear:season:speciesbnt                   NA       NA   \nmeanFlowZ:riverwest brook:season:speciesbnt              0.493   0.6223   \nmeanTempZ:riverwb mitchell:season:speciesbkt            -1.680   0.0929 . \nmeanTempZ:riverwb obear:season:speciesbkt                   NA       NA   \nmeanTempZ:riverwest brook:season:speciesbkt              0.967   0.3335   \nmeanTempZ:riverwb mitchell:season:speciesbnt                NA       NA   \nmeanTempZ:riverwb obear:season:speciesbnt                   NA       NA   \nmeanTempZ:riverwest brook:season:speciesbnt              1.164   0.2442   \nmeanFlowZ:meanTempZ:riverwb mitchell:season:speciesbkt  -0.228   0.8196   \nmeanFlowZ:meanTempZ:riverwb obear:season:speciesbkt         NA       NA   \nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbkt   -1.775   0.0759 . \nmeanFlowZ:meanTempZ:riverwb mitchell:season:speciesbnt      NA       NA   \nmeanFlowZ:meanTempZ:riverwb obear:season:speciesbnt         NA       NA   \nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbnt   -1.888   0.0590 . \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 20259  on 24194  degrees of freedom\nResidual deviance: 18037  on 24123  degrees of freedom\n  (104 observations deleted due to missingness)\nAIC: 18181\n\nNumber of Fisher Scoring iterations: 9\n\n\nCode\nanova(modFT9)\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                         Df Deviance Resid. Df Resid. Dev\nNULL                                                     24194      20259\nmeanFlowZ                                 1   423.47     24193      19835\nmeanTempZ                                 1    53.39     24192      19782\nriver                                     3    70.06     24189      19712\nseason                                    1    39.79     24188      19672\nspecies                                   2   721.50     24186      18951\nmeanFlowZ:meanTempZ                       1     0.95     24185      18950\nmeanFlowZ:river                           3    18.85     24182      18931\nmeanTempZ:river                           3    14.16     24179      18917\nmeanFlowZ:season                          1   104.15     24178      18812\nmeanTempZ:season                          1    15.69     24177      18797\nriver:season                              3    17.75     24174      18779\nmeanFlowZ:species                         2     3.93     24172      18775\nmeanTempZ:species                         2     2.76     24170      18772\nriver:species                             3     1.50     24167      18771\nseason:species                            2     6.69     24165      18764\nmeanFlowZ:meanTempZ:river                 3    60.00     24162      18704\nmeanFlowZ:meanTempZ:season                1   361.41     24161      18343\nmeanFlowZ:river:season                    3    29.40     24158      18313\nmeanTempZ:river:season                    3    17.09     24155      18296\nmeanFlowZ:meanTempZ:species               2    29.26     24153      18267\nmeanFlowZ:river:species                   3     3.01     24150      18264\nmeanTempZ:river:species                   3     7.19     24147      18257\nmeanFlowZ:season:species                  2    84.46     24145      18172\nmeanTempZ:season:species                  2     0.69     24143      18172\nriver:season:species                      3     9.31     24140      18162\nmeanFlowZ:meanTempZ:river:season          3    39.34     24137      18123\nmeanFlowZ:meanTempZ:river:species         3     2.99     24134      18120\nmeanFlowZ:meanTempZ:season:species        2    59.58     24132      18060\nmeanFlowZ:river:season:species            3     4.73     24129      18056\nmeanTempZ:river:season:species            3     5.98     24126      18050\nmeanFlowZ:meanTempZ:river:season:species  3    12.19     24123      18037\n\n\nCode\n# full interaction\npscl::pR2(modFT9)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n McFadden \n0.1096463 \n\n\nCode\ncaret::varImp(modFT9) |> arrange(desc(Overall))\n\n\n                                                          Overall\nriverwb obear                                          3.09015160\nmeanTempZ:riverwb mitchell:speciesbkt                  1.89591209\nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbnt  1.88812355\nmeanFlowZ:meanTempZ:riverwest brook:speciesbnt         1.87891401\nriverwb obear:season                                   1.85754953\nmeanFlowZ:meanTempZ:riverwb obear:season               1.77976241\nmeanFlowZ:meanTempZ:riverwest brook:season:speciesbkt  1.77501255\nmeanFlowZ:meanTempZ:riverwest brook:speciesbkt         1.74624625\nmeanFlowZ:meanTempZ:season:speciesbnt                  1.73396421\nriverwest brook:season:speciesbkt                      1.71717937\nmeanFlowZ:meanTempZ:season                             1.69733351\nriverwest brook:season:speciesbnt                      1.69578856\nmeanTempZ:riverwb mitchell                             1.68278451\nmeanTempZ:riverwb mitchell:season:speciesbkt           1.68033990\nmeanFlowZ:meanTempZ:speciesbnt                         1.67414054\nriverwest brook:speciesbkt                             1.65778476\nseason                                                 1.62984123\nmeanFlowZ:meanTempZ                                    1.62116741\nmeanFlowZ:meanTempZ:season:speciesbkt                  1.61167359\nmeanTempZ:riverwb mitchell:season                      1.60093913\nriverwest brook:season                                 1.59720740\nseason:speciesbkt                                      1.58613545\nmeanFlowZ:meanTempZ:riverwest brook:season             1.58459390\nriverwest brook:speciesbnt                             1.57846410\nmeanFlowZ:meanTempZ:speciesbkt                         1.52793194\nmeanFlowZ:meanTempZ:riverwest brook                    1.51804920\nriverwest brook                                        1.43276948\nseason:speciesbnt                                      1.39565842\nspeciesbkt                                             1.34966656\nmeanTempZ:riverwb obear                                1.33410506\nmeanTempZ:season:speciesbnt                            1.25505310\nmeanFlowZ:riverwb mitchell:season                      1.20879316\nmeanFlowZ:meanTempZ:riverwb obear                      1.20047823\nmeanFlowZ:riverwb mitchell:season:speciesbkt           1.17359350\nmeanTempZ:riverwest brook:season:speciesbnt            1.16448620\nmeanFlowZ:riverwb mitchell:speciesbkt                  1.11449661\nmeanTempZ:riverwest brook:season                       1.09002152\nmeanTempZ:season                                       1.05011932\nmeanFlowZ:riverwb mitchell                             1.03706002\nmeanTempZ:season:speciesbkt                            1.01409981\nmeanTempZ:riverwest brook:season:speciesbkt            0.96713885\nmeanFlowZ:riverwb obear:season                         0.93676485\nspeciesbnt                                             0.77966460\nmeanFlowZ:riverwest brook:speciesbnt                   0.74579275\nmeanTempZ:speciesbnt                                   0.69530041\nmeanFlowZ:riverwest brook:speciesbkt                   0.62633519\nmeanTempZ:riverwest brook:speciesbnt                   0.59542455\nmeanFlowZ:riverwest brook:season:speciesbnt            0.49254401\nmeanFlowZ:meanTempZ:riverwb mitchell:season            0.49200764\nmeanFlowZ:meanTempZ:riverwb mitchell                   0.47965310\nmeanTempZ:riverwest brook                              0.45000317\nmeanFlowZ:speciesbnt                                   0.41933755\nmeanTempZ                                              0.41875035\nmeanFlowZ                                              0.39537687\nmeanFlowZ:speciesbkt                                   0.37611715\nriverwb mitchell                                       0.36582426\nmeanTempZ:speciesbkt                                   0.35316378\nmeanFlowZ:riverwest brook:season:speciesbkt            0.35101219\nmeanFlowZ:riverwest brook                              0.31898223\nmeanTempZ:riverwest brook:speciesbkt                   0.27583651\nmeanFlowZ:meanTempZ:riverwb mitchell:season:speciesbkt 0.22800639\nmeanFlowZ:season:speciesbnt                            0.18355213\nriverwb mitchell:season                                0.15952292\nmeanFlowZ:meanTempZ:riverwb mitchell:speciesbkt        0.15925935\nmeanTempZ:riverwb obear:season                         0.14949651\nmeanFlowZ:season                                       0.14071761\nmeanFlowZ:season:speciesbkt                            0.13888093\nriverwb mitchell:speciesbkt                            0.12747475\nmeanFlowZ:riverwest brook:season                       0.10535685\nriverwb mitchell:season:speciesbkt                     0.07980469\nmeanFlowZ:riverwb obear                                0.01839992\n\n\n\n\n13.14.4 Precict p(neg growth in mass)\n\n\nCode\npredD <- expand.grid(\n  meanFlowZ = seq(-1.5,1.5,0.25), \n  meanTempZ = seq(-1.5,1.5,0.25), \n  river = unique(cd1$river), \n  species = unique(cd1$species), \n  season = unique(cd1$season)\n  )\n\npred <- add_column(predD, \n                   pred = predict.glm(modFT9, predD, type = \"response\")) |> \n        mutate(group = paste0(river, species, season, sep = \"_\"))\n\n\n\n\n13.14.5 Plot predictions\n\n\nCode\nggplot(pred |> filter(meanTempZ %in% c(-1.5,0,1.5)), aes(meanFlowZ, pred, group= group)) +\n  geom_line(aes(color = river)) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  facet_grid(season~species)"
  },
  {
    "objectID": "modelGrowthInMass.html#limit-data-to-consecutive-sample-captures-cd1",
    "href": "modelGrowthInMass.html#limit-data-to-consecutive-sample-captures-cd1",
    "title": "13  Growth in mass",
    "section": "13.2 Limit data to consecutive sample captures (cd1)",
    "text": "13.2 Limit data to consecutive sample captures (cd1)\nPrevious growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.\n\n\nCode\n# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> \n#   data.frame() |> \n#   filter(Freq > 0) |> \n#   arrange(Var1, Var2) |> \n#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> \n#   filter(year == 2010)\n\n`%notin%` <- Negate(`%in%`)\n\ncd1 <- cd |> \n  filter(sampleNumberDiff == 1,\n         tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> \n  mutate(negGrowth = grWeight < 0)"
  }
]