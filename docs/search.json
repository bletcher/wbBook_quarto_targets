[
  {
    "objectID": "modelGrowthFlowByRiver.html#raw-daily-flow-data",
    "href": "modelGrowthFlowByRiver.html#raw-daily-flow-data",
    "title": "13  Growth in mass by river/area",
    "section": "13.1 Raw daily flow data",
    "text": "13.1 Raw daily flow data\nRaw data by day.\nFour types of flow data:\n\nPrimary flow data types\n- flowByArea_flowExt (green), flow from the flow extension model scaled by watershed area as a proportion of WB area.\n- FlowByRiver (blue), flows for each river hindcast from Jenn’s model based on tributary-specific flow estimates.\n\nAdditional flow data types\n- Flow (red), flow extension model for the West Brook from the Mill River.\n- FlowByArea_ByRiver (orange), flow from the West Brook from Jenn’s models scaled to tributaries based on relative tributary area.\n\n13.1.1 Frequency plots of flow data types\n\n\nCode\nggplot(envData |> filter(!is.na(season)), aes(flow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5, size = 2) +\n  geom_density(aes(flowByRiver), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(flowByArea_flowExt), color = \"green4\", adjust = 2.5) +\n  geom_density(aes(flowByArea_ByRiver), color = \"orange2\", adjust = 2.5) +\n  labs(x = \"Flow m3/s\") +\n  scale_x_log10() +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)\n\n\n\n\n\n\n13.1.2 Time series\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(envData |> filter(river == \"west brook\", year > 1999), aes(yday, flow)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver), color = \"blue3\", size = 0.1) +\n  geom_point(aes(yday, flowByArea_flowExt), color = \"green4\", size = 0.5) +\n  geom_point(aes(yday, flowByArea_ByRiver), color = \"orange2\", size = 0.5) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nWest Brook stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |> filter(river == \"wb jimmy\", year > 1999), aes(yday, flow)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver), color = \"blue3\", size = 0.1) +\n  geom_point(aes(yday, flowByArea_flowExt), color = \"green4\", size = 0.5) +\n  geom_point(aes(yday, flowByArea_ByRiver), color = \"orange2\", size = 0.5) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nOpen Large stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |> filter(river == \"wb mitchell\", year > 1999), aes(date, flow)) +\n  #geom_line(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver), color = \"blue3\", size = 0.1) +\n  geom_point(aes(yday, flowByArea_flowExt), color = \"green4\", size = 0.5) +\n  geom_point(aes(yday, flowByArea_ByRiver), color = \"orange2\", size = 0.5) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nOpen Small stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |> filter(river == \"wb obear\", year > 1999), aes(date, flow)) +\n  #geom_line(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver), color = \"blue3\", size = 0.1) +\n  geom_point(aes(yday, flowByArea_flowExt), color = \"green4\", size = 0.5) +\n  geom_point(aes(yday, flowByArea_ByRiver), color = \"orange2\", size = 0.1) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nIsolated Small stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt, orange = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\n13.1.2.1 Summary stats\n\n\nCode\nsummaryStats <- envData |> \n  filter(!is.na(season)) |> \n  group_by(river, season) |> \n  summarize(meanflowByRiver = mean(flowByRiver, na.rm = TRUE),\n            sdflowByRiver = sd(flowByRiver, na.rm = TRUE),\n            meanflowByArea = mean(flowByArea_flowExt),\n            sdflowByArea = sd(flowByArea_flowExt))\n\n\n\n\n\n13.1.3 Flow duration curves\n\n13.1.3.1 Across all years and seasons\n90% for low flow - look for inflection point\nPeak flow analysis for spring\n\n\nCode\nggplot(fdcStats, aes(stat, perc, color = variable)) +\n  geom_line() +\n  geom_point(size = 1) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  facet_wrap(~river, scales = \"free\", labeller = global_labellerInt)\n\n\n\n\n\n\n\n13.1.3.2 Grouped by year\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(fdcStatsY |> filter(river == \"west brook\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |> filter(river == \"wb jimmy\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |> filter(river == \"wb mitchell\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |> filter(river == \"wb obear\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\n\n13.1.3.3 Grouped by season\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(fdcStatsS |> filter(river == \"west brook\", !is.na(season)), aes(stat, perc, color = factor(season))) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |> filter(river == \"wb jimmy\", !is.na(season)), aes(stat, perc, color = factor(season))) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |> filter(river == \"wb mitchell\", !is.na(season)), aes(stat, perc, color = factor(season))) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |> filter(river == \"wb obear\", !is.na(season)), aes(stat, perc, color = factor(season))) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\n\n13.1.3.4 Grouped by year and season\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nggplot(fdcStatsYS |> filter(river == \"west brook\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |> filter(river == \"wb jimmy\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |> filter(river == \"wb mitchell\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |> filter(river == \"wb obear\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\n\n13.1.3.5 Proportion of days above/below flow duration curve thresholds\nThresholds defined in fdcThresholds_target in modelFDC_targets.R. Based on season-specific flow duration curves.\n\nBy river, high flowsBy river, low flowsBy area, high flowsBy area, low flows\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propAboveHiFlowThreshRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |> filter(year > 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\n\n13.1.3.6 Proportion of days above/below flow duration curve thresholds for individual fish data\nThresholds defined in fdcThresholds_target in modelFDC_targets.R. Based on season-specific flow duration curves. Individual-specific proportion of days calculated in addEnvironmental3() in getDAtaElectro.R and in addEnvrionmental() in getDataCMR_targets.R.\nThis series of figures confirms that values from cd1 are similar to seasonal values from propFDC_aboveBelow and also shows the indvidual variation in proportion of days stats.\n\nBy river, high flowsBy river, low flowsBy area, high flowsBy area, low flows\n\n\n\n\nCode\nggplot(cd1 |> filter(year > 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) +\n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |> filter(year > 1999), aes(year, propAboveHiFlowThreshByRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |> filter(year > 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |> filter(year > 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerInt)\n\n\n\n\n\n\n\n\n\n\n\n13.1.4 Raw mean flow data\nMean flow data that go into models as independent data. Calculated for each fish based on dates of capture for each interval.\n#### Mean flow data types plotted against each other\n\n\nCode\nggplot(cd1, aes(meanFlow, meanFlowByRiver)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow (m3/s) for the West Brook against stream flow by river\n\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlow, meanFlowByArea)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow (m3/s) against stream flow by area\n\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowByRiver, meanFlowByArea)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow by river (m3/s) against stream flow by area\n\n\n\n\n\n13.1.4.1 Frequency plots of mean flow data types\n\n\nCode\nggplot(cd1, aes(meanFlow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByRiver), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByArea), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Flow m3/s\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n13.1.4.2 Time series plots of flow data types\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByArea), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n\n13.1.5 Raw sd flow data\n\n\nCode\nggplot(cd1, aes(sdFlowByArea_flowExt, sdFlowByRiver)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStandard deviation of stream flow (m3/s) for the West Brook against stream flow by river\n\n\n\n\n\n13.1.5.1 Frequency plots of sd flow data types\n\n\nCode\nggplot(cd1, aes(sdFlow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(sdFlowByRiver), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(sdFlowByArea_flowExt), color = \"green4\", adjust = 2.5) +\n  geom_density(aes(sdFlowByArea_ByRiver), color = \"orange2\", adjust = 2.5) +\n  labs(x = \"Flow m3/s\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStandard deviation in stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n13.1.5.2 Time series plots of standard deviation of flow data types\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  #geom_line(aes(date, sdFlow), color = \"red3\") +\n  geom_line(aes(date, sdFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, sdFlowByArea_flowExt), color = \"green4\") +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"
  },
  {
    "objectID": "modelGrowthFlowByRiver.html#scaled-mean-flow-data",
    "href": "modelGrowthFlowByRiver.html#scaled-mean-flow-data",
    "title": "13  Growth in mass by river/area",
    "section": "13.2 Scaled mean flow data",
    "text": "13.2 Scaled mean flow data\n\n13.2.1 Scaled by season\n\n\nCode\nggplot(cd1, aes(meanFlowByAreaScaledBySeason, meanFlowByRiverScaledBySeason, color = cohort)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeason)) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByRiverScaledBySeason), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByAreaScaledBySeason), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanTemperatureScaledBySeason)) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  #geom_density(aes(meanTemperatureByRiverScaledBySeason), color = \"blue3\", adjust = 2.5) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\n\n13.2.1.1 Time series plots of flow data types scaled by season\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiverScaledBySeason), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByAreaScaledBySeason), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n\n13.2.2 Scaled by season and river\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeasonRiver, meanFlowByRiverScaledBySeasonRiver, color = cohort)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeasonRiver)) +\n  geom_density(color = \"red3\", adjust = 2.5, linewidth = 2) +\n  geom_density(aes(meanFlowByRiverScaledBySeasonRiver), color = \"blue3\", adjust = 2.5, linewidth = 1) +\n  geom_density(aes(meanFlowByAreaScaledBySeasonRiver), color = \"green4\", adjust = 2.5, linewidth = 0.75) +\n  labs(x = \"Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\") +\n  facet_grid(river~season, labeller = global_labellerInt)#, scales = 'free')\n\n\n\n\n\n\n13.2.2.1 Time series plots of flow data types scaled by season and river\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiverScaledBySeasonRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByAreaScaledBySeasonRiver), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerInt)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\nCheck cumulative flow\nStream power as flow metric??"
  },
  {
    "objectID": "modelGrowthFlowByRiver.html#growth-models",
    "href": "modelGrowthFlowByRiver.html#growth-models",
    "title": "13  Growth in mass by river/area",
    "section": "13.3 Growth models",
    "text": "13.3 Growth models\n\n13.3.1 Flow duration curve data\n\n\nCode\nplotFDC_GR_byRiver <- function(d, r){\n  fig1 <- ggplot(d |> filter(riverGG == r), aes(propBelowLoFlowThreshByRiverRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of high flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by river\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 <- ggplot(d |> filter(riverGG == r), aes(propAboveHiFlowThreshByRiverRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of low flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by river\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFDC_GR_byArea <- function(d, r){\n  fig1 <- ggplot(d |> filter(riverGG == r), aes(propBelowLoFlowThreshByRiverArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of high flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by area\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 <- ggplot(d |> filter(riverGG == r), aes(propAboveHiFlowThreshByRiverArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of low flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by area\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\n\nplotFlowGR_byRiverOverlay <- function(d, r){\n  ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(meanFlowByArea_flowExt, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(meanFlowByArea_flowExt, grWeight)) +\n    \n    labs(x = \"Mean flow by river (black = byRiver, green = byArea)\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n13.3.1.1 Flow compared with flow duration curve metrics\n\n\nCode\n ggplot(dGAM, aes(flowByRiverS, propBelowLoFlowThreshByRiver)) +\n   geom_point() +\n   facet_grid(seasonGG ~ riverGG, scales = \"free\")\n\n\n\n\n\n\n\nCode\n ggplot(dGAM, aes(flowByRiverS, propAboveHiFlowThreshByRiver)) +\n   geom_point() +\n   facet_grid(seasonGG ~ riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n13.3.2 Flow standardized by season\n\n13.3.2.1 Environment/growth raw data graphs\n\n\n\n\n\nCode\nplotFlowGR_byRiver <- function(d, r){\n  fig1 <- ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 <- ggplot(d |> filter(riverGG == r), aes(meanFlowByArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by area\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFlowGR_byRiverOverlay <- function(d, r){\n  ggplot(d |> filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(meanFlowByArea_flowExt, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(meanFlowByArea_flowExt, grWeight)) +\n    \n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n\n13.3.2.2 Brook trout - flow\n\n\nCode\ngamS0 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS)^2 + cohortF * ageF +             \n               s(flowS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamS1 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS)^2 + cohortF +             \n               s(flowS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamS2 <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowS)^2 + cohortF * ageF +             \n               s(flowS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamS3 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowS) + cohortF * ageF +             \n               s(flowS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamS0, gamS1, gamS2, gamS3) |> arrange(AIC)\n\n\n             df       AIC\ngamS0 120.25157 -87397.15\ngamS1  71.97796 -86504.12\ngamS2 110.30837 -85848.19\ngamS3  97.07810 -85624.22\n\n\n\n\n13.3.2.3 Brook trout - flow by river\n\n\nCode\ngamS0ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS)^2 + cohortF * ageF +             \n               s(flowByRiverS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamS1ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS)^2 + cohortF +             \n               s(flowByRiverS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamS2ByRiver <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowByRiverS)^2 + cohortF * ageF +             \n               s(flowByRiverS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamS3ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByRiverS) + cohortF * ageF +             \n               s(flowByRiverS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamS0ByRiver, gamS1ByRiver, gamS2ByRiver, gamS3ByRiver) |> arrange(AIC)\n\n\n                    df       AIC\ngamS0ByRiver 116.10016 -87144.28\ngamS1ByRiver  69.02175 -86322.27\ngamS2ByRiver 106.16156 -85679.11\ngamS3ByRiver  97.54369 -85564.21\n\n\n\n\n13.3.2.4 Brook trout - flow by area\n\n\nCode\ngamS0ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS)^2 + cohortF * ageF +             \n               s(flowByAreaS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamS1ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS)^2 + cohortF +             \n               s(flowByAreaS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamS2ByArea <- bam(grWeight ~ (riverGG + seasonGG  + tempS + flowByAreaS)^2 + cohortF * ageF +             \n               s(flowByAreaS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamS3ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempS + flowByAreaS) + cohortF * ageF +             \n               s(flowByAreaS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaS, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempS, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamS0ByArea, gamS1ByArea, gamS2ByArea, gamS3ByArea) |> arrange(AIC)\n\n\n                   df       AIC\ngamS0ByArea 118.94762 -87343.05\ngamS1ByArea  71.86517 -86450.52\ngamS2ByArea 109.76480 -85789.68\ngamS3ByArea  95.89241 -85649.81\n\n\n\n\n13.3.2.5 Brook trout - compare flow and flow by river gams\n\n\nCode\npredictBKTgamS <- function(dIn, modInFlowByRiver, modInFlowByArea){\n\n  predMatByRiver0 <- \n    expand.grid(\n      flowByRiverS = seq(-1.5,1.5,0.25), \n      tempS = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#uunique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = TRUE\n  )\n  predMatByRiver <- \n    add_column(\n      pred = predict.bam(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |> \n    rename(flow = flowByRiverS, temp = tempS)\n  \n  predMatByArea0 <- \n    expand.grid(\n      flowByAreaS = seq(-1.5,1.5,0.25), \n      tempS = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#unique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = FALSE\n    ) \n  predMatByArea <- \n    add_column(\n      pred = predict.bam(modInFlowByArea, predMatByArea0),\n      predMatByArea0\n    ) |> \n    rename(flow = flowByAreaS, temp = tempS)\n\n  return(add_row(predMatByRiver, predMatByArea))\n}\ngamSBKTPredictions <- predictBKTgamS(dGAM, gamS0ByRiver, gamS0ByArea)\n\n\n\n\n13.3.2.6 Graph predictions\nAcross cohorts, small fish\n\n\nCode\nunique(gamSBKTPredictions$observedWeight)\n\n\n [1]   2  22  42  62  82 102 122 142 162 182\n\n\nCode\nggplot(\n  gamSBKTPredictions |> \n    filter(\n      observedWeight %in% c(22), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')\n\n\n\n\n\nAcross cohorts, large fish\n\n\nCode\nggplot(\n  gamSBKTPredictions |> \n    filter(\n      observedWeight %in% c(122), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.03, 0.04) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')\n\n\n\n\n\n\n\n\n13.3.3 Flow std by season/river\n\n\nCode\nplotFlowGR_SR_byRiver <- function(d, r){\n  fig1 <- ggplot(d |> filter(riverGG == r), aes(flowByRiverSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 <- ggplot(d |> filter(riverGG == r), aes(flowByAreaSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by area\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFlowGR_SR_byRiverOverlay <- function(d, r){\n  ggplot(d |> filter(riverGG == r), aes(flowByRiverSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(flowByAreaSR, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(flowByAreaSR, grWeight)) +\n    \n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n13.3.3.1 Brook trout - flow\n\n\nCode\nkIn = 4\nspeciesIn <- \"Brook trout\"\n\ngamSR0 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2 <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR) + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0, gamSR1, gamSR2, gamSR3) |> arrange(AIC)\n\n\n              df       AIC\ngamSR0 118.69693 -87324.21\ngamSR1  68.72459 -86378.09\ngamSR2 109.59850 -85805.33\ngamSR3 102.43371 -85526.74\n\n\n\n\n13.3.3.2 Brook trout - flow by river\n\n\nCode\ngamSR0ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2ByRiver <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0ByRiver, gamSR1ByRiver, gamSR2ByRiver, gamSR3ByRiver) |> arrange(AIC)\n\n\n                     df       AIC\ngamSR0ByRiver 120.02873 -87218.68\ngamSR1ByRiver  71.79121 -86264.17\ngamSR2ByRiver 110.84119 -85736.95\ngamSR3ByRiver 102.51579 -85461.99\n\n\n\n\n13.3.3.3 Brook trout - flow by area\n\n\nCode\ngamSR0ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2ByArea <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByAreaSR)^2 + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3ByArea <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR) + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0ByArea, gamSR1ByArea, gamSR2ByArea, gamSR3ByArea) |> arrange(AIC)\n\n\n                    df       AIC\ngamSR0ByArea 118.69694 -87324.21\ngamSR1ByArea  68.72378 -86378.10\ngamSR2ByArea 109.59850 -85805.33\ngamSR3ByArea 102.43371 -85526.74\n\n\n\n\nCode\npredictBKTgamSR <- function(dIn, modInFlowByRiver, modInFlowByArea){\n\n  predMatByRiver0 <- \n    expand.grid(\n      flowByRiverSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#uunique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = TRUE\n  )\n  predMatByRiver <- \n    add_column(\n      pred = predict.bam(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |> \n    rename(flow = flowByRiverSR, temp = tempSR)\n  \n  predMatByArea0 <- \n    expand.grid(\n      flowByAreaSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#unique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = FALSE\n    ) \n  predMatByArea <- \n    add_column(\n      pred = predict.bam(modInFlowByArea, predMatByArea0),\n      predMatByArea0\n    ) |> \n    rename(flow = flowByAreaSR, temp = tempSR)\n\n  return(add_row(predMatByRiver, predMatByArea))\n}\ngamSR_BKTPredictions <- predictBKTgamSR(dGAM, gamSR0ByRiver, gamSR0ByArea)\n\n\n\n\n13.3.3.4 Graph predictions\nAcross cohorts, small fish\n\n\nCode\nggplot(\n  gamSR_BKTPredictions |> \n    filter(\n      observedWeight %in% c(22), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.005, 0.02) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')\n\n\n\n\n\nAcross cohorts, large fish\n\n\nCode\nggplot(\n  gamSR_BKTPredictions |> \n    filter(\n      observedWeight %in% c(122), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.02, 0.02) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')"
  }
]