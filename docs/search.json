[
  {
    "objectID": "getDataElectroDataRelease.html",
    "href": "getDataElectroDataRelease.html",
    "title": "8  Electrofishing data",
    "section": "",
    "text": "8.1 Get electrofishing data target\nSelect variables for data release\nCode\nlibrary(targets)\ncdWB_electro &lt;- tar_read(cdWB_electro_target)\n\n#str(cdWB_electro)\n\n# Left over variables\n   #                                 &lt;dbl&gt;,  &lt;dbl&gt;,  &lt;dbl&gt;, sdFlow &lt;dbl&gt;, sdFlowByRiver &lt;dbl&gt;, sdFlowByArea_flowExt &lt;dbl&gt;, sdFlowByArea_ByRiver &lt;dbl&gt;, propBelowLoFlowThreshByRiver &lt;dbl&gt;,\n   # propAboveHiFlowThreshByRiver &lt;dbl&gt;, propBelowLoFlowThreshByArea_flowExt &lt;dbl&gt;, propAboveHiFlowThreshByArea_flowExt &lt;dbl&gt;,  &lt;ord&gt;, readerId &lt;lgl&gt;,  &lt;dbl&gt;,  &lt;chr&gt;, instance &lt;lgl&gt;,  &lt;lgl&gt;,\n   # leftOrRight &lt;lgl&gt;, habitat &lt;lgl&gt;, cover &lt;lgl&gt;, justification &lt;lgl&gt;,  &lt;lgl&gt;, &lt;lgl&gt;,  &lt;date&gt;,  &lt;dbl&gt;,  &lt;chr&gt;,  &lt;lgl&gt;,    &lt;dbl&gt;,  &lt;lgl&gt;,  &lt;dbl&gt;,\n   #   &lt;dbl&gt;,  &lt;dbl&gt;, minYear &lt;dbl&gt;,  &lt;dbl&gt;,  &lt;dbl&gt;,\n   # \n   # \n\n\n# select vars and order for data release\ncdWB_electro_DR &lt;- cdWB_electro |&gt;\n  dplyr::select(\n    drainage, species, cohort, river, riverOrdered, \n    tag, nPerInd, survey, pass, nPasses, proportionSampled, \n    section, lagSection, riverMeter, sectionOriginal, area, distMoved, moveDir,\n    detectionDate, lagDetectionDate, year, season, yday, sampleName, sampleNumber, observedLength, observedWeight, \n    lagObservedLength, lagObservedWeight, lagSampleNumber, sampleNumberDiff, sampleInterval, grWeight, grLength, minSample, maxSample,\n    ageInSamples, isYOY, sex,\n    cf, relCF, \n    dateEmigrated,\n    meanTemperature, meanFlow, meanFlowByRiver, meanFlowByArea_flowExt, meanFlowByArea_ByRiver,\n    meanTemperatureScaledBySeason, meanFlowScaledBySeason, meanFlowByRiverScaledBySeason, meanFlowByArea_flowExtScaledBySeason, meanFlowByArea_ByRiverScaledBySeason,\n    comments\n  )\n\nstr(cdWB_electro_DR)\n\n\ntibble [91,103 × 53] (S3: tbl_df/tbl/data.frame)\n $ drainage                            : chr [1:91103] \"west\" \"west\" \"west\" \"west\" ...\n $ species                             : chr [1:91103] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ cohort                              : num [1:91103] 2012 2012 2012 2012 2011 ...\n $ river                               : chr [1:91103] \"wb obear\" \"west brook\" \"west brook\" \"west brook\" ...\n $ riverOrdered                        : Ord.factor w/ 4 levels \"west brook\"&lt;\"wb jimmy\"&lt;..: 4 1 1 1 1 1 1 4 4 1 ...\n $ tag                                 : chr [1:91103] \"00088cbed0\" \"00088cbed3\" \"00088cbed4\" \"00088cbed4\" ...\n $ nPerInd                             : int [1:91103] 1 1 2 2 3 3 3 2 2 3 ...\n $ survey                              : chr [1:91103] \"shock\" \"shock\" \"shock\" \"shock\" ...\n $ pass                                : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ nPasses                             : num [1:91103] 1 2 1 2 2 2 1 1 1 2 ...\n $ proportionSampled                   : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ section                             : num [1:91103] 7 1 40 44 25 32 32 3 3 23 ...\n $ lagSection                          : num [1:91103] NA NA 44 NA 32 32 NA 3 NA 24 ...\n $ riverMeter                          : num [1:91103] 5252 4394 5208 5292 4903 ...\n $ sectionOriginal                     : chr [1:91103] \"7\" \"1\" \"40\" \"44\" ...\n $ area                                : chr [1:91103] \"trib\" \"inside\" \"inside\" \"inside\" ...\n $ distMoved                           : num [1:91103] NA NA -4 NA -7 0 NA 0 NA -1 ...\n $ moveDir                             : num [1:91103] NA NA -1 NA -1 0 NA 0 NA -1 ...\n $ detectionDate                       : POSIXct[1:91103], format: \"2013-03-25 04:00:00\" \"2012-06-07 13:03:00\" ...\n $ lagDetectionDate                    : POSIXct[1:91103], format: NA NA ...\n $ year                                : int [1:91103] 2013 2012 2013 2013 2012 2012 2013 2014 2014 2012 ...\n $ season                              : num [1:91103] 1 2 1 2 2 3 1 3 4 3 ...\n $ yday                                : int [1:91103] 84 159 88 176 160 271 87 260 335 270 ...\n $ sampleName                          : chr [1:91103] \"84\" \"81\" \"84\" \"85\" ...\n $ sampleNumber                        : num [1:91103] 73 70 73 74 70 71 73 79 80 71 ...\n $ observedLength                      : num [1:91103] 62 62 109 154 113 120 147 70 74 86 ...\n $ observedWeight                      : num [1:91103] 1.9 2.7 12.6 41.3 15.5 18.3 30.4 3.5 4.8 6.7 ...\n $ lagObservedLength                   : num [1:91103] NA NA 154 NA 120 147 NA 74 NA 108 ...\n $ lagObservedWeight                   : num [1:91103] NA NA 41.3 NA 18.3 30.4 NA 4.8 NA 12.7 ...\n $ lagSampleNumber                     : num [1:91103] NA NA 74 NA 71 73 NA 80 NA 73 ...\n $ sampleNumberDiff                    : num [1:91103] NA NA 1 NA 1 2 NA 1 NA 2 ...\n $ sampleInterval                      : num [1:91103] NA NA 88.2 NA 110.9 ...\n $ grWeight                            : num [1:91103] NA NA 0.0135 NA 0.0015 ...\n $ grLength                            : num [1:91103] NA NA 0.5102 NA 0.0631 ...\n $ minSample                           : num [1:91103] 73 70 73 73 70 70 70 79 79 71 ...\n $ maxSample                           : num [1:91103] 73 70 74 74 73 73 73 80 80 74 ...\n $ ageInSamples                        : num [1:91103] 3 0 3 4 4 5 7 1 2 1 ...\n $ isYOY                               : logi [1:91103] TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ sex                                 : chr [1:91103] NA NA NA NA ...\n $ cf                                  : num [1:91103] 0.0797 0.1133 0.0973 0.1131 0.1074 ...\n $ relCF                               : num [1:91103] 0.0734 0.1043 0.0886 0.1022 0.102 ...\n $ dateEmigrated                       : Date[1:91103], format: NA NA ...\n $ meanTemperature                     : num [1:91103] NaN NaN 10.7 NaN 16.5 ...\n $ meanFlow                            : num [1:91103] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByRiver                     : num [1:91103] NaN NaN 0.598 NaN 0.135 ...\n $ meanFlowByArea_flowExt              : num [1:91103] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByArea_ByRiver              : num [1:91103] NaN NaN 0.598 NaN 0.135 ...\n $ meanTemperatureScaledBySeason       : num [1:91103] NaN NaN 0.393 NaN 0.819 ...\n $ meanFlowScaledBySeason              : num [1:91103] NaN NaN 0.526 NaN -0.736 ...\n $ meanFlowByRiverScaledBySeason       : num [1:91103] NaN NaN 0.881 NaN -0.225 ...\n $ meanFlowByArea_flowExtScaledBySeason: num [1:91103] NaN NaN 0.822 NaN -0.608 ...\n $ meanFlowByArea_ByRiverScaledBySeason: num [1:91103] NaN NaN 0.881 NaN -0.225 ...\n $ comments                            : chr [1:91103] \"additional genetic sample\" NA NA NA ...\n\n\nCode\n# Save csv for downloading\n#write.csv(cdWB_electro_DR, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/out/dataRelease/cdWB_electro_DR.csv\")\n\n# Save rData file for downloading\n# save(cdWB_electro, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_electro.RData\")",
    "crumbs": [
      "Data releases",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Electrofishing data</span>"
    ]
  },
  {
    "objectID": "getDataElectroDataRelease.html#electrofishing-data-metadata",
    "href": "getDataElectroDataRelease.html#electrofishing-data-metadata",
    "title": "8  Electrofishing data",
    "section": "8.2 Electrofishing data metadata",
    "text": "8.2 Electrofishing data metadata\n\n8.2.1 adapted from https://github.com/Conte-Ecology/westBrookData/blob/master/getWBData/vignettes/westBrookDataIntro.Rmd\n\n8.2.1.1 Column explanations\ndrainage “west” = West Brook drainage.\nspecies\n“bkt” = brook trout (Salvelinus fontinalis, native, self-sustaining population)\n“bnt” = brown trout (Salmo trutta, non-native, self-sustaining population)\n“ats” = Atlantic salmon (Salmo salar, stocked as fry through 2005, no reproduction)\ncohort Year the fish emerged from gravel in the spring (spawning occurred previous autumn), assigned based on size at initial capture and size distributions of fish of known age.\nriver River the fish was observed in. NA if the fish was not observed.\n“west brook” The mainstem (“West Brook” from Letcher et al 2015).\n“wb jimmy” Larger tributary that fish can move back and forth into from WB section 31 (“Open Large” from Letcher et al 2015).\n“wb mitchell” Smaller tributary that fish can move back and forth into from WB section 35 (“Open Small” from Letcher et al 2015).\n“wb obear” Smaller tributary that has a waterfall at its mouth, so fish can only move downstream into WB section 20 (“Isolated Small” from Letcher et al 2015).\nriverOrdered River the fish was observed in, ordered as a factor and renamed. NA if the fish was not observed.\n\n“West Brook” The mainstem (“West Brook” from Letcher et al 2015).\n“Open Large” Larger tributary that fish can move back and forth into from WB section 31 (“Open Large” from Letcher et al 2015).\n“Open Small” Smaller tributary that fish can move back and forth into from WB section 35 (“Open Small” from Letcher et al 2015).\n“Isolated Small” Smaller tributary that has a waterfall at its mouth, so fish can only move downstream into WB section 20 (“Isolated Small” from Letcher et al 2015).\n\ntag PIT tag number, unique identifier, character. Tags are 12-mm, full duplex. Biomark tags were used until 2002 (check this), and then replaced with Destron-fearing tags.\nnPerInd Number of electrofishing occasion observations per individual.\nsurvey “shock” = electroshocking survey. Retained here for compatibility with other data sets.\npass Electrofishing pass. 1 or 2 in the west brook (inside), 1 in tribs.\nnPasses Number of electrofishing passes for the section where the fish was captured. 1 or 2 in the west brook (inside), 1 in tributaries.\nproportionSampled Occasionally the sample was not complete (e.g., skipped west brook but did the tributaries). This is the proportion of sections in the river of capture that were sampled for the given sampling occasion.\nsection Identifier for the 20m section where the fish was captured. This is ordered from downstream to upstream ranging from 1-47 for the inside study area for the West Brook and from 1-14 or 1-15 for the trib area of the tributaries (river wb mitchell starts a -1 to accommodate the downstream PIT tag antenna). Above and below the inside study area in the West Brook, section numbers indicate the number of meters from the downstream or upstream end of the study area.\nlagSection Section number lagged forward one sampling occasion.\nriverMeter River meter from the confluence of the West Brook with the Mill River.\nsectionOriginal Original section number before renumbering. Maintained for compatibility with early data sets.\narea inside = section 1:47 in the west brook, trib = tributary (not west brook), below = sections below inside sections, above = sections above the inside sections.\ndistMoved Meters between locations for consecutive capture occasions.\nmoveDir Direction of movement between locations for consecutive capture occasions, -1 = downstream, 0 = same section, 1 = upstream.\ndetectionDate Date the fish was observed. POSIXct format.\nlagDetectionDate Detection date lagged forward one observation for consecutive capture occasions.\nyear Year of observation.\nseason 1 = spring, 2 = summer, 3 = fall, 4 = winter.\nyday Day of the year of observation [1-366].\nsampleName original sample name before renumbering. Maintained for consistency with early data sets.\nsampleNumber A tidier identifier for samples that strictly increases by one for each season (4/yr) and starts at 1.\nobservedLength Fish fork length in mm (+/-1 mm).\nobservedWeight Fish wet weight in g (+/- 0.1 g).\nlagObservedLength Observed length lagged forward one observation for consecutive capture occasions. NA if not observed.\nlagObservedWeight Observed weight lagged forward one observation for consecutive capture occasions. NA if not observed.\nlagSampleNumber Sample number lagged forward one observation for consecutive capture occasions.\nsampleNumberDiff Difference in sample numbers between consecutive capture occasions.\nsampleInterval Number of days between consecutive capture occasions.\ngrWeight ‘Instantaneous’ growth rate in mass. ln(lagObservedWeight - observedWeight) / sampleInterval.\ngrLength Growth rate in length. (lagObservedLength - observedLength) / sampleInterval.\nminSample Minimum (first) sample number for the individual.\nmaxSample Maximum (last) sample number for the individual.\nageInSamples Number of seasons since summer of the year of birth (1st summer = 0, 1st autumn = 1, etc.).\nisYOY Logical, is the fish a young-of-year (YOY)? YOY here are age-0 fish and age-1 fish in the spring. Age-1 fish are included because there is a very rapid growth in spring and we group smaller fish before rapid growht and older, larger fish.\nsex NA = unknown, f = female, m = male, p = precocious male (salmon only).\ncf Condition factor. (observedWeight / observedLength^3) * 100.\nrelCF Relative condition factor. (observedWeight / expectedWeight) * 100. Expected weight is calculated from the length-weight relationship for the species.\ndateEmigrated Date of emigration from the West Brook if observed to emigrate. Coded as emigrated if last observation was on PIT antenna at the top or the bottom of the West Brook or captured in area = below or above.\nmeanTemperature Mean temperature between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlow Mean flow between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByRiver Mean flow by river between observation dates hindcast from Jenn Fair’s model based on flow estimates from each tributary. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByArea_flowExt Mean flow by area (flow extension) between observation dates. Flow is from the flow extension model scaled by watershed area as a proportion of WB area. This is the flow value used in most West Brook papers before 2022. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByArea_ByRiver Mean flow by area (by river) between observation dates. Flow from the West Brook from Jenn Fair’s model scaled to tributaries based on relative tributary area. If individual was not observed, median observation date for the sampling occasion was used.\nmeanTemperatureScaledBySeason Mean temperature between observation dates scaled within season. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowScaledBySeason Mean flow between observation dates scaled within season. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByRiverScaledBySeason Mean flow by river between observation dates scaled within season. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByArea_flowExtScaledBySeason Mean flow by area (flow extension) between observation dates scaled within season. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlowByArea_ByRiverScaledBySeason Mean flow by area (by river) between observation dates scaled within season. If individual was not observed, median observation date for the sampling occasion was used.\ncomments Comments from the field crew during sampling.",
    "crumbs": [
      "Data releases",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Electrofishing data</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html",
    "href": "modelGrowthInMass.html",
    "title": "17  Growth in mass",
    "section": "",
    "text": "17.1 Get data",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#get-data",
    "href": "modelGrowthInMass.html#get-data",
    "title": "17  Growth in mass",
    "section": "",
    "text": "17.1.1 Get electrofishing data\n\n\nCode\nlibrary(targets)\ncd &lt;- tar_read(cdWB_electro_target) # raw data\n\ncd1 &lt;- tar_read(cd1_target) # from modelGrowthInMass_target\npropNegSRS &lt;- tar_read(propNegSRS_target)\npropNegSRsN &lt;- tar_read(propNegSRsN_target)\n\nindCountsBySpp &lt;- tar_read(indCountsBySpp_target) \nindCounts &lt;- tar_read(indCounts_target) \npropNegLabels &lt;- tar_read(propNegLabels_target)\n\nnegGr_beforeLast &lt;- tar_read(negGr_beforeLast_target)\nnegGr_beforeLastMean &lt;- tar_read(negGr_beforeLastMean_target)\nnegGr_beforeLastMean_year &lt;- tar_read(negGr_beforeLastMean_year_target)\n\nmeanNegSRsN &lt;- tar_read(meanNegSRsN_target)\nmeanNegSRsNWide &lt;- tar_read(meanNegSRsNWide_target)\n\n# df for pairs plots\ncd1Wide_grWeight &lt;- tar_read(cd1Wide_grWeight_target)\ncd1Wide_observedWeight &lt;- tar_read(cd1Wide_observedWeight_target)\n\ndGAM &lt;- tar_read(dGAM_target) # from modelGrowthInMass_target\n\n\n\n\n17.1.2 Get environmental data\n\n\nCode\nlibrary(targets)\ndummy=0 # change to force cache update??\nenvIn &lt;- tar_read(envIn_target)\nenvIn_propNeg &lt;- tar_read(envIn_propNeg_target)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#examine-raw-data",
    "href": "modelGrowthInMass.html#examine-raw-data",
    "title": "17  Growth in mass",
    "section": "17.2 Examine raw data",
    "text": "17.2 Examine raw data\n\n17.2.1 Limit data to consecutive sample captures (cd1)\nPrevious growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.\n\n\nCode\n# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |&gt; \n#   data.frame() |&gt; \n#   filter(Freq &gt; 0) |&gt; \n#   arrange(Var1, Var2) |&gt; \n#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |&gt; \n#   filter(year == 2010)\n\n\n##### in targets\n# cd1 &lt;- cd |&gt; \n#   filter(sampleNumberDiff == 1,\n#          tag %notin% c('1bf20ff490', '1bf20ebe4e')) |&gt; \n#   mutate(negGrowth = grWeight &lt; 0,\n#          month = month(date),\n#          dummy = 1) # change to force cache update\n\n\n\n\n17.2.2 Find outlier growth rates\n\n17.2.2.1 Negative outlier growth\n1bf20ebe4e and 1bf20ff490 have incorrect weights leading to very negative growth rates.\nExclude these tags in cd1_target. The rest of the quite negative growth fish seem plausible (remember we can’t account for stomach contents or egg loss).\n\n\nCode\ncd |&gt; \n  arrange(grWeightS) |&gt; \n  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)\n\n\n# A tibble: 91,103 × 8\n   tag        species season sampleNumber lagSampleNumber observedWeight\n   &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1 1bf20ebe4e bnt          3           55              56           46.5\n 2 257c67e414 bkt          3           59              60            7.3\n 3 1bf0fec291 bkt          3           27              28            2.7\n 4 1bf20ff490 bnt          2           54              55          167. \n 5 257c67b532 bnt          3           63              64           34  \n 6 1bf1984439 bnt          1           41              43           61.8\n 7 00088d1ad4 bnt          3           63              64            4.5\n 8 257c67db60 bnt          3           63              64           24.2\n 9 00088d0b59 bnt          3           63              64            3.7\n10 414b684955 ats          3           15              16            5.7\n# ℹ 91,093 more rows\n# ℹ 2 more variables: lagObservedWeight &lt;dbl&gt;, grWeightS &lt;dbl&gt;\n\n\n\n\n17.2.2.2 Positive outlier growth\nLots of very fast growth mostly in the spring. No clear way to exclude fish. 1c2c582218 is excluded in cd1_target because of very high growth in length.\n\n\nCode\ncd1 |&gt; \n  arrange(desc(grWeightS)) |&gt; \n  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |&gt; \n  print(n = 10)\n\n\n# A tibble: 24,297 × 8\n   tag        species season sampleNumber lagSampleNumber observedWeight\n   &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1 1bf1020623 bkt          1           29              30            1.3\n 2 0009f6eef4 bkt          1           77              78            2.3\n 3 413f4b1845 ats          1           13              14            1.8\n 4 1bf16366cf bnt          1           33              34            2  \n 5 410a015165 ats          1           13              14            2.1\n 6 00088d2d2c bkt          1           73              74            1.8\n 7 410a0f0653 ats          1           13              14            2.2\n 8 1bf18b7637 bkt          1           33              34            2.5\n 9 1bf20e4e30 bnt          1           53              54            2.3\n10 1bf1930917 ats          1           37              38            1.9\n# ℹ 24,287 more rows\n# ℹ 2 more variables: lagObservedWeight &lt;dbl&gt;, grWeightS &lt;dbl&gt;\n\n\n\n\n\n17.2.3 Numbers of observations for analysis\n\n\nCode\nmin(cd1$year)\n\n\n[1] 1997\n\n\nCode\nmax(cd1$year)\n\n\n[1] 2016\n\n\nCode\ntable(cd1$species, cd1$year)\n\n\n     \n      1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010\n  ats  762 1576 1395 1183 1004  615 1076  935  644  234   31    8    0    0\n  bkt    0    0    0  139  367  535 1135  953  874  588  344  589  971  890\n  bnt    0    0    0  357  453  211  190  161  368  467  204  298  483  469\n     \n      2011 2012 2013 2014 2015 2016\n  ats    0    0    0    0    0    0\n  bkt  382  618  708  582  471    1\n  bnt   89  119  513  161  144    0\n\n\nCode\ntable(cd1$species)\n\n\n\n  ats   bkt   bnt \n 9463 10147  4687 \n\n\n\n\nCode\nlength(unique(cd1$tag))\n\n\n[1] 13119\n\n\nCode\ncd1 |&gt; \n  group_by(species) |&gt; \n  summarize(tag = (unique(tag))) |&gt; \n  reframe(count = n())\n\n\n# A tibble: 3 × 2\n  species count\n  &lt;chr&gt;   &lt;int&gt;\n1 ats      4541\n2 bkt      5786\n3 bnt      2792\n\n\n\n17.2.3.1 Fish that ever lost weight\n\n\nCode\n# How many missing growth rates are there?\ntable(is.na(cd1$grWeight))\n\n\n\nFALSE  TRUE \n24193   104 \n\n\nCode\neverLost = cd1 |&gt;\n  group_by(tag) |&gt;\n  mutate(\n    everLostMass = any(grWeight &lt; 0, na.rm = TRUE),\n    numObsLostMass = sum(everLostMass, na.rm = TRUE),\n  ) |&gt;\n  ungroup()\n\n\neverLost |&gt;\n  #filter(nPerInd &gt; 1) |&gt; # this makes no difference\n  group_by(speciesGG) |&gt;\n  summarize(\n    propEverLostMass = sum(everLostMass, na.rm = TRUE) / n()\n  ) \n\n\n# A tibble: 3 × 2\n  speciesGG       propEverLostMass\n  &lt;ord&gt;                      &lt;dbl&gt;\n1 Brook trout                0.302\n2 Brown trout                0.130\n3 Atlantic salmon            0.453\n\n\nCode\n####\neverLostSeason = cd1 |&gt;\n  group_by(tag, season) |&gt;\n  mutate(\n    everLostMass = any(grWeight &lt; 0, na.rm = TRUE)\n  ) |&gt;\n  ungroup()\n\neverLostSeason |&gt;\n  group_by(seasonGG) |&gt;\n  summarize(\n    propEverLostMass = sum(everLostMass, na.rm = TRUE) / n()\n  )\n\n\n# A tibble: 4 × 2\n  seasonGG propEverLostMass\n  &lt;ord&gt;               &lt;dbl&gt;\n1 Spring            0.00153\n2 Summer            0.321  \n3 Autumn            0.195  \n4 Winter            0.0745 \n\n\nCode\n###\n\neverLostSeason |&gt;\n  group_by(speciesGG, seasonGG) |&gt;\n  summarize(\n    propEverLostMass = sum(everLostMass, na.rm = TRUE) / n()\n  )\n\n\n# A tibble: 12 × 3\n# Groups:   speciesGG [3]\n   speciesGG       seasonGG propEverLostMass\n   &lt;ord&gt;           &lt;ord&gt;               &lt;dbl&gt;\n 1 Brook trout     Spring           0.000409\n 2 Brook trout     Summer           0.282   \n 3 Brook trout     Autumn           0.195   \n 4 Brook trout     Winter           0.0453  \n 5 Brown trout     Spring           0.00466 \n 6 Brown trout     Summer           0.106   \n 7 Brown trout     Autumn           0.0618  \n 8 Brown trout     Winter           0.0524  \n 9 Atlantic salmon Spring           0.00127 \n10 Atlantic salmon Summer           0.472   \n11 Atlantic salmon Autumn           0.276   \n12 Atlantic salmon Winter           0.113   \n\n\n\n\n\n17.2.4 Raw length, weight data graphs\n\n17.2.4.1 Distribution of growth rates\n\n\nCode\nggplot(cd1, aes(grWeight, color = speciesGG, linetype = speciesGG)) +\n  geom_freqpoly(bins = 50, linewidth = 1.25) +\n  labs(x = \"Growth in mass (/d)\", y = \"Frequency\") +\n  #scale_color_discrete() +\n  geom_vline(xintercept = 0) +\n  xlim(c(-0.01, 0.028)) +\n  theme_publication(base_size = 18) +\n  scale_color_grey() +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1, aes(grLength, color = speciesGG)) +\n  geom_freqpoly(bins = 50) +\n  labs(x = \"Growth in Length (mm/d)\", y = \"Frequency\") +\n  scale_color_discrete() +\n  geom_vline(xintercept = 0) +\n  theme_publication() +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(speciesGG == \"Brook trout\", seasonGG == \"Summer\", riverGG == \"West Brook\", grWeight &lt; 0), aes(grWeight, group = factor(year), color = factor(year))) +\n  geom_freqpoly(bins = 10) +\n  theme_publication() + \n  theme(axis.text.x = element_text(vjust = 0.5, angle = 45)) +\n  labs(x = \"Instantaneous growth rate in mass (mg/d)\", y = \"Frequency\") +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\n\n\n\n17.2.5 Length vs weight by species\nVery few outliers\n\n\nCode\nplotLenW &lt;- function(d, s){\n  ggplot(d |&gt; filter(species == s), aes(observedLength, observedWeight)) +\n    geom_point(alpha = 0.5, size = 1) +\n    scale_x_log10() +\n    scale_y_log10() +\n    #ggtitle(s) +\n    labs(x = \"Length (mm)\", y = \"Mass (mg)\") +\n    scale_color_discrete() +\n    theme_publication() +\n    facet_grid(riverGG~year, scales = 'free')\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotLenW(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotLenW(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotLenW(cd1, \"ats\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.2.6 Weight vs weight at next sample\n\n\nCode\nplotWW &lt;- function(d, spp){\n  ggplot(d |&gt; filter(species == spp), aes(observedWeight, lagObservedWeight, color = seasonGG)) +\n    geom_point(alpha = 0.15) +\n    guides(color = guide_legend(override.aes = list(alpha = 1))) +\n    labs(x = \"Mass (mg)\", y = \"Mass (mg) at next sample\") +\n    scale_color_discrete() +\n    theme_publication() +\n    facet_wrap(~riverGG, scales = 'free')\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotWW(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotWW(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotWW(cd1, \"ats\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.2.7 Growth rate pairs plots\nBy species, all cohorts\nRow and column labels in the pairs plots are ‘age’_‘season’\n\n\nCode\nplotPairs &lt;- function(d0, sppIn, cohortIn, firstSamp = 1, lastSamp = 9, upperBlank = FALSE){\n  d &lt;- d0 |&gt; \n    filter(speciesGG == sppIn, cohort %in% cohortIn) |&gt; \n    select_if(~any(!is.na(.))) |&gt;  # remove all-NA columns\n    filter(firstObserved != lastObserved - 1) # remove single obs fish\n  \n  lowerFn &lt;- function(data, mapping, method = \"lm\", ...) {\n    ggplot(data = data, mapping = mapping) +\n      geom_vline(xintercept = 0, color = 'darkgrey') +\n      geom_hline(yintercept = 0, color = 'darkgrey') +\n      geom_abline(intercept = 0, slope = 1) +\n      geom_smooth(aes(color = factor(cohort)), method = method, se = FALSE, ...) +\n      geom_point(aes(color = factor(cohort))) +\n      geom_smooth(color = 'black', size = 1.1, method = method, se = FALSE, ...) +\n      theme_publication() \n  }\n\n  if(upperBlank) {\n    out &lt;- ggpairs(\n      d |&gt; \n        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),\n      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column\n      lower = list(continuous = wrap(lowerFn, method = \"lm\")),\n      upper = \"blank\"\n    ) \n  } else {\n    out &lt;- ggpairs(\n      d |&gt; \n        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),\n      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column\n      lower = list(continuous = wrap(lowerFn, method = \"lm\"))\n    )\n  }\n  return(out)\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2000:2015, 1, 9)\n\n\n\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Brook trout\", 2000:2015)\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brown trout\", 2000:2015, 1, 9)\n\n\n\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Brook trout\", 2000:2015)\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Atlantic salmon\", 2000:2015, 1, 8) # missing data in column 9\n\n\n\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Atlantic salmon\", 2000:2015)\n\n\n\n\n\n\n17.2.7.1 Brook trout by cohort\nRow and column labels are ‘age’_‘season’\nColor by river - make new function\nThere’s an error in plotPairs(), commenting out for now 4/5/2024\n\n200020012002200320042005200620072008200920102011201220132014\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2000, 1, 8, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2001, 1, 8, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2002, 1, 9, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2003, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2004, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2005, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2006, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2007, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2008, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2009, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2010, 1, 8, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2011, 1, 7, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2012, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2013, upperBlank = TRUE)\n\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_grWeight, \"Brook trout\", 2014, 1, 5, upperBlank = TRUE)\n\n\n\n\n\n\n\n17.2.7.2 Consecutive season growth comparisons by age_season\nBrook trout\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014, `0_4` &lt; 0.01), aes(`0_3`, `0_4`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +\n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`0_4`, `1_1`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`1_1`, `1_2`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`1_2`, `1_3`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2012), aes(`1_1`, `2_1`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\n\n\n\n17.2.8 Growth rate in length vs growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeight)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Growth in length\", y = \"Growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nplotGrLenMass &lt;- function(d, s){\n  ggplot(cd1 |&gt; filter(species==s), aes(grLength, grWeight, color = factor(year))) +\n    geom_point(alpha = 0.5) +\n    geom_smooth(method=\"lm\", se=FALSE) +\n    guides(size = guide_legend(override.aes = list(alpha = 1))) +\n    labs(x = \"Growth in length\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    theme_publication(legendPosition = \"right\", legendDirection = \"vertical\") +\n    facet_wrap(~seasonGG, scales = 'free')  \n}\n#  facet_wrap(~year)\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotGrLenMass(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotGrLenMass(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotGrLenMass(cd1, \"ats\")\n\n\n\n\n\n\n\n\n\n\n\n\nNo relationship between means of neg and pos growth\n\n\nCode\nggplot(meanNegSRsN |&gt; filter(speciesGG == \"Brook trout\"), aes(year, meanNegPos, color = negGrowth, group = negGrowth)) +\n  geom_point() +\n  geom_line() +\n  geom_hline(yintercept = 0) +\n  theme_publication() +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(meanNegSRsNWide, aes(`FALSE`, `TRUE`)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#body-size-effect-on-probability-of-negative-growth",
    "href": "modelGrowthInMass.html#body-size-effect-on-probability-of-negative-growth",
    "title": "17  Growth in mass",
    "section": "17.3 Body size effect on probability of negative growth",
    "text": "17.3 Body size effect on probability of negative growth\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), riverGG == \"West Brook\", seasonGG %in% c(\"Summer\", \"Autumn\")), aes(observedWeight, negGrowth*1, color = speciesGG, fill = speciesGG)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_dotplot(x = observedWeight, y = negGrowth*1, fill = speciesGG) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\")\n              \n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  scale_color_grey() +\n  scale_fill_grey() +\n  xlim(c(0,200)) +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n\n\nCode\ndfPlot &lt;- cd1 |&gt; filter(\n  !is.na(negGrowth), \n  riverGG == \"West Brook\", \n  seasonGG %in% c(\"Summer\", \"Autumn\", \"Winter\")\n)\n\nggplot(dfPlot) +\n  geom_point(\n    aes(observedWeight, negGrowth*1, colour = speciesGG, fill = speciesGG),\n    alpha = 0\n  ) +\n  \n  geom_density(\n    aes(x = observedWeight, y = (-..density..* 4 + 1) , \n        linetype = speciesGG),\n    color = \"grey15\", \n    data = dfPlot |&gt; \n      filter(negGrowth == TRUE)\n  ) +\n  \n  geom_density(\n    aes(x = observedWeight, ..density..* 4, \n        linetype = speciesGG\n        ),\n    color = \"grey15\", \n    data = dfPlot |&gt;\n      filter(negGrowth == FALSE)\n  ) +\n\n  geom_smooth(\n    aes(observedWeight, negGrowth*1, \n        color = speciesGG, \n        fill = speciesGG, \n        linetype = speciesGG),\n      method = \"glm\", \n      method.args = list(family = \"binomial\")\n  ) +\n  theme_publication(base_size = 20) +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  #scale_color_manual(values = c(\"black\",\"black\",\"black\")) +\n  scale_color_grey() +\n  scale_fill_grey() +\n  #scale_fill_brewer() +\n  xlim(c(0,200)) +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n\n\nCode\n#####################3\n\nggplot(cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG %in% c(\"Summer\", \"Autumn\")), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              color = \"black\"\n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n####\ndataPlotBKT &lt;- cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG %in% c(\"Summer\", \"Autumn\"))\nggplot(\n  dataPlotBKT, \n    aes(observedWeight, negGrowth*1)\n  ) +\n  geom_density(\n    aes(x = observedWeight, y = (-..density..* 4 + 1) ),\n    data = dataPlotBKT |&gt; \n      filter(negGrowth == TRUE), color = \"grey15\"\n    ) +\n  \n  geom_density(\n    aes(x = observedWeight, ..density..* 4), \n    data = dataPlotBKT |&gt; \n      filter(negGrowth == FALSE), color = \"grey15\"\n    ) +\n  \n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              color = \"black\"\n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n############################\n\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG != \"Spring\"), aes(observedWeight, negGrowth*1, color = speciesGG)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\")\n              \n              #se = FALSE\n              ) +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG != \"Spring\"), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth() +\n  geom_smooth(method = \"lm\") +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\"), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth() +\n  geom_smooth(method = \"lm\") +\n  theme_publication() +  \n  facet_grid(speciesGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(observedWeight, grWeight*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(ageInSamples, grWeight*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001, ageInSamples &gt; 0), aes(ageInSamples, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#flow-and-temperature-growth-relationships",
    "href": "modelGrowthInMass.html#flow-and-temperature-growth-relationships",
    "title": "17  Growth in mass",
    "section": "17.4 Flow and temperature growth relationships",
    "text": "17.4 Flow and temperature growth relationships\n\n17.4.1 Mean flow effect on growth?\n\n\nCode\nplotFlowGR &lt;- function(d, r){\nggplot(d |&gt; filter(river == r), aes(meanFlowByRiver, grWeight, color = speciesGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_smooth(se = FALSE) +\n  geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n  labs(x = \"Mean flow\", y = \"Growth in mass\") +\n  scale_color_discrete() +\n  #ggtitle(r) +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR(cd1, \"west brook\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb jimmy\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb mitchell\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb obear\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.4.2 Mean temperature effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nplotTempGR &lt;- function(d, s){\n  ggplot(d |&gt; filter(seasonGG == s), aes(meanTemperature, grWeight, color = speciesGG)) +\n    geom_point(alpha = 0.5)  +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    geom_smooth(se = FALSE, color = 'darkgrey') +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = 'darkgrey') +\n    labs(x = \"Mean temperature (c)\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n   # ggtitle(s) +\n    theme_publication() +  \n    facet_grid(speciesGG~riverGG)#, scales = 'free')\n}\n\n\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotTempGR(cd1, \"Spring\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Summer\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Autumn\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Winter\")",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#proportion-of-observations-with-negative-growth",
    "href": "modelGrowthInMass.html#proportion-of-observations-with-negative-growth",
    "title": "17  Growth in mass",
    "section": "17.5 Proportion of observations with negative growth",
    "text": "17.5 Proportion of observations with negative growth\nCounts/proportions of negative growth\nProportions for Table 1\n\n\nCode\n# All\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  mutate(nTotal = n()) |&gt; \n  group_by(nTotal, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  mutate(prop = n/nTotal)\n\n\n# A tibble: 2 × 4\n# Groups:   nTotal [1]\n  nTotal negGrowth     n  prop\n   &lt;int&gt; &lt;lgl&gt;     &lt;int&gt; &lt;dbl&gt;\n1  24193 FALSE     20620 0.852\n2  24193 TRUE       3573 0.148\n\n\nCode\n#by river\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   riverGG [4]\n  riverGG        `FALSE` `TRUE`   prop\n  &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook       15496   2937 0.159 \n2 Open Large        1661    268 0.139 \n3 Open Small        1129     93 0.0761\n4 Isolated Small    2334    275 0.105 \n\n\nCode\n#by species\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(species, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 3 × 4\n# Groups:   species [3]\n  species `FALSE` `TRUE`   prop\n  &lt;chr&gt;     &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 ats        7445   2003 0.212 \n2 bkt        8745   1344 0.133 \n3 bnt        4430    226 0.0485\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`    prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;   &lt;dbl&gt;\n1      1    5857      7 0.00119\n2      2    5438   2151 0.283  \n3      3    5675   1150 0.168  \n4      4    3650    265 0.0677 \n\n\n\n17.5.0.1 Brook trout\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`     prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n1      1    2435      1 0.000411\n2      2    2492    825 0.249   \n3      3    2250    449 0.166   \n4      4    1568     69 0.0422  \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   riverGG [4]\n  riverGG        `FALSE` `TRUE`   prop\n  &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook        4121    739 0.152 \n2 Open Large        1255    241 0.161 \n3 Open Small        1035     89 0.0792\n4 Isolated Small    2334    275 0.105 \n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 16 × 5\n# Groups:   season, riverGG [16]\n   season riverGG        `FALSE` `TRUE`      prop\n    &lt;dbl&gt; &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;\n 1      1 West Brook        1247      1  0.000801\n 2      1 Open Large         307     NA NA       \n 3      1 Open Small         294     NA NA       \n 4      1 Isolated Small     587     NA NA       \n 5      2 West Brook        1340    565  0.297   \n 6      2 Open Large         342    135  0.283   \n 7      2 Open Small         231     44  0.16    \n 8      2 Isolated Small     579     81  0.123   \n 9      3 West Brook         959    159  0.142   \n10      3 Open Large         368     83  0.184   \n11      3 Open Small         264     33  0.111   \n12      3 Isolated Small     659    174  0.209   \n13      4 West Brook         575     14  0.0238  \n14      4 Open Large         238     23  0.0881  \n15      4 Open Small         246     12  0.0465  \n16      4 Isolated Small     509     20  0.0378  \n\n\n\n\n17.5.0.2 Brown trout\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`    prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;   &lt;dbl&gt;\n1      1    1067      4 0.00373\n2      2    1299    108 0.0768 \n3      3    1454     83 0.0540 \n4      4     610     31 0.0484 \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 3 × 4\n# Groups:   riverGG [3]\n  riverGG    `FALSE` `TRUE`   prop\n  &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook    3946    201 0.0485\n2 Open Large     390     21 0.0511\n3 Open Small      94      4 0.0408\n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 12 × 5\n# Groups:   season, riverGG [12]\n   season riverGG    `FALSE` `TRUE`     prop\n    &lt;dbl&gt; &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n 1      1 West Brook     959      4  0.00415\n 2      1 Open Large      85     NA NA      \n 3      1 Open Small      23     NA NA      \n 4      2 West Brook    1172    103  0.0808 \n 5      2 Open Large     102      4  0.0377 \n 6      2 Open Small      25      1  0.0385 \n 7      3 West Brook    1309     71  0.0514 \n 8      3 Open Large     121     11  0.0833 \n 9      3 Open Small      24      1  0.04   \n10      4 West Brook     506     23  0.0435 \n11      4 Open Large      82      6  0.0682 \n12      4 Open Small      22      2  0.0833 \n\n\n\n\n17.5.0.3 Atlantic salmon\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`     prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n1      1    2355      2 0.000849\n2      2    1647   1218 0.425   \n3      3    1971    618 0.239   \n4      4    1472    165 0.101   \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 2 × 4\n# Groups:   riverGG [2]\n  riverGG    `FALSE` `TRUE`  prop\n  &lt;ord&gt;        &lt;int&gt;  &lt;int&gt; &lt;dbl&gt;\n1 West Brook    7429   1997 0.212\n2 Open Large      16      6 0.273\n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 8 × 5\n# Groups:   season, riverGG [8]\n  season riverGG    `FALSE` `TRUE`      prop\n   &lt;dbl&gt; &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;\n1      1 West Brook    2350      2  0.000850\n2      1 Open Large       5     NA NA       \n3      2 West Brook    1644   1216  0.425   \n4      2 Open Large       3      2  0.4     \n5      3 West Brook    1966    617  0.239   \n6      3 Open Large       5      1  0.167   \n7      4 West Brook    1469    162  0.0993  \n8      4 Open Large       3      3  0.5     \n\n\n\n\n17.5.1 Proportion of observations with negative growth by species/river/season\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth)), aes(negGrowth)) +\n  geom_bar() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG+riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\n\n\n17.5.2 Proportion of observations with negative growth by species/season\n\n\nCode\n#fig for MS\nggplot(propNegSRS |&gt; filter(n &gt; 50), aes(seasonGG, propNeg, group = riverGG, shape = riverGG)) +\n  geom_point(size = 4) +\n  geom_line() +\n  labs(x = \"Season\", y = \"Prop. of obs. with negative growth in mass\") +\n  #scale_color_grey() +\n  theme_publication(base_size = 20) +  \n  theme(axis.text.x = element_text(angle = 360-45, vjust = 0, hjust = 0.5)) +\n  facet_wrap(~speciesGG)\n\n\n\n\n\n\n\n\n\n\n\n17.5.3 Proportion of observations with negative growth by species/river/year\n\n\nCode\nplotPropNegByRiver &lt;- function(d, spp){\n  ggplot(d |&gt; filter(n &gt; 20,  speciesGG == spp), \n         aes(year, propNeg, color = factor(seasonGG))) +\n    geom_point(aes(size = n)) +\n    geom_line() +\n    labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n    scale_color_discrete() +\n    theme_publication() +  \n    facet_wrap(~riverGG)\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN, \"Brook trout\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN |&gt; filter(riverGG != \"Open Small\"), \"Brown trout\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN, \"Atlantic salmon\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.5.4 Proportion of observations with negative growth by species/river/year\nBreak down season by year, compare across rivers\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10), aes(year, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nFigure 5\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 15, seasonGG == \"Summer\", speciesGG == \"Brook trout\", year &gt; 2001), aes(year, propNeg, shape = riverGG)) +\n  geom_point(size = 4) +\n  geom_line() +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication(base_size = 20)\n\n\n\n\n\n\n\n\n\nTrends across years\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001), aes(year, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se=FALSE) +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +\n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\n# Regression\npropNegYear =lm(propNeg~year*riverGG, data = propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brook trout\"))\n\nsummary(propNegYear)\n\n\n\nCall:\nlm(formula = propNeg ~ year * riverGG, data = filter(propNegSRsN, \n    n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brook trout\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.35591 -0.11275 -0.02433  0.07847  0.64231 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)     2.739e-01  1.784e+01   0.015    0.988\nyear           -2.120e-05  8.887e-03  -0.002    0.998\nriverGG.L      -2.231e+01  2.964e+01  -0.753    0.456\nriverGG.Q       4.160e+01  3.568e+01   1.166    0.251\nriverGG.C       5.250e+01  4.084e+01   1.285    0.206\nyear:riverGG.L  1.106e-02  1.476e-02   0.749    0.458\nyear:riverGG.Q -2.075e-02  1.777e-02  -1.167    0.250\nyear:riverGG.C -2.614e-02  2.035e-02  -1.285    0.207\n\nResidual standard error: 0.2096 on 38 degrees of freedom\nMultiple R-squared:  0.1758,    Adjusted R-squared:  0.02398 \nF-statistic: 1.158 on 7 and 38 DF,  p-value: 0.3493\n\n\nCode\nanova(propNegYear)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n             Df  Sum Sq  Mean Sq F value Pr(&gt;F)\nyear          1 0.03074 0.030745  0.6995 0.4082\nriverGG       3 0.22715 0.075716  1.7228 0.1786\nyear:riverGG  3 0.09834 0.032780  0.7458 0.5315\nResiduals    38 1.67007 0.043949               \n\n\nCode\npropNegYearBNT =lm(propNeg~year, data = propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brown trout\", riverGG == \"West Brook\"))\n\nsummary(propNegYearBNT)\n\n\n\nCall:\nlm(formula = propNeg ~ year, data = filter(propNegSRsN, n &gt; 15, \n    year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brown trout\", \n    riverGG == \"West Brook\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.07402 -0.05541 -0.02584  0.01809  0.17197 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)  2.214267  10.863046   0.204    0.842\nyear        -0.001066   0.005409  -0.197    0.847\n\nResidual standard error: 0.08037 on 11 degrees of freedom\nMultiple R-squared:  0.003518,  Adjusted R-squared:  -0.08707 \nF-statistic: 0.03883 on 1 and 11 DF,  p-value: 0.8474\n\n\nCode\nanova(propNegYearBNT)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n          Df   Sum Sq   Mean Sq F value Pr(&gt;F)\nyear       1 0.000251 0.0002508  0.0388 0.8474\nResiduals 11 0.071051 0.0064592               \n\n\nCode\npropNegYearATS =lm(propNeg~year, data = propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Atlantic salmon\", riverGG == \"West Brook\"))\n\nsummary(propNegYearBNT)\n\n\n\nCall:\nlm(formula = propNeg ~ year, data = filter(propNegSRsN, n &gt; 15, \n    year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brown trout\", \n    riverGG == \"West Brook\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.07402 -0.05541 -0.02584  0.01809  0.17197 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)  2.214267  10.863046   0.204    0.842\nyear        -0.001066   0.005409  -0.197    0.847\n\nResidual standard error: 0.08037 on 11 degrees of freedom\nMultiple R-squared:  0.003518,  Adjusted R-squared:  -0.08707 \nF-statistic: 0.03883 on 1 and 11 DF,  p-value: 0.8474\n\n\nCode\nanova(propNegYearBNT)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n          Df   Sum Sq   Mean Sq F value Pr(&gt;F)\nyear       1 0.000251 0.0002508  0.0388 0.8474\nResiduals 11 0.071051 0.0064592",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#negative-growth-by-individual",
    "href": "modelGrowthInMass.html#negative-growth-by-individual",
    "title": "17  Growth in mass",
    "section": "17.6 Negative growth by individual",
    "text": "17.6 Negative growth by individual\nPlot growth negative/positive for individual fish that lost mass. Order the individuals on the y-axis by proportion of observations that were negative.\n\n\nCode\nplotIndNegGrowth &lt;- function(sppIn, maxGr = 0){\n  ggplot(\n    cd1 |&gt; \n      filter(\n        species == sppIn, \n        cohort &gt;= 2000, cohort &lt;= 2013, \n        !is.na(negGrowth), \n        ageInSamples &gt; 0,\n        propNegGrowthByInd &gt; maxGr,\n        ageInSamples &lt; 12\n        ), \n    aes(ageInSamples, reorder(tag, propNegGrowthByInd))\n  ) +\n  geom_tile(\n    aes(fill = negGrowth)#, colour = \"grey50\", linewidth = 0.2\n  ) +\n  scale_y_discrete(\"Individual fish\") +\n  scale_x_continuous(\n    \"Season and age\",\n    breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15),\n    labels = c(\"F0\", \"W0\", \"S1\", \"S1\", \"F1\", \"W1\", \"S2\", \"S2\",\"F2\", \"W2\", \"S3\", \"S3\",\"F3\", \"W3\", \"S4\")) +\n  scale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n  theme(\n    axis.text.y=element_blank(),\n    axis.ticks.y=element_blank()\n  ) +\n  facet_wrap(~cohort, scales = \"free\")\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotIndNegGrowth(\"bkt\", -1)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotIndNegGrowth(\"bnt\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotIndNegGrowth(\"ats\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndistinctIndNegGrowth &lt;- \n  cd1 |&gt; \n    filter(\n      #species == \"bkt\", \n      cohort &gt;= 2000, cohort &lt;= 2013, \n      !is.na(negGrowth), \n      ageInSamples &gt; 0,\n      #propNegGrowthByInd &gt; maxGr,\n      ageInSamples &lt; 12\n    ) |&gt; \n  dplyr::select(tag, speciesGG, propNegGrowthByInd, nPerInd) |&gt; \n  distinct() |&gt; \n  mutate(numNegIntervals = as.integer(propNegGrowthByInd * nPerInd))\n  \n  ggplot(\n    distinctIndNegGrowth,\n    aes(numNegIntervals)\n  ) +\n  geom_bar(aes(fill = speciesGG), position = \"dodge\") +\n  scale_fill_grey() +\n  theme_publication() +\n  labs(\n    x = \"Number of intervals with negative growth\", \n    y = \"Count\"\n  ) +\n  xlim(c(-0.5, 5))\n\n\n\n\n\n\n\n\n\nCode\n  distinctIndNegGrowth |&gt; \n    group_by(speciesGG, numNegIntervals) |&gt; \n    summarize(\n      nNegGrowthIntervals = n()\n    )\n\n\n# A tibble: 17 × 3\n# Groups:   speciesGG [3]\n   speciesGG       numNegIntervals nNegGrowthIntervals\n   &lt;ord&gt;                     &lt;int&gt;               &lt;int&gt;\n 1 Brook trout                   0                3872\n 2 Brook trout                   1                1079\n 3 Brook trout                   2                 105\n 4 Brook trout                   3                  15\n 5 Brook trout                   4                   1\n 6 Brown trout                   0                2320\n 7 Brown trout                   1                 176\n 8 Brown trout                   2                  18\n 9 Brown trout                   3                   1\n10 Brown trout                   5                   1\n11 Atlantic salmon               0                1403\n12 Atlantic salmon               1                 741\n13 Atlantic salmon               2                 192\n14 Atlantic salmon               3                  38\n15 Atlantic salmon               4                   9\n16 Atlantic salmon               5                   4\n17 Atlantic salmon               6                   1\n\n\nCode\n  distinctIndNegGrowth |&gt; \n  group_by(speciesGG) |&gt; \n  summarize(\n    nNegGrowthIntervals = n()\n  )\n\n\n# A tibble: 3 × 2\n  speciesGG       nNegGrowthIntervals\n  &lt;ord&gt;                         &lt;int&gt;\n1 Brook trout                    5072\n2 Brown trout                    2516\n3 Atlantic salmon                2388\n\n\nCode\n  #bkt\n  (propBKTNegGr &lt;- 1 - 3872/5072)\n\n\n[1] 0.2365931\n\n\nCode\n    #bnt\n  (propBNTNegGr &lt;- 1 - 2320/2516)\n\n\n[1] 0.07790143\n\n\nCode\n    #bnt\n  (propATSNegGr &lt;- 1 - 1403/2388)\n\n\n[1] 0.4124791",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#mean-growth-rates-losers_gainers",
    "href": "modelGrowthInMass.html#mean-growth-rates-losers_gainers",
    "title": "17  Growth in mass",
    "section": "17.7 Mean growth rates losers_gainers",
    "text": "17.7 Mean growth rates losers_gainers\n\n17.7.1 Overall\n\n\nCode\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(negGrowth) |&gt; \n  summarize(\n    n = n(),\n    meanGrowth = mean(grWeight),\n    sdGrowth = sd(grWeight) \n  )\n\n\n# A tibble: 2 × 4\n  negGrowth     n meanGrowth sdGrowth\n  &lt;lgl&gt;     &lt;int&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 FALSE     20620   0.00567  0.00607 \n2 TRUE       3573  -0.000924 0.000817\n\n\n\n\n17.7.2 By species\n\n\nCode\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(species, negGrowth) |&gt; \n  summarize(\n    n = n(),\n    meanGrowth = mean(grWeight),\n    sdGrowth = sd(grWeight) \n  )\n\n\n# A tibble: 6 × 5\n# Groups:   species [3]\n  species negGrowth     n meanGrowth sdGrowth\n  &lt;chr&gt;   &lt;lgl&gt;     &lt;int&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 ats     FALSE      7445   0.00584  0.00707 \n2 ats     TRUE       2003  -0.000769 0.000552\n3 bkt     FALSE      8745   0.00567  0.00545 \n4 bkt     TRUE       1344  -0.00117  0.00106 \n5 bnt     FALSE      4430   0.00537  0.00537 \n6 bnt     TRUE        226  -0.000823 0.000793\n\n\n\n\n17.7.3 By Season/species\n\n\nCode\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(season, species, negGrowth) |&gt; \n  summarize(\n    n = n(),\n    meanGrowth = mean(grWeight),\n    sdGrowth = sd(grWeight)  \n  ) |&gt; \n  print(n = 25)\n\n\n# A tibble: 24 × 6\n# Groups:   season, species [12]\n   season species negGrowth     n meanGrowth  sdGrowth\n    &lt;dbl&gt; &lt;chr&gt;   &lt;lgl&gt;     &lt;int&gt;      &lt;dbl&gt;     &lt;dbl&gt;\n 1      1 ats     FALSE      2355   0.0155    0.00436 \n 2      1 ats     TRUE          2  -0.000855  0.000762\n 3      1 bkt     FALSE      2435   0.0129    0.00466 \n 4      1 bkt     TRUE          1  -0.000672 NA       \n 5      1 bnt     FALSE      1067   0.0135    0.00474 \n 6      1 bnt     TRUE          4  -0.00129   0.000506\n 7      2 ats     FALSE      1647   0.00127   0.000998\n 8      2 ats     TRUE       1218  -0.000832  0.000589\n 9      2 bkt     FALSE      2492   0.00285   0.00240 \n10      2 bkt     TRUE        825  -0.000967  0.000732\n11      2 bnt     FALSE      1299   0.00277   0.00204 \n12      2 bnt     TRUE        108  -0.000612  0.000489\n13      3 ats     FALSE      1971   0.00138   0.00105 \n14      3 ats     TRUE        618  -0.000702  0.000484\n15      3 bkt     FALSE      2250   0.00346   0.00225 \n16      3 bkt     TRUE        449  -0.00165   0.00139 \n17      3 bnt     FALSE      1454   0.00323   0.00165 \n18      3 bnt     TRUE         83  -0.00121   0.00103 \n19      4 ats     FALSE      1472   0.00145   0.000926\n20      4 ats     TRUE        165  -0.000555  0.000415\n21      4 bkt     FALSE      1568   0.00211   0.00140 \n22      4 bkt     TRUE         69  -0.000498  0.000479\n23      4 bnt     FALSE       610   0.00180   0.00113 \n24      4 bnt     TRUE         31  -0.000452  0.000409",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#environmental-effects-on-proportion-of-observations-with-negative-growth",
    "href": "modelGrowthInMass.html#environmental-effects-on-proportion-of-observations-with-negative-growth",
    "title": "17  Growth in mass",
    "section": "17.8 Environmental effects on Proportion of observations with negative growth",
    "text": "17.8 Environmental effects on Proportion of observations with negative growth\n\n17.8.1 Models for proportions\n\n\nCode\npropNegSRsN &lt;- propNegSRsN |&gt;\n  mutate(\n    mFZ = (mF - mean(mF, na.rm = TRUE))/sd(mF, na.rm = TRUE), \n    mF_log10Z = (mF_log10 - mean(mF_log10, na.rm = TRUE))/sd(mF_log10, na.rm = TRUE),  \n    mTZ = (mT - mean(mT, na.rm = TRUE))/sd(mT, na.rm = TRUE),\n    nIndZ = (nInd - mean(nInd, na.rm = TRUE))/sd(nInd, na.rm = TRUE)\n  )\n\n\n\n17.8.1.1 Brook trout\n\n\nCode\n# turn this code chunk into a function that accepts speciesGG as input and returns the model with the lowest AIC\n\npropModBKT1 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT2 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT3 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT4 &lt;- lm(propNeg ~ (mTZ + mF_log10Z  + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT5 &lt;- lm(propNeg ~ (mTZ  + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT6 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT7 &lt;- lm(propNeg ~ (mTZ + mF_log10Z  + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT8 &lt;- lm(propNeg ~ (mTZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT9 &lt;- lm(propNeg ~ (nIndZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT10 &lt;- lm(propNeg ~ (mF_log10Z + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT11 &lt;- lm(propNeg ~ (riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT12&lt;- lm(propNeg ~ (seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT13 &lt;- lm(propNeg ~ (nIndZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT14 &lt;- lm(propNeg ~ (mF_log10Z)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT15 &lt;- lm(propNeg ~ (mTZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModAIC &lt;- AIC(propModBKT1, propModBKT2, propModBKT3, propModBKT4, propModBKT5, propModBKT6, propModBKT7, propModBKT8, propModBKT9, propModBKT10, propModBKT11, propModBKT12, propModBKT13, propModBKT14, propModBKT15) |&gt;  arrange(AIC)\n\n# q: return the model with the lowest AIC? \n\n#summary(rownames(propModAIC)[1])\nsummary(propModBKT10)\n\n\n\nCall:\nlm(formula = propNeg ~ (mF_log10Z + seasonGG + riverGG)^2, data = filter(propNegSRsN, \n    speciesGG == \"Brook trout\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.26498 -0.05504 -0.00370  0.02427  0.41948 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           0.045602   0.017212   2.649 0.008733 ** \nmF_log10Z            -0.074258   0.020619  -3.601 0.000403 ***\nseasonGG.L            0.077537   0.016879   4.594 7.87e-06 ***\nseasonGG.Q           -0.064797   0.018472  -3.508 0.000563 ***\nseasonGG.C           -0.103969   0.020179  -5.152 6.36e-07 ***\nriverGG.L            -0.116701   0.040089  -2.911 0.004028 ** \nriverGG.Q             0.025785   0.034496   0.747 0.455692    \nriverGG.C             0.013288   0.029949   0.444 0.657769    \nmF_log10Z:seasonGG.L  0.067891   0.046950   1.446 0.149804    \nmF_log10Z:seasonGG.Q  0.127414   0.040131   3.175 0.001746 ** \nmF_log10Z:seasonGG.C -0.233610   0.031966  -7.308 7.09e-12 ***\nmF_log10Z:riverGG.L  -0.026385   0.033217  -0.794 0.427981    \nmF_log10Z:riverGG.Q   0.027540   0.036948   0.745 0.456965    \nmF_log10Z:riverGG.C  -0.000989   0.039252  -0.025 0.979925    \nseasonGG.L:riverGG.L  0.155177   0.082032   1.892 0.060042 .  \nseasonGG.Q:riverGG.L  0.269973   0.071349   3.784 0.000206 ***\nseasonGG.C:riverGG.L -0.466788   0.058490  -7.981 1.29e-13 ***\nseasonGG.L:riverGG.Q -0.049743   0.040169  -1.238 0.217101    \nseasonGG.Q:riverGG.Q -0.099291   0.039649  -2.504 0.013105 *  \nseasonGG.C:riverGG.Q  0.099554   0.035887   2.774 0.006082 ** \nseasonGG.L:riverGG.C  0.028025   0.034023   0.824 0.411121    \nseasonGG.Q:riverGG.C  0.022183   0.035458   0.626 0.532321    \nseasonGG.C:riverGG.C -0.054596   0.032055  -1.703 0.090150 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1086 on 192 degrees of freedom\nMultiple R-squared:  0.5975,    Adjusted R-squared:  0.5514 \nF-statistic: 12.96 on 22 and 192 DF,  p-value: &lt; 2.2e-16\n\n\nCode\nanova(propModBKT10)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n                    Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nmF_log10Z            1 0.23691 0.23691 20.0763 1.277e-05 ***\nseasonGG             3 1.42619 0.47540 40.2861 &lt; 2.2e-16 ***\nriverGG              3 0.44695 0.14898 12.6253 1.440e-07 ***\nmF_log10Z:seasonGG   3 0.03652 0.01217  1.0315    0.3798    \nmF_log10Z:riverGG    3 0.03433 0.01144  0.9698    0.4081    \nseasonGG:riverGG     9 1.18270 0.13141 11.1360 6.301e-14 ***\nResiduals          192 2.26570 0.01180                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nget(rownames(propModAIC)[1])\n\n\n\nCall:\nlm(formula = propNeg ~ (mF_log10Z + seasonGG + riverGG)^2, data = filter(propNegSRsN, \n    speciesGG == \"Brook trout\"))\n\nCoefficients:\n         (Intercept)             mF_log10Z            seasonGG.L  \n            0.045602             -0.074257              0.077537  \n          seasonGG.Q            seasonGG.C             riverGG.L  \n           -0.064797             -0.103969             -0.116701  \n           riverGG.Q             riverGG.C  mF_log10Z:seasonGG.L  \n            0.025785              0.013288              0.067891  \nmF_log10Z:seasonGG.Q  mF_log10Z:seasonGG.C   mF_log10Z:riverGG.L  \n            0.127414             -0.233611             -0.026385  \n mF_log10Z:riverGG.Q   mF_log10Z:riverGG.C  seasonGG.L:riverGG.L  \n            0.027540             -0.000989              0.155177  \nseasonGG.Q:riverGG.L  seasonGG.C:riverGG.L  seasonGG.L:riverGG.Q  \n            0.269973             -0.466788             -0.049743  \nseasonGG.Q:riverGG.Q  seasonGG.C:riverGG.Q  seasonGG.L:riverGG.C  \n           -0.099291              0.099554              0.028025  \nseasonGG.Q:riverGG.C  seasonGG.C:riverGG.C  \n            0.022183             -0.054596  \n\n\nCode\npredPropNeg0 &lt;- \n  expand.grid(\n    mF_log10Z = seq(-1.5,1.5,0.25), \n    #mTZ = seq(-1.5,1.5,0.25), \n    #nIndZ = seq(-1.5,1.5,0.25),\n    riverGG = unique(propNegSRsN$riverGG), \n    seasonGG= unique(propNegSRsN$seasonGG)\n  ) |&gt;\n  mutate(speciesGG = \"Brook trout\")\n\npredPropNeg &lt;- \n  add_column(\n    pred = predict(propModBKT10, predPropNeg0),\n    predPropNeg0\n  )\n\n#\nggplot(predPropNeg, aes(mF_log10Z, pred, color = seasonGG)) +\n  geom_line() +\n  facet_grid(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n# \n\n\n\n\n17.8.1.2 Brown trout\n\n\nCode\n# turn this code chunk into a function that accepts speciesGG as input and returns the model with the lowest AIC\n\npropModBNT1 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT2 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT3 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT4 &lt;- lm(propNeg ~ (mTZ + mF_log10Z  + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT5 &lt;- lm(propNeg ~ (mTZ  + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT6 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT7 &lt;- lm(propNeg ~ (mTZ + mF_log10Z  + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT8 &lt;- lm(propNeg ~ (mTZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT9 &lt;- lm(propNeg ~ (nIndZ + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT10 &lt;- lm(propNeg ~ (mF_log10Z + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT11 &lt;- lm(propNeg ~ (riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT12&lt;- lm(propNeg ~ (seasonGG), data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT13 &lt;- lm(propNeg ~ (nIndZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT14 &lt;- lm(propNeg ~ (mF_log10Z)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModBNT15 &lt;- lm(propNeg ~ (mTZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brown trout\"))\n\npropModAIC &lt;- AIC(propModBNT1, propModBNT2, propModBNT3, propModBNT4, propModBNT5, propModBNT6, propModBNT7, propModBNT8, propModBNT9, propModBNT10, propModBNT11, propModBNT12, propModBNT13, propModBNT14, propModBNT15) |&gt;  arrange(AIC)\n\n# q: return the model with the lowest AIC? \n\n#summary(rownames(propModAIC)[1])\nsummary(propModBNT12)\n\n\n\nCall:\nlm(formula = propNeg ~ (seasonGG), data = filter(propNegSRsN, \n    speciesGG == \"Brown trout\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.08503 -0.07085 -0.02891 -0.00106  0.92915 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  0.05688    0.01226   4.639 8.04e-06 ***\nseasonGG.L   0.04981    0.02536   1.964   0.0516 .  \nseasonGG.Q  -0.04213    0.02452  -1.718   0.0881 .  \nseasonGG.C   0.00603    0.02365   0.255   0.7991    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1453 on 138 degrees of freedom\nMultiple R-squared:  0.04986,   Adjusted R-squared:  0.0292 \nF-statistic: 2.414 on 3 and 138 DF,  p-value: 0.0693\n\n\nCode\nanova(propModBNT12)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n           Df  Sum Sq  Mean Sq F value Pr(&gt;F)  \nseasonGG    3 0.15297 0.050990  2.4137 0.0693 .\nResiduals 138 2.91527 0.021125                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nget(rownames(propModAIC)[1])\n\n\n\nCall:\nlm(formula = propNeg ~ (seasonGG), data = filter(propNegSRsN, \n    speciesGG == \"Brown trout\"))\n\nCoefficients:\n(Intercept)   seasonGG.L   seasonGG.Q   seasonGG.C  \n    0.05688      0.04981     -0.04213      0.00603  \n\n\n\n\n17.8.1.3 Atlantic salmon\n\n\nCode\n# turn this code chunk into a function that accepts speciesGG as input and returns the model with the lowest AIC\n\npropModATS1 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS2 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS3 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS4 &lt;- lm(propNeg ~ (mTZ + mF_log10Z  + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS5 &lt;- lm(propNeg ~ (mTZ  + nIndZ + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS6 &lt;- lm(propNeg ~ (mTZ + mF_log10Z + nIndZ )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS7 &lt;- lm(propNeg ~ (mTZ + mF_log10Z)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS8 &lt;- lm(propNeg ~ (mTZ + seasonGG )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS9 &lt;- lm(propNeg ~ (nIndZ + seasonGG )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS10 &lt;- lm(propNeg ~ (mF_log10Z + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS11 &lt;- lm(propNeg ~ (riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS12&lt;- lm(propNeg ~ (seasonGG), data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS13 &lt;- lm(propNeg ~ (nIndZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS14 &lt;- lm(propNeg ~ (mF_log10Z)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModATS15 &lt;- lm(propNeg ~ (mTZ)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\"))\n\npropModAIC &lt;- AIC(propModATS1, propModATS2, propModATS3, propModATS4, propModATS5, propModATS6, propModATS7, propModATS8, propModATS9, propModATS10, propModATS11, propModATS12, propModATS13, propModATS14, propModATS15) |&gt;  arrange(AIC)\n\n# q: return the model with the lowest AIC? \n\n#summary(rownames(propModAIC)[1])\nsummary(propModATS12)\n\n\n\nCall:\nlm(formula = propNeg ~ (seasonGG), data = filter(propNegSRsN, \n    speciesGG == \"Atlantic salmon\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.53093 -0.23759 -0.00047  0.07562  0.73459 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  0.27272    0.04135   6.595 2.58e-08 ***\nseasonGG.L   0.12476    0.08384   1.488  0.14302    \nseasonGG.Q  -0.27956    0.08270  -3.380  0.00141 ** \nseasonGG.C   0.21814    0.08156   2.675  0.01008 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.3033 on 50 degrees of freedom\nMultiple R-squared:  0.2994,    Adjusted R-squared:  0.2573 \nF-statistic: 7.122 on 3 and 50 DF,  p-value: 0.0004482\n\n\nCode\nanova(propModATS12)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n          Df Sum Sq Mean Sq F value    Pr(&gt;F)    \nseasonGG   3 1.9653 0.65510  7.1217 0.0004482 ***\nResiduals 50 4.5994 0.09199                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nget(rownames(propModAIC)[1])\n\n\n\nCall:\nlm(formula = propNeg ~ (seasonGG), data = filter(propNegSRsN, \n    speciesGG == \"Atlantic salmon\"))\n\nCoefficients:\n(Intercept)   seasonGG.L   seasonGG.Q   seasonGG.C  \n     0.2727       0.1248      -0.2796       0.2181  \n\n\n\n\n\n17.8.2 Proportion of observations with negative growth by flow\nFigure 6\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(mF, propNeg)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"darkgrey\") +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication(base_size = 20) +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(mF, propNeg, color = riverGG, shape = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot\n  scale_color_discrete(drop = FALSE) +\n  ggtitle(\"Tributaries\") +\n  theme_publication(base_size = 20) +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, speciesGG == \"Brook trout\"), aes(mF, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot\n  scale_color_discrete(drop = FALSE) +\n  ggtitle(\"Brook trout\") +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\n\n\n17.8.3 Proportion of observations with negative growth by temperature\n\n\nCode\nplotNegGrowth_temp &lt;- function(d, s){\n  ggplot(d |&gt; filter(n &gt; 10, seasonGG == s), aes(mT, propNeg, color = riverGG)) +\n    geom_point(aes(size = n)) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n    scale_x_continuous(\"Mean temperature (C)\") +\n    scale_color_discrete() +\n    ggtitle(s) +\n    theme_publication() +  \n    facet_grid(riverGG~speciesGG)\n}\n\n\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Spring\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Summer\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Autumn\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Winter\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.8.4 Proportion of observations with negative growth by 3 species fish counts\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(nInd, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"3 species count\") +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(nInd, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"3 species count\") +\n  scale_color_discrete() +\n  ggtitle(\"Tributaries\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\n\n\n17.8.5 Proportion of observations with negative growth by conspecific fish counts\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(nIndBySpp, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"conspecific count\") +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication() +\n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(nIndBySpp, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"conspecific count\") +\n  scale_color_discrete() +\n  ggtitle(\"Tributaries\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#xgboost-model-for-proportion-of-fish-with-negative-growth",
    "href": "modelGrowthInMass.html#xgboost-model-for-proportion-of-fish-with-negative-growth",
    "title": "17  Growth in mass",
    "section": "17.9 XGBoost model for proportion of fish with negative growth",
    "text": "17.9 XGBoost model for proportion of fish with negative growth\n\n17.9.1 Hyperparameter search grid\n\n\nCode\nrunHyperparamSearch &lt;- function(d = propNegSRsN, vars = c(\"speciesGG\", \"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"), nRoundsIn = 100000, early_stopping_roundsIn = 500) {\n  \n  set.seed(123)\n  \n  dML_propNeg &lt;- d |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_propNeg &lt;- setdiff(names(dML_propNeg), \"propNeg\")\n  \n  # Create the treatment plan from the training data\n  treatplan_propNeg &lt;- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_propNeg &lt;- treatplan_propNeg %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_train_propNeg &lt;- dML_propNeg$propNeg\n  \n  # create hyperparameter grid\n  hyper_grid_propNeg &lt;- expand.grid(\n    eta = c(.01, .05, .1, .3),\n    max_depth = c(1, 3, 5, 7),\n    min_child_weight = c(1, 3, 5, 7),\n    subsample = c(.65, .8, 1),\n    colsample_bytree = c(.8, .9, 1),\n    optimal_trees = 0,               # a place to dump results\n    min_RMSE = 0                     # a place to dump results\n  )\n\n  # reproducibility\n    set.seed(123)\n  #   \n  # grid search\n  for(i in 1:nrow(hyper_grid_propNeg)) {\n    print(paste0(i, \" out of \", nrow(hyper_grid_propNeg)))\n    # create parameter list\n    params_propNeg &lt;- list(\n      eta = hyper_grid_propNeg$eta[i],\n      max_depth = hyper_grid_propNeg$max_depth[i],\n      min_child_weight = hyper_grid_propNeg$min_child_weight[i],\n      subsample = hyper_grid_propNeg$subsample[i],\n      colsample_bytree = hyper_grid_propNeg$colsample_bytree[i]\n    )\n  \n  \n    # train model\n    xgb.tune_propNeg &lt;- xgb.cv(\n      params = params_propNeg,\n      data = features_train_propNeg,\n      label = response_train_propNeg,\n      nrounds = 100000,\n      nfold = 5,\n      objective = \"reg:squarederror\", #\"reg:linear\",  # for regression models\n      verbose = 0,               # silent,\n      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees\n    )\n  \n    # add min training error and trees to grid\n    hyper_grid_propNeg$optimal_trees[i] &lt;- which.min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)\n    hyper_grid_propNeg$min_RMSE[i] &lt;- min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)\n  }\n  \n  return(hyper_grid_propNeg |&gt; arrange(min_RMSE))\n}\n#   \n# &gt; #     eta max_depth min_child_weight subsample colsample_bytree optimal_trees  min_RMSE\n# &gt; # 1  0.10         1                7      0.80              0.9            57 0.1833918\n# &gt; # 2  0.10         3                3      1.00              1.0            52 0.1835447\n# &gt; # 3  0.05         3                1      0.65              0.9            88 0.1849762\n# &gt; # 4  0.01         3                7      1.00              0.9           514 0.1853950\n# &gt; # 5  0.30         5                1      0.80              1.0            17 0.1854102\n# &gt; # 6  0.01         3                3      0.65              0.8           438 0.1854346\n# &gt; # 7  0.30         5                1      1.00              0.9            14 0.1856684\n# &gt; # 8  0.01         1                3      0.65              0.9           560 0.1857717\n# &gt; # 9  0.30         3                1      1.00              1.0            13 0.1859183\n# &gt; # 10 0.30         3                3      0.65              0.8            21 0.1860299\n# &gt; # 11 0.05         7                3      0.80              0.8           123 0.1860336\n# &gt; # 12 0.01         3                5      0.80              1.0           512 0.1861016\n# &gt; # 13 0.10         3                7      0.65              1.0            45 0.1861042\n# &gt; # 14 0.10         3                5      1.00              1.0            55 0.1861160\n# # &gt; # 15 0.10         1                1      1.00              0.9           179 0.1861891\n\n\n\n\n17.9.2 Function to run models\n\n\nCode\n# http://uc-r.github.io/gbm_regression\nrunXGB &lt;- function(d = propNegSRsN, vars = c(\"speciesGG\", \"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"), nRoundsIn = 100000, params = params_propNegIn) {\n  \n  set.seed(125)\n  \n  dML_propNeg &lt;- d |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_propNeg &lt;- setdiff(names(dML_propNeg), \"propNeg\")\n  \n  # Create the treatment plan from the training data\n  treatplan_propNeg &lt;- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_propNeg &lt;- treatplan_propNeg %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_train_propNeg &lt;- dML_propNeg$propNeg\n  \n  # Prepare the test data\n  features_test_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_test_propNeg &lt;- dML_propNeg$propNeg\n\n  ##### Run model\n  # parameter list - from the top model of the grid search above\n  params_propNeg &lt;- list(\n    eta = params$eta, #0.01,\n    max_depth = params$max_depth, #1,\n    min_child_weight = params$min_child_weight, #7,\n    subsample = params$subsample, #0.8,\n    colsample_bytree = params$colsample_bytree #0.9\n   # optimal_trees = params$optimal_trees\n  )\n  \n  # train final model\n  xgb.fit.final_propNeg &lt;- xgboost(\n    params = params_propNeg,\n    data = features_train_propNeg,\n    label = response_train_propNeg,\n    nrounds = nRoundsIn,\n    objective = \"reg:squarederror\",\n    verbose = 0,\n    early_stopping_rounds = 250 # stop if no improvement for 20 consecutive trees\n  )\n  \n\n  return(\n    list(\n      dat = dML_propNeg,\n      xgb = xgb.fit.final_propNeg,\n      new_vars = new_vars_propNeg,\n      features_train = features_train_propNeg,\n      response_train = response_train_propNeg\n    )\n  )\n\n}\n\n\n\n\n17.9.3 Brook trout\n\n\nCode\n#### uncomment to run hyperparameter search grid\n# hpPropNegBKT &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brook trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegBKT, file = \"./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData\")\nhpPropNegBKT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.01         5                5      0.80              0.9           596\n2  0.01         3                3      1.00              0.8          1375\n3  0.05         3                1      0.80              0.9           208\n4  0.01         3                5      0.80              0.8          1132\n5  0.01         7                7      1.00              1.0           392\n6  0.01         7                5      0.65              0.8           581\n7  0.10         5                3      0.80              0.8            38\n8  0.01         5                7      0.80              0.9           450\n9  0.30         3                1      0.80              0.8            57\n10 0.05         5                3      1.00              0.9           123\n    min_RMSE\n1  0.1289382\n2  0.1294819\n3  0.1301824\n4  0.1302462\n5  0.1302568\n6  0.1306034\n7  0.1308955\n8  0.1308964\n9  0.1310481\n10 0.1313799\n\n\nCode\n#### uncomment to run XGBoost\n# propNegBKT &lt;- runXGB(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brook trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   params = hpPropNegBKT[1,]\n# )\n# save(propNegBKT, file = \"./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData\")\n\npropNegBKT$xgb$best_iteration\n\n\n[1] 67631\n\n\nCode\npropNegBKT$xgb$best_score\n\n\n[1] 0.0005971119\n\n\nCode\n# variable importance plot\nviBKT &lt;- xgb.importance(model = propNegBKT$xgb)\n\n\n[17:38:23] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viBKT, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\ns_propNegBKT &lt;- hstats(propNegBKT$xgb, v = propNegBKT$new_vars, X = propNegBKT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_propNegBKT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.364951\n\n\nCode\nplot(s_propNegBKT)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegBKT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_propNegBKT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_propNegBKT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Brook Trout\")\n\npMT_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Brook Trout\")\n\npNInd_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brook Trout\")\n\npYear_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brook Trout\")\n\n\nall_propNegDataBKT &lt;- bind_rows(pFlow_propNegDataBKT, pMT_propNegDataBKT, pNInd_propNegDataBKT, pYear_propNegDataBKT)\n\n(\nall_propNegDataBKT_gg &lt;- ggplot(all_propNegDataBKT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialISBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Isolated_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|&gt; \n  mutate(riverGG = \"Isolated Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Isolated_Small\")\n\npartialRiversBKT &lt;- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"), \n                             ordered = T))\n\nggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegBKT$xgb, v = \"mT\", X = propNegBKT$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegBKT$xgb, v = \"mF_log10\", X = propNegBKT$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegBKT$xgb, v = \"mF_log10\", X = propNegBKT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n17.9.4 Brown trout\n\n\nCode\n# hpPropNegBNT &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brown trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegBNT, file = \"./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData\")\nhpPropNegBNT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         1                3      0.65              0.9            11\n2  0.30         1                3      1.00              0.9            17\n3  0.05         1                3      0.80              0.9           178\n4  0.10         1                3      0.80              0.9            48\n5  0.01         1                3      1.00              0.9           455\n6  0.10         3                1      0.65              0.9            29\n7  0.30         1                3      0.65              1.0            21\n8  0.01         1                3      0.65              0.8           523\n9  0.10         1                3      0.80              1.0            44\n10 0.30         1                5      0.80              0.9            41\n    min_RMSE\n1  0.1271580\n2  0.1275897\n3  0.1293155\n4  0.1307409\n5  0.1308256\n6  0.1312113\n7  0.1312372\n8  0.1314425\n9  0.1314432\n10 0.1316114\n\n\nCode\npropNegBNT &lt;- runXGB(\n  d = propNegSRsN |&gt;  filter(speciesGG == \"Brown trout\", year &gt; 2001, nInd &gt; 10),\n  vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n  nRoundsIn = 250000,\n  params = hpPropNegBNT[1,]\n)\n# save(propNegBNT, file = \"./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData\")\n\npropNegBNT$xgb$best_iteration\n\n\n[1] 13581\n\n\nCode\npropNegBNT$xgb$best_score\n\n\n[1] 0.0004765856\n\n\nCode\n# variable importance plot\nviBNT &lt;- xgb.importance(model = propNegBNT$xgb)\n\n\n[13:40:41] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viBNT, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\n#s_propNegBNT &lt;- hstats(propNegBNT$xgb, v = propNegBNT$new_vars, X = propNegBNT$features_train)\n# s_propNegBNT\n# plot(s_propNegBNT)\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegBNT, normalize = FALSE, squared = FALSE, top_m = 8)\n# \n# # 3-way interactions\n# plot(s_propNegBNT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all partials on one graph\npFlow_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Brown Trout\")\n\npMT_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Brown Trout\")\n\npNInd_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brown Trout\")\n\npYear_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brown Trout\")\n\n\nall_propNegDataBNT &lt;- bind_rows(pFlow_propNegDataBNT, pMT_propNegDataBNT, pNInd_propNegDataBNT, pYear_propNegDataBNT)\n\n(\nall_propNegDataBNT_gg &lt;- \n  ggplot(all_propNegDataBNT, aes(xScaled, yhat, color = var)) +\n    #geom_point(alpha = 0.2) +\n    geom_smooth(se = FALSE) +\n    theme_publication() +\n    labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\n\npartialRiversBNT &lt;- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\"), \n                             ordered = T))\n\nggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegBNT$xgb, v = \"mT\", X = propNegBNT$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegBNT$xgb, v = \"mF_log10\", X = propNegBNT$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegBNT$xgb, v = \"mF_log10\", X = propNegBNT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n17.9.5 Atlantic salmon\n\n\nCode\n# hpPropNegATS &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Atlantic salmon\", riverGG == \"West Brook\", year &lt; 2007),\n#   vars = c(\"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegATS, file = \"./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData\")\nhpPropNegATS[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         1                1      0.65              0.9            17\n2  0.10         5                3      0.65              0.8            36\n3  0.30         1                5      0.80              1.0            85\n4  0.01         1                3      0.80              0.9           427\n5  0.30         1                1      0.80              1.0            16\n6  0.01         7                3      0.80              0.8           351\n7  0.01         7                1      0.65              0.9           371\n8  0.10         7                1      0.65              0.9            34\n9  0.30         5                3      0.65              0.9            20\n10 0.10         3                5      0.80              0.8            47\n    min_RMSE\n1  0.1802524\n2  0.1810207\n3  0.1825029\n4  0.1834041\n5  0.1839152\n6  0.1856746\n7  0.1866094\n8  0.1871390\n9  0.1874577\n10 0.1887720\n\n\nCode\npropNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\") |&gt; \n  ggplot(aes(year, n, color = seasonGG)) + geom_line() + facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n# propNegATS &lt;- runXGB(\n#   d = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\", riverGG == \"West Brook\", year &lt; 2007),\n#   vars = c(\"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   params = hpPropNegATS[1,]\n# )\n# save(propNegATS, file = \"./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData\")\n\npropNegATS$xgb$best_iteration\n\n\n[1] 2720\n\n\nCode\npropNegATS$xgb$best_score\n\n\n[1] 0.0004255186\n\n\nCode\n# variable importance plot\nviATS &lt;- xgb.importance(model = propNegATS$xgb)\n\n\n[13:40:59] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viATS, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\n#s_propNegATS &lt;- hstats(propNegATS$xgb, v = propNegATS$new_vars, X = propNegATS$features_train)\n# s_propNegATS\n# plot(s_propNegATS)\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegATS, normalize = FALSE, squared = FALSE, top_m = 8)\n# \n# # 3-way interactions\n# plot(s_propNegATS, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNegATS, pTemp_propNegATS, pNInd_propNegATS, pYear_propNegATS, nrow = 2)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Atlantic Salmon\")\n\npMT_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Atlantic Salmon\")\n\npNInd_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Atlantic Salmon\")\n\npYear_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Atlantic Salmon\")\n\n\nall_propNegDataATS &lt;- bind_rows(pFlow_propNegDataATS, pMT_propNegDataATS, pNInd_propNegDataATS, pYear_propNegDataATS)\n\n(\nall_propNegDataATS_gg &lt;- \nggplot(all_propNegDataATS, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegATS$xgb, v = \"mT\", X = propNegATS$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegATS$xgb, v = \"mF_log10\", X = propNegATS$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(propNegATS$xgb, v = \"mF_log10\", X = propNegATS$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n17.9.6 3 species together\n\n\nCode\n# variable importance plots\n\nviAll &lt;- bind_rows(\n  viBKT |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brook Trout\"),\n  viBNT |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brown Trout\"),\n  viATS |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Atlantic Salmon\")\n) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE),\n         feature2 = case_when(\n           Feature == \"mF_log10\" ~ \"Flow\",\n           Feature == \"mT\" ~ \"Temperature\",\n           Feature == \"nInd\" ~ \"Num Individuals\",\n           Feature == \"year\" ~ \"Year\")\n  )\n\nggplot(viAll |&gt; filter(Feature %in% c(\"mF_log10\", \"mT\", \"nInd\", \"year\")), aes(feature2, Gain, fill = sppOrdered)) +\n  geom_col(position = \"dodge\") +\n  theme_publication() +\n  scale_fill_grey() +\n  labs(y = \"Variable importance for the proportion of negative observations\", x = \"Variable\")\n\n\n\n\n\n\n\n\n\nCode\n########################################################\n\nall_propNegData3spp &lt;- bind_rows(all_propNegDataBKT, all_propNegDataBNT, all_propNegDataATS) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE))\n\nall_propNegData3sppFlow_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Flow\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled flow\") +\n  theme(legend.position = \"none\")  \n\n\nall_propNegData3sppTemp_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Temperature\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled temperature\") +\n  theme(legend.position = \"none\")  \n\nall_propNegData3sppNInd_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Num inds\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled Number of individuals\") +\n  theme(legend.position = \"none\")  \n\nall_propNegData3sppYear_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Year\"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n  scale_color_grey() +\n  labs(y = NULL, x = \"Year\") +\n  theme(legend.position = \"none\")  \n\ngridExtra::grid.arrange(\n  all_propNegData3sppFlow_gg, \n  all_propNegData3sppTemp_gg,\n  all_propNegData3sppNInd_gg,\n  all_propNegData3sppYear_gg,\n  left = textGrob(expression(bold(\"Effect on proportion of negative observations\")), rot = 90, gp = gpar(fontsize = 16))\n)\n\n\n\n\n\n\n\n\n\nCode\n#######################################",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#ft-cycle-graphs",
    "href": "modelGrowthInMass.html#ft-cycle-graphs",
    "title": "17  Growth in mass",
    "section": "17.10 F/T cycle graphs",
    "text": "17.10 F/T cycle graphs\n\n17.10.1 Mean flow and temperature\n\n\nCode\nplot_mT_mF &lt;- function(d, s, plotText){\n  ggplot(d |&gt; filter(n &gt; 25, speciesGG == s), aes(mT, mF_log10, color = factor(seasonGG))) +\n    geom_point(aes(size = propNeg)) +\n    {if(plotText) geom_text(aes(label = year), vjust = 0, nudge_y = -0.075, check_overlap = FALSE, size = 3)} +\n    labs(x = \"Mean temperature (C)\", y = \"log10 of mean Flow\") +\n    scale_color_discrete() +\n    theme_publication() +  \n    facet_wrap(~riverGG, scales = \"free\")\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brook trout\", FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brown trout\", FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Atlantic salmon\", FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.2 Mean flow and temperature with year labels\n\n17.10.2.1 panel-tabset\n\n\n\n17.10.3 Brook trout\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brook trout\", TRUE)\n\n\n\n\n\n\n\n\n\n\n17.10.3.1 Brown trout\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brown trout\", TRUE)\n\n\n\n\n\n\n\n\n\n\n\n17.10.3.2 Atlantic salmon\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Atlantic salmon\", TRUE)\n\n\n\n\n\n\n\n\n\n:::\nMean flow and temperature values for each season and year for the West Brook\nNot very informative\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == 'West Brook') |&gt; arrange(riverGG, speciesGG, year, seasonGG), aes(mT, mF_log10)) +\n  geom_line() +\n  geom_point(aes(color = factor(seasonGG))) +\n  facet_wrap(~year)\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.4 Yearly temperature/flow cycles of daily data\n\n\nCode\nplotMerged &lt;- function(d, r, minYear = 2000, maxYear = 2017){\n  ggplot(d |&gt; filter(riverGG == r, year %in% c(minYear:maxYear)), \n         aes(temperature, log10(flowByRiver), color = seasonGG, group = seasonGG)) +\n    geom_point() +\n    geom_smooth(se = FALSE) +\n    #geom_line() +\n    labs(x = \"Temperature (C)\", y = \"log10 of Flow\") +\n    scale_color_discrete() +\n    ggtitle(r) +\n    theme_publication() +  \n    facet_wrap(~year, scales = 'free')\n}\n# this plots f/t for all three species - good for filling in gaps\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"West Brook\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Open Large\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Open Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Isolated Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.5 Smooths of temperature/flow cycles of daily data by season\n\n\nCode\nplotMergedBySeason &lt;- function(d, r, minYear = 2000, maxYear = 2017) {\n  ggplot(d |&gt; filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), \n         aes(temperature, log10(flowByRiver), \n             color = factor(year), group = year\n             )\n         ) +\n    #geom_point() +\n    geom_smooth(se = FALSE) +\n    labs(x = \"Temperature (C)\", y = \"log10 of Flow\") +\n    scale_color_discrete() +\n    ggtitle(r) +\n    theme_publication(legendPosition = \"right\", legendDirection = \"vertical\") +  \n    facet_wrap(~seasonGG, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"West Brook\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Open Large\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Open Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Isolated Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\nTO ADD: low flow high density important? Look at interaction btw flow:density\n\n\n17.10.6 F/T cycles with labels\nPlot F/T cycles by river, season, species with label for propNeg and conspecific and all-species abundances\n\n\nCode\nplotMergedBySeasonByEverything &lt;- function(d, d2, r, s, spp, minYear = 2000, maxYear = 2017){\n  ggplot(d |&gt; \n           filter(riverGG == r,\n                  year %in% c(minYear:maxYear), \n                  !is.na(seasonGG), \n                  seasonGG == s, \n                  speciesGG == spp), \n         aes(temperature, log10(flowByRiver))\n         ) +\n    geom_smooth(se = FALSE, color = \"darkgrey\") +\n    geom_point(aes(color = yday)) +\n    geom_text(aes(\n      x = minTemp + 3.0, \n      y = log10(minFlow) - 1, \n      label = paste(\"propNeg=\",round(propNeg, 2)) \n      #size = propNeg\n      ), \n        data = d2|&gt; \n          filter(riverGG == r, \n                 year %in% c(minYear:maxYear),\n                 seasonGG == s, \n                 speciesGG == spp)\n        ) +\n    geom_text(aes(\n      x = minTemp + 3.0,\n      y = log10(minFlow) - 0.3,\n      label = paste(paste(\"nIndAllSpp=\", nInd), paste(\"nIndBySpp=\", nIndBySpp), sep = \"\\n\")\n      ),\n        data = d2|&gt;\n          filter(riverGG == r,\n                 year %in% c(minYear:maxYear),\n                 seasonGG == s,\n                 speciesGG == spp)\n        ) +\n    labs(x = \"Temperature (c)\", y = \"log10 Flow\") +\n    ggtitle(paste(r, s, spp, sep = \", \")) +\n  theme_publication() +  \n  facet_wrap(~year)\n}\n\n\n\n17.10.6.1 West Brook\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.6.2 Open Large\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.6.3 Open Small\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n17.10.6.4 Isolated Small\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Winter\", \"Brook trout\", 2000, 2017)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#consequences-of-negative-growth",
    "href": "modelGrowthInMass.html#consequences-of-negative-growth",
    "title": "17  Growth in mass",
    "section": "17.11 Consequences of negative growth",
    "text": "17.11 Consequences of negative growth\n\n17.11.1 Growth and seen again or not\nCompare number of fish not seen again or seen again after each growth interval for fish that gained weight or lost weight. Plot average ratios for numbers not seen/seen again for fish that lost or gained weight for species, river and season.\n\n17.11.1.1 By age only, not year\n\n\nCode\nnegGr_seenNotSeenAgeCD = cd |&gt; \n  mutate(age = year - cohort) |&gt;\n  addGG() |&gt;\n # filter(samplesBeforeLast &gt; 0) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, lastInterval = maxSample == sampleNumber + 1, negGrowth = grWeight &lt; 0, age, isYOY) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    n = n()\n  ) |&gt; \n  filter(!is.na(negGrowth), n &gt; 5)\n\n\nnegGr_seenNotSeenAgeCD_wide &lt;- negGr_seenNotSeenAgeCD |&gt; ungroup() |&gt; select(-meanGR) |&gt; spread(lastInterval, n, fill = 0) |&gt;\n  mutate(\n    ratio = `TRUE`/`FALSE`,     \n    gainedLost = ifelse(negGrowth, \"Lost\", \"Gained\"),\n    growthYear = ifelse(isYOY, \"0/1\", \"1+\"),\n    n = `FALSE` + `TRUE`\n  )\n\n#  by growthYear\nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(speciesGG == \"Brook trout\", age %in% c(0,1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG + growthYear)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(riverGG == \"West Brook\", age %in% c(0,1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~speciesGG + growthYear)\n\n\n\n\n\n\n\n\n\nCode\n## for the MS - by age (1,2)\nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(speciesGG == \"Brook trout\", age %in% c(0,1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG + age)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(speciesGG == \"Brook trout\", age %in% c(1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG + age)\n\n\n\n\n\n\n\n\n\nCode\n### by species for WB\n### \nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(age %in% c(1,2), seasonGG %in% c(\"Summer\",\"Autumn\"), riverGG == \"West Brook\"), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~speciesGG + age)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenAgeCD_wide |&gt; filter(age %in% c(0,1,2), seasonGG %in% c(\"Summer\",\"Autumn\"), riverGG == \"West Brook\"), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  geom_text(aes(label = n), vjust = 0, nudge_y = +0.075, check_overlap = TRUE, size = 4) +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~speciesGG + age)\n\n\n\n\n\n\n\n\n\n\n\n17.11.1.2 By age only, not year for fish LENGTH\n\n\nCode\nnegGrLen_seenNotSeenAgeCD = cd |&gt; \n  mutate(age = year - cohort) |&gt;\n  addGG() |&gt;\n # filter(samplesBeforeLast &gt; 0) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, lastInterval = maxSample == sampleNumber + 1, negGrowth = grLength &lt; 0, age) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    n = n()\n  ) |&gt; \n  filter(!is.na(negGrowth), n &gt; 5)\n\n\nnegGrLen_seenNotSeenAgeCD_wide &lt;- negGrLen_seenNotSeenAgeCD |&gt; ungroup() |&gt; select(-meanGR) |&gt; spread(lastInterval, n, fill = 0) |&gt;\n  mutate(\n    ratio = `TRUE`/`FALSE`,     \n    gainedLost = ifelse(negGrowth, \"Lost\", \"Gained\")\n  )\n\n\nggplot(negGrLen_seenNotSeenAgeCD_wide |&gt; filter(speciesGG == \"Brook trout\", age %in% c(1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  #geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG + age)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGrLen_seenNotSeenAgeCD_wide |&gt; filter(riverGG == \"West Brook\", age %in% c(1,2), seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, ratio)) +\n  geom_col(position = \"dodge\") +\n  #geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~speciesGG + age)\n\n\n\n\n\n\n\n\n\nBy year - cd which includes all observations not just consecutive captures\n\n\nCode\n#cd |&gt; mutate(lastInterval = maxSample == sampleNumber + 1) |&gt; filter(nPerInd &gt;7) |&gt; select(tag, sampleNumber, maxSample, observedWeight, grWeight, lastInterval) \n\n\nnegGr_seenNotSeenYearCD = cd |&gt; \n  addGG() |&gt;\n # filter(samplesBeforeLast &gt; 0) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, lastInterval = maxSample == sampleNumber + 1, negGrowth = grWeight &lt; 0, year) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    n = n()\n  ) |&gt; \n  filter(!is.na(negGrowth), n &gt; 5)\n\n\nnegGr_seenNotSeenYearCD_wide &lt;- negGr_seenNotSeenYearCD |&gt; ungroup() |&gt; select(-meanGR) |&gt; spread(lastInterval, n, fill = 0) |&gt;\n  mutate(ratio = `TRUE`/`FALSE`)\n\n\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brown trout\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brown trout\", subtitle = \"Number of brown trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brown trout\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brown trout\", subtitle = \"Number of brown trout seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Atlantic salmon\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Atlantic salmon\", subtitle = \"Number of salmon seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Atlantic salmon\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Atlantic salmon\", subtitle = \"Number of salmon seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_wrap(~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n############# means\nnegGr_seenNotSeenYearCD_wideMeans &lt;- negGr_seenNotSeenYearCD_wide |&gt; \n  filter(is.finite(ratio)) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, negGrowth) |&gt; \n  summarize(\n    meanFalse = mean(`FALSE`),\n    meanTrue = mean(`TRUE`),\n    meanRatio = mean(ratio),\n    sdRatio = sd(ratio),\n    n = n()\n  ) |&gt;\n  mutate(\n    ymax = meanRatio + sdRatio,\n    ymin = meanRatio - sdRatio,\n    gainedLost = ifelse(negGrowth, \"Lost\", \"Gained\")\n  ) \n\n\n\nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(seasonGG == \"Summer\", riverGG == \"West Brook\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout, summer\") +\n  theme_publication() +    \n  facet_grid(~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(seasonGG == \"Autumn\", riverGG == \"West Brook\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n #ggtitle(\"Brook trout, autumn\") +\n  theme_publication() +    \n  facet_grid(~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(seasonGG %in% c(\"Summer\",\"Autumn\"), riverGG == \"West Brook\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout, autumn\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\n#####\n\nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(speciesGG == \"Brook trout\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n# for the MS\n# \nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(speciesGG == \"Brook trout\", seasonGG %in% c(\"Summer\", \"Autumn\")), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearCD_wideMeans |&gt; filter(speciesGG == \"Brown trout\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  ggtitle(\"Brown trout\") +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\n\n\n17.11.1.3 By age\n\n\nCode\n#cd |&gt; mutate(lastInterval = maxSample == sampleNumber + 1) |&gt; filter(nPerInd &gt;7) |&gt; select(tag, sampleNumber, maxSample, observedWeight, grWeight, lastInterval) \n\n\nnegGr_seenNotSeenYearAgeCD = cd |&gt; \n  addGG() |&gt;\n  mutate(age = year - cohort) |&gt;\n # filter(samplesBeforeLast &gt; 0) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, lastInterval = maxSample == sampleNumber + 1, negGrowth = grWeight &lt; 0, year, age) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    n = n()\n  ) |&gt; \n  filter(!is.na(negGrowth), n &gt; 5)\n\n\nnegGr_seenNotSeenYearAgeCD_wide &lt;- negGr_seenNotSeenYearAgeCD |&gt; ungroup() |&gt; select(-meanGR) |&gt; spread(lastInterval, n, fill = 0) |&gt;\n  mutate(ratio = `TRUE`/`FALSE`)\n\n\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", riverGG == \"West Brook\", age ==  1, seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout, WB, Summer\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", riverGG == \"West Brook\", age ==  1, seasonGG == \"Summer\"), \n       aes(year, ratio, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, ratio, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, ratio, color = negGrowth)) +\n  scale_y_continuous(\"Ratio, not seen/seen\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout, WB, Summer\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brook trout\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brook trout\", subtitle = \"Number of brook trout seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brown trout\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brown trout\", subtitle = \"Number of brown trout seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Brown trout\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Brown trout\", subtitle = \"Number of brown trout seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Atlantic salmon\", seasonGG == \"Summer\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Atlantic salmon\", subtitle = \"Number of salmon seen again (triangle) and number of fish not seen again (filled circle) in summer\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wide |&gt; filter(!is.na(negGrowth), speciesGG == \"Atlantic salmon\", seasonGG == \"Autumn\"), \n       aes(year, `FALSE`, color = negGrowth)) +\n  geom_point(size = 5) +\n  geom_line() +\n  geom_point(aes(year, `TRUE`, color = negGrowth), shape = 2, size = 5) +\n  geom_line(aes(year, `TRUE`, color = negGrowth)) +\n  scale_y_continuous(\"Number of fish\") +\n  scale_x_continuous(\"Year\") +\n  theme_publication(base_size = 14) + \n  ggtitle(\"Atlantic salmon\", subtitle = \"Number of salmon seen again (triangle) and number of fish not seen again (filled circle) in autumn\") +\n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\n############# means\nnegGr_seenNotSeenYearAgeCD_wideMeans &lt;- negGr_seenNotSeenYearAgeCD_wide |&gt; \n  filter(is.finite(ratio)) |&gt;\n  group_by(speciesGG, riverGG, seasonGG, age, negGrowth) |&gt; \n  summarize(\n    meanFalse = mean(`FALSE`),\n    meanTrue = mean(`TRUE`),\n    meanRatio = mean(ratio),\n    sdRatio = sd(ratio),\n    n = n()\n  ) |&gt;\n  mutate(\n    ymax = meanRatio + sdRatio,\n    ymin = meanRatio - sdRatio,\n    gainedLost = ifelse(negGrowth, \"Lost\", \"Gained\")\n  ) \n\n\nggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(seasonGG == \"Summer\", riverGG == \"West Brook\", age %in% c(1,2)), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout, summer\") +\n  theme_publication() +    \n  facet_grid(age~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(speciesGG == \"Brook trout\", seasonGG == \"Summer\", age %in% c(1,2)), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout, summer\") +\n  theme_publication() +    \n  facet_grid(age~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(seasonGG == \"Autumn\", riverGG == \"West Brook\"), aes(gainedLost, meanRatio)) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n #ggtitle(\"Brook trout, autumn\") +\n  theme_publication() +    \n  facet_grid(age~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(seasonGG %in% c(\"Summer\",\"Autumn\"), riverGG == \"West Brook\", age &lt; 3), aes(gainedLost, meanRatio, fill = factor(age), color = factor(age))) +\n  geom_col(position = \"dodge\") +\n  geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n  geom_hline(yintercept = 1, linetype = \"dashed\") +\n  #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n  labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n  #ggtitle(\"Brook trout, autumn\") +\n  theme_publication(base_size = 18) +    \n  facet_grid(seasonGG ~ speciesGG + age)\n\n\n\n\n\n\n\n\n\nCode\n#####\n\n# ggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(speciesGG == \"Brook trout\"), aes(gainedLost, meanRatio, fill = age)) +\n#   geom_col(position = \"dodge\") +\n#   geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\") +\n#   #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n#   labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n#   #ggtitle(\"Brook trout\") +\n#   theme_publication(base_size = 18) +    \n#   facet_grid(seasonGG~riverGG + age)\n\n# ggplot(negGr_seenNotSeenYearAgeCD_wideMeans |&gt; filter(speciesGG == \"Brown  trout\"), aes(gainedLost, meanRatio, fill = age)) +\n#   geom_col(position = \"dodge\") +\n#   geom_errorbar(aes(ymin = ymin, ymax = ymax), position = position_dodge(0.9), width = 0.2) +\n#   geom_hline(yintercept = 1, linetype = \"dashed\") +\n#   #labs(y = \"Ratio of fish not seen again to fish seen again\", x = \"Growth in mass\") +\n#   labs(y = \"Number of fish not seen again / number of fish seen again\", x = \"Growth in mass\") +\n#   #ggtitle(\"Brook trout\") +\n#   theme_publication(base_size = 18) +    \n#   facet_grid(seasonGG~riverGG + age)\n\n\n\n\n\n17.11.2 Pos/neg growth and emigration\nDoes not look like fish that lost mass were more likely to emigrate.\n\n\nCode\ncd$dateEm &lt;- as.POSIXct(cd$dateEmigrated)\n\neverEmInd &lt;- cd |&gt;\n  group_by(tag) |&gt;\n  summarize(\n    everEm = any(!is.na(dateEmigrated))\n  ) |&gt;\n  ungroup() |&gt;\n  select(tag, everEm) |&gt;\n  mutate(everEm01 = everEm * 1)\n\ncdEm &lt;- cd |&gt; \n  addGG() |&gt;\n  left_join(everEmInd, by = \"tag\") |&gt;\n  mutate(\n    gainedLost = ifelse(grWeight &lt; 0, \"Lost\", \"Gained\"),\n    lost01 = ifelse(grWeight &lt; 0, 1, 0),\n    emAndLast = ifelse(everEm & maxSample == sampleNumber + 1, TRUE, FALSE),\n  ) \n\ntable(cdEm$emAndLast)\n\n\n\nFALSE  TRUE \n89774  1329 \n\n\nCode\ntable(cdEm$everEm)\n\n\n\nFALSE  TRUE \n83182  7921 \n\n\nCode\n#table(cdEm$gainedLost, cdEm$everEm01, cdEm$species, cdEm$season)\n## , ,  = bkt,  = 2\n#            0    1\n#  Gained 2816  274\n#  Lost    806   78\n\nggplot(cdEm |&gt; filter(speciesGG == \"Brook trout\", !is.na(gainedLost), seasonGG == \"Summer\", riverGG == \"West Brook\"), aes(grWeight, emAndLast * 1)) +\n  geom_jitter(height = 0.05, alpha = 0.25) +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\")) +\n  geom_vline(xintercept = 0) +\n  ggtitle(\"\", subtitle = \"filter(speciesGG == Brook trout, !is.na(gainedLost), seasonGG == Summer, riverGG == West Brook\") +\n  facet_wrap(~year)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cdEm |&gt; filter(speciesGG == \"Brook trout\", !is.na(gainedLost), seasonGG == \"Summer\", riverGG == \"West Brook\"), aes(grWeight, emAndLast * 1)) +\n  geom_jitter(height = 0.05, alpha = 0.25) +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\")) +\n  geom_vline(xintercept = 0) +\n  ggtitle(\"\", subtitle = \"filter(speciesGG == Brook trout, !is.na(gainedLost), seasonGG == Summer, riverGG == West Brook\") \n\n\n\n\n\n\n\n\n\nCode\n####\nggplot(cdEm |&gt; filter(speciesGG == \"Brook trout\", !is.na(gainedLost), seasonGG == \"Autumn\", riverGG == \"West Brook\"), aes(grWeight, emAndLast * 1)) +\n  geom_jitter(height = 0.05, alpha = 0.25) +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\")) +\n  geom_vline(xintercept = 0) +\n  ggtitle(\"\", subtitle = \"filter(speciesGG == Brook trout, !is.na(gainedLost), seasonGG == Autumn, riverGG == West Brook\") +\n  facet_wrap(~year)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cdEm |&gt; filter(speciesGG == \"Brook trout\", !is.na(gainedLost), seasonGG == \"Autumn\", riverGG == \"West Brook\"), aes(grWeight, emAndLast * 1)) +\n  geom_jitter(height = 0.05, alpha = 0.25) +\n  geom_smooth(method = \"glm\", method.args = list(family = \"binomial\")) +\n  geom_vline(xintercept = 0) +\n  ggtitle(\"\", subtitle = \"filter(speciesGG == Brook trout, !is.na(gainedLost), seasonGG == Autumn, riverGG == West Brook\") \n\n\n\n\n\n\n\n\n\n\n\n17.11.3 Growth and last observation\n\n17.11.3.1 All years\nMean number of last observed sample as response variable\n\n\nCode\nplot_negGr_beforeLastMean &lt;- function(sppIn) {\n  ggplot(negGr_beforeLastMean |&gt; filter(speciesGG == sppIn, seasonGG != \"Spring\"), aes(negGrowth, meanSamplesBeforeLast, fill = negGrowth)) +\n    geom_col() +\n    theme_publication() +    \n    facet_grid(seasonGG~riverGG)    \n}\n\nplot_negGr_beforeLastMean(\"Brook trout\")\n\n\n\n\n\n\n\n\n\nCode\nplot_negGr_beforeLastMean(\"Brown trout\")\n\n\n\n\n\n\n\n\n\nCode\nplot_negGr_beforeLastMean(\"Atlantic salmon\")\n\n\n\n\n\n\n\n\n\nCode\n  ggplot(negGr_beforeLastMean |&gt; filter(speciesGG == \"Brook trout\", seasonGG != \"Spring\"), aes(meanGR, meanSamplesBeforeLast)) +\n    geom_point(aes(color = riverGG, shape = riverGG)) +\n    geom_line(aes(shape = riverGG, color = riverGG)) +\n    #geom_smooth(method = \"lm\", se = FALSE) +\n    theme_publication() +    \n    facet_wrap(~seasonGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\n\n\n17.11.3.2 By year\n\n\nCode\n  ggplot(negGr_beforeLastMean_year |&gt; filter(n &gt; 2, year &gt; 2001, year &lt; 2015, speciesGG == \"Brook trout\", seasonGG != \"Spring\"), aes(meanGR, meanSamplesBeforeLast)) +\n    geom_point(aes(color = riverGG, shape = riverGG)) +\n    geom_line(aes(shape = riverGG, color = riverGG)) +\n    #geom_smooth(method = \"lm\", se = FALSE) +\n    theme_publication() +    \n    facet_grid(seasonGG ~ year, scales = \"free\")\n\n\n\n\n\n\n\n\n\nSplit data by samplesBeforeLast = 1 and samplesBeforeLast &gt; 1.\nThe graph shows mean growth for fish that were caught for the last time in the next sample or at some later sample\n\n\nCode\nnumSamplesBeforeLastGT1_data &lt;-  cd1 |&gt;\n  mutate(numSamplesBeforeLastGT1 = samplesBeforeLast &gt; 1) |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(speciesGG, riverGG, seasonGG, numSamplesBeforeLastGT1) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    sdGR = sd(grWeight, na.rm = TRUE),\n    meanSamplesBeforeLast = mean(samplesBeforeLast, na.rm = TRUE),\n    sdSamplesBeforeLast = sd(samplesBeforeLast, na.rm = TRUE),\n    ymax = meanGR + sdGR,\n    n = n()\n  )\n\n #  ggplot(tmp |&gt; filter(n &gt; 2, speciesGG == \"Brook trout\"), aes(numSamplesBeforeLastGT1, meanGR)) +\n #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +\n #    geom_col() +\n #    theme_publication() +    \n #    facet_grid(riverGG~seasonGG , scales = \"free\")\n #  \n # ggplot(tmp |&gt; filter(n &gt; 2, speciesGG == \"Brown trout\"), aes(numSamplesBeforeLastGT1, meanGR)) +\n #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +\n #    geom_col() +\n #    theme_publication() +    \n #    facet_grid(riverGG~seasonGG , scales = \"free\")\n \n   ggplot(numSamplesBeforeLastGT1_data |&gt; filter(n &gt; 2, !is.na(numSamplesBeforeLastGT1)), aes(numSamplesBeforeLastGT1, meanGR, fill = speciesGG, color = speciesGG)) +\n    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +\n    geom_col(position = \"dodge\") +\n    theme_publication() +    \n    facet_grid(riverGG~seasonGG , scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\n  ggplot(numSamplesBeforeLastGT1_data |&gt; filter(n &gt; 2, !is.na(numSamplesBeforeLastGT1)), aes(speciesGG, meanGR, fill = numSamplesBeforeLastGT1, color = numSamplesBeforeLastGT1)) +\n    geom_errorbar(aes(x = speciesGG, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +\n    geom_col(position = \"dodge\") +\n    theme_publication() +\n    theme(axis.text.x = element_text(angle = 360 - 60, vjust = 0.3, hjust = 0.1)) +\n    facet_grid(riverGG~seasonGG , scales = \"free\")\n\n\n\n\n\n\n\n\n\nRelationship between individual growth and length of subsequent observations (how many more observations before the last observation) for individual fish.\n\n\n17.11.3.3 Broken up by years\n\n\nCode\nplotGrowthSamplesLeft &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011, samplesBeforeLast &gt;= 0), aes(grWeight, samplesBeforeLast)) +\n    geom_point(alpha = 0.3) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_grid(seasonGG~year)\n}\n\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\n\n\n17.11.3.4 All years\n\n\nCode\nplotGrowthSamplesLeftNoYear &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011, samplesBeforeLast &gt;= 0), aes(grWeight, samplesBeforeLast)) +\n    geom_point(alpha = 0.3) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +  \n    facet_wrap(~seasonGG)\n}\n\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Atlantic salmon\", \"West Brook\")\n\n\n\n\n\n\n\n\n\n\n\n17.11.3.5 Break up by pos/neg growth\n\n\nCode\nplotGR_sampsBL &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r), aes(meanGR, samplesBeforeLast, color = negGrowth)) + \n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_grid(speciesGG~seasonGG+riverGG, scales = \"free\")\n}\n\nplotGR_sampsBL(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\", \"Open Large\"))\n\n\n\n\n\n\n\n\n\nCode\nplotGR_sampsBL2 &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(meanGR, samplesBeforeLast, color = speciesGG)) + \n    geom_point(aes(size = n)) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_grid(riverGG~negGrowth+seasonGG, scales = \"free\")\n}\n\nplotGR_sampsBL2(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\", \"Open Large\"))\n\n\n\n\n\n\n\n\n\nCode\nplotGR_sampsBL3 &lt;- function(d, spp, r, ng) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r, negGrowth %in% ng), aes(meanGR, samplesBeforeLast, color = speciesGG)) + \n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, ng, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_wrap(negGrowth~seasonGG, scales = \"free\")\n}\n\nplotGR_sampsBL3(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\"), FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplotGR_sampsBL3(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\"), TRUE)\n\n\n\n\n\n\n\n\n\nTO ADD: mean samplesBeforeLast by negGR\n\n\nCode\nplotGrowthKnownZPosNeg &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG == r, year &lt; 2011, !is.na(samplesBeforeLast)), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_boxplot() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(r)) +\n    theme_publication() +   \n    theme(axis.text.y = element_blank()) +\n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\", \"Atlantic salmon\"), \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\", \"Atlantic salmon\"), \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\"), \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\"), \"Isolated Small\")\n\n\n\n\n\n\n\n\n\nTO ADD: knownZ=0 vs knownZ==1, growth in previous interval\n\n\nCode\nplotGrowthKnownZ &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_density() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_wrap(~seasonGG, scales = \"free\")\n}\n\nplotGrowthKnownZ(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"Open Small\")\n\n\n\n\n\n\n\n\n\nBy year\n\n\nCode\nplotGrowthKnownZByYear &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_boxplot() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_grid(year~seasonGG)\n}\n\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n\n\n\n17.11.4 Growth and movement distance\n\n\nCode\nggplot(cd1 |&gt; filter(seasonGG %in% c(\"Summer\", \"Autumn\"), !is.na(negGrowth)), aes(distMoved, linetype = negGrowth)) +\n  geom_density(linewidth = 1.5, adjust = 8) +\n  #ggtitle(\"All species, summer\") +\n  labs(x = \"Distance moved (m)\", y = \"Frequency\") +\n  theme_publication(base_size=18) +    \n  facet_grid(seasonGG ~ speciesGG)#, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nmodSummer &lt;- (lm(distMoved ~ negGrowth * species, data = cd1 |&gt; filter(seasonGG == \"Summer\", !is.na(negGrowth))))\n#summary(modSummer)\n#anova(modSummer)\n\nlmerSummer &lt;- lmer(distMoved ~  negGrowth * species + (1 | year), data = cd1 |&gt; filter(seasonGG == \"Summer\", !is.na(negGrowth), year&gt;=2000, year &lt;= 2015))\nsummary(lmerSummer)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: distMoved ~ negGrowth * species + (1 | year)\n   Data: filter(cd1, seasonGG == \"Summer\", !is.na(negGrowth), year &gt;=  \n    2000, year &lt;= 2015)\n\nREML criterion at convergence: 49945.6\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-12.9172  -0.0071   0.0435   0.1203  12.0505 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n year     (Intercept)  0.617   0.7855  \n Residual             85.907   9.2686  \nNumber of obs: 6848, groups:  year, 16\n\nFixed effects:\n                         Estimate Std. Error t value\n(Intercept)                0.1837     0.3807   0.483\nnegGrowthTRUE             -0.1373     0.4202  -0.327\nspeciesbkt                -1.1694     0.3780  -3.094\nspeciesbnt                -1.1149     0.4173  -2.672\nnegGrowthTRUE:speciesbkt   0.9645     0.5670   1.701\nnegGrowthTRUE:speciesbnt   0.6261     1.0221   0.613\n\nCorrelation of Fixed Effects:\n                   (Intr) ngGTRUE spcsbk spcsbn ngGrwthTRUE:spcsbk\nngGrwthTRUE        -0.574                                         \nspeciesbkt         -0.738  0.589                                  \nspeciesbnt         -0.667  0.532   0.676                          \nngGrwthTRUE:spcsbk  0.439 -0.739  -0.616 -0.402                   \nngGrwthTRUE:spcsbn  0.226 -0.403  -0.238 -0.365  0.310            \n\n\nCode\nanova(lmerSummer)\n\n\nAnalysis of Variance Table\n                  npar Sum Sq Mean Sq F value\nnegGrowth            1 506.87  506.87  5.9002\nspecies              2 640.09  320.04  3.7255\nnegGrowth:species    2 249.29  124.65  1.4509\n\n\nCode\n#fixef(lmerSummer)\nconfint(lmerSummer)\n\n\n                              2.5 %     97.5 %\n.sig01                    0.3613560  1.2597836\n.sigma                    9.1122631  9.4231264\n(Intercept)              -0.5637855  0.9426509\nnegGrowthTRUE            -0.9555623  0.6915010\nspeciesbkt               -1.9083297 -0.4009494\nspeciesbnt               -1.9293896 -0.2674065\nnegGrowthTRUE:speciesbkt -0.1463336  2.0729692\nnegGrowthTRUE:speciesbnt -1.3699902  2.6356547\n\n\nCode\n# Autumn\n# \nmodAutumn &lt;- (lm(distMoved ~ negGrowth * species, data = cd1 |&gt; filter(seasonGG == \"Autumn\", !is.na(negGrowth), year &gt;= 2000, year &lt;= 2015)))\n#summary(modAutumn)\n#anova(modAutumn)\n\n\nlmerAutumn &lt;- lmer(distMoved ~ negGrowth * species + (1 | year), data = cd1 |&gt; filter(seasonGG == \"Autumn\", !is.na(negGrowth), year &gt;= 2000, year &lt;= 2015))\nsummary(lmerAutumn)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: distMoved ~ negGrowth * species + (1 | year)\n   Data: filter(cd1, seasonGG == \"Autumn\", !is.na(negGrowth), year &gt;=  \n    2000, year &lt;= 2015)\n\nREML criterion at convergence: 38588.5\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-13.1547  -0.0886  -0.0001   0.1014  12.2230 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n year     (Intercept)  0.3835  0.6193  \n Residual             81.1826  9.0101  \nNumber of obs: 5333, groups:  year, 16\n\nFixed effects:\n                         Estimate Std. Error t value\n(Intercept)                1.0609     0.3884   2.732\nnegGrowthTRUE             -0.5096     0.7269  -0.701\nspeciesbkt                -2.0367     0.4110  -4.956\nspeciesbnt                -0.7972     0.4235  -1.883\nnegGrowthTRUE:speciesbkt   2.1691     0.8649   2.508\nnegGrowthTRUE:speciesbnt   1.6599     1.2524   1.325\n\nCorrelation of Fixed Effects:\n                   (Intr) ngGTRUE spcsbk spcsbn ngGrwthTRUE:spcsbk\nngGrwthTRUE        -0.312                                         \nspeciesbkt         -0.799  0.295                                  \nspeciesbnt         -0.734  0.289   0.720                          \nngGrwthTRUE:spcsbk  0.263 -0.841  -0.352 -0.244                   \nngGrwthTRUE:spcsbn  0.183 -0.580  -0.170 -0.277  0.487            \n\n\nCode\nanova(lmerAutumn)\n\n\nAnalysis of Variance Table\n                  npar  Sum Sq Mean Sq F value\nnegGrowth            1  502.32  502.32  6.1875\nspecies              2 2058.71 1029.36 12.6795\nnegGrowth:species    2  511.78  255.89  3.1520\n\n\nCode\n#fixef(lmerAutumn)\nconfint(lmerAutumn)\n\n\n                              2.5 %      97.5 %\n.sig01                    0.1989832  1.05745340\n.sigma                    8.8377603  9.18019487\n(Intercept)               0.2961159  1.83763945\nnegGrowthTRUE            -1.9388766  0.91067565\nspeciesbkt               -2.8401171 -1.21473309\nspeciesbnt               -1.6206981  0.03077311\nnegGrowthTRUE:speciesbkt  0.4834136  3.87677897\nnegGrowthTRUE:speciesbnt -0.7892765  4.11862375\n\n\n\n\nCode\nplotGR_moveDistNegPos &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(distMoved, color = negGrowth)) + \n    geom_boxplot() +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Movement distance\") +\n    theme_publication() +  \n    theme(axis.text.y = element_blank()) +\n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDistNegPos(cd1, c(\"Brook trout\",\"Brown trout\",\"Atlantic salmon\"), c(\"West Brook\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotGR_moveDist &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + \n    geom_point(alpha = 0.2) +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Movement distance\") +\n    theme_publication() +    \n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDist(cd1, c(\"Brook trout\",\"Brown trout\",\"Atlantic salmon\"), c(\"West Brook\"))\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotGR_moveDist2 &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + \n    geom_point(alpha = 0.2) +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Movement distance\") +\n    theme_publication() +    \n    facet_grid(riverGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDist2(cd1, c(\"Brook trout\"), c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"))\n\n\n\n\n\n\n\n\n\nCode\nplotGR_moveDist2(cd1, c(\"Brown trout\"), c(\"West Brook\", \"Open Large\", \"Open Small\"))",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#machine-learning-models---individual-data",
    "href": "modelGrowthInMass.html#machine-learning-models---individual-data",
    "title": "17  Growth in mass",
    "section": "17.12 Machine Learning models - individual data",
    "text": "17.12 Machine Learning models - individual data\nUsing xgBoost to explore patterns in:\n- Binary, lose mass:gain mass\n- Regression, growth in mass\n\n17.12.1 Binary model with negative growth, yes:no\nNot yet in targets….\n\n\n17.12.2 Function to run hyperparameters\n\n\nCode\nrunHyperparamSearchIndData &lt;- function(d = cd1, vars = c(\"riverGG\", \"observedWeight\", \"cohort\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"negGrowth\"), nRoundsIn = 150000, early_stopping_roundsIn = 50) {\n  \n  #set.seed(123)\n  \n  dML_negGrowth &lt;- d |&gt; \n    mutate(age = year - cohort) |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_negGrowth &lt;- setdiff(names(dML_negGrowth), \"negGrowth\")\n  \n  # Create the treatment plan from the training data\n  treatplan_negGrowth &lt;- vtreat::designTreatmentsZ(dML_negGrowth, features_negGrowth, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_negGrowth &lt;- treatplan_negGrowth %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML_negGrowth, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_train_negGrowth &lt;- dML_negGrowth$negGrowth\n  \n  # create hyperparameter grid\n  hyper_grid_negGrowth &lt;- expand.grid(\n    eta = c(.01, .05, .1, .3),\n    max_depth = c(1, 3, 5, 7),\n    min_child_weight = c(1, 3, 5, 7),\n    subsample = c(.65, .8, 1),\n    colsample_bytree = c(.8, .9, 1),\n    optimal_trees = 0,               # a place to dump results\n    min_logloss = 0                     # a place to dump results\n  )\n\n  # reproducibility\n    #set.seed(123)\n  #   \n  # grid search\n  for(i in 1:nrow(hyper_grid_negGrowth)) {\n    print(paste0(i, \" out of \", nrow(hyper_grid_negGrowth)))\n    # create parameter list\n    params_negGrowth &lt;- list(\n      eta = hyper_grid_negGrowth$eta[i],\n      max_depth = hyper_grid_negGrowth$max_depth[i],\n      min_child_weight = hyper_grid_negGrowth$min_child_weight[i],\n      subsample = hyper_grid_negGrowth$subsample[i],\n      colsample_bytree = hyper_grid_negGrowth$colsample_bytree[i]\n    )\n  \n  \n    # train model\n    xgb.tune_negGrowth &lt;- xgb.cv(\n      params = params_negGrowth,\n      data = features_train_negGrowth,\n      label = response_train_negGrowth,\n      nrounds = nRoundsIn,\n      nfold = 5,\n      objective = \"binary:logistic\", #\"reg:linear\",  # for regression models\n      verbose = 0,               # silent,\n      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees\n    )\n  \n    # add min training error and trees to grid\n    hyper_grid_negGrowth$optimal_trees[i] &lt;- which.min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)\n    hyper_grid_negGrowth$min_logloss[i] &lt;- min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)\n  }\n  \n  return(hyper_grid_negGrowth |&gt; arrange(min_logloss))\n}\n\n\n\n\n17.12.3 Function to run models\n\n\nCode\n# http://uc-r.github.io/gbm_regression\nrunXGB_indData &lt;- function(d = cd1, vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"negGrowth\"), nRoundsIn = 200000, early_stopping_roundsIn = 50, params = params_negGrowthIn) {\n  \n  #set.seed(125)\n  \n  dML &lt;- d |&gt; \n    mutate(age = year - cohort) |&gt; \n    dplyr::select(all_of(vars))\n    \n  \n  # variable names\n  features_negGrowth &lt;- setdiff(names(dML), \"negGrowth\")\n  \n  # Create the treatment plan from the training data\n  treatplan_negGrowth &lt;- vtreat::designTreatmentsZ(dML, features_negGrowth, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_negGrowth &lt;- treatplan_negGrowth %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_train_negGrowth &lt;- dML$negGrowth\n  \n  # Prepare the test data\n  features_test_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_test_negGrowth &lt;- dML$negGrowth\n\n  ##### Run model\n  # parameter list - from the top model of the grid search above\n  params_negGrowth &lt;- list(\n    eta = params$eta, #0.01,\n    max_depth = params$max_depth, #1,\n    min_child_weight = params$min_child_weight, #7,\n    subsample = params$subsample, #0.8,\n    colsample_bytree = params$colsample_bytree #0.9\n   # optimal_trees = params$optimal_trees\n  )\n  \n  # train final model\n  xgb.fit.final_negGrowth &lt;- xgboost(\n    params = params_negGrowth,\n    data = features_train_negGrowth,\n    label = response_train_negGrowth,\n    nrounds = nRoundsIn,\n    objective = \"binary:logistic\",\n    verbose = 1,\n    early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for 20 consecutive trees\n  )\n  \n\n  return(\n    list(\n      dat = dML,\n      xgb = xgb.fit.final_negGrowth,\n      new_vars = new_vars_negGrowth,\n      features_train = features_train_negGrowth,\n      response_train = response_train_negGrowth\n    )\n  )\n\n}\n\n\n\n\n17.12.4 Brook trout\n\n17.12.4.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_BKT = FALSE\nrunXGB_BKT = FALSE\n\nif (runHP_BKT) {\n  hpNegGrowthBKT &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brook trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthBKT, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData\")\n} else {\n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData\")\n}\n\nhpNegGrowthBKT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.05         7                3      1.00              0.8           174\n2  0.05         5                1      0.80              0.9           208\n3  0.10         3                5      1.00              0.9           337\n4  0.01         5                1      1.00              0.8          1362\n5  0.10         3                1      1.00              0.8           324\n6  0.10         5                1      0.80              0.9           124\n7  0.10         5                1      0.65              1.0           112\n8  0.30         3                1      1.00              0.9           105\n9  0.10         5                3      1.00              0.8           159\n10 0.10         3                5      0.80              0.8           296\n   min_logloss\n1    0.2516642\n2    0.2526194\n3    0.2528114\n4    0.2531555\n5    0.2532081\n6    0.2532191\n7    0.2532716\n8    0.2533034\n9    0.2533418\n10   0.2533950\n\n\nCode\nif (runXGB_BKT) {\n  negGrowthBKT &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brook trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthBKT[1,]\n  )\nsave(negGrowthBKT, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData\")\n}\nnegGrowthBKT$xgb$best_iteration\n\n\n[1] 2e+05\n\n\nCode\nnegGrowthBKT$xgb$best_score\n\n\n[1] 0.01244459\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthBKT$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviBKT_negGrowth &lt;- xgb.importance(model = negGrowthBKT$xgb)\n\n\n[13:45:04] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viBKT_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthBKT &lt;- hstats(negGrowthBKT$xgb, v = negGrowthBKT$new_vars, X = negGrowthBKT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthBKT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.7491042\n\n\nCode\nplot(s_negGrowthBKT)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthBKT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthBKT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthBKT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 25, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\n#n.trees = 1082, grid.resolution = 100,\n\npFlow_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npWeight_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),\n         var = \"Mass\",\n         speciesGG = \"Brook Trout\")\n\npFlow_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Brook Trout\")\n\npMT_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Brook Trout\")\n\npNInd_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brook Trout\")\n\npYear_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brook Trout\")\n\n\nall_negGrowthDataBKT &lt;- bind_rows(pWeight_negGrowthDataBKT, pFlow_negGrowthDataBKT, pMT_negGrowthDataBKT, pNInd_negGrowthDataBKT, pYear_negGrowthDataBKT)\n\n(\nall_negGrowthDataBKT_gg &lt;- ggplot(all_negGrowthDataBKT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialISBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Isolated_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|&gt; \n  mutate(riverGG = \"Isolated Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Isolated_Small\")\n\npartialRiversBKT &lt;- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"), \n                             ordered = T))\n\nggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanTemperature\", X = negGrowthBKT$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanFlowByRiver\", X = negGrowthBKT$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanFlowByRiver\", X = negGrowthBKT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n17.12.5 Brown trout\n\n17.12.5.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_BNT = FALSE\nrunXGB_BNT = FALSE\n\nif (runHP_BNT) {\n  hpNegGrowthBNT &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brown trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthBNT, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData\")\n} else {\n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData\")\n}\n  \n  hpNegGrowthBNT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         7                7      0.80              0.9            23\n2  0.10         3                1      0.80              0.9            98\n3  0.10         5                1      0.65              1.0            62\n4  0.05         3                3      1.00              1.0           258\n5  0.05         5                3      1.00              0.9           203\n6  0.10         5                7      0.65              0.8           100\n7  0.05         3                1      0.80              0.9           233\n8  0.10         3                3      0.80              0.8           120\n9  0.01         3                5      1.00              1.0          1343\n10 0.30         7                7      1.00              0.8            26\n   min_logloss\n1    0.1390132\n2    0.1394058\n3    0.1395776\n4    0.1398355\n5    0.1401673\n6    0.1404485\n7    0.1406171\n8    0.1406177\n9    0.1406708\n10   0.1408398\n\n\nCode\nif (runXGB_BNT) {\n  negGrowthBNT &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brown trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthBNT[1,]\n  )\n  save(negGrowthBNT, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData\")\n}\nnegGrowthBNT$xgb$best_iteration\n\n\n[1] 2807\n\n\nCode\nnegGrowthBNT$xgb$best_score\n\n\n[1] 0.01994943\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthBNT$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviBNT_negGrowth &lt;- xgb.importance(model = negGrowthBNT$xgb)\n\n\n[16:35:40] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viBNT_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthBNT &lt;- hstats(negGrowthBNT$xgb, v = negGrowthBNT$new_vars, X = negGrowthBNT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthBNT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.8319475\n\n\nCode\nplot(s_negGrowthBNT)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthBNT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthBNT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthBNT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npFlow_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Brown Trout\")\n\npMT_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Brown Trout\")\n\npNInd_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brown Trout\")\n\npYear_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brown Trout\")\n\n\nall_negGrowthDataBNT &lt;- bind_rows(pFlow_negGrowthDataBNT, pMT_negGrowthDataBNT, pNInd_negGrowthDataBNT, pYear_negGrowthDataBNT)\n\n(\nall_negGrowthDataBNT_gg &lt;- ggplot(all_negGrowthDataBNT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialRiversBNT &lt;- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\"), \n                             ordered = T))\n\nggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanTemperature\", X = negGrowthBNT$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanFlowByRiver\", X = negGrowthBNT$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanFlowByRiver\", X = negGrowthBNT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n17.12.6 Atlantic salmon\n\n17.12.6.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_ATS = FALSE\nrunXGB_ATS = FALSE\n\nif (runHP_ATS) {\n  hpNegGrowthATS &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Atlantic salmon\", !is.na(grWeight)) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthATS, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData\")\n} else {  \n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData\")\n}  \nhpNegGrowthATS[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.01         5                3      0.80              1.0          1081\n2  0.10         5                1      0.80              0.8           134\n3  0.01         7                7      0.80              0.9           681\n4  0.01         7                3      1.00              0.8           621\n5  0.01         5                5      0.80              0.9           999\n6  0.05         5                7      0.65              0.9           240\n7  0.01         7                3      0.80              0.8           641\n8  0.05         5                5      0.80              0.9           220\n9  0.01         7                5      0.65              0.8           670\n10 0.01         5                5      0.65              0.8          1017\n   min_logloss\n1    0.2966089\n2    0.2969262\n3    0.2972223\n4    0.2973879\n5    0.2975546\n6    0.2975606\n7    0.2977132\n8    0.2978511\n9    0.2979202\n10   0.2979286\n\n\nCode\nif (runXGB_ATS) {\n  negGrowthATS &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Atlantic salmon\", !is.na(grWeight)) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthATS[1,]\n  )\n  save(negGrowthATS, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData\")\n}\nnegGrowthATS$xgb$best_iteration\n\n\n[1] 2e+05\n\n\nCode\nnegGrowthATS$xgb$best_score\n\n\n[1] 0.03559097\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthATS$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviATS_negGrowth &lt;- xgb.importance(model = negGrowthATS$xgb)\n\n\n[16:37:00] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\nCode\nxgb.plot.importance(viATS_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthATS &lt;- hstats(negGrowthATS$xgb, v = negGrowthATS$new_vars, X = negGrowthATS$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthATS\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.6452019\n\n\nCode\nplot(s_negGrowthATS)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthATS, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthATS, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthATS, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npFlow_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\n\npWeight_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),\n         var = \"Mass\",\n         speciesGG = \"Atlantic salmon\")\n\npFlow_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Atlantic salmon\")\n\npMT_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Atlantic salmon\")\n\npNInd_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Atlantic salmon\")\n\npYear_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Atlantic salmon\")\n\n\nall_negGrowthDataATS &lt;- bind_rows(pWeight_negGrowthDataATS, pFlow_negGrowthDataATS, pMT_negGrowthDataATS, pNInd_negGrowthDataATS, pYear_negGrowthDataATS)\n\n(\nall_negGrowthDataATS_gg &lt;- ggplot(all_negGrowthDataATS, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthATS$xgb, v = \"meanTemperature\", X = negGrowthATS$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthATS$xgb, v = \"meanFlowByRiver\", X = negGrowthATS$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthATS$xgb, v = \"meanFlowByRiver\", X = negGrowthATS$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n17.12.7 All 3 species\n\n\nCode\n# variable importance plots\n\nviAll_negGrowth &lt;- bind_rows(\n  viBKT_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brook Trout\"),\n  viBNT_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brown Trout\"),\n  viATS_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Atlantic Salmon\")\n) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE),\n         feature2 = case_when(\n           Feature == \"observedWeight\" ~ \"Fish mass\",\n           Feature == \"meanFlowByRiver\" ~ \"Flow\",\n           Feature == \"meanTemperature\" ~ \"Temperature\",\n           Feature == \"nInd\" ~ \"Num Individuals\",\n           Feature == \"year\" ~ \"Year\")\n  )\n\nggplot(viAll_negGrowth |&gt; filter(Feature %in% c(\"observedWeight\", \"meanFlowByRiver\", \"meanTemperature\", \"nInd\", \"year\")), aes(feature2, Gain, fill = sppOrdered)) +\n  geom_col(position = \"dodge\") +\n  theme_publication() +\n  scale_fill_grey() +\n  labs(y = \"Variable importance for the proportion of negative observations\", x = \"Variable\")\n\n\n\n\n\n\n\n\n\nCode\n########################################################\n\nall_negGrowthData3spp &lt;- bind_rows(all_negGrowthDataBKT, all_negGrowthDataBNT, all_negGrowthDataATS) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE))\n\nall_negGrowthData3sppMass_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Mass\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled fish mass\") +\n  theme(legend.position = \"none\")  \n\n\nall_negGrowthData3sppFlow_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Flow\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled flow\") +\n  theme(legend.position = \"none\")  \n\n\nall_negGrowthData3sppTemp_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Temperature\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled temperature\") +\n  theme(legend.position = \"none\")  \n\nall_negGrowthData3sppNInd_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Num inds\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled Number of individuals\") +\n  theme(legend.position = \"none\")  \n\nall_negGrowthData3sppYear_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Year\"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n  scale_color_grey() +\n  labs(y = NULL, x = \"Year\") +\n  theme(legend.position = \"none\")  \n\ngridExtra::grid.arrange(\n  all_negGrowthData3sppMass_gg,\n  all_negGrowthData3sppFlow_gg, \n  all_negGrowthData3sppTemp_gg,\n  all_negGrowthData3sppNInd_gg,\n  #all_negGrowthData3sppYear_gg,\n  left = textGrob(expression(bold(\"Effect on proportion of negative observations\")), rot = 90, gp = gpar(fontsize = 16))\n)\n\n\n\n\n\n\n\n\n\nCode\nall_negGrowthData3sppYear_gg\n\n\n\n\n\n\n\n\n\nCode\n#######################################\n\n\n\n\n17.12.8 Growth model, continuous growth\ncan we add season, river interactions? or do separate analyses?\n\n\nCode\nlibrary(targets)\ndML_W &lt;- tar_read(dML_W_target)\ntreatplan_W &lt;- tar_read(treatplan_W_target)\nfeatures_train_W &lt;- tar_read(features_train_W_target)\nnew_vars_W &lt;- tar_read(new_vars_W_target)\n\n# dimensions of one-hot encoded data\nfeatures_train_W &lt;- tar_read(features_train_W_target)\nfeatures_test_W &lt;- tar_read(features_test_W_target)\n\nresponse_train_W &lt;- tar_read(response_train_W_target)\nresponse_test_W &lt;- tar_read(response_test_W_target)\n\n# run from targets\nhyper_grid_W &lt;- tar_read(hyper_grid_W_target)\ntopModel_W &lt;- tar_read(topModel_W_target)\n\n\nfinalModels_W &lt;- tar_read(finalModels_W_target)\n\nmodelToUse &lt;- 1\n\n\n\n17.12.8.1 Run first model\n\n\nCode\n# reproducibility\nset.seed(1234)\n\nxgb.fit1_W &lt;- xgb.cv(\n  data = features_train_W,\n  label = response_train_W,\n  nrounds = 500,\n  nfold = 5,\n  objective = \"reg:squarederror\",  # for regression models\n  verbose = 0,               # silent,\n  early_stopping_rounds = 10\n)\n\n# get number of trees that minimize error\nxgb.fit1_W$evaluation_log %&gt;%\n  dplyr::summarise(\n    ntrees.train = which(train_rmse_mean == min(train_rmse_mean))[1],\n    rmse.train   = min(train_rmse_mean),\n    ntrees.test  = which(test_rmse_mean == min(test_rmse_mean))[1],\n    rmse.test   = min(test_rmse_mean),\n  )\n\n\n  ntrees.train  rmse.train ntrees.test   rmse.test\n1           67 0.001534427          65 0.001884902\n\n\nCode\n# plot error vs number trees\nggplot(xgb.fit1_W$evaluation_log) +\n  geom_line(aes(iter, train_rmse_mean), color = \"red\") +\n  geom_line(aes(iter, test_rmse_mean), color = \"blue\")\n\n\n\n\n\n\n\n\n\n\n\n17.12.8.2 Hyperparameter search grid\n\n\nCode\n# create hyperparameter grid\n# original grid - using a smaller one in targets\n# hyper_grid_W0 &lt;- expand.grid(\n#   eta = c(.01, .05, .1, .3),\n#   max_depth = c(1, 3, 5, 7),\n#   min_child_weight = c(1, 3, 5, 7),\n#   subsample = c(.65, .8, 1), \n#   colsample_bytree = c(.8, .9, 1),\n#   optimal_trees = 0,               # a place to dump results\n#   min_RMSE = 0                     # a place to dump results\n# )\n# nrow(hyper_grid_W0)\n\n\n\n# Original run using hyper_grid_W0 \n# eta max_depth min_child_weight\n# subsample colsample_bytree optimal_trees min_RMSE 1 0.01 7 5 0.65 0.8\n# 1376 0.001847600 2 0.05 7 3 0.80 0.9 292 0.001848465 3 0.01 7 7 0.80 0.9\n# 1382 0.001849086 4 0.01 5 1 0.80 0.8 2399 0.001849250 5 0.05 7 3 0.80\n# 0.8 281 0.001849258 6 0.01 5 3 0.65 0.8 2147 0.001849905 7 0.05 5 1 0.65\n# 0.8 459 0.001849931 8 0.01 5 5 0.80 0.9 2296 0.001850049 9 0.01 7 5 0.65\n# 0.9 1402 0.001850246 10 0.01 7 7 0.65 0.8 1382 0.001850544 11 0.01 7 3\n# 0.65 0.8 1384 0.001850704 12 0.05 3 3 0.80 0.8 1509 0.001850763 13 0.01\n# 7 7 0.80 0.8 1453 0.001850975 14 0.01 7 1 0.80 1.0 1281 0.001851069 15\n# 0.01 7 1 0.80 0.8 1473 0.001851078\n\n\n\n\n17.12.8.3 Variable importance plot\n\n\nCode\n#importance_matrix_W &lt;- tar_read(importance_matrix_W_target)\n\n# variable importance plot\n\n\n\n\n17.12.8.4 Partial dependence plots\n\n\nCode\ncreate_xgb_plots &lt;- function(d = finalModels_W, f = features_train_W, modelToUse = modelToUse) {\n  \n  imp &lt;- xgb.ggplot.importance(d$importanceMatrix[[modelToUse]], top_n = 10, measure = \"Gain\") + \n    ggtitle(paste0(\"Model #\", modelToUse))\n\n  pW_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"observedWeight\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f) \n  \n  pFlow_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pTemp_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"meanTemperature\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pAge_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"age\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pCohort_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"cohort\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n\n\n  partials &lt;- gridExtra::grid.arrange(pW_W, pFlow_W, pTemp_W, pAge_W, pCohort_W, nrow = 3, top=textGrob(paste0(\"Model #\", modelToUse)))\n  \n return(list(imp, partials)) \n}\n\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 1)\n\n\n[18:15:28] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.62808]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 2)\n\n\n[18:16:07] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.63049]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 3)\n\n\n[18:16:58] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.63289]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 4)\n\n\n[18:17:51] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.63529]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 5)\n\n\n[18:18:36] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.63769]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 15)\n\n\n[18:19:17] WARNING: src/learner.cc:553: \n  If you are loading a serialized model (like pickle in Python, RDS in R) generated by\n  older XGBoost, please export the model by calling `Booster.save_model` from that version\n  first, then load it back in current version. See:\n\n    https://xgboost.readthedocs.io/en/latest/tutorials/saving_model.html\n\n  for more details about differences between saving model and serializing.\n\n\n\n\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                  grob\n1 1 (2-2,1-1) arrange        gtable[layout]\n2 2 (2-2,2-2) arrange        gtable[layout]\n3 3 (3-3,1-1) arrange        gtable[layout]\n4 4 (3-3,2-2) arrange        gtable[layout]\n5 5 (4-4,1-1) arrange        gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.64009]\n\n\n\n\n17.12.8.5 Lime\n\n\nCode\n# get a few observations to perform local interpretation on\nlocal_obs_W &lt;- dML_W[1:3, ]\n\n# one-hot encode the local observations to be assessed.\nlocal_obs_onehot_W &lt;- vtreat::prepare(treatplan_W, local_obs_W, varRestriction = new_vars_W)\n\n# apply LIME\nexplainer_W &lt;- lime(data.frame(features_train_W), finalModels_W$xgb[[modelToUse]], quantile_bins = FALSE)\nexplanation_W &lt;- lime::explain(local_obs_onehot_W, explainer_W, n_features = 5, n_labels = 2)\nplot_features(explanation_W)\n\n\n\n\n\n\n\n\n\n\n\n17.12.8.6 Predict\n\n\nCode\ncreatePredictions &lt;- function(d = finalModels_W, f = features_test_W, r = response_test_W, modelToUse = modelToUse) {\n  \n  pred_W &lt;- predict(d$xgb[[modelToUse]], f)\n  rmse &lt;- caret::RMSE(pred_W, r)\n  r2 &lt;- caret::R2(pred_W, r)\n  \n  obsPred_W &lt;- bind_cols(obs = r, pred = pred_W, f)\n  \n  return(list(r2 = r2, rmse = rmse, obsPred_W = obsPred_W))\n}\n\n\n\n\nCode\npredsOP_W &lt;- createPredictions(finalModels_W, features_test_W, response_test_W, modelToUse) \n\nggplot(predsOP_W$obsPred_W, aes(obs, pred)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Observed growth rate\", y = \"Predicted growth rate\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle(paste0(\"r2 = \", round(predsOP_W$r2, 2), \" RMSE = \", round(predsOP_W$rmse, 5)))\n\n\n\n\n\n\n\n\n\nCode\nggplot(predsOP_W$obsPred_W, aes(obs, pred)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Observed growth rate\", y = \"Predicted growth rate\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n\n\n\nCode\nrenameLev &lt;- function(d) {\n  d |&gt;  \n    str_split(\"_lev_x_\") |&gt; \n    map(~.x[2]) |&gt; \n    unlist()\n}\n\ncreatePredictionsGrid &lt;- function(d = finalModels_W, pg = gridPred, modelToUse = modelToUse){\n  #, f = features_test_W, r = response_test_W, nSeq = 5, modelToUse = modelToUse) {\n  \n  predGrid &lt;- predict(d$xgb[[modelToUse]], pg)\n  gridPredOut &lt;- bind_cols(pg, pred = predGrid) |&gt; \n    rename_with(\n      renameLev,  \n      contains(\"_lev_x_\")\n    ) |&gt;  \n    rowwise() |&gt; \n    mutate(\n      sumRiver = sum(Isolated_Small + Open_Large + Open_Small + West_Brook),\n      sumSeason = sum(Autumn + Spring + Summer + Winter)\n    ) |&gt;   \n    filter(\n      sumRiver == 1,\n      sumSeason == 1\n    ) |&gt;   \n    mutate(\n      across(c('Isolated_Small':'Winter'), ~.x == 1)\n    )\n\n  return(gridPredOut)\n}\n\n\n\nnSeq &lt;- 5\nxGrid &lt;- expand_grid(\n    observedWeight = 40, #seq(min(f[,\"observedWeight\"]), max(f[,\"observedWeight\"]), length.out = nSeq),\n    cohort = 2010, #seq(min(f[,\"cohort\"]), max(f[,\"cohort\"]), length.out = nSeq),\n    age = 1, #seq(min(f[,\"age\"]), max(f[,\"age\"]), length.out = nSeq),\n    meanTemperature = seq(min(features_test_W[,\"meanTemperature\"]), max(features_test_W[,\"meanTemperature\"]), length.out = nSeq * 3),\n    meanFlowByRiver = seq(min(features_test_W[,\"meanFlowByRiver\"]), max(features_test_W[,\"meanFlowByRiver\"]), length.out = nSeq * 3),\n    riverGG_lev_x_Isolated_Small = c(0, 1),\n    riverGG_lev_x_Open_Large = c(0, 1),\n    riverGG_lev_x_Open_Small = c(0, 1),\n    riverGG_lev_x_West_Brook = c(0, 1),\n    seasonGG_lev_x_Autumn = c(0, 1),\n    seasonGG_lev_x_Spring = c(0, 1),\n    seasonGG_lev_x_Summer = c(0, 1),\n    seasonGG_lev_x_Winter = c(0, 1)\n  ) |&gt; \n  as.matrix()\n\n\npreds_W &lt;- createPredictionsGrid(\n  finalModels_W, \n  xGrid,\n  modelToUse\n) \n\n\nggplot(preds_W |&gt; \n         filter(\n           #Isolated_Small, Open_Large, Open_Small, West_Brook, \n           #Autumn, Spring, Summer, Winter\n           ), \n       aes(meanFlowByRiver, pred, color = meanTemperature, group = meanTemperature)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream flow\", y = \"Predicted growth rate\") +\n  geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(Isolated_Small+Open_Large+Open_Small+West_Brook ~ Spring+Summer+Autumn+Winter)\n\n\n\n\n\n\n\n\n\nCode\n# use seasonal zScores for environmetnal data\n\n\n\n\n17.12.8.7 When and where do fish have predicted negative growth?\n\n\nCode\npredNeg &lt;- preds_W |&gt; filter(pred &lt; 0.000)\npredNeg |&gt; \n  count(Isolated_Small, Open_Large, Open_Small, West_Brook, Autumn, Spring, Summer, Winter) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 10 × 9\n# Rowwise: \n   Isolated_Small Open_Large Open_Small West_Brook Autumn Spring Summer Winter\n   &lt;lgl&gt;          &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt; \n 1 FALSE          FALSE      FALSE      TRUE       TRUE   FALSE  FALSE  FALSE \n 2 FALSE          TRUE       FALSE      FALSE      TRUE   FALSE  FALSE  FALSE \n 3 FALSE          FALSE      TRUE       FALSE      TRUE   FALSE  FALSE  FALSE \n 4 TRUE           FALSE      FALSE      FALSE      TRUE   FALSE  FALSE  FALSE \n 5 FALSE          FALSE      FALSE      TRUE       FALSE  FALSE  FALSE  TRUE  \n 6 FALSE          FALSE      FALSE      TRUE       FALSE  FALSE  TRUE   FALSE \n 7 FALSE          TRUE       FALSE      FALSE      FALSE  FALSE  FALSE  TRUE  \n 8 FALSE          TRUE       FALSE      FALSE      FALSE  FALSE  TRUE   FALSE \n 9 TRUE           FALSE      FALSE      FALSE      FALSE  FALSE  FALSE  TRUE  \n10 TRUE           FALSE      FALSE      FALSE      FALSE  FALSE  TRUE   FALSE \n# ℹ 1 more variable: n &lt;int&gt;\n\n\nCode\npredNeg |&gt; \n  count(Autumn, Spring, Summer, Winter) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 3 × 5\n# Rowwise: \n  Autumn Spring Summer Winter     n\n  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;int&gt;\n1 TRUE   FALSE  FALSE  FALSE    190\n2 FALSE  FALSE  FALSE  TRUE      37\n3 FALSE  FALSE  TRUE   FALSE     29\n\n\nCode\npredNeg |&gt; \n  count(Isolated_Small, Open_Large, Open_Small, West_Brook) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 4 × 5\n# Rowwise: \n  Isolated_Small Open_Large Open_Small West_Brook     n\n  &lt;lgl&gt;          &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;      &lt;int&gt;\n1 FALSE          FALSE      FALSE      TRUE         103\n2 FALSE          TRUE       FALSE      FALSE         74\n3 TRUE           FALSE      FALSE      FALSE         42\n4 FALSE          FALSE      TRUE       FALSE         37",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#gam-for-individual-growth",
    "href": "modelGrowthInMass.html#gam-for-individual-growth",
    "title": "17  Growth in mass",
    "section": "17.13 GAM for individual growth",
    "text": "17.13 GAM for individual growth\n\n\nCode\n#riverGG, seasonGG, observedWeight, cohort, age, meanTemperature, meanFlowByRiver, negGrowth\n\n\nkValue &lt;- 4 \n\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(flowByRiverS, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(flowByRiverSR, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.1) +\n  geom_hline(yintercept = 0) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(tempSR, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.1) +\n  geom_hline(yintercept = 0) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n\n\n\n17.13.1 Linear models for growth\nInitial test of model structure for GAMs\n\n\nCode\nrunLinearModels &lt;- function(d, speciesIn) {\n  models =\n    tibble(model = \n      c(\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF)',\n          'grWeight ~ (riverGG * seasonGG + tempSR * flowByRiverSR + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG + tempSR + flowByRiverSR + cohortF * ageF)'\n       )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~lm(.x, data = d |&gt; filter(speciesGG == speciesIn))),\n      glanced = map(fit, broom::glance),\n      tidied = map(fit, broom::tidy)\n    )\n  return(models)\n}\n\n\n\n17.13.1.1 Brook trout\nMost complex model has lowest AIC\n\n\nCode\nspeciesIn &lt;- \"Brook trout\"\nmodLinearBKT &lt;- runLinearModels(dGAM, speciesIn)\n\nmodLinearBKT |&gt; \n    unnest(glanced) |&gt;\n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n# A tibble: 6 × 5\n  model                                           AIC df.residual fit   tidied  \n  &lt;chr&gt;                                         &lt;dbl&gt;       &lt;int&gt; &lt;lis&gt; &lt;list&gt;  \n1 grWeight ~ (riverGG * seasonGG * tempSR * … -94812.        9893 &lt;lm&gt;  &lt;tibble&gt;\n2 grWeight ~ (riverGG * seasonGG * tempSR * … -93880.        9943 &lt;lm&gt;  &lt;tibble&gt;\n3 grWeight ~ (riverGG * seasonGG * tempSR * … -92957.        9957 &lt;lm&gt;  &lt;tibble&gt;\n4 grWeight ~ (riverGG * seasonGG + tempSR * … -91713.       10002 &lt;lm&gt;  &lt;tibble&gt;\n5 grWeight ~ (riverGG * seasonGG + tempSR + … -91576.       10003 &lt;lm&gt;  &lt;tibble&gt;\n6 grWeight ~ (riverGG * seasonGG * tempSR * … -90183.       10007 &lt;lm&gt;  &lt;tibble&gt;\n\n\n\n\n17.13.1.2 Brown trout\nMost complex model has lowest AIC\n\n\nCode\nspeciesIn &lt;- \"Brown trout\"\nmodLinearBNT &lt;- runLinearModels(dGAM, speciesIn)\n\nmodLinearBNT |&gt; \n    unnest(glanced) |&gt;\n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n# A tibble: 6 × 5\n  model                                           AIC df.residual fit   tidied  \n  &lt;chr&gt;                                         &lt;dbl&gt;       &lt;int&gt; &lt;lis&gt; &lt;list&gt;  \n1 grWeight ~ (riverGG * seasonGG * tempSR * … -45804.        4491 &lt;lm&gt;  &lt;tibble&gt;\n2 grWeight ~ (riverGG * seasonGG * tempSR * … -44981.        4543 &lt;lm&gt;  &lt;tibble&gt;\n3 grWeight ~ (riverGG * seasonGG * tempSR * … -44366.        4539 &lt;lm&gt;  &lt;tibble&gt;\n4 grWeight ~ (riverGG * seasonGG + tempSR * … -43783.        4572 &lt;lm&gt;  &lt;tibble&gt;\n5 grWeight ~ (riverGG * seasonGG + tempSR + … -43714.        4573 &lt;lm&gt;  &lt;tibble&gt;\n6 grWeight ~ (riverGG * seasonGG * tempSR * … -42537.        4591 &lt;lm&gt;  &lt;tibble&gt;\n\n\nThese linear models suggest that we need significant complexity in GAM models\n\n\n\n17.13.2 GAM models for growth\nThis modeling approach map() (which I would like to use), throws an error using bam(). Use gamX model approach below.\n\n\nCode\nrunGAMModels &lt;- function(d, speciesIn, kIn) {\n  models =\n    tibble(model = \n      c(\n            'grWeight ~ riverGG * seasonGG * observedWeight + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG)',\n            \n            'grWeight ~ riverGG * seasonGG * observedWeight * tempSR * flowByRiverSR + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG)'\n       )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~ bam(.x, method = \"REML\", data = d |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013)))\n  #    glanced = map(fit, broom::glance),\n  #    tidied = map(fit, broom::tidy)\n    )\n  return(models)\n}\n\n\n# \n# speciesIn &lt;- \"Brook trout\"\n# modLinearBKT &lt;- runGAMModels(dGAM, speciesIn, kValue)\n# \n# modLinearBKT |&gt; \n#     unnest(glanced) |&gt;\n#     arrange(AIC) |&gt;\n#     dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n\n17.13.2.1 Brook trout - flow by river\n\n\nCode\nspeciesIn &lt;- \"Brook trout\"\nkIn &lt;- 4\n\ngam0 &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n######\n\ngam0ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngam1ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngam2ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngam3ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gam0ByRiver, gam1ByRiver, gam2ByRiver, gam3ByRiver) |&gt; arrange(AIC)\n\n\n                   df       AIC\ngam0ByRiver 116.89094 -87224.07\ngam1ByRiver  70.59026 -86375.49\ngam2ByRiver 105.40682 -85711.79\ngam3ByRiver 102.06380 -85375.03\n\n\n\n\n17.13.2.2 Brook trout - compare flow and flow by river gams\n\n\nCode\npredictBKTgam &lt;- function(dIn, modInFlowByRiver){\n\n  # predMat0 &lt;- \n  #   expand.grid(\n  #     flowSR = seq(-1.5,1.5,0.25), \n  #     tempSR = seq(-1.5,1.5,0.25), \n  #     riverGG = unique(dIn$riverGG), \n  #     seasonGG= unique(dIn$seasonGG),\n  #     observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n  #     cohortF = 2000:2013,#uunique(dIn$cohortF),\n  #     ageF = 0:4,#unique(dIn$ageF),\n  #     byRiver = FALSE\n  # )\n  # predMat &lt;- \n  #   add_column(\n  #     pred = predict.bam(modInFlow, predMat0),\n  #     predMat0\n  #   ) |&gt; \n  #   rename(flow = flowSR, temp = tempSR)\n  \n  predMatByRiver0 &lt;- \n    expand.grid(\n      flowByRiverSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#unique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = TRUE\n    ) \n  predMatByRiver &lt;- \n    add_column(\n      pred = predict.bam(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |&gt; \n    rename(flow = flowByRiverSR, temp = tempSR)\n\n  return(predMatByRiver)\n}\n\ngamBKTPredictions &lt;- predictBKTgam(dGAM, gam0ByRiver)\n\n\n\n\n17.13.2.3 Graph predictions\n\n\nCode\nunique(gamBKTPredictions$observedWeight)\n\n\n [1]   2  22  42  62  82 102 122 142 162 182\n\n\nCode\nggplot(\n  gamBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(22), \n      cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG+byRiver, scales = 'free')",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#logistic-models-for-environmental-effects-on-neggrowth",
    "href": "modelGrowthInMass.html#logistic-models-for-environmental-effects-on-neggrowth",
    "title": "17  Growth in mass",
    "section": "17.14 Logistic models for environmental effects on negGrowth",
    "text": "17.14 Logistic models for environmental effects on negGrowth\n\n17.14.1 Standardize flow and temperature\n\n\nCode\n# getZ &lt;- function(d){\n#   list(\n#     mean = mean(d, na.rm = TRUE),\n#     sd = sd(d, na.rm = TRUE)\n#   )\n# }\n# fZ &lt;- getZ(cd1$meanFlowByRiver)\n# fT &lt;- getZ(cd1$meanTemperature)\n\nz &lt;- cd1 |&gt; \n  left_join(tar_read(indCounts_target)) |&gt;\n  left_join(tar_read(indCountsBySpp_target)) |&gt; \n  group_by(riverGG, speciesGG) |&gt; \n  summarize(\n    fQMean = mean(meanFlowByRiver, na.rm = TRUE),\n    fQSd = sd(meanFlowByRiver, na.rm = TRUE),\n    fTMean = mean(meanTemperature, na.rm = TRUE),\n    fTSd = sd(meanTemperature, na.rm = TRUE),\n    fMMean = mean(observedWeight, na.rm = TRUE),\n    fMSd = sd(observedWeight, na.rm = TRUE),\n    fnIndMean = mean(nInd, na.rm = TRUE),\n    fnIndSd = sd(nInd, na.rm = TRUE),\n    fnIndBySpeciesMean = mean(nIndBySpp, na.rm = TRUE),\n    fnIndBySpeciesSd = sd(nIndBySpp, na.rm = TRUE)\n  )\n\nzBySeason &lt;- cd1 |&gt; \n  group_by(riverGG, speciesGG, seasonGG) |&gt; \n  summarize(fQbySeasonMean = mean(meanFlowByRiver, na.rm = TRUE),\n            fQbySeasonSd = sd(meanFlowByRiver, na.rm = TRUE),\n            fTbySeasonMean = mean(meanTemperature, na.rm = TRUE),\n            fTbySeasonSd = sd(meanTemperature, na.rm = TRUE)\n            )\n\ncd1_z &lt;- cd1 |&gt; \n    left_join(tar_read(indCounts_target)) |&gt;\n  left_join(tar_read(indCountsBySpp_target)) |&gt; \n  left_join(z) |&gt; \n  left_join(zBySeason) |&gt; \n  mutate(\n    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,\n    nIndZ = (nInd - fnIndMean)/fnIndSd,\n    nIndBySpeciesZ = (nIndBySpp - fnIndBySpeciesMean)/fnIndBySpeciesSd,\n    observedWeightZ = (observedWeight - fMMean)/fMSd,\n    \n    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,\n    meanTempZ = (meanTemperature - fTMean)/fTSd,\n    \n    meanFlowByRiverZbySeason = (meanFlowByRiver - fQbySeasonMean)/fQbySeasonSd,\n    meanTempZbySeason = (meanTemperature - fTbySeasonMean)/fTbySeasonSd,\n  )\n\n\n\n\n17.14.2 Raw data with logistic fit for flow effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG + riverGG)\n\n\n\n\n\n\n\n\n\nCode\n# ggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZbySeason, negGrowth * 1, color = riverGG)) +\n#   geom_point(alpha = 0.1) +\n#   geom_smooth(method = \"glm\", \n#               method.args = list(family = \"binomial\"),\n#               se = FALSE) +\n#   labs(y = \"Probability of negative growth in mass\", x = \"Mean flow (scaled by season)\") +\n#   theme_publication() +    \n#   facet_grid(seasonGG ~ speciesGG + riverGG)\n\n\n\n\n17.14.3 Raw data with logistic fit for temperature effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth), meanTempZbySeason &gt; -4), aes(meanTempZbySeason, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean temperature (scaled by season)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG)\n\n\n\n\n\n\n\n\n\n\n\n17.14.4 Raw data with logistic fit for observedWeight effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth), meanTempZbySeason &gt; -4), aes(observedWeightZ, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mass (mg, scaled by species and river)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature-one-species-at-a-time",
    "href": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature-one-species-at-a-time",
    "title": "17  Growth in mass",
    "section": "17.15 Logistic model for flow and temperature, one species at a time",
    "text": "17.15 Logistic model for flow and temperature, one species at a time\nSpecies occupy different rivers, so an all-species model will have unequal river representation across species and don’t need to predict where species are not.\nNeed to think through whether these models make sense…\n\n\nCode\nlibrary(car)\n\nrunSppModels &lt;- function(d, speciesIn) {\n  models =\n    tibble(model = \n      c(\n          'negGrowth ~ meanFlowByRiverZbySeason',\n          'negGrowth ~ meanTempZbySeason',\n          'negGrowth ~ river',\n          'negGrowth ~ factor(season)',\n          'negGrowth ~ observedWeightZ',\n          'negGrowth ~ nIndBySpeciesZ',\n          'negGrowth ~ nIndZ',\n        \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason + river',\n          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason + river', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season)',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason * river * factor(season)', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndBySpeciesZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ + nIndBySpeciesZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^3',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ * nIndBySpeciesZ',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ + nIndBySpeciesZ',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ + factor(season)',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ * factor(season)',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ * nIndBySpeciesZ + factor(season)',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nIndBySpeciesZ + river + observedWeightZ + factor(season)',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + nIndBySpeciesZ)^2 + river + observedWeightZ + factor(season)'\n    \n        )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~glm(.x, family = \"binomial\", data = d |&gt; filter(species == speciesIn))),\n      glanced = map(fit, broom::glance),\n      tidied = map(fit, broom::tidy)\n      # anova = map(fit, anova),\n      # summary = map(fit, summary),\n      # confint = map(fit, confint)\n    )\n  return(models)\n}\n\n\n\n17.15.1 Predict p(neg growth in mass)\n\n\nCode\npredictSpp &lt;- function(dIn, modIn, speciesIn){\n  d &lt;- dIn |&gt; filter(species == speciesIn)\n  \n  byAIC = modIn |&gt; \n    unnest(glanced) |&gt; \n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, deviance, fit, tidied) \n  \n  predDSpp &lt;- expand.grid(\n    meanFlowByRiverZbySeason = seq(-1.5,1.5,0.25), \n    meanTempZbySeason = seq(-1.5,1.5,0.25), \n    river = unique(d$river), \n    season = unique(d$season),\n    observedWeightZ = seq(-1.5,1.5,0.25),\n    nIndBySpeciesZ = seq(-1.5,1.5,0.25),\n    nIndZ = seq(-1.5,1.5,0.25)\n    )\n  \n  \n  pred &lt;- add_column(predDSpp, \n                     pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = \"response\")) |&gt; \n             mutate(groupT = paste(river, season, meanTempZbySeason, sep = \"_\"),\n                    groupF = paste(river, season, meanFlowByRiverZbySeason, sep = \"_\"),\n                    groupTM = paste(river, season, meanTempZbySeason, observedWeightZ, sep = \"_\"),\n                    groupFN = paste(river, season, meanFlowByRiverZbySeason, nIndZ, sep = \"_\")) |&gt; \n    addGG_noSpecies()\n  \n  return(\n    list(\n      pred = pred,\n      byAIC = byAIC\n    )\n  )\n}  \n\n\n\n\n17.15.2 Brook trout\nIn the figures with the shading, the shading is the range of effects from number of individuals, with the darker line on one edge of the shaded area representing high numbers of individuals.\n\n\nCode\nspeciesIn &lt;- \"bkt\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\n\n\n\n\nCode\nmodBKT &lt;- runSppModels(cd1_z, speciesIn)\npredBKT &lt;- predictSpp(cd1_z, modBKT, speciesIn)\npredBKT$byAIC |&gt; dplyr::select(model, AIC, deviance) \n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 5547.    5447.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 5556.    5476.\n 3 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5575.    5319.\n 4 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5577.    5319.\n 5 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5807.    5673.\n 6 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5898.    5826.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5900.    5822.\n 8 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 5904.    5874.\n 9 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 5906.    5878.\n10 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6249.    6121.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predBKT$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -475.00402288 -406.56540869 FALSE\nmeanFlowByRiverZbySeason                    -84.09603589  -68.36729167 FALSE\nmeanTempZbySeason                            -7.30214216   20.94594044 FALSE\nriverwb mitchell                            -44.72399744  -41.47000528 FALSE\nriverwb obear                               -25.66035543  -23.03664463 FALSE\nriverwest brook                             317.24926727  375.09391827  TRUE\nfactor(season)2                             385.55546528  442.79513644  TRUE\nfactor(season)3                             397.09986984  462.73330667  TRUE\nfactor(season)4                             375.24029255  425.96285514  TRUE\nobservedWeightZ                              -6.21321438    0.89543718 FALSE\nnIndZ                                        -2.32866427   14.47538363 FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason    0.03373671    0.21583984  TRUE\nmeanFlowByRiverZbySeason:riverwb mitchell    -0.52780516    0.13909522 FALSE\nmeanFlowByRiverZbySeason:riverwb obear       -0.82176505   -0.29344342 FALSE\nmeanFlowByRiverZbySeason:riverwest brook     -0.41844001    0.03342069 FALSE\nmeanFlowByRiverZbySeason:factor(season)2     69.41475656   85.77466832  TRUE\nmeanFlowByRiverZbySeason:factor(season)3     70.73457177   87.23566171  TRUE\nmeanFlowByRiverZbySeason:factor(season)4     70.46152197   86.69043471  TRUE\nmeanFlowByRiverZbySeason:observedWeightZ     -0.12466615    0.02603119 FALSE\nmeanFlowByRiverZbySeason:nIndZ                0.06577492    0.28487614  TRUE\nmeanTempZbySeason:riverwb mitchell           -0.12254961    0.47527034 FALSE\nmeanTempZbySeason:riverwb obear               0.01579146    0.46195142  TRUE\nmeanTempZbySeason:riverwest brook             0.11526013    0.50737114  TRUE\nmeanTempZbySeason:factor(season)2           -16.32568736    7.50378760 FALSE\nmeanTempZbySeason:factor(season)3           -89.54071600   24.36203624 FALSE\nmeanTempZbySeason:factor(season)4           -90.04527658   22.36554354 FALSE\nmeanTempZbySeason:observedWeightZ            -0.06457146    0.06933106 FALSE\nmeanTempZbySeason:nIndZ                      -0.10383446    0.06097225 FALSE\nriverwb mitchell:factor(season)2             40.64354334   43.80498102  TRUE\nriverwb obear:factor(season)2                21.69125946   24.23650909  TRUE\nriverwest brook:factor(season)2            -388.39742959 -325.02681021 FALSE\nriverwb mitchell:factor(season)3             40.78235541   44.15586180  TRUE\nriverwb obear:factor(season)3                23.10691834   25.77516618  TRUE\nriverwest brook:factor(season)3            -356.44799065 -306.43155442 FALSE\nriverwb mitchell:factor(season)4             40.72766825   43.81267602  TRUE\nriverwb obear:factor(season)4                22.07660551   24.79174184  TRUE\nriverwest brook:factor(season)4            -379.74745330 -320.46489836 FALSE\nriverwb mitchell:observedWeightZ             -0.24862602    0.28671382 FALSE\nriverwb obear:observedWeightZ                -0.30573578    0.14069559 FALSE\nriverwest brook:observedWeightZ              -0.10831961    0.26296321 FALSE\nriverwb mitchell:nIndZ                       -0.72804651   -0.05272598 FALSE\nriverwb obear:nIndZ                          -0.10693440    0.42704641 FALSE\nriverwest brook:nIndZ                        -0.13976104    0.30051204 FALSE\nfactor(season)2:observedWeightZ              -0.38387371    6.71122219 FALSE\nfactor(season)3:observedWeightZ               0.44399707    7.55244070  TRUE\nfactor(season)4:observedWeightZ              -0.23577639    6.88414305 FALSE\nfactor(season)2:nIndZ                       -14.23703692    1.61610311 FALSE\nfactor(season)3:nIndZ                       -14.12608247    1.50948895 FALSE\nfactor(season)4:nIndZ                       -14.83661892    1.85804697 FALSE\nobservedWeightZ:nIndZ                        -0.11150745    0.02987495 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                    TRUE    FALSE\nmeanTempZbySeason                          FALSE     TRUE\nriverwb mitchell                            TRUE    FALSE\nriverwb obear                               TRUE    FALSE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE     TRUE\nnIndZ                                      FALSE     TRUE\nmeanFlowByRiverZbySeason:meanTempZbySeason FALSE    FALSE\nmeanFlowByRiverZbySeason:riverwb mitchell  FALSE     TRUE\nmeanFlowByRiverZbySeason:riverwb obear      TRUE    FALSE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)3   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE    FALSE\nmeanFlowByRiverZbySeason:observedWeightZ   FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndZ             FALSE    FALSE\nmeanTempZbySeason:riverwb mitchell         FALSE     TRUE\nmeanTempZbySeason:riverwb obear            FALSE    FALSE\nmeanTempZbySeason:riverwest brook          FALSE    FALSE\nmeanTempZbySeason:factor(season)2          FALSE     TRUE\nmeanTempZbySeason:factor(season)3          FALSE     TRUE\nmeanTempZbySeason:factor(season)4          FALSE     TRUE\nmeanTempZbySeason:observedWeightZ          FALSE     TRUE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nriverwb mitchell:factor(season)2           FALSE    FALSE\nriverwb obear:factor(season)2              FALSE    FALSE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwb mitchell:factor(season)3           FALSE    FALSE\nriverwb obear:factor(season)3              FALSE    FALSE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwb mitchell:factor(season)4           FALSE    FALSE\nriverwb obear:factor(season)4              FALSE    FALSE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwb mitchell:observedWeightZ           FALSE     TRUE\nriverwb obear:observedWeightZ              FALSE     TRUE\nriverwest brook:observedWeightZ            FALSE     TRUE\nriverwb mitchell:nIndZ                      TRUE    FALSE\nriverwb obear:nIndZ                        FALSE     TRUE\nriverwest brook:nIndZ                      FALSE     TRUE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE    FALSE\nfactor(season)4:observedWeightZ            FALSE     TRUE\nfactor(season)2:nIndZ                      FALSE     TRUE\nfactor(season)3:nIndZ                      FALSE     TRUE\nfactor(season)4:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndZ                      FALSE     TRUE\n\n\nCode\nanova(predBKT$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                       10088     7918.9\nmeanFlowByRiverZbySeason                    1   146.01     10087     7772.9\nmeanTempZbySeason                           1     0.19     10086     7772.7\nriver                                       3    75.72     10083     7697.0\nfactor(season)                              3  1158.29     10080     6538.7\nobservedWeightZ                             1   636.99     10079     5901.7\nnIndZ                                       1     6.38     10078     5895.3\nmeanFlowByRiverZbySeason:meanTempZbySeason  1    10.62     10077     5884.7\nmeanFlowByRiverZbySeason:river              3     7.01     10074     5877.7\nmeanFlowByRiverZbySeason:factor(season)     3   155.15     10071     5722.5\nmeanFlowByRiverZbySeason:observedWeightZ    1     0.60     10070     5721.9\nmeanFlowByRiverZbySeason:nIndZ              1     9.86     10069     5712.1\nmeanTempZbySeason:river                     3    10.61     10066     5701.5\nmeanTempZbySeason:factor(season)            3    18.19     10063     5683.3\nmeanTempZbySeason:observedWeightZ           1     0.00     10062     5683.3\nmeanTempZbySeason:nIndZ                     1     0.29     10061     5683.0\nriver:factor(season)                        9   110.72     10052     5572.3\nriver:observedWeightZ                       3     1.16     10049     5571.1\nriver:nIndZ                                 3    13.69     10046     5557.4\nfactor(season):observedWeightZ              3   107.98     10043     5449.4\nfactor(season):nIndZ                        3     1.33     10040     5448.1\nobservedWeightZ:nIndZ                       1     1.28     10039     5446.8\n\n\nCode\nAnova(predBKT$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1 148.2611  &lt; 2.2e-16 ***\nmeanTempZbySeason                           1   8.3974  0.0037575 ** \nriver                                       5  89.1425  &lt; 2.2e-16 ***\nfactor(season)                              5 158.5604  &lt; 2.2e-16 ***\nobservedWeightZ                             1 462.5555  &lt; 2.2e-16 ***\nnIndZ                                       1   0.1316  0.7168010    \nmeanFlowByRiverZbySeason:meanTempZbySeason  1   7.1947  0.0073120 ** \nmeanFlowByRiverZbySeason:river              3  17.4199  0.0005792 ***\nmeanFlowByRiverZbySeason:factor(season)     3 109.7067  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:observedWeightZ    1   1.6091  0.2046238    \nmeanFlowByRiverZbySeason:nIndZ              1   9.6856  0.0018572 ** \nmeanTempZbySeason:river                     3  10.0616  0.0180501 *  \nmeanTempZbySeason:factor(season)            3  12.3412  0.0063012 ** \nmeanTempZbySeason:observedWeightZ           1   0.0055  0.9406173    \nmeanTempZbySeason:nIndZ                     1   0.2400  0.6242108    \nriver:factor(season)                        9  65.5556  1.125e-10 ***\nriver:observedWeightZ                       3   3.0759  0.3800777    \nriver:nIndZ                                 3  12.2999  0.0064235 ** \nfactor(season):observedWeightZ              3  97.5802  &lt; 2.2e-16 ***\nfactor(season):nIndZ                        3   1.1988  0.7532887    \nobservedWeightZ:nIndZ                       1   1.2842  0.2571244    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predBKT$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.267 \n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\npredBKTWider &lt;- predBKT$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\n\n\n17.15.3 Brown trout\nto do: exclude OS in all models\n\n\nCode\nspeciesIn &lt;- \"bnt\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\n\n\n\n\nCode\nmodBNT &lt;- runSppModels(cd1_z, speciesIn)\npredBNT &lt;- predictSpp(cd1_z, modBNT, speciesIn)\npredBNT$byAIC |&gt; dplyr::select(model, AIC, deviance)\n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1375.    1271.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1398.    1314.\n 3 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1400.    1316.\n 4 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1420.    1358.\n 5 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1422.    1356.\n 6 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 1431.    1405.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 1433.    1405.\n 8 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1442.    1340.\n 9 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1446.    1390.\n10 negGrowth ~ observedWeightZ                                    1560.    1556.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predBNT$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -301.15199955 -3.642621e+02 FALSE\nmeanFlowByRiverZbySeason                    -15.00975426  6.310428e+00 FALSE\nmeanTempZbySeason                             0.85448928  2.453874e+01  TRUE\nriverwb mitchell                            -13.48586891  1.027090e+01 FALSE\nriverwest brook                             251.93727718  2.221651e+02  TRUE\nfactor(season)2                             373.25450703  2.978181e+02  TRUE\nfactor(season)3                             419.02779974  3.008522e+02  TRUE\nfactor(season)4                             387.61528136  3.374702e+02  TRUE\nobservedWeightZ                               0.46038643  3.598083e+00  TRUE\nnIndZ                                      -314.88416633 -6.888051e+01 FALSE\nnIndBySpeciesZ                               60.76505212  2.334313e+02  TRUE\nmeanFlowByRiverZbySeason:meanTempZbySeason    0.01487906  5.854874e-01  TRUE\nmeanFlowByRiverZbySeason:riverwb mitchell    -4.28407124  2.217717e+00 FALSE\nmeanFlowByRiverZbySeason:riverwest brook     -0.46155827  1.104268e+00 FALSE\nmeanFlowByRiverZbySeason:factor(season)2     -7.61305213  1.364622e+01 FALSE\nmeanFlowByRiverZbySeason:factor(season)3     -6.73342569  1.456307e+01 FALSE\nmeanFlowByRiverZbySeason:factor(season)4     -5.58836764  1.577896e+01 FALSE\nmeanFlowByRiverZbySeason:observedWeightZ     -0.28086920  1.158485e-02 FALSE\nmeanFlowByRiverZbySeason:nIndZ               -0.39664740  2.808346e-01 FALSE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ       0.25918245  8.157933e-01  TRUE\nmeanTempZbySeason:riverwb mitchell          -18.02815604 -3.575450e-01 FALSE\nmeanTempZbySeason:riverwest brook            -0.68092534  6.921110e-01 FALSE\nmeanTempZbySeason:factor(season)2           -24.58699806 -9.649093e-01 FALSE\nmeanTempZbySeason:factor(season)3           -24.37224737 -7.314921e-01 FALSE\nmeanTempZbySeason:factor(season)4           -25.34575666 -1.617221e+00 FALSE\nmeanTempZbySeason:observedWeightZ            -0.12804939  1.113831e-01 FALSE\nmeanTempZbySeason:nIndZ                      -0.27231523  3.732244e-01 FALSE\nmeanTempZbySeason:nIndBySpeciesZ             -0.39288426  4.734065e-01 FALSE\nriverwb mitchell:factor(season)2            -23.02584697 -2.127269e+00 FALSE\nriverwest brook:factor(season)2            -221.65430939 -2.572386e+02 FALSE\nriverwb mitchell:factor(season)3            -13.41346618  9.175349e+00 FALSE\nriverwest brook:factor(season)3            -227.19904327 -3.559891e+02 FALSE\nriverwb mitchell:factor(season)4             -7.47976201  1.217443e+01 FALSE\nriverwest brook:factor(season)4            -223.65122363 -2.744307e+02 FALSE\nriverwb mitchell:observedWeightZ              0.87135992  1.212113e+01  TRUE\nriverwest brook:observedWeightZ              -0.23182295  5.827210e-01 FALSE\nriverwb mitchell:nIndZ                       -2.95933644  2.637899e+00 FALSE\nriverwest brook:nIndZ                        -0.97607008  8.977106e-01 FALSE\nriverwb mitchell:nIndBySpeciesZ               0.69357710  2.003143e+01  TRUE\nriverwest brook:nIndBySpeciesZ               -1.06195959  6.992152e-01 FALSE\nfactor(season)2:observedWeightZ              -2.99873482  9.139869e-03 FALSE\nfactor(season)3:observedWeightZ              -2.69336960  3.554230e-01 FALSE\nfactor(season)4:observedWeightZ              -3.09574678 -9.734888e-03 FALSE\nfactor(season)2:nIndZ                        66.24637726  3.143420e+02  TRUE\nfactor(season)3:nIndZ                        80.69284441  3.155961e+02  TRUE\nfactor(season)4:nIndZ                        70.28869089  3.153682e+02  TRUE\nfactor(season)2:nIndBySpeciesZ             -232.71191681 -6.082840e+01 FALSE\nfactor(season)3:nIndBySpeciesZ             -233.70645219 -6.171401e+01 FALSE\nfactor(season)4:nIndBySpeciesZ             -235.46876832 -6.349440e+01 FALSE\nobservedWeightZ:nIndZ                        -0.11086135  1.930223e-01 FALSE\nobservedWeightZ:nIndBySpeciesZ               -0.14849280  1.668524e-01 FALSE\nnIndZ:nIndBySpeciesZ                         -0.40726214  2.235470e-01 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                   FALSE     TRUE\nmeanTempZbySeason                          FALSE    FALSE\nriverwb mitchell                           FALSE     TRUE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE    FALSE\nnIndZ                                       TRUE    FALSE\nnIndBySpeciesZ                             FALSE    FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason FALSE    FALSE\nmeanFlowByRiverZbySeason:riverwb mitchell  FALSE     TRUE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)3   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE     TRUE\nmeanFlowByRiverZbySeason:observedWeightZ   FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndZ             FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ    FALSE    FALSE\nmeanTempZbySeason:riverwb mitchell          TRUE    FALSE\nmeanTempZbySeason:riverwest brook          FALSE     TRUE\nmeanTempZbySeason:factor(season)2           TRUE    FALSE\nmeanTempZbySeason:factor(season)3           TRUE    FALSE\nmeanTempZbySeason:factor(season)4           TRUE    FALSE\nmeanTempZbySeason:observedWeightZ          FALSE     TRUE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nmeanTempZbySeason:nIndBySpeciesZ           FALSE     TRUE\nriverwb mitchell:factor(season)2            TRUE    FALSE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwb mitchell:factor(season)3           FALSE     TRUE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwb mitchell:factor(season)4           FALSE     TRUE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwb mitchell:observedWeightZ           FALSE    FALSE\nriverwest brook:observedWeightZ            FALSE     TRUE\nriverwb mitchell:nIndZ                     FALSE     TRUE\nriverwest brook:nIndZ                      FALSE     TRUE\nriverwb mitchell:nIndBySpeciesZ            FALSE    FALSE\nriverwest brook:nIndBySpeciesZ             FALSE     TRUE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE     TRUE\nfactor(season)4:observedWeightZ             TRUE    FALSE\nfactor(season)2:nIndZ                      FALSE    FALSE\nfactor(season)3:nIndZ                      FALSE    FALSE\nfactor(season)4:nIndZ                      FALSE    FALSE\nfactor(season)2:nIndBySpeciesZ              TRUE    FALSE\nfactor(season)3:nIndBySpeciesZ              TRUE    FALSE\nfactor(season)4:nIndBySpeciesZ              TRUE    FALSE\nobservedWeightZ:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndBySpeciesZ             FALSE     TRUE\nnIndZ:nIndBySpeciesZ                       FALSE     TRUE\n\n\nCode\nanova(predBNT$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                        4655     1808.3\nmeanFlowByRiverZbySeason                    1   19.573      4654     1788.8\nmeanTempZbySeason                           1    5.969      4653     1782.8\nriver                                       2    0.194      4651     1782.6\nfactor(season)                              3   97.251      4648     1685.3\nobservedWeightZ                             1  244.900      4647     1440.4\nnIndZ                                       1    8.756      4646     1431.7\nnIndBySpeciesZ                              1    2.636      4645     1429.0\nmeanFlowByRiverZbySeason:meanTempZbySeason  1   13.560      4644     1415.5\nmeanFlowByRiverZbySeason:river              2    1.118      4642     1414.4\nmeanFlowByRiverZbySeason:factor(season)     3   33.420      4639     1380.9\nmeanFlowByRiverZbySeason:observedWeightZ    1    2.188      4638     1378.8\nmeanFlowByRiverZbySeason:nIndZ              1    2.044      4637     1376.7\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1    8.358      4636     1368.3\nmeanTempZbySeason:river                     2    1.135      4634     1367.2\nmeanTempZbySeason:factor(season)            3    9.394      4631     1357.8\nmeanTempZbySeason:observedWeightZ           1    0.178      4630     1357.6\nmeanTempZbySeason:nIndZ                     1    0.057      4629     1357.6\nmeanTempZbySeason:nIndBySpeciesZ            1    4.937      4628     1352.7\nriver:factor(season)                        6    5.806      4622     1346.8\nriver:observedWeightZ                       2    5.202      4620     1341.6\nriver:nIndZ                                 2    2.685      4618     1339.0\nriver:nIndBySpeciesZ                        2    6.388      4616     1332.6\nfactor(season):observedWeightZ              3    6.599      4613     1326.0\nfactor(season):nIndZ                        3   29.839      4610     1296.1\nfactor(season):nIndBySpeciesZ               3   23.924      4607     1272.2\nobservedWeightZ:nIndZ                       1    0.509      4606     1271.7\nobservedWeightZ:nIndBySpeciesZ              1    0.029      4605     1271.7\nnIndZ:nIndBySpeciesZ                        1    0.289      4604     1271.4\n\n\nCode\nAnova(predBNT$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1  20.3459  6.463e-06 ***\nmeanTempZbySeason                           1   0.1934  0.6600697    \nriver                                       2   3.6382  0.1621718    \nfactor(season)                              3   4.5887  0.2045118    \nobservedWeightZ                             1 206.4402  &lt; 2.2e-16 ***\nnIndZ                                       1   2.0303  0.1541869    \nnIndBySpeciesZ                              1   1.4231  0.2329018    \nmeanFlowByRiverZbySeason:meanTempZbySeason  1   4.1532  0.0415562 *  \nmeanFlowByRiverZbySeason:river              2   0.5991  0.7411593    \nmeanFlowByRiverZbySeason:factor(season)     3  13.7196  0.0033128 ** \nmeanFlowByRiverZbySeason:observedWeightZ    1   3.1174  0.0774622 .  \nmeanFlowByRiverZbySeason:nIndZ              1   0.1457  0.7027101    \nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1  13.7600  0.0002077 ***\nmeanTempZbySeason:river                     2   1.6118  0.4466823    \nmeanTempZbySeason:factor(season)            3   6.2547  0.0998564 .  \nmeanTempZbySeason:observedWeightZ           1   0.0187  0.8911618    \nmeanTempZbySeason:nIndZ                     1   0.0814  0.7754036    \nmeanTempZbySeason:nIndBySpeciesZ            1   0.0540  0.8163229    \nriver:factor(season)                        6   4.8994  0.5567762    \nriver:observedWeightZ                       2   3.2293  0.1989597    \nriver:nIndZ                                 2   0.0415  0.9794505    \nriver:nIndBySpeciesZ                        2   2.5596  0.2780985    \nfactor(season):observedWeightZ              3   6.7372  0.0807627 .  \nfactor(season):nIndZ                        3  21.5403  8.129e-05 ***\nfactor(season):nIndBySpeciesZ               3  20.4168  0.0001391 ***\nobservedWeightZ:nIndZ                       1   0.2624  0.6084521    \nobservedWeightZ:nIndBySpeciesZ              1   0.0149  0.9030032    \nnIndZ:nIndBySpeciesZ                        1   0.2865  0.5924830    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predBNT$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.214 \n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\npredBNTWider &lt;- predBNT$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\n\n\n17.15.4 Atlantic salmon\n\n\nCode\nspeciesIn &lt;- \"ats\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\n\n\n\n\nCode\nmodATS &lt;- runSppModels(cd1_z, speciesIn)\npredATS &lt;- predictSpp(cd1_z, modATS, speciesIn)\npredATS$byAIC |&gt; dplyr::select(model, AIC, deviance) \n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6434.    6348.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6589.    6521.\n 3 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6632.    6564.\n 4 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6684.    6632.\n 5 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6779.    6709.\n 6 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6805.    6759.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6874.    6834.\n 8 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 6902.    6878.\n 9 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 6903.    6877.\n10 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 7119.    7055.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predATS$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -5.394486e+03 -4.557456e+03 FALSE\nmeanFlowByRiverZbySeason                   -6.195946e+01 -4.020762e+01 FALSE\nmeanTempZbySeason                           3.148738e+01  1.130278e+02  TRUE\nriverwest brook                             4.480003e+03  5.281240e+03  TRUE\nfactor(season)2                             4.547773e+03  5.413752e+03  TRUE\nfactor(season)3                             4.590335e+03  5.446417e+03  TRUE\nfactor(season)4                             4.818344e+03  5.681265e+03  TRUE\nobservedWeightZ                             1.614782e+01  1.487030e+01  TRUE\nnIndZ                                       3.292589e+02  3.857591e+02  TRUE\nnIndBySpeciesZ                             -1.484374e+01 -1.255211e+01 FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason -4.757394e-01 -1.929458e-01 FALSE\nmeanFlowByRiverZbySeason:riverwest brook    4.738654e+01  5.863053e+01  TRUE\nmeanFlowByRiverZbySeason:factor(season)2   -8.554282e+00  8.056581e-01 FALSE\nmeanFlowByRiverZbySeason:factor(season)3   -1.034186e+01 -1.571621e+00 FALSE\nmeanFlowByRiverZbySeason:factor(season)4   -1.221914e+00  7.930008e+00 FALSE\nmeanFlowByRiverZbySeason:observedWeightZ   -2.060068e-01 -3.717710e-02 FALSE\nmeanFlowByRiverZbySeason:nIndZ              8.653587e-01  1.335813e+00  TRUE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ    -1.443640e+00 -8.642700e-01 FALSE\nmeanTempZbySeason:riverwest brook          -7.236147e+01 -3.966555e+01 FALSE\nmeanTempZbySeason:factor(season)2          -6.885899e+00 -8.356808e-01 FALSE\nmeanTempZbySeason:factor(season)3          -3.594578e+01 -2.527087e+00 FALSE\nmeanTempZbySeason:factor(season)4          -8.044405e+00 -2.337966e+00 FALSE\nmeanTempZbySeason:observedWeightZ           1.100925e-01  2.777140e-01  TRUE\nmeanTempZbySeason:nIndZ                    -1.674751e-01  1.225662e-01 FALSE\nmeanTempZbySeason:nIndBySpeciesZ           -1.525483e-01  2.015943e-01 FALSE\nriverwest brook:factor(season)2            -5.473390e+03 -4.571732e+03 FALSE\nriverwest brook:factor(season)3            -5.498613e+03 -4.610100e+03 FALSE\nriverwest brook:factor(season)4            -5.514973e+03 -4.624588e+03 FALSE\nriverwest brook:observedWeightZ            -4.323943e+01 -9.900848e+00 FALSE\nriverwest brook:nIndZ                      -5.788929e+01 -1.257691e+01 FALSE\nriverwest brook:nIndBySpeciesZ              5.103294e+00  5.048160e+00  TRUE\nfactor(season)2:observedWeightZ            -1.249492e+00  1.379425e+00 FALSE\nfactor(season)3:observedWeightZ            -4.044371e+00  7.745203e-01 FALSE\nfactor(season)4:observedWeightZ            -1.464341e+00  1.182757e+00 FALSE\nfactor(season)2:nIndZ                      -3.860249e+02 -3.248941e+02 FALSE\nfactor(season)3:nIndZ                      -3.973241e+02 -3.471580e+02 FALSE\nfactor(season)4:nIndZ                      -3.790332e+02 -3.181085e+02 FALSE\nfactor(season)2:nIndBySpeciesZ              8.380863e+00  1.061226e+01  TRUE\nfactor(season)3:nIndBySpeciesZ              8.950224e+00  1.108092e+01  TRUE\nfactor(season)4:nIndBySpeciesZ              6.565488e+00  8.805223e+00  TRUE\nobservedWeightZ:nIndZ                      -2.226427e-01  5.332988e-02 FALSE\nobservedWeightZ:nIndBySpeciesZ             -5.882043e-02  1.525532e-01 FALSE\nnIndZ:nIndBySpeciesZ                       -2.297603e-01 -2.246706e-01 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                    TRUE    FALSE\nmeanTempZbySeason                          FALSE    FALSE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE    FALSE\nnIndZ                                      FALSE    FALSE\nnIndBySpeciesZ                              TRUE    FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason  TRUE    FALSE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)3    TRUE    FALSE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE     TRUE\nmeanFlowByRiverZbySeason:observedWeightZ    TRUE    FALSE\nmeanFlowByRiverZbySeason:nIndZ             FALSE    FALSE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     TRUE    FALSE\nmeanTempZbySeason:riverwest brook           TRUE    FALSE\nmeanTempZbySeason:factor(season)2           TRUE    FALSE\nmeanTempZbySeason:factor(season)3           TRUE    FALSE\nmeanTempZbySeason:factor(season)4           TRUE    FALSE\nmeanTempZbySeason:observedWeightZ          FALSE    FALSE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nmeanTempZbySeason:nIndBySpeciesZ           FALSE     TRUE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwest brook:observedWeightZ             TRUE    FALSE\nriverwest brook:nIndZ                       TRUE    FALSE\nriverwest brook:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE     TRUE\nfactor(season)4:observedWeightZ            FALSE     TRUE\nfactor(season)2:nIndZ                       TRUE    FALSE\nfactor(season)3:nIndZ                       TRUE    FALSE\nfactor(season)4:nIndZ                       TRUE    FALSE\nfactor(season)2:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)3:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)4:nIndBySpeciesZ             FALSE    FALSE\nobservedWeightZ:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndBySpeciesZ             FALSE     TRUE\nnIndZ:nIndBySpeciesZ                        TRUE    FALSE\n\n\nCode\nanova(predATS$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                        9342     9682.6\nmeanFlowByRiverZbySeason                    1   229.80      9341     9452.8\nmeanTempZbySeason                           1    22.08      9340     9430.8\nriver                                       1     0.50      9339     9430.2\nfactor(season)                              3  2000.77      9336     7429.5\nobservedWeightZ                             1   476.82      9335     6952.7\nnIndZ                                       1    18.31      9334     6934.4\nnIndBySpeciesZ                              1     3.39      9333     6931.0\nmeanFlowByRiverZbySeason:meanTempZbySeason  1    26.10      9332     6904.9\nmeanFlowByRiverZbySeason:river              1     0.79      9331     6904.1\nmeanFlowByRiverZbySeason:factor(season)     3    70.78      9328     6833.3\nmeanFlowByRiverZbySeason:observedWeightZ    1     5.80      9327     6827.5\nmeanFlowByRiverZbySeason:nIndZ              1    25.22      9326     6802.3\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1   131.14      9325     6671.1\nmeanTempZbySeason:river                     1     2.67      9324     6668.5\nmeanTempZbySeason:factor(season)            3   143.64      9321     6524.8\nmeanTempZbySeason:observedWeightZ           1    20.24      9320     6504.6\nmeanTempZbySeason:nIndZ                     1     2.97      9319     6501.6\nmeanTempZbySeason:nIndBySpeciesZ            1     0.22      9318     6501.4\nriver:factor(season)                        3     8.84      9315     6492.6\nriver:observedWeightZ                       1     1.39      9314     6491.2\nriver:nIndZ                                 1     0.03      9313     6491.1\nriver:nIndBySpeciesZ                        1     0.77      9312     6490.4\nfactor(season):observedWeightZ              3    50.72      9309     6439.6\nfactor(season):nIndZ                        3    22.53      9306     6417.1\nfactor(season):nIndBySpeciesZ               3    61.92      9303     6355.2\nobservedWeightZ:nIndZ                       1     0.29      9302     6354.9\nobservedWeightZ:nIndBySpeciesZ              1     1.18      9301     6353.7\nnIndZ:nIndBySpeciesZ                        1     5.22      9300     6348.5\n\n\nCode\nAnova(predATS$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1  41.1813  1.387e-10 ***\nmeanTempZbySeason                           1   0.1517   0.696911    \nriver                                       2   4.8088   0.090319 .  \nfactor(season)                              6 192.3949  &lt; 2.2e-16 ***\nobservedWeightZ                             1 275.1039  &lt; 2.2e-16 ***\nnIndZ                                       2  27.5964  1.017e-06 ***\nnIndBySpeciesZ                              1  16.3245  5.337e-05 ***\nmeanFlowByRiverZbySeason:meanTempZbySeason  1  21.3666  3.793e-06 ***\nmeanFlowByRiverZbySeason:river              1   1.0787   0.298999    \nmeanFlowByRiverZbySeason:factor(season)     3  96.5009  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:observedWeightZ    1   7.8609   0.005052 ** \nmeanFlowByRiverZbySeason:nIndZ              1  83.9283  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1  60.8633  6.118e-15 ***\nmeanTempZbySeason:river                     1   1.2029   0.272749    \nmeanTempZbySeason:factor(season)            3  55.9292  4.350e-12 ***\nmeanTempZbySeason:observedWeightZ           1  20.4272  6.194e-06 ***\nmeanTempZbySeason:nIndZ                     1   0.0932   0.760191    \nmeanTempZbySeason:nIndBySpeciesZ            1   0.0718   0.788797    \nriver:factor(season)                        3   1.9340   0.586221    \nriver:observedWeightZ                       1   0.8754   0.349461    \nriver:nIndZ                                 1   0.7293   0.393106    \nriver:nIndBySpeciesZ                        1   0.6375   0.424608    \nfactor(season):observedWeightZ              3  46.4062  4.649e-10 ***\nfactor(season):nIndZ                        3  59.9397  6.055e-13 ***\nfactor(season):nIndBySpeciesZ               3  67.4872  1.473e-14 ***\nobservedWeightZ:nIndZ                       1   1.4141   0.234369    \nobservedWeightZ:nIndBySpeciesZ              1   0.7441   0.388366    \nnIndZ:nIndBySpeciesZ                        1   4.9598   0.025943 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predATS$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.333 \n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\npredATSWider &lt;- predATS$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0,  season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0,  season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#two-growth-models",
    "href": "modelGrowthInMass.html#two-growth-models",
    "title": "17  Growth in mass",
    "section": "17.16 Two growth models",
    "text": "17.16 Two growth models\n\n17.16.1 Size-adjusted growth model\n\n17.16.1.1 Get l-w relationships for size-adjusted growth model\nHere, we will explore size-independent growth in mass, see Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x. Size-independent growth (grWeightS) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().\ngrWeightS uses the slope of log(observedWeight) ~ log(grWeight) for each river and season and species to adjust growth.\nA simple linear models shows we need to get separate slopes for each river and season and species.\n\n\nCode\nggplot(cd1 |&gt; filter(grWeight &gt; 0), \n       aes(log(observedWeight), log(grWeight), color = riverGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"Log of mass (mg)\", x = \"Log of growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nmod0 &lt;- lm(log(grWeight) ~ log(observedWeight), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod1 &lt;- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |&gt; filter(grWeight &gt; 0))\nmod2 &lt;- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod3 &lt;- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod4 &lt;- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |&gt; filter(grWeight &gt; 0))\n\nAIC(mod0,mod1,mod2,mod3,mod4) |&gt; arrange(AIC)\n\n\n     df      AIC\nmod4 73 43925.12\nmod2 33 47539.49\nmod3  9 48036.13\nmod1  9 64659.88\nmod0  3 64744.59\n\n\n\n\n\n17.16.2 Compare size-adjusted and instantaneous growth\nDifferences don’t seem big enough to warrant the extra complexity from the s-adjusted growth metric\n\n\nCode\nggplot(cd1, aes(grWeight, grWeightS, color = riverGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_abline(intercept = 0, slope = 1) +\n  labs(y = \"Gowth in mass\", x = \"Size-adjusted growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; \n         dplyr::select(observedWeight, grWeight, grWeightS, seasonGG, speciesGG) |&gt; \n         pivot_longer(cols = c(grWeight, grWeightS)),\n       \n       aes(log(observedWeight), value, color = name)) +\n  geom_point(alpha = 0.05 )  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"Log of mass (mg)\", x = \"Growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "href": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "title": "17  Growth in mass",
    "section": "17.17 Compare growth in length and mass",
    "text": "17.17 Compare growth in length and mass\n\n17.17.1 Growth rate in length vs size-independent growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeightS)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Growth in length\", y = \"Size-adjusted growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; mutate(age = year - cohort) |&gt; filter(age &lt; 3), aes(grLength, grWeight)) +\n  geom_vline(xintercept = 0, linetype = 2, color = \"grey\") +\n  geom_hline(yintercept = 0, linetype = 2, color = \"grey\") +\n  geom_point(aes(\n    #size = observedWeight\n    ), alpha = 0.03) +\n  #guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Growth in length\", y = \"Instantaneous growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG + age)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "modelGrowthInMass.html#deprecated-logistic-models-below",
    "href": "modelGrowthInMass.html#deprecated-logistic-models-below",
    "title": "17  Growth in mass",
    "section": "17.18 Deprecated logistic models below",
    "text": "17.18 Deprecated logistic models below\n\n17.18.1 Logistic model for flow and temperature, all species\n\n\n17.18.2 Model selection\n\n\nCode\nmodSpecies &lt;- c(\"bkt\", \"ats\", \"bnt\")\ncd1Mod &lt;- cd1 |&gt; filter(species == modSpecies)\n\nmodFT0 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * species, family = \"binomial\", data = cd1Mod)\nmodFT1 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river + species, family = \"binomial\", data = cd1Mod)\nmodFT2 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river + species, family = \"binomial\", data = cd1Mod)\nmodFT3 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason + river + species, family = \"binomial\", data = cd1Mod)\nmodFT4 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = \"binomial\", data = cd1Mod)\nmodFT5 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = \"binomial\", data = cd1Mod)\nmodFT6 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + species , family = \"binomial\", data = cd1Mod)\nmodFT7 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason, family = \"binomial\", data = cd1Mod)\n\n\nmodFT8 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) + species, family = \"binomial\", data = cd1Mod)\nmodFT9 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species, family = \"binomial\", data = cd1Mod)\nmodFT10 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason * river * factor(season) * species, family = \"binomial\", data = cd1Mod)\n\nmodFT11 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * observedWeight + species, family = \"binomial\", data = cd1Mod)\nmodFT12 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species * observedWeight, family = \"binomial\", data = cd1Mod)\n\nAIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |&gt; arrange(AIC)\n\n\n         df        AIC\nmodFT8   66   5227.562\nmodFT1   18   6284.129\nmodFT0   36   6300.755\nmodFT2    9   6313.234\nmodFT3    8   6315.001\nmodFT6    6   6375.226\nmodFT4    7   6563.664\nmodFT5    7   6563.664\nmodFT7    4   6704.608\nmodFT11 130  92892.189\nmodFT12 261  93082.102\nmodFT10  71 107480.000\nmodFT9  137 110928.016\n\n\n\n\n17.18.3 Model results for additive model (not very good)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\n#summary(modFT3)\n#anova(modFT3)\n\npscl::pR2(modFT3)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n  McFadden \n0.07356826 \n\n\nCode\ncaret::varImp(modFT3) |&gt; arrange(desc(Overall))\n\n\n                                Overall\nspeciesbnt                    13.395579\nmeanFlowByRiverScaledBySeason 10.698930\nmeanTemperatureScaledBySeason  6.888871\nspeciesbkt                     5.964425\nriverwb mitchell               4.407149\nriverwest brook                3.037801\nriverwb obear                  2.973792\n\n\n\n\n17.18.4 Model results for full interactive model (best model)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\n#summary(modFT11)\n#anova(modFT11)\n\n# full interaction\npscl::pR2(modFT11)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n McFadden \n-12.62397 \n\n\nCode\ncaret::varImp(modFT11) |&gt; arrange(desc(Overall))\n\n\n                                                                                                                 Overall\nspeciesbnt                                                                                                  1053786328.4\nspeciesbkt                                                                                                   284259874.7\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)3                                                  206190180.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)3                    202492714.1\nmeanTemperatureScaledBySeason:riverwb obear                                                                  189037491.4\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear                                    186017710.2\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)2:observedWeight                                   161645650.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)2:observedWeight     159547481.3\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)2                                                  152548068.3\nmeanTemperatureScaledBySeason:riverwb obear:observedWeight                                                   150405795.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:observedWeight                     149449176.8\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)3:observedWeight                                   148420772.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)3:observedWeight     144812887.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)2                    142789878.0\nmeanTemperatureScaledBySeason:observedWeight                                                                 121754595.8\nmeanTemperatureScaledBySeason:riverwest brook:observedWeight                                                 120294666.6\nriverwb obear:factor(season)4                                                                                119818800.5\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)4                                                  119290709.9\nriverwb obear:factor(season)4:observedWeight                                                                 118814327.3\nmeanTemperatureScaledBySeason:factor(season)3:observedWeight                                                 118323796.8\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)4:observedWeight                                   118156185.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:observedWeight                                   117653131.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:observedWeight                   116023954.5\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)3:observedWeight                                 113685884.1\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)3:observedWeight                   111606650.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)3:observedWeight   110512224.8\nobservedWeight                                                                                               108887205.0\nfactor(season)3:observedWeight                                                                               108824607.5\nmeanTemperatureScaledBySeason:factor(season)4:observedWeight                                                 108542695.0\nriverwest brook:observedWeight                                                                               107931962.1\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)4:observedWeight                                 106344025.7\nmeanFlowByRiverScaledBySeason:observedWeight                                                                 104692452.0\nriverwest brook:factor(season)3:observedWeight                                                               104525701.0\nmeanFlowByRiverScaledBySeason:riverwest brook:observedWeight                                                 102703433.1\nmeanFlowByRiverScaledBySeason:factor(season)3:observedWeight                                                 101209723.0\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)2:observedWeight                                 100089912.9\nmeanTemperatureScaledBySeason:factor(season)2:observedWeight                                                  99686484.3\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)3:observedWeight                                  98433651.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)4:observedWeight    95450552.8\nfactor(season)2:observedWeight                                                                                95233874.1\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)3                                                   94371077.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)4:observedWeight                    92346010.6\nriverwest brook:factor(season)2:observedWeight                                                                91630216.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)3:observedWeight   90865763.7\nriverwb obear:factor(season)3                                                                                 90834189.4\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)2:observedWeight                                  90031516.6\nmeanFlowByRiverScaledBySeason:factor(season)2:observedWeight                                                  88905912.0\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)3:observedWeight                                 88294339.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)2:observedWeight                    87353582.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook                                   85072563.4\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)2:observedWeight    83243402.1\nmeanTemperatureScaledBySeason:riverwb mitchell:observedWeight                                                 81376979.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:observedWeight                   81204962.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason                                                   80495127.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)3                  78174236.3\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)2                                                 78007829.0\nmeanTemperatureScaledBySeason                                                                                 77308664.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)3                   77054914.3\nmeanTemperatureScaledBySeason:factor(season)2                                                                 75968702.3\nmeanTemperatureScaledBySeason:riverwest brook                                                                 74404117.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)2                                   73970227.0\nriverwb obear:factor(season)2                                                                                 73068199.5\nmeanTemperatureScaledBySeason:factor(season)3                                                                 72660747.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)2                   71921879.8\nfactor(season)4:observedWeight                                                                                71684212.1\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)3                                                 71409760.7\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)3                                                70675664.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)3                                   70546012.6\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)2:observedWeight                                    68933859.8\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)2                                                   68930890.3\nriverwest brook:factor(season)4:observedWeight                                                                67079100.6\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)2:observedWeight                                 62493592.4\nriverwb obear:factor(season)2:observedWeight                                                                  61178852.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell                                  58303859.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)2:observedWeight   58247446.2\nmeanTemperatureScaledBySeason:riverwb mitchell                                                                57530539.0\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)4:observedWeight                                  57495116.6\nmeanFlowByRiverScaledBySeason:factor(season)4:observedWeight                                                  55561597.2\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)4:observedWeight                                 54566845.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)4                     53205422.8\nriverwest brook                                                                                               51723475.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)4:observedWeight   46298658.2\nmeanFlowByRiverScaledBySeason                                                                                 45759381.4\nriverwest brook:factor(season)3                                                                               42760303.7\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)4                                                   42481168.8\nriverwb mitchell:observedWeight                                                                               42452478.0\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)4                                                41310081.7\nmeanTemperatureScaledBySeason:factor(season)4                                                                 41038381.6\nmeanFlowByRiverScaledBySeason:factor(season)3                                                                 40739632.5\nmeanFlowByRiverScaledBySeason:riverwb mitchell:observedWeight                                                 39465254.6\nriverwb mitchell:factor(season)4:observedWeight                                                               39129885.8\nmeanFlowByRiverScaledBySeason:riverwest brook                                                                 38858474.9\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)4                                                 38823558.4\nriverwb mitchell:factor(season)3:observedWeight                                                               38670169.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)4                  35714692.7\nfactor(season)3                                                                                               35462327.1\nriverwb obear                                                                                                 34674805.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)4:observedWeight                                 34248466.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)4                   33658515.7\nmeanFlowByRiverScaledBySeason:riverwb obear:observedWeight                                                    33553609.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)4:observedWeight      33290054.3\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)3                                                 32275488.3\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)3:observedWeight                                 32046854.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)4                                   30193110.9\nmeanFlowByRiverScaledBySeason:riverwb obear                                                                   29205676.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)2                                                28487627.7\nriverwb mitchell:factor(season)2                                                                              26014699.4\nriverwb obear:observedWeight                                                                                  25051017.6\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)4:observedWeight                                    20663389.1\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)3:observedWeight                                    20638663.9\nriverwest brook:factor(season)2                                                                               16126946.8\nriverwb mitchell:factor(season)2:observedWeight                                                               14311118.6\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)3                                                13948904.8\nriverwb obear:factor(season)3:observedWeight                                                                  12135696.3\nfactor(season)2                                                                                               10472604.3\nmeanFlowByRiverScaledBySeason:factor(season)2                                                                 10135106.6\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)2                                                 8273083.0\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)2:observedWeight                                  7284177.1\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)4                                                  7256830.7\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)2                                                  6902771.9\nmeanFlowByRiverScaledBySeason:factor(season)4                                                                  5025268.1\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)2                   3723864.2\nriverwb mitchell                                                                                               2206843.4\nriverwb mitchell:factor(season)3                                                                               1764088.5\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)4                                                 1579048.1\nriverwb mitchell:factor(season)4                                                                               1292175.3\nriverwest brook:factor(season)4                                                                                1137844.7\nfactor(season)4                                                                                                 920754.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell                                                                  362710.3\n\n\n\n\n17.18.5 Precict p(neg growth in mass)\n\n\nCode\npredD &lt;- expand.grid(\n  meanFlowByRiverScaledBySeason = seq(-1.5,1.5,0.25), \n  meanTemperatureScaledBySeason = seq(-1.5,1.5,0.25), \n  river = unique(cd1$river), \n  species = unique(cd1$species), \n  season = unique(cd1$season),\n  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)\n  )\n\n\npred &lt;- add_column(predD, \n                   pred = predict.glm(modFT11, predD, type = \"response\")) |&gt; \n        mutate(groupT = paste(river, species, season, meanTemperatureScaledBySeason, sep = \"_\"),\n               groupF = paste(river, species, season, meanFlowByRiverScaledBySeason, sep = \"_\"))\n\n\n\n\n17.18.6 Plot predictions\n\n\nCode\nggplot(pred |&gt; filter(meanTemperatureScaledBySeason %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowByRiverScaledBySeason, pred, group= groupT)) +\n  geom_line(aes(color = factor(meanTemperatureScaledBySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(season~species+river)",
    "crumbs": [
      "General models",
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>Growth in mass</span>"
    ]
  },
  {
    "objectID": "getData.html",
    "href": "getData.html",
    "title": "2  Get data info",
    "section": "",
    "text": "2.1 Databases\nWe have two types of databases: Environmental and Fish\nThe environmental database contains daily mean temperature and flow data. Flow data are of 2 types 1) from a flow extension model - not tributary-specific and 2) hindcasted based on tributarty-specific flows from 2021 on (these flow variables are labelled ‘…byRiver’). Temperature data are from tributary-specific loggers.\nThere are four main fish databases we want to create:\n1. cdWB_electro West Brook electrofishing data, 3 species (brook trout, brown trout and Atlantic salmon), tagged and untagged fish\n2. cdWB_CMR West Brook electrofishing data formatted for Capture-Mark-Recapture (CMR) analysis for tagged individuals\n3. cdWB_wanding West Brook wanding (portable antenna) data, all tagged salmonids\n4. cdWB_antenna West Brook stationary antenna data, all tagged salmonids\n“cd” stands for “core data”.",
    "crumbs": [
      "Get data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Get data info</span>"
    ]
  },
  {
    "objectID": "getDataAntenna.html",
    "href": "getDataAntenna.html",
    "title": "7  Get antenna data",
    "section": "",
    "text": "7.1 Raw data\nRaw antenna data from the WB database (see get data info chapter for details) include these data frames:",
    "crumbs": [
      "Get data",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Get antenna data</span>"
    ]
  },
  {
    "objectID": "getDataAntenna.html#raw-data",
    "href": "getDataAntenna.html#raw-data",
    "title": "7  Get antenna data",
    "section": "",
    "text": "7.1.1 Deployment details\n\n\nCode\ndeploy &lt;- tar_read(antennaDeployment_target)\nstr(deploy)\n\n\n'data.frame':   28 obs. of  10 variables:\n $ drainage    : chr  \"west\" \"west\" \"west\" \"west\" ...\n $ river       : chr  \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" ...\n $ area        : chr  \"trib\" \"trib\" \"trib\" \"trib\" ...\n $ section     : chr  \"confluence\" \"wb jimmy stationary 2-1\" \"wb jimmy stationary 2-0\" \"wb jimmy section 2 antenna\" ...\n $ riverMeter  : num  5019 5020 5024 5049 5081 ...\n $ deployed    : POSIXct, format: NA \"2003-08-20 04:00:00\" ...\n $ removed     : POSIXct, format: NA \"2005-11-17 05:00:00\" ...\n $ antenna_name: chr  \"wb jimmy-confluence\" \"wb jimmy-wb jimmy stationary 2-1\" \"wb jimmy-wb jimmy stationary 2-0\" \"wb jimmy section 2 antenna\" ...\n $ comments    : chr  NA \"Numbers out of sequence. Confluence antenna was the first deployed in Jimmy (2-1) named the next one 2- 0 (plac\"| __truncated__ \"Numbers out of sequence. Confluence antenna was the first deployed in Jimmy (2-1) named the next one 2- 0 (plac\"| __truncated__ \"After readers were stolen we placed an antenna in section 2. Get reader away from road.\" ...\n $ riverOrdered: Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 2 2 2 2 2 2 2 2 3 3 ...\n\n\n\n\n7.1.2 Antenna log\n\n\nCode\nlog &lt;- tar_read(antennaLog_target)\nstr(log)\n\n\n'data.frame':   4814 obs. of  26 variables:\n $ drainage            : chr  \"west\" \"west\" \"west\" \"west\" ...\n $ river               : chr  \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" ...\n $ riverMeter          : num  4830 4797 4797 4830 4830 ...\n $ datetime            : POSIXct, format: \"2014-01-02 15:15:00\" \"2014-01-02 15:20:00\" ...\n $ section             : chr  \"2\" \"0\" \"wb tribs\" \"wb tribs\" ...\n $ id                  : chr  \"iso\" \"iso\" NA NA ...\n $ on_off              : num  3 3 3 3 3 3 3 3 3 3 ...\n $ origin              : chr  \"log file\" \"log file\" \"field book\" \"field book\" ...\n $ sheet_number        : chr  \"m ab 16\" \"m b 13\" \"wb diary\" \"wb diary\" ...\n $ reader_id           : chr  NA NA NA NA ...\n $ buffer_arrival      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ buffer_departure    : num  NA NA NA NA NA NA NA NA NA NA ...\n $ reader_time         : POSIXct, format: NA NA ...\n $ adjusted_time       : POSIXct, format: NA NA ...\n $ stake_height        : num  NA NA NA NA NA NA NA NA NA NA ...\n $ actions             : chr  \"bc\" \"bc\" NA NA ...\n $ rms_on_arrival      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ rms_on_departure    : num  NA NA NA NA NA NA NA NA NA NA ...\n $ signal              : num  NA NA NA NA NA NA NA NA NA NA ...\n $ current_on_arrival  : num  NA NA NA NA NA NA NA NA NA NA ...\n $ current_on_departure: num  NA NA NA NA NA NA NA NA NA NA ...\n $ initials            : chr  \"td\" \"td\" \"mh/td\" \"mh/td\" ...\n $ comments_1          : chr  NA NA NA NA ...\n $ comments_2          : chr  NA NA NA NA ...\n $ field_book          : chr  NA NA NA NA ...\n $ riverOrdered        : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 3 3 3 3 3 3 3 3 3 3 ...\n\n\nData are generated in R/getDataAntenna-targets.R file\n\n\n7.1.3 Get antenna data observations target\n\n\nCode\nlibrary(targets)\ncdWB_antenna0 &lt;- tar_read(cdWB_antenna0_target)\nstr(cdWB_antenna0)\n\n\ntibble [410,915 × 14] (S3: tbl_df/tbl/data.frame)\n $ tag          : chr [1:410915] \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" ...\n $ detectionDate: POSIXct[1:410915], format: \"2014-10-18 00:22:33\" \"2014-10-24 19:34:31\" ...\n $ river        : chr [1:410915] \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" ...\n $ riverMeter   : num [1:410915] 4797 4797 4830 4830 5524 ...\n $ survey       : chr [1:410915] \"stationaryAntenna\" \"stationaryAntenna\" \"stationaryAntenna\" \"stationaryAntenna\" ...\n $ cohort       : num [1:410915] 2013 2013 2013 2013 2013 ...\n $ species      : chr [1:410915] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated: Date[1:410915], format: \"2014-10-25\" \"2014-10-25\" ...\n $ sex          : chr [1:410915] NA NA NA NA ...\n $ riverOrdered : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 3 3 3 3 1 2 2 2 2 2 ...\n $ year         : num [1:410915] 2014 2014 2014 2014 2014 ...\n $ yday         : num [1:410915] 291 297 297 297 298 258 260 260 289 289 ...\n $ date         : Date[1:410915], format: \"2014-10-18\" \"2014-10-24\" ...\n $ drainage     : chr [1:410915] \"west\" \"west\" \"west\" \"west\" ...\n\n\nCode\n# Save csv for downloading\n# write.csv(cdWB_antenna0, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_antenna0.csv\")\n# Save rData file for downloading\n# save(cdWB_antenna0, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_antenna0.RData\")",
    "crumbs": [
      "Get data",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Get antenna data</span>"
    ]
  },
  {
    "objectID": "modelsCMR_NN_OB.html",
    "href": "modelsCMR_NN_OB.html",
    "title": "19  River 4 (IS) - CJS model",
    "section": "",
    "text": "19.1 [t,t] model\nModel with phi and p for each age-in-samples (column in the encounter history file)\nProbability of survival (phi) model structure:\nphi[t] &lt;- betaInt[t]\nProbability of capture (p) model structure:\np[t] &lt;- betaP[t]\nModel code is in ./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_NN_OB.R and saved as modelCMR_tt_NN_OB_target\nModel runs:\ntt_NN_OB_2023-06-14 23.RData: preliminary run only tracing phi and p\ntt_NN_OB_2023-06-15 08.RData: tracing phi and p and z [most recent]",
    "crumbs": [
      "Neural network/CMR model comparison",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>River 4 (IS) - CJS model</span>"
    ]
  },
  {
    "objectID": "modelsCMR_NN_OB.html#tt-model",
    "href": "modelsCMR_NN_OB.html#tt-model",
    "title": "19  River 4 (IS) - CJS model",
    "section": "",
    "text": "19.1.1 Retrieve model results\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  load('./models/cmrNN_OB/tt/runsOut/tt_NN_OB_mostRecent.RData')\n  out_NN_OB &lt;- d\n  \n  #Input data\n  eh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n19.1.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\n  out_NN_OB$modelCode\n\n\n{\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (t in 1:(T - 1)) {\n        phi[t] ~ dunif(0, 1)\n        gamma[1, 1, t] &lt;- phi[t]\n        gamma[1, 2, t] &lt;- 1 - phi[t]\n        gamma[2, 1, t] &lt;- 0\n        gamma[2, 2, t] &lt;- 1\n        p[t] ~ dunif(0, 1)\n        omega[1, 1, t] &lt;- 1 - p[t]\n        omega[1, 2, t] &lt;- p[t]\n        omega[2, 1, t] &lt;- 1\n        omega[2, 2, t] &lt;- 0\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in first[i]:(last[i] - 1)) {\n            z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j])\n            y[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, j])\n        }\n    }\n}\n\n\n\n\n19.1.3 Model statistics\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2000\n2\n5\n\n\n\n[1] “Run time = 33.374 mins”\n\n\n19.1.4 Plot traces\n\n\nCode\n  priors &lt;- runif(out_NN_OB$runData$nIter * out_NN_OB$runData$nChains, 0, 1)\n  MCMCtrace(object = out_NN_OB$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"phi\", \"p\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.1.5 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OB$mcmc, params = c(\"phi\"))\n\n\n\n\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OB$mcmc, params = c(\"p\"))\n\n\n\n\n\n\n\n\n\nSummary values\n\n\nCode\n#|\n  (summary_tt &lt;- MCMCsummary(object = out_NN_OB$mcmc, params = c(\"phi\", \"p\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\"))\n\n\n       var  mean    sd  2.5%   50% 97.5% Rhat n.eff\n1   phi[1] 0.812 0.022 0.769 0.812 0.854 1.01   290\n2   phi[2] 0.810 0.025 0.762 0.811 0.859 1.00   218\n3   phi[3] 0.749 0.021 0.708 0.749 0.792 1.01   230\n4   phi[4] 0.647 0.021 0.606 0.647 0.689 1.00   361\n5   phi[5] 0.640 0.026 0.587 0.640 0.687 1.00   258\n6   phi[6] 0.691 0.035 0.629 0.690 0.764 1.05   206\n7   phi[7] 0.830 0.051 0.736 0.827 0.932 1.02   100\n8   phi[8] 0.330 0.032 0.271 0.330 0.393 1.00   312\n9   phi[9] 0.669 0.079 0.528 0.665 0.837 1.01   200\n10 phi[10] 0.560 0.090 0.401 0.556 0.754 1.08   188\n11 phi[11] 0.684 0.151 0.412 0.679 0.958 1.00   103\n12    p[1] 0.597 0.022 0.555 0.597 0.638 1.00   449\n13    p[2] 0.448 0.019 0.410 0.447 0.487 1.01   512\n14    p[3] 0.707 0.020 0.669 0.707 0.746 1.00   441\n15    p[4] 0.659 0.022 0.615 0.659 0.701 1.01   452\n16    p[5] 0.634 0.025 0.587 0.634 0.682 1.01   457\n17    p[6] 0.499 0.028 0.447 0.500 0.554 1.01   380\n18    p[7] 0.701 0.041 0.616 0.701 0.780 1.00   156\n19    p[8] 0.783 0.048 0.682 0.788 0.869 1.00   401\n20    p[9] 0.605 0.072 0.458 0.608 0.736 1.03   325\n21   p[10] 0.692 0.088 0.512 0.695 0.849 1.03   312\n22   p[11] 0.733 0.155 0.438 0.727 0.989 1.00   123\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_functionsToSource.R')\n  \n  summary_tt_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OB$mcmc, params = c(\"z\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  summary_tt_z &lt;- summary_tt_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      meanM1 = mean - 1,\n      pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong)\n\n\n\n\nCode\nojs_define(numTags_tt_OJS = dim(eh$tags)[1])\nojs_define(summary_tt_z_OJS = (summary_tt_z))\n\n\n\n\n19.1.6 Plot the probability of survival (z) for selected individuals\nSelect one or more individuals :\n\n\nCode\nviewof selectInd_tt = Inputs.select([...Array(numTags_tt_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummary_tt_z_OJS_T = transpose(summary_tt_z_OJS)\nsummary_tt_z_OJS_T_selected = summary_tt_z_OJS_T.filter((d) =&gt;\n  selectInd_tt.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated probability of survival and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last possible observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summary_tt_z_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_tt_z_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_tt_z_OJS_T_selected, \n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_tt_z_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.1.7 Output model summary data for Xiaowei\n\n\nCode\n  write.csv(summary_tt, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt.csv')\n  \n  write.csv(summary_tt_z, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt_z.csv')\n  \n  # #Output input data to Xiaowei directory. Turn to TRUE to output.\n  # Output happens here: C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/modelsCMR_NN_OB_outputData.qmd\n  # if(FALSE) {\n  # \n  #   for (i in seq_along(eh)){\n  #     write.csv(eh[[i]], file = paste0('./models/cmrNN_OB/tt/dataOut/xiaowei/', \n  #                                      names(eh)[i], \n  #                                      \".csv\"), \n  #               row.names = F)\n  #   }\n  # }",
    "crumbs": [
      "Neural network/CMR model comparison",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>River 4 (IS) - CJS model</span>"
    ]
  },
  {
    "objectID": "modelsCMR_NN_OB.html#ss-model",
    "href": "modelsCMR_NN_OB.html#ss-model",
    "title": "19  River 4 (IS) - CJS model",
    "section": "19.2 [s,s] model",
    "text": "19.2 [s,s] model\nModel with phi and p for each season_isYOY (YOY = young-of-year, isYOY = juvenile or adult) combination. Season is hierarchical over time. There are no data for the isYOY = TRUE, season = 2 state.\nProbability of survival (phi) model structure:\nphi[yoy, s] &lt;- betaInt[yoy, s]\nProbability of capture (p) model structure:\np[yoy, s] &lt;- betaP[yoy, s]\nModel code is in ./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_makeFile.R\n\nModel runs:\n\n\n19.2.1 Retrieve Bayesian model results\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n#\n  load('./models/cmrNN_OB/ss/runsOut/ss_NN_OB_mostRecent.RData')\n  out_ss_NN_OB &lt;- d\n\n  #Input data\n  eh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n19.2.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file). isYOY = 1 signifies YOY = TRUE (juvenile), and isYOY = 2 signifies YOY = FALSE (adult)\n\n\nCode\nout_ss_NN_OB$modelCode\n\n\n{\n    {\n        delta[1] &lt;- 1\n        delta[2] &lt;- 0\n        for (i in 1:N) {\n            for (t in first[i]:(last[i] - 1)) {\n                gamma[1, 1, t, i] &lt;- phi[i, t]\n                gamma[1, 2, t, i] &lt;- 1 - phi[i, t]\n                gamma[2, 1, t, i] &lt;- 0\n                gamma[2, 2, t, i] &lt;- 1\n                omega[1, 1, t, i] &lt;- 1 - p[i, t]\n                omega[1, 2, t, i] &lt;- p[i, t]\n                omega[2, 1, t, i] &lt;- 1\n                omega[2, 2, t, i] &lt;- 0\n            }\n        }\n        for (i in 1:N) {\n            for (t in first[i]:(last[i] - 1)) {\n                logit(phi[i, t]) &lt;- phiInt[isYOY_DATA[i, t], \n                  seasons[t]]\n                logit(p[i, t]) &lt;- pInt[isYOY_DATA[i, t], seasons[t]]\n            }\n        }\n        for (yoy in 1:2) {\n            for (s in 1:4) {\n                phiInt[yoy, s] ~ T(dnorm(0, sd = 1/0.667), -3.5, \n                  3.5)\n                pInt[yoy, s] ~ dunif(0, 1)\n            }\n        }\n        for (i in 1:N) {\n            z[i, first[i]] ~ dcat(delta[1:2])\n            for (j in first[i]:(last[i] - 1)) {\n                z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j, i])\n                yDATA[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, \n                  j, i])\n            }\n        }\n    }\n}\n\n\n\n\n19.2.3 Model statistics\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2000\n2\n5\n\n\n\n[1] “Run time = 38.594 mins”\n\n\n19.2.4 Plot traces\n\n\nCode\n  priors &lt;- runif(out_ss_NN_OB$runData$nIter * out_ss_NN_OB$runData$nChains, 0, 1)\n  MCMCtrace(object = out_ss_NN_OB$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE,\n            params = c(\"phiInt\", \"pInt\"),\n            pdf = FALSE,\n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.2.5 Summary data\n\n\nCode\n#|\n  MCMCplot(object = out_ss_NN_OB$mcmc, params = c(\"phiInt\"))\n\n\n\n\n\n\n\n\n\nCode\n  MCMCplot(object = out_ss_NN_OB$mcmc, params = c(\"pInt\"))\n\n\n\n\n\n\n\n\n\nSummary values\n\n\nCode\n(summary_ss &lt;- tar_read(summary_ss_target))\n\n\n            var   mean    sd   2.5%   50% 97.5% Rhat n.eff   mean_01\n1  phiInt[1, 1]  1.356 0.134  1.111 1.347 1.660 1.00   298 0.7951088\n2  phiInt[2, 1]  1.204 0.197  0.851 1.191 1.645 1.01   282 0.7692356\n3  phiInt[1, 2] -0.008 1.409 -2.749 0.006 2.660 1.00  1200 0.4980000\n4  phiInt[2, 2]  0.299 0.073  0.162 0.297 0.441 1.05   327 0.5741980\n5  phiInt[1, 3]  1.458 0.127  1.218 1.454 1.713 1.01   368 0.8112266\n6  phiInt[2, 3]  0.586 0.098  0.412 0.583 0.795 1.05   363 0.6424468\n7  phiInt[1, 4]  1.291 0.116  1.067 1.288 1.507 1.04   424 0.7843164\n8  phiInt[2, 4]  0.737 0.133  0.497 0.730 1.005 1.01   298 0.6763395\n9    pInt[1, 1]  0.773 0.093  0.585 0.774 0.958 1.02   402 0.6841695\n10   pInt[2, 1]  0.929 0.060  0.785 0.945 0.997 1.04   591 0.7168724\n11   pInt[1, 2]  0.498 0.290  0.031 0.484 0.974 1.00  1200 0.6219892\n12   pInt[2, 2]  0.731 0.088  0.556 0.732 0.904 1.01   549 0.6750247\n13   pInt[1, 3]  0.405 0.080  0.254 0.406 0.562 1.00   636 0.5998884\n14   pInt[2, 3]  0.548 0.097  0.349 0.552 0.742 1.01   469 0.6336715\n15   pInt[1, 4]  0.022 0.019  0.001 0.017 0.073 1.00   489 0.5054998\n16   pInt[2, 4]  0.117 0.078  0.006 0.103 0.295 1.01   527 0.5292167\n\n\nCode\nsummary_ss_z0 &lt;- tar_read(summary_ss_z0_target)\nsummary_ss_phi0 &lt;- tar_read(summary_ss_phi0_target)\nsummary_ss_p0 &lt;- tar_read(summary_ss_p0_target)\n\n  # (summary_ss &lt;- MCMCsummary(object = out_ss_NN_OB$mcmc, params = c(\"phiInt\", \"pInt\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt; \n  #    mutate(mean_01 = exp(mean)/(1+exp(mean))))\n  # \n  # # To get the mMCMCSummaryRMNA function which I adapted to deal with NAs\n  # source('./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_functionsToSource.R')\n  # \n  # summary_ss_z0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"z\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n  # \n  # # 'phi' has each individual, 'phiInt' does not\n  # summary_ss_phi0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"phi\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n  # \n  # summary_ss_p0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"p\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- tar_read(ehLong_target)\n  firstLong &lt;-tar_read(firstLong_target)\n\n  lastLong &lt;- tar_read(lastLong_target)\n\n  cohortLong &lt;- tar_read(cohortLong_target)\n  #### z\n  summary_ss_z &lt;- tar_read(summary_ss_z_target)\n  \n  ##### p\n  summary_ss_p &lt;- tar_read(summary_ss_p_target)\n  \n  #### phi\n  summary_ss_phi &lt;- tar_read(summary_ss_phi_target)\n\n\n  # ehLong &lt;-\n  #   eh$eh |&gt;\n  #   as.data.frame() |&gt;\n  #   rownames_to_column(\"ind0\") |&gt;\n  #   pivot_longer(starts_with(\"ais\")) |&gt;\n  #   mutate(\n  #     t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n  #     enc = value,\n  #     ind = as.numeric(ind0)\n  #   ) |&gt;\n  #   dplyr::select(-c(name, value, ind0))\n  # \n  # firstLong &lt;- eh$first |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind)) |&gt;\n  #   rename(first = value)\n  # \n  # lastLong &lt;- eh$last |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind)) |&gt;\n  #   rename(last = value)\n  # \n  # cohortLong &lt;- eh$cohort |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind))\n  # \n  # #### z\n  # summary_ss_z &lt;- summary_ss_z0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.8, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n  # \n  # ##### p\n  # summary_ss_p &lt;- summary_ss_p0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.2, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n  # \n  # #### phi\n  # summary_ss_phi &lt;- summary_ss_phi0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.2, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n\n\n\n\n19.2.6 Retrieve ML model results\nML model result are from Xioawei and Erhu at PITT\n\n\nCode\nif(!exists(\"np\")) {\n  np &lt;-import(\"numpy\")\n}\n\nxP0 &lt;- np$load(\"./data/in/fromXioawei/p_est.npy\")\n\nxP &lt;- xP0 |&gt; \n  as.data.frame() |&gt; \n  rowid_to_column(\"ind\") |&gt; \n  pivot_longer(cols = starts_with(\"V\")) |&gt; \n  separate_wider_delim(name, delim = \"V\", names = c(\"d\", \"t\")) |&gt; \n  dplyr::select(-d) |&gt; \n  mutate(t = as.numeric(t)) |&gt; \n  rename(xP = value)\n\n\nxPhi0 &lt;- np$load(\"./data/in/fromXioawei/phi_est.npy\")\n\nxPhi &lt;- xPhi0 |&gt; \n  as.data.frame() |&gt; \n  rowid_to_column(\"ind\") |&gt; \n  pivot_longer(cols = starts_with(\"V\")) |&gt; \n  separate_wider_delim(name, delim = \"V\", names = c(\"d\", \"t\")) |&gt; \n  dplyr::select(-d) |&gt; \n  mutate(t = as.numeric(t))|&gt; \n  rename(xPhi = value)\n\n\nPlot ML model results\n\n\nCode\nggplot(xP, aes(t, xP)) +\n  geom_point(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi)) +\n  geom_point(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nPlot ML model results - jittered\n\n\nCode\nggplot(xP, aes(t, xP)) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi)) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nGroup by individual\n\n\nCode\nggplot(xP, aes(t, xP, group = ind)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi, group = ind)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\n\n\n19.2.7 Summarize ML model results\n\n\nCode\nsummary_xPhi &lt;- xPhi |&gt; \n  summarize(\n    meanPhi = mean(xPhi),\n    sdPhi = sd(xPhi)\n  )\n\nsummary_xP &lt;- xP |&gt; \n  summarize(\n    meanP = mean(xP),\n    sdP = sd(xP)\n  )\n\n\n\n\n19.2.8 Merge ML model results with Bayesian results\n\n\nCode\nsummary_ss_phi_x &lt;- summary_ss_phi |&gt; \n  left_join(xPhi)\n\nsummary_ss_p_x &lt;- summary_ss_p |&gt; \n  left_join(xP)\n\n\nPlot Bayes and ML model results for individual fish\n\n\nCode\nggplot(summary_ss_phi_x, aes(mean, xPhi, color = factor(t))) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nCode\nggplot(summary_ss_p_x, aes(mean, xP, color = factor(t))) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\n\n\n\n\nObservable interactivity\n\n\nCode\nojs_define(numTags_ss_OJS = dim(eh$tags)[1])\nojs_define(summary_ss_z_OJS = (summary_ss_z))\n\nojs_define(summary_ss_phi_x_OJS = (summary_ss_phi_x))\nojs_define(summary_ss_p_x_OJS = (summary_ss_p_x))\n\n\n\n\nCode\nsummary_ss_phi_x_OJS\n\n\n\n\n\n\n\n\n\n19.2.9 Plot the probabilities for selected individuals\nProbabilities are: alive (z), survival (phi), and detection (p)\n\n\nCode\nsummary_ss_z_OJS_T_selected\n\n\n\n\n\n\n\n\n\nCode\nsummary_ss_phi_x_OJS_T_selected\n\n\n\n\n\n\n\n\n\nCode\nsummary_ss_p_x_OJS_T_selected\n\n\n\n\n\n\n\n\n\n\n\nCode\nviewof selectInd_ss = Inputs.select([...Array(numTags_ss_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummary_ss_z_OJS_T = transpose(summary_ss_z_OJS)\nsummary_ss_z_OJS_T_selected = summary_ss_z_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\nsummary_ss_phi_x_OJS_T = transpose(summary_ss_phi_x_OJS)\nsummary_ss_phi_x_OJS_T_selected = summary_ss_phi_x_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\nsummary_ss_p_x_OJS_T = transpose(summary_ss_p_x_OJS)\nsummary_ss_p_x_OJS_T_selected = summary_ss_p_x_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated probability of being alive and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last possible observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of alive\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summary_ss_z_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_z_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_z_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_z_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.2.10 Compare survival with ML survival estimates\nML estimates are in orange\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\"\n    }),\n    Plot.line(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    \n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xPhi\",\n      stroke: \"orange\"\n    }),\n    Plot.line(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xPhi\",\n      stroke: \"orange\"\n    }),\n    \n    Plot.ruleX(summary_ss_phi_x_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_phi_x_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_phi_x_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_phi_x_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.2.11 Compare probability of capture with ML survival estimates\nML estimates are in orange\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of capture\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\"\n    }),\n    Plot.line(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    \n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xP\",\n      stroke: \"orange\"\n    }),\n    Plot.line(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xP\",\n      stroke: \"orange\"\n    }),\n    \n    Plot.ruleX(summary_ss_p_x_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_p_x_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_p_x_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_p_x_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.2.12 Output model summary data for ML model\n\n\nCode\n  write.csv(summary_ss, './models/cmrNN_OB/ss/dataOut/xiaowei/summary_ss.csv')\n\n  write.csv(summary_ss_z, './models/cmrNN_OB/ss/dataOut/xiaowei/summary_ss_z.csv')\n\n  # #Output input data to Xiaowei directory. Turn to TRUE to output.\n  # Output happens here: C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/modelsCMR_NN_OB_outputData.qmd\n  # if(FALSE) {\n  #\n  #   for (i in seq_along(eh)){\n  #     write.csv(eh[[i]], file = paste0('./models/cmrNN_OB/tt/dataOut/xiaowei/',\n  #                                      names(eh)[i],\n  #                                      \".csv\"),\n  #               row.names = F)\n  #   }\n  # }",
    "crumbs": [
      "Neural network/CMR model comparison",
      "<span class='chapter-number'>19</span>  <span class='chapter-title'>River 4 (IS) - CJS model</span>"
    ]
  }
]