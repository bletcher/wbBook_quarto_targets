[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "West Brook story",
    "section": "",
    "text": "Introduction\nNOTE: This is an internal document for model development. It is not intended for distribution and has not been approved by the USGS."
  },
  {
    "objectID": "index.html#the-west-brook-stream-network",
    "href": "index.html#the-west-brook-stream-network",
    "title": "West Brook story",
    "section": "The West Brook stream network",
    "text": "The West Brook stream network\nThe Ecology Section at the USGS Conte Laboratory has studied fish in the West Brook (MA, USA) since 1997. The goal is to understand the strength and direction of drivers on fish growth, movement, reproduction and survival in a small stream network. We hope to provide a comprehensive understanding of fish population dynamics and ultimately individual fitness (natural selection and evolution) in the study area.\nSee below or here for interactive applications to explore the raw data.\n\n\n\n\nData extraction and manipulation and models are run using targets from the R package targets. Run the following code to rebuild all the targets.\nlibrary(targets) library(quarto)\ntar_make()\nRun this code to rebuild the book.\nquarto::quarto_render(output_format = \"html\")"
  },
  {
    "objectID": "index.html#mainstem-and-tributary-names",
    "href": "index.html#mainstem-and-tributary-names",
    "title": "West Brook story",
    "section": "Mainstem and tributary names",
    "text": "Mainstem and tributary names\nThere are four locations within the study area. Here are the primary names and aliases:\n\n\nTable 1: River names and aliases\n\n\nPrimary name\nAlias\nAlias-long\nRiver #\n\n\n\n\nWest Brook\nWB\nWest Brook\n1\n\n\nJimmy Brook\nOL\nOpen Large\n2\n\n\nMitchell Brook\nOS\nOpen Small\n3\n\n\nOBear Brook\nIL\nIsolated Large\n4\n\n\n\n\n\n\nCode\n#if/when .qmd's are in quarto subdir\n#tar_config_set(store = \"../_targets\")"
  },
  {
    "objectID": "vizTargets.html",
    "href": "vizTargets.html",
    "title": "1  Visualize targets",
    "section": "",
    "text": "Data processing and model running is controlled by targets. Targets are only re-run if the upstream data source changes. The chart below shows the dependencies among all the targets.\nVisualize the targets network\n\n\nCode\n#tar_visnetwork()"
  },
  {
    "objectID": "getData.html#databases",
    "href": "getData.html#databases",
    "title": "2  Get data info",
    "section": "2.1 Databases",
    "text": "2.1 Databases\nWe have two types of databases: Environmental and Fish\nThe environmental database contains daily mean temperature and flow data. Flow data are of 2 types 1) from a flow extension model - not tributary-specific and 2) hindcasted based on tributarty-specific flows from 2021 on (these flow variables are labelled ‘…byRiver’). Temperature data are from tributary-specific loggers.\nThere are four main fish databases we want to create:\n1. cdWB_electro West Brook electrofishing data, 3 species (brook trout, brown trout and Atlantic salmon), tagged and untagged fish\n2. cdWB_CMR West Brook electrofishing data formatted for Capture-Mark-Recapture (CMR) analysis for tagged individuals\n3. cdWB_wanding West Brook wanding (portable antenna) data, all tagged salmonids\n4. cdWB_antenna West Brook stationary antenna data, all tagged salmonids\n“cd” stands for “core data”."
  },
  {
    "objectID": "getDataEnv.html#get-environmental-data-target-and-show-data-frame-structure",
    "href": "getDataEnv.html#get-environmental-data-target-and-show-data-frame-structure",
    "title": "3  Get environmental data",
    "section": "3.1 Get environmental data target and show data frame structure",
    "text": "3.1 Get environmental data target and show data frame structure\nFlow data in envDataWB:\nflow = original flow extension estimates (WB only)\nflowWithTribs = original flow estimates added to the tribs (not adjusted for area)\nflowByRiver = Jenn’s hindcasted flow based on tributary-specific flow estimates\nflowByRiverCFS = Jenn’s hindcasted flow in CFS based on tributary-specific flow estimates\nflowByRiverWB_WithTribs = flowByRiver estimates from WB added to the tribs (for scaling in flowByArea_ByRiver)\nflowByArea_flowExt = flow extension estimates (flowWithTribs * propRiverArea)\nflowByArea_ByRiver = flow extension estimates scaled by watershed area (flowByRiverWB_WithTribs * propRiverArea)\n\n\nCode\nenvDataWB &lt;- tar_read(envDataWB_target)\nstr(envDataWB)\n\n\ntibble [32,189 × 31] (S3: tbl_df/tbl/data.frame)\n $ river                  : chr [1:32189] \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" ...\n $ date                   : POSIXct[1:32189], format: \"1997-05-14 04:00:00\" \"1997-05-15 04:00:00\" ...\n $ temperature            : num [1:32189] 11.57 10.4 10.55 8.84 9.09 ...\n $ daily_max_temp         : num [1:32189] 11.6 12.3 11.9 10.2 11.6 ...\n $ daily_min_temp         : num [1:32189] 11.57 8.96 9.73 7.74 7.45 ...\n $ flow                   : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ dateDate               : Date[1:32189], format: \"1997-05-14\" \"1997-05-15\" ...\n $ yday                   : num [1:32189] 134 135 136 137 138 139 140 141 142 143 ...\n $ year                   : num [1:32189] 1997 1997 1997 1997 1997 ...\n $ riverOrdered           : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 2 2 2 2 2 2 2 2 2 2 ...\n $ dayLength              : num [1:32189] 51770 51896 52019 52140 52258 ...\n $ precip                 : num [1:32189] 0 1.15 0 0 2.34 ...\n $ solarRadiation         : num [1:32189] 587 562 259 434 446 ...\n $ swe                    : num [1:32189] 78.7 73.6 67.9 63 59.5 ...\n $ airTempMax             : num [1:32189] 20.1 21.2 12.7 15.1 18.9 ...\n $ airTempMin             : num [1:32189] 4.03 6.28 7.47 5.64 2.38 6.59 7.91 3.28 4.98 3.99 ...\n $ vaporPressure          : num [1:32189] 815 953 1034 911 725 ...\n $ airTempMedian          : num [1:32189] 12.1 13.7 10.1 10.4 10.6 ...\n $ ETmm                   : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ Pmm                    : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ flowByRiver_cfs        : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ flowByRiver            : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ season                 : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ start                  : Date[1:32189], format: NA NA ...\n $ end                    : Date[1:32189], format: NA NA ...\n $ flowWithTribs          : num [1:32189] NA 0.234 0.227 0.198 0.191 ...\n $ flowByRiverWB_WithTribs: num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ propRiverArea          : num [1:32189] 0.113 0.113 0.113 0.113 0.113 ...\n $ flowByArea_flowExt     : num [1:32189] NA 0.0265 0.0257 0.0224 0.0216 ...\n $ flowByArea_ByRiver     : num [1:32189] NA NA NA NA NA NA NA NA NA NA ...\n $ dummy                  : num [1:32189] 1 1 1 1 1 1 1 1 1 1 ...\n\n\nCode\n# Save rData file for downloading\n# save(envDataWB, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/envDataWB.RData\")\n\nojs_define(envDataWB_OJS = transpose(envDataWB))"
  },
  {
    "objectID": "getDataEnv.html#plot-flow-over-time-for-the-west-brook-by-year",
    "href": "getDataEnv.html#plot-flow-over-time-for-the-west-brook-by-year",
    "title": "3  Get environmental data",
    "section": "3.2 Plot flow over time for the West Brook by year",
    "text": "3.2 Plot flow over time for the West Brook by year\nFlow estimates from flow extension model for the West Brook\n\n\nCode\n# ggplot(envDataWB %&gt;% filter(riverOrdered == \"West Brook\"), aes(yday, flow)) +\n#   geom_point(size = 0.1) +\n#   #geom_point(size = 0.1, color = \"blue\", aes(yday, flowByRiver)) +\n#   #geom_line() +\n#   scale_x_continuous(\"Day of year\") +\n#   scale_y_continuous(\"Stream flow (m^3/s)\") +\n#   facet_wrap(~year(date))\n\ntable(envDataWB$river, is.na(envDataWB$flow))\n\n\n             \n              FALSE TRUE\n  wb jimmy        0 7717\n  wb mitchell     0 7717\n  wb obear        0 7717\n  west brook   9011   27\n\n\nCode\nggplot(envDataWB, aes(yday, flow)) +\n  geom_point(size = 0.1) +\n  #geom_point(size = 0.1, color = \"blue\", aes(yday, flowByRiver)) +\n  #geom_line() +\n  scale_x_continuous(\"Day of year\") +\n  scale_y_continuous(\"Stream flow (m^3/s)\") +\n  facet_wrap(~year(date))\n\n\n\n\n\nFigure 3.1: Stream flow (m3/s) for the West Brook\n\n\n\n\n\n\nCode\ntable(envDataWB$river, is.na(envDataWB$flowByArea_ByRiver))\n\n\n             \n              FALSE TRUE\n  wb jimmy     7572  145\n  wb mitchell  7572  145\n  wb obear     7572  145\n  west brook   8760  278\n\n\nCode\nggplot(envDataWB, aes(yday, flowByArea_ByRiver, color = river)) +\n  geom_point(size = 0.1) +\n  #geom_point(size = 0.1, color = \"blue\", aes(yday, flowByRiver)) +\n  #geom_line() +\n  scale_x_continuous(\"Day of year\") +\n  scale_y_continuous(\"Stream flow (m^3/s) scaled by watershed area\") +\n  facet_wrap(~year(date))\n\n\n\n\n\nFigure 3.2: Stream flow (m3/s) scaled by watershed area\n\n\n\n\n\n\nCode\ntable(envDataWB$river, is.na(envDataWB$flowByRiver))\n\n\n             \n              FALSE TRUE\n  wb jimmy     7572  145\n  wb mitchell  7572  145\n  wb obear     7572  145\n  west brook   8760  278\n\n\nCode\nggplot(envDataWB, aes(yday, flowByRiver, color = river)) +\n  geom_point(size = 0.1) +\n  #geom_point(size = 0.1, color = \"blue\", aes(yday, flowByRiver)) +\n  #geom_line() +\n  scale_x_continuous(\"Day of year\") +\n  scale_y_continuous(\"Stream flow (m^3/s) hindcasted by river-specific flows\") +\n  facet_wrap(~year(date))\n\n\n\n\n\nFigure 3.3: Hindcasted stream flow (m3/s) for the West Brook and tributaries\n\n\n\n\n\n\nCode\nggplot(envDataWB %&gt;% filter(riverOrdered == \"West Brook\", year %in% (1998:2021)), aes(flow, flowByRiver, color = yday)) +\n  geom_point(size = 0.1) +\n  geom_abline(slope = 1) +\n  scale_y_continuous(\"Stream flow (m^3/s) by river\") +\n  scale_x_continuous(\"Stream flow (m^3/s) from flow extension\") +\n  facet_wrap(~year(date))\n\nggplot(envDataWB %&gt;% filter(year %in% (1998:2021)), aes(flow, flowByRiver, color = river)) +\n  geom_point(size = 0.1) +\n  geom_abline(slope = 1) +\n  scale_y_continuous(\"Stream flow (m^3/s) by river\") +\n  scale_x_continuous(\"Stream flow (m^3/s) from flow extension\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.4: Stream flow (m3/s) for the West Brook with Jenn’s model predictions\n\n\n\n\n\n\n\nFigure 3.5: Stream flow (m3/s) for the West Brook with Jenn’s model predictions\n\n\n\n\n\n\nCode\nggplot(envDataWB %&gt;% filter(year %in% (1998:2021)), aes(flowByArea_ByRiver, flowByRiver, color = river)) +\n  geom_point(size = 0.1) +\n  geom_abline(slope = 1) +\n  scale_x_continuous(\"Stream flow (m^3/s) by area\") +\n  scale_y_continuous(\"Stream flow (m^3/s) by river\") +\n  facet_wrap(~year(date))\n\nggplot(envDataWB %&gt;% filter(year %in% (1998:2021)), aes(flowByArea_ByRiver, flowByRiver, color = river)) +\n  geom_point(size = 0.1) +\n  #geom_abline(slope = 1) +\n  scale_x_continuous(\"Stream flow (m^3/s) by area\") +\n  scale_y_continuous(\"Stream flow (m^3/s) by river\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.6: Stream flow (m3/s) for the West Brook with Jenn’s model predictions\n\n\n\n\n\n\n\nFigure 3.7: Stream flow (m3/s) for the West Brook with Jenn’s model predictions\n\n\n\n\n\n\nCode\nviewof rangeYear = Inputs.range([1997, 2022], {\n  label: \"Which year?\",\n  value: 2002,\n  step: 1\n})\n\nenvDataWB_OJSplot = envDataWB_OJS.filter(d =&gt; d.year === rangeYear)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    width: width,\n    height: 350,\n    inset: 10,\n    color: {\n      scheme: \"greys\"\n    },\n    x: { label: \"Stream flow (m3/s)\" },\n    y: { label: \"Stream flow (m3/s) from Jenn's model\" },\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"flow\",\n        y: \"flowByRiver\"\n      })\n    ],\n    facet: {\n      data: envDataWB_OJSplot,\n      x: \"riverOrdered\"\n    }\n  });\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    width: width,\n    height: 350,\n    inset: 10,\n    color: {\n      type: \"categorical\"\n    },\n    x: { label: \"Day of year\" },\n    y: { label: \"Stream flow (m3/s)\" },\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"dateDate\",\n        y: \"flowByRiver\"\n      })\n    ],\n    marks: [\n      Plot.frame(),\n      Plot.dot(envDataWB_OJSplot, {\n        x: \"dateDate\",\n        y: \"flow\"\n      })\n    ],\n    facet: {\n      data: envDataWB_OJSplot,\n      x: \"riverOrdered\"\n    }\n  });\n\n\n\n\n\n\n\nTest: referring to Figure 3.1."
  },
  {
    "objectID": "getDataEnv.html#plot-temperature-over-time-for-each-tributary",
    "href": "getDataEnv.html#plot-temperature-over-time-for-each-tributary",
    "title": "3  Get environmental data",
    "section": "3.3 Plot temperature over time for each tributary",
    "text": "3.3 Plot temperature over time for each tributary\n\n\nCode\nggplot(envDataWB, aes(date, temperature)) +\n  geom_point(size = 0.2) +\n  scale_x_continuous(\"Date\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.8: Stream temperature (C) by river"
  },
  {
    "objectID": "getDataEnv.html#plot-air-and-water-temperature-over-time-for-each-tributary",
    "href": "getDataEnv.html#plot-air-and-water-temperature-over-time-for-each-tributary",
    "title": "3  Get environmental data",
    "section": "3.4 Plot air and water temperature over time for each tributary",
    "text": "3.4 Plot air and water temperature over time for each tributary\n\n\nCode\ngetTempYear &lt;- function(d, yearIn){\n  d %&gt;% filter(year == yearIn)\n}\n\ntempYear &lt;- getTempYear(envDataWB, 2002)\n#write.csv(tempYear, \"./data/tempYear.csv\")\nojs_define(tempYearOJS0 = tempYear)\n\nggplot(tempYear, aes(date, temperature)) +\n  geom_point(size = 0.2) +\n  geom_point(aes(date, airTempMedian), color = \"blue\", size = 0.2) +\n  scale_x_continuous(\"Date\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\nggplot(tempYear, aes(airTempMedian, temperature, color = yday)) +\n  geom_point(size = 0.2) +\n  scale_x_continuous(\"Air Temperature\") +\n  scale_y_continuous(\"Stream temperature (C)\") +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 3.9: Stream and air temperature (C) by river\n\n\n\n\n\n\n\nFigure 3.10: Stream and air temperature (C) by river\n\n\n\n\nWill move this to its own chapter\n\n\nCode\ntempYearOJS = transpose(tempYearOJS0)\n\n//tempYearOJS0\n//tempYearOJS\ndateChunks\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndateChunks = {\n  let daysCount = rangeWindowWidth;\n  let days = [\n    {\n      daysCount0: 0,\n      start: tempYearOJS[0].dateDate,\n      end: tempYearOJS[rangeWindowWidth].dateDate,\n      daysCount: rangeWindowWidth,\n      data: tempYearOJS.filter(\n        (d) =&gt; d.yday &gt;= 0 && d.yday &lt;= 0 + rangeWindowWidth\n      )\n    }\n  ];\n\n  do {\n    if (daysCount &lt; 365) {\n      // dont push if the whole year is seleceted, array will be empty\n      days.push({\n        daysCount0: daysCount,\n        start: tempYearOJS[daysCount].dateDate,\n        end: tempYearOJS[daysCount + rangeWindowWidth].dateDate,\n        daysCount: daysCount,\n        data: tempYearOJS.filter(\n          (d) =&gt;\n            d.yday &gt;= daysCount + 1 && d.yday &lt;= daysCount + rangeWindowWidth\n        )\n      });\n    }\n    daysCount = daysCount + rangeWindowWidth;\n  } while (daysCount &lt;= 365);\n  return days;\n}\n\n\n\n\n\n\n\nUse the slider below to set the length (# of days) of each data chunk.\nNumber of data chunks: \nStart date = \nend date = \n\n\nCode\nviewof rangeWindowWidth = Inputs.range([1, 365 - 0], {\n  label: \"Data chunk length\",\n  value: 14,\n  step: 1\n})\n\n\n\n\n\n\n\nOf the data chunks defined above which one should we graph. 0 is the first one and you won’t be able to go past the last one (range updates automatically) but you might get as few as one observation in the last chunk.\n\n\nCode\nviewof rangeWhichWindow = Inputs.range([0, dateChunks.length - 1], {\n  label: \"Which data chunk?\",\n  step: 1,\n  value: 0\n})\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Air temperature (C)\" },\n  y: { label: \"Water temperature (C)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(dateChunks[rangeWhichWindow].data, {\n      x: \"airTempMedian\",\n      y: \"temperature\",\n      stroke: \"yday\"\n    })//,\n //   Plot.linearRegressionY(dateChunks[rangeWhichWindow].data, {\n//      x: \"airTempMedian\",\n //     y: \"temperature\"\n //   })\n  ],\n  facet: {\n    data: dateChunks[rangeWhichWindow].data,\n    x: \"river\"\n  }\n})\n\n\n\n\n\n\n\n=======================================================\nsome integration alternatives - most are not so slick and are independent from the ojs code blocks above\nSeems like it is best to devleop in observable and copy/paste code blocks in here.\nimport chunk from ‘Playground’\n\n\nCode\nimport { plotChunk } from \"@bletcher/Playground\"\nplotChunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niframe in html block\n\nruntime with javascript in html block\n\n\n\nCredit: Playground by Ben Letcher"
  },
  {
    "objectID": "getDataElectro.html#get-electrofishing-data-target",
    "href": "getDataElectro.html#get-electrofishing-data-target",
    "title": "4  Get electrofishing data",
    "section": "4.1 Get electrofishing data target",
    "text": "4.1 Get electrofishing data target\nShow variables in the dataframe\n\n\nCode\nlibrary(targets)\ncdWB_electro &lt;- tar_read(cdWB_electro_target)\nstr(cdWB_electro)\n\n\ntibble [91,103 × 88] (S3: tbl_df/tbl/data.frame)\n $ tag                                      : chr [1:91103] \"00088cbed0\" \"00088cbed3\" \"00088cbed4\" \"00088cbed4\" ...\n $ detectionDate                            : POSIXct[1:91103], format: \"2013-03-25 04:00:00\" \"2012-06-07 13:03:00\" ...\n $ sampleName                               : chr [1:91103] \"84\" \"81\" \"84\" \"85\" ...\n $ sampleNumber                             : num [1:91103] 73 70 73 74 70 71 73 79 80 71 ...\n $ river                                    : chr [1:91103] \"wb obear\" \"west brook\" \"west brook\" \"west brook\" ...\n $ section                                  : num [1:91103] 7 1 40 44 25 32 32 3 3 23 ...\n $ area                                     : chr [1:91103] \"trib\" \"inside\" \"inside\" \"inside\" ...\n $ observedLength                           : num [1:91103] 62 62 109 154 113 120 147 70 74 86 ...\n $ survey                                   : chr [1:91103] \"shock\" \"shock\" \"shock\" \"shock\" ...\n $ pass                                     : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ observedWeight                           : num [1:91103] 1.9 2.7 12.6 41.3 15.5 18.3 30.4 3.5 4.8 6.7 ...\n $ comments                                 : chr [1:91103] \"additional genetic sample\" NA NA NA ...\n $ cohort                                   : num [1:91103] 2012 2012 2012 2012 2011 ...\n $ species                                  : chr [1:91103] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated                            : Date[1:91103], format: NA NA ...\n $ sex                                      : chr [1:91103] NA NA NA NA ...\n $ year                                     : int [1:91103] 2013 2012 2013 2013 2012 2012 2013 2014 2014 2012 ...\n $ season                                   : num [1:91103] 1 2 1 2 2 3 1 3 4 3 ...\n $ proportionSampled                        : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ lagDetectionDate                         : POSIXct[1:91103], format: NA NA ...\n $ meanTemperature                          : num [1:91103] NaN NaN 10.7 NaN 16.5 ...\n $ meanFlow                                 : num [1:91103] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByRiver                          : num [1:91103] NaN NaN 0.598 NaN 0.135 ...\n $ meanFlowByArea_flowExt                   : num [1:91103] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByArea_ByRiver                   : num [1:91103] NaN NaN 0.598 NaN 0.135 ...\n $ sdFlow                                   : num [1:91103] NA NA 0.58 NA 0.181 ...\n $ sdFlowByRiver                            : num [1:91103] NA NA 0.4467 NA 0.0767 ...\n $ sdFlowByArea_flowExt                     : num [1:91103] NA NA 0.58 NA 0.181 ...\n $ sdFlowByArea_ByRiver                     : num [1:91103] NA NA 0.4467 NA 0.0767 ...\n $ propBelowLoFlowThreshByRiver             : num [1:91103] NaN NaN 0 NaN 0 ...\n $ propAboveHiFlowThreshByRiver             : num [1:91103] NaN NaN 0.182 NaN 0 ...\n $ propBelowLoFlowThreshByArea_flowExt      : num [1:91103] NaN NaN 0.0682 NaN 0.0901 ...\n $ propAboveHiFlowThreshByArea_flowExt      : num [1:91103] NaN NaN 0.148 NaN 0.018 ...\n $ riverOrdered                             : Ord.factor w/ 4 levels \"west brook\"&lt;\"wb jimmy\"&lt;..: 4 1 1 1 1 1 1 4 4 1 ...\n $ readerId                                 : logi [1:91103] NA NA NA NA NA NA ...\n $ sectionN                                 : num [1:91103] 7 1 40 44 25 32 32 3 3 23 ...\n $ aliveOrDead                              : chr [1:91103] \"alive\" \"alive\" \"alive\" \"alive\" ...\n $ instance                                 : logi [1:91103] NA NA NA NA NA NA ...\n $ quarter                                  : logi [1:91103] NA NA NA NA NA NA ...\n $ leftOrRight                              : logi [1:91103] NA NA NA NA NA NA ...\n $ habitat                                  : logi [1:91103] NA NA NA NA NA NA ...\n $ cover                                    : logi [1:91103] NA NA NA NA NA NA ...\n $ justification                            : logi [1:91103] NA NA NA NA NA NA ...\n $ sectionWQuarter                          : logi [1:91103] NA NA NA NA NA NA ...\n $ j                                        : logi [1:91103] NA NA NA NA NA NA ...\n $ date                                     : Date[1:91103], format: \"2013-03-25\" \"2012-06-07\" ...\n $ dummy                                    : num [1:91103] 1 1 1 1 1 1 1 1 1 1 ...\n $ sectionOriginal                          : chr [1:91103] \"7\" \"1\" \"40\" \"44\" ...\n $ inside                                   : logi [1:91103] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ yday                                     : int [1:91103] 84 159 88 176 160 271 87 260 335 270 ...\n $ ageInSamples                             : num [1:91103] 3 0 3 4 4 5 7 1 2 1 ...\n $ isYOY                                    : logi [1:91103] TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ lagSection                               : num [1:91103] NA NA 44 NA 32 32 NA 3 NA 24 ...\n $ distMoved                                : num [1:91103] NA NA -4 NA -7 0 NA 0 NA -1 ...\n $ lagObservedWeight                        : num [1:91103] NA NA 41.3 NA 18.3 30.4 NA 4.8 NA 12.7 ...\n $ lagObservedLength                        : num [1:91103] NA NA 154 NA 120 147 NA 74 NA 108 ...\n $ lagSampleNumber                          : num [1:91103] NA NA 74 NA 71 73 NA 80 NA 73 ...\n $ sampleNumberDiff                         : num [1:91103] NA NA 1 NA 1 2 NA 1 NA 2 ...\n $ grWeight                                 : num [1:91103] NA NA 0.0135 NA 0.0015 ...\n $ grLength                                 : num [1:91103] NA NA 0.5102 NA 0.0631 ...\n $ minSample                                : num [1:91103] 73 70 73 73 70 70 70 79 79 71 ...\n $ maxSample                                : num [1:91103] 73 70 74 74 73 73 73 80 80 74 ...\n $ minYear                                  : num [1:91103] 1997 1997 1997 1997 1997 ...\n $ moveDir                                  : num [1:91103] NA NA -1 NA -1 0 NA 0 NA -1 ...\n $ sampleInterval                           : num [1:91103] NA NA 88.2 NA 110.9 ...\n $ drainage                                 : chr [1:91103] \"west\" \"west\" \"west\" \"west\" ...\n $ quarter_length                           : num [1:91103] 5 5.2 5.03 4.83 4.75 ...\n $ river_meter                              : num [1:91103] 5252 4394 5208 5292 4903 ...\n $ confluence_river_meter                   : num [1:91103] 5114 0 0 0 0 ...\n $ riverMeter                               : num [1:91103] 5252 4394 5208 5292 4903 ...\n $ nPasses                                  : num [1:91103] 1 2 1 2 2 2 1 1 1 2 ...\n $ wGR_Slope                                : num [1:91103] -0.397 -0.535 -0.367 -0.535 -0.278 ...\n $ grWeightS                                : num [1:91103] NA NA 4.98e-08 NA 7.90e-09 ...\n $ lw_intercept                             : num [1:91103] -5.02 -5.02 -5.02 -5.02 -4.98 ...\n $ lw_slope                                 : num [1:91103] 3.02 3.02 3.02 3.02 3.01 ...\n $ cf                                       : num [1:91103] 0.0797 0.1133 0.0973 0.1131 0.1074 ...\n $ relCF                                    : num [1:91103] 0.0734 0.1043 0.0886 0.1022 0.102 ...\n $ nPerInd                                  : int [1:91103] 1 1 2 2 3 3 3 2 2 3 ...\n $ meanTemperatureScaledBySeason            : num [1:91103] NaN NaN 0.393 NaN 0.819 ...\n $ meanFlowScaledBySeason                   : num [1:91103] NaN NaN 0.526 NaN -0.736 ...\n $ meanFlowByRiverScaledBySeason            : num [1:91103] NaN NaN 0.881 NaN -0.225 ...\n $ meanFlowByArea_flowExtScaledBySeason     : num [1:91103] NaN NaN 0.822 NaN -0.608 ...\n $ meanFlowByArea_ByRiverScaledBySeason     : num [1:91103] NaN NaN 0.881 NaN -0.225 ...\n $ meanTemperatureScaledBySeasonRiver       : num [1:91103] NaN NaN 0.429 NaN 0.771 ...\n $ meanFlowScaledBySeasonRiver              : num [1:91103] NaN NaN 0.609 NaN -0.832 ...\n $ meanFlowByRiverScaledBySeasonRiver       : num [1:91103] NaN NaN 0.667 NaN -0.713 ...\n $ meanFlowByArea_flowExtScaledBySeasonRiver: num [1:91103] NaN NaN 0.609 NaN -0.832 ...\n $ meanFlowByArea_ByRiverScaledBySeasonRiver: num [1:91103] NaN NaN 0.667 NaN -0.713 ...\n\n\nCode\n# Save csv for downloading\n#write.csv(cdWB_electro, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_electro.csv\")\n# Save rData file for downloading\n# save(cdWB_electro, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_electro.RData\")"
  },
  {
    "objectID": "getDataElectro.html#counts-by-species",
    "href": "getDataElectro.html#counts-by-species",
    "title": "4  Get electrofishing data",
    "section": "4.2 Counts by species",
    "text": "4.2 Counts by species\nWhat are the counts by species for tagged fish?\n\n\nCode\n# # off tagged individuals/species\ntagged &lt;- cdWB_electro %&gt;%\n  group_by(tag, species)\n \ntagged %&gt;%\n  summarize(n = n()) %&gt;%\n  group_by(species) %&gt;%\n  summarize(n = n())\n\n\n# A tibble: 3 × 2\n  species     n\n  &lt;chr&gt;   &lt;int&gt;\n1 ats      7875\n2 bkt     14611\n3 bnt      7204\n\n\nWhat are the counts by species for untagged fish?\n\n\nCode\n#####\nuntagged &lt;- cdWB_electro %&gt;%\n  filter(is.na(tag))\n\nuntagged %&gt;%\n  group_by(species) %&gt;%\n  summarize(n = n())\n\n\n# A tibble: 3 × 2\n  species     n\n  &lt;chr&gt;   &lt;int&gt;\n1 ats      3419\n2 bkt     16013\n3 bnt      6732\n\n\nPlot length distributions of tagged and untagged fish\n\n\nCode\n######\ncdWB_electro %&gt;%\n  ggplot(aes(observedLength, color = is.na(tag))) +\n  geom_freqpoly()"
  },
  {
    "objectID": "getDataElectro.html#mortality-comments",
    "href": "getDataElectro.html#mortality-comments",
    "title": "4  Get electrofishing data",
    "section": "4.3 Mortality comments",
    "text": "4.3 Mortality comments\nShow comments related to mortalities\n\n\nCode\ncdWB_electro %&gt;%\n  group_by(comments) %&gt;%\n  summarize(n = n()) %&gt;%\n  arrange(desc(n)) %&gt;%\n  filter(str_detect(comments, \"mort\")) %&gt;%\n  print(n = 50)\n\n\n# A tibble: 96 × 2\n   comments                                                                    n\n   &lt;chr&gt;                                                                   &lt;int&gt;\n 1 shock scars/mort                                                          264\n 2 shock mort                                                                136\n 3 tagging mort                                                               52\n 4 shocking mortality                                                         42\n 5 shocking mortality; no picture                                             14\n 6 shocking mort                                                               9\n 7 mort                                                                        8\n 8 shock scars/mort/too small to tag                                           7\n 9 shocking mortality; kept for guts                                           7\n10 tag mort                                                                    5\n11 shock scars/mort/time is estimated based on effort                          3\n12 shocking mort; no video                                                     3\n13 tagging mortality                                                           3\n14 mortality due to lack of oxygen; kept for otoliths                          2\n15 mortality due to ms222 or warm weather                                      2\n16 mortality due to shocking                                                   2\n17 mortality due to shocking; no picture                                       2\n18 mortality due to tagging or warm weather                                    2\n19 ms222 mortality; kept for otoliths                                          2\n20 shocking mortality; kept                                                    2\n21 shocking mortality; kept for guts; no picture                               2\n22 shocking mortality; no tag; no picture                                      2\n23 smolt, shock scars/mort                                                     2\n24 tagging or ms222 mortality? kept for otoliths                               2\n25 walking mortality                                                           2\n26 additional genetic sample / tagging mort                                    1\n27 additional genetic sample/shock scars/mort                                  1\n28 braid sec 29&30/shock scars/mort                                            1\n29 bucket mortality; no picture                                                1\n30 dope mort-with wrong picture label (as 7-1)                                 1\n31 electrofishing mortality (tim did it)                                       1\n32 ethanol mortality courtesy of melissa                                       1\n33 fin clip but no tag and shock mort                                          1\n34 four was a stepped on mort                                                  1\n35 isolated pool/shock scars/mort                                              1\n36 mort (222, tag?)                                                            1\n37 mort (looks like a bnt)                                                     1\n38 mort found                                                                  1\n39 mort stepped on                                                             1\n40 mort; chunk out of side (bird)                                              1\n41 mort; no tag or scales                                                      1\n42 mortality ; found the fish dead; looks like bites on the head and scra…     1\n43 mortality ; no picture                                                      1\n44 mortality due to eating; tag found in bnt (249 mm, 173.4 g)                 1\n45 mortality due to lack of oxygen (stuck on side of bucket)                   1\n46 mortality due to lavage                                                     1\n47 mortality; cause unknown                                                    1\n48 mortality; stepped on                                                       1\n49 mortality; stepped on; no picture                                           1\n50 mortality; tag/ms222?                                                       1\n# ℹ 46 more rows"
  },
  {
    "objectID": "getDataElectro.html#length-weight-graph",
    "href": "getDataElectro.html#length-weight-graph",
    "title": "4  Get electrofishing data",
    "section": "4.4 Length-weight graph",
    "text": "4.4 Length-weight graph\n\n\nCode\nggplot(cdWB_electro, aes(observedLength, observedWeight, color = species)) +\n  geom_point(size = 0.75, alpha = 0.1) +\n  scale_x_log10(\"Length (mm)\") +\n  scale_y_log10(\"Mass (mg)\") +\n#  theme_publication() +\n  facet_wrap(~ species)\n\n\n\n\n\nFigure 4.1: Length - mass graph"
  },
  {
    "objectID": "getDataElectro.html#cumulative-mass-curves",
    "href": "getDataElectro.html#cumulative-mass-curves",
    "title": "4  Get electrofishing data",
    "section": "4.5 Cumulative mass curves",
    "text": "4.5 Cumulative mass curves\n\n\nCode\nggplot(cdWB_electro |&gt; filter(!is.na(observedWeight)), aes(observedWeight, color = species)) +\n  stat_ecdf(pad = TRUE) +\n  lims(x = c(0,200)) +\n  geom_hline(yintercept = c(0.9, 0.95)) +\n  facet_wrap(~river)\n\n\n\n\n\nFigure 4.2: Cumulative mass curve"
  },
  {
    "objectID": "getDataElectro.html#length-weight-regression",
    "href": "getDataElectro.html#length-weight-regression",
    "title": "4  Get electrofishing data",
    "section": "4.6 Length-weight regression",
    "text": "4.6 Length-weight regression\nSimple linear regression statistics\n\n\nCode\nlwReg &lt;- cdWB_electro %&gt;%\n  nest_by(species) %&gt;%\n  mutate(reg = list(lm(log(observedWeight) ~ log(observedLength), data = data)))\n\nlwReg %&gt;% summarise(broom::tidy(reg))  \n\n\n# A tibble: 6 × 6\n# Groups:   species [3]\n  species term                estimate std.error statistic p.value\n  &lt;chr&gt;   &lt;chr&gt;                  &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 ats     (Intercept)           -11.4    0.00942    -1210.       0\n2 ats     log(observedLength)     3.00   0.00208     1442.       0\n3 bkt     (Intercept)           -11.5    0.00621    -1859.       0\n4 bkt     log(observedLength)     3.02   0.00140     2155.       0\n5 bnt     (Intercept)           -11.5    0.00686    -1670.       0\n6 bnt     log(observedLength)     3.01   0.00149     2023.       0\n\n\nCode\nlwReg %&gt;% summarise(broom::glance(reg))\n\n\n# A tibble: 3 × 13\n# Groups:   species [3]\n  species r.squared adj.r.squared  sigma statistic p.value    df logLik     AIC\n  &lt;chr&gt;       &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;\n1 ats         0.989         0.989 0.0945  2080611.       0     1 22663. -45319.\n2 bkt         0.991         0.991 0.112   4643341.       0     1 32555. -65105.\n3 bnt         0.996         0.996 0.0858  4092957.       0     1 18345. -36683.\n# ℹ 4 more variables: BIC &lt;dbl&gt;, deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "getDataElectro.html#electrofishing-data-metadata",
    "href": "getDataElectro.html#electrofishing-data-metadata",
    "title": "4  Get electrofishing data",
    "section": "4.7 Electrofishing data metadata",
    "text": "4.7 Electrofishing data metadata\n\n4.7.1 adapted from https://github.com/Conte-Ecology/westBrookData/blob/master/getWBData/vignettes/westBrookDataIntro.Rmd\n\n4.7.1.1 Column explanations\ntag PIT tag number, unique identifier, character\ncohort year the fish was born, assigned based on size at initial capture and size distributions of fish of known age\ndetectionDate mostly self explanatory, but filled in for unobserved fish as the median capture date for all observed fish.\nsampleName An ordered identifier for sampling mostly for recognition by people who did the sampling. This is not very clean because early in the study samples were not taken at strictly seasonal intervals. sampleNumber is probably more useful and intuitive.\nsampleNumber A tidier identifier for samples that strictly increases by one for each season (4/yr)\nriver River the fish was observed in. NA if the fish was not observed.\nwest brook The mainstem\nwb jimmy Larger tributary that fish can move back and forth into from WB section 31 (Open Large from Letcher et al 2015)\nwb mitchell Smaller tributary that fish can move back and forth into from WB section 35 (Open Small from Letcher et al 2015)\nwb obear Smaller tributary that has a waterfall at its mouth, so fish can only move downstream into WB section 20 (Isolated Small from Letcher et al 2015)\nsection Identifier for the 20m section that the fish was captured in. This is ordered from downstream to upstream starting at 1 within each river.\narea inside = section 1:47 in the west brook, trib = tributary (not west brook), below = sections below inside sections, above = sections above the inside sections\nobservedLength in mm\nsurvey shock = electroshocking survey\npass electrofishing pass. 1 or 2 in the west brook (inside), 1 in tribs\nobservedWeight in g wet weight\nspecies\nbkt = brook trout (native, self-sustained population)\nbnt = brown trout (non-native, self-sustained population)\nats = atlantic salmon (stocked through 2005, no reproduction)\ndateEmigrated date of emigration from inside/tribs if observed to emigrate. Coded as emigrated if last observation was on PIT antenna or captured below or above\nsex NA = unknown, f = female, m = male, p = precocious male (salmon only)\nenc\nLogical, was the fish observed? (1 = yes, 0 = no)\nageInSamples number of seasons since summer of the year of birth (1st summer = 0)\nsampleIndex sampleNumber rescaled to start at 1 and end at length(unique(sampleNumber)) for ease of looping in JAGS\ntagIndex ordered, unique individual identifier 1:N\nyear of sample\nseason 1 = spring, 2 = summer, 3 = fall, 4 = winter\nproportionSampled Occasionally the sample was not complete (e.g., skipped west brook but did the tributaries). This is the proportion of sections in the river of capture that were sampled.\nlagDetectionDate detection date lagged back one observation\nmeanTemperature mean temperature between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nmeanFlow mean flow between observation dates. If individual was not observed, median observation date for the sampling occasion was used.\nknownZ z is alive state, so this is ‘1’ between first and last capture, and NA otherwise, unless the fish was known to be dead (e.g. tagging mortality or observed dead) in which case the value is set to ‘2’. There is also an option in the addKnownZ() function to useAntenna. This is useAntenna = FALSE by default, but could be set to TRUE to set knownZ to 1 up to the last antenna observation."
  },
  {
    "objectID": "getDataCMR.html#get-electrofishing-data-target-wb",
    "href": "getDataCMR.html#get-electrofishing-data-target-wb",
    "title": "5  Create Capture-Recapture data",
    "section": "5.1 Get electrofishing data target WB",
    "text": "5.1 Get electrofishing data target WB\nWest brook and 3 tributaries\n\n\nCode\ncdWB_CMR0_WB &lt;- tar_read(eh_WB_2002_2014_target)\nstr(cdWB_CMR0_WB)\n\n\nList of 27\n $ eh                                 : num [1:19981, 1:12] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flow                               : num [1:19981, 1:12] -0.707 -0.679 -0.556 -0.767 -0.531 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flowByRiver                        : num [1:19981, 1:12] -0.949 0.323 0.615 -0.951 0.652 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flowByArea_flowExt                 : num [1:19981, 1:12] -0.8426 -0.1401 0.0459 -0.8543 0.0821 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ flowByArea_ByRiver                 : num [1:19981, 1:12] -0.92 0.337 0.628 -0.94 0.665 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ propBelowLoFlowThreshByRiver       : num [1:19981, 1:12] 0.118 0 0 0 0 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ propAboveHiFlowThreshByRiver       : num [1:19981, 1:12] 0.0263 0 0.0294 0 0.0303 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ propBelowLoFlowThreshByArea_flowExt: num [1:19981, 1:12] 0.1974 0.0519 0.0882 0.0723 0.0758 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ propAboveHiFlowThreshByArea_flowExt: num [1:19981, 1:12] 0.0132 0.026 0.0147 0.0241 0.0152 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ temperature                        : num [1:19981, 1:12] 0.0892 -0.324 0.3839 -0.3903 0.298 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ river                              : chr [1:19981, 1:12] \"wb obear\" \"west brook\" \"west brook\" \"wb obear\" ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ section                            : num [1:19981, 1:12] 82 23 30 87 42 20 84 90 27 51 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ riverN                             : num [1:19981, 1:12] 4 1 1 4 1 1 4 4 1 2 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ isYOY                              : num [1:19981, 1:12] 1 1 1 1 1 1 1 1 1 1 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ length                             : num [1:19981, 1:12] 70 86 89 61 60 64 70 62 87 73 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ weight                             : num [1:19981, 1:12] 3.5 6.7 8.3 2.4 2.4 2.8 4.6 2.3 7.5 4.2 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ sampleInterval                     : num [1:19981, 1:12] 75 76.6 67.6 82 65.6 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ season                             : num [1:19981, 1:12] 3 3 3 3 3 3 3 3 3 3 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ year                               : num [1:19981, 1:12] 2014 2012 2014 2012 2014 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:12] \"ais_1\" \"ais_2\" \"ais_3\" \"ais_4\" ...\n $ tags                               : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ tag: chr [1:19981] \"00088cbed7\" \"00088cbed8\" \"00088cbedb\" \"00088cbedd\" ...\n $ cohorts                            : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ cohort: num [1:19981] 2014 2012 2014 2012 2014 ...\n $ seasons                            : tibble [79,133 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ season: num [1:79133] 3 4 1 2 3 4 1 2 3 4 ...\n $ species                            : tibble [19,981 × 1] (S3: tbl_df/tbl/data.frame)\n  ..$ species: chr [1:19981] \"bkt\" \"bnt\" \"bkt\" \"bkt\" ...\n $ first                              : int [1:19981] 1 1 1 1 1 1 1 1 1 1 ...\n $ last                               : num [1:19981] 4 12 4 12 4 12 12 4 12 4 ...\n $ meanWeight_AIS                     : tibble [12 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ ageInSamples: num [1:12] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ meanWeight  : num [1:12] 4.17 4.86 5.79 16.65 21.06 ...\n $ data                               : tibble [199,614 × 64] (S3: tbl_df/tbl/data.frame)\n  ..$ cohort                             : num [1:199614] 2012 2012 2012 2012 2012 ...\n  ..$ tag                                : chr [1:199614] \"00088cbed0\" \"00088cbed0\" \"00088cbed0\" \"00088cbed0\" ...\n  ..$ detectionDate                      : POSIXct[1:199614], format: \"2013-03-25 04:00:00\" \"2013-06-05 04:00:00\" ...\n  ..$ sampleName                         : chr [1:199614] \"84\" \"85\" \"86\" \"87\" ...\n  ..$ sampleNumber                       : num [1:199614] 73 74 75 76 77 78 79 80 81 82 ...\n  ..$ river                              : chr [1:199614] \"wb obear\" \"wb obear\" \"wb obear\" \"wb obear\" ...\n  ..$ section                            : chr [1:199614] \"7\" NA NA NA ...\n  ..$ area                               : chr [1:199614] \"trib\" NA NA NA ...\n  ..$ observedLength                     : num [1:199614] 62 NA NA NA NA NA NA NA NA NA ...\n  ..$ survey                             : chr [1:199614] \"shock\" NA NA NA ...\n  ..$ pass                               : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ observedWeight                     : num [1:199614] 1.9 NA NA NA NA NA NA NA NA NA ...\n  ..$ species                            : chr [1:199614] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n  ..$ dateEmigrated                      : Date[1:199614], format: NA NA ...\n  ..$ sex                                : chr [1:199614] NA NA NA NA ...\n  ..$ enc                                : num [1:199614] 1 0 0 0 0 0 0 0 0 0 ...\n  ..$ ageInSamples                       : num [1:199614] 3 4 5 6 7 8 9 10 11 12 ...\n  ..$ sampleIndex                        : num [1:199614] 63 64 65 66 67 68 69 70 71 72 ...\n  ..$ tagIndex                           : num [1:199614] 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ year                               : num [1:199614] 2013 2013 2013 2013 2014 ...\n  ..$ season                             : num [1:199614] 1 2 3 4 1 2 3 4 1 2 ...\n  ..$ proportionSampled                  : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ lagDetectionDate                   : POSIXct[1:199614], format: \"2013-06-05 04:00:00\" \"2013-09-18 04:00:00\" ...\n  ..$ meanTemperature                    : num [1:199614] 8.62 16.51 9.44 0.94 10.52 ...\n  ..$ meanFlow                           : num [1:199614] 0.38874 0.30331 0.00882 0.31319 0.58363 ...\n  ..$ meanFlowByRiver                    : num [1:199614] 0.0217 0.1632 0.0432 0.0732 0.2446 ...\n  ..$ meanFlowByArea_flowExt             : num [1:199614] 0.02314 0.09253 0.00269 0.09554 0.17804 ...\n  ..$ meanFlowByArea_ByRiver             : num [1:199614] 0.0276 0.1611 0.0433 0.0697 0.2444 ...\n  ..$ sdFlow                             : num [1:199614] 0.2838 0.6058 0.0396 0.5283 0.5125 ...\n  ..$ sdFlowByRiver                      : num [1:199614] 0.0124 0.3139 0.064 0.1874 0.4318 ...\n  ..$ sdFlowByArea_flowExt               : num [1:199614] 0.0169 0.3282 0.0202 0.2942 0.3484 ...\n  ..$ sdFlowByArea_ByRiver               : num [1:199614] 0.0133 0.3143 0.064 0.1869 0.4316 ...\n  ..$ propBelowLoFlowThreshByRiver       : num [1:199614] 0 0 0.274 0.318 0 ...\n  ..$ propAboveHiFlowThreshByRiver       : num [1:199614] 0.0274 0.2854 0 0.0383 0.2214 ...\n  ..$ propBelowLoFlowThreshByArea_flowExt: num [1:199614] 0.0411 0.0142 0.4286 0.3248 0 ...\n  ..$ propAboveHiFlowThreshByArea_flowExt: num [1:199614] 0.0274 0.184 0 0.0803 0.1536 ...\n  ..$ knownZ                             : num [1:199614] 1 NA NA NA NA NA NA NA NA NA ...\n  ..$ firstObserved                      : num [1:199614] 73 73 73 73 73 73 73 73 73 73 ...\n  ..$ lastObserved                       : num [1:199614] 73 73 73 73 73 73 73 73 73 73 ...\n  ..$ isFirstObserved                    : logi [1:199614] TRUE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ isLastObserved                     : logi [1:199614] TRUE FALSE FALSE FALSE FALSE FALSE ...\n  ..$ riverTagged                        : chr [1:199614] \"wb obear\" \"wb obear\" \"wb obear\" \"wb obear\" ...\n  ..$ meanMeanFlow                       : num [1:199614] 0.409 0.137 0.307 0.464 0.409 ...\n  ..$ sdMeanFlow                         : num [1:199614] 0.155 0.126 0.246 0.113 0.155 ...\n  ..$ meanMeanFlowByRiver                : num [1:199614] 0.1368 0.0612 0.0891 0.1094 0.1368 ...\n  ..$ sdMeanFlowByRiver                  : num [1:199614] 0.0837 0.0468 0.0819 0.0639 0.0837 ...\n  ..$ meanMeanFlowByArea_flowExt         : num [1:199614] 0.108 0.0349 0.0706 0.1152 0.108 ...\n  ..$ sdMeanFlowByArea_flowExt           : num [1:199614] 0.0593 0.0372 0.0743 0.0583 0.0593 ...\n  ..$ meanMeanFlowByArea_ByRiver         : num [1:199614] 0.1376 0.0612 0.088 0.1094 0.1376 ...\n  ..$ sdMeanFlowByArea_ByRiver           : num [1:199614] 0.0837 0.0456 0.0787 0.0587 0.0837 ...\n  ..$ meanMeanTemperature                : num [1:199614] 10.39 16.23 8.42 1.65 10.39 ...\n  ..$ sdMeanTemperature                  : num [1:199614] 1.202 0.711 1.455 0.616 1.202 ...\n  ..$ meanFlowScaled                     : num [1:199614] -0.129 1.313 -1.215 -1.33 1.124 ...\n  ..$ meanFlowByRiverScaled              : num [1:199614] -1.375 2.182 -0.56 -0.566 1.287 ...\n  ..$ meanFlowByArea_flowExtScaled       : num [1:199614] -1.432 1.548 -0.913 -0.338 1.181 ...\n  ..$ meanFlowByArea_ByRiverScaled       : num [1:199614] -1.315 2.19 -0.567 -0.677 1.276 ...\n  ..$ meanTemperatureScaled              : num [1:199614] -1.472 0.402 0.7 -1.149 0.105 ...\n  ..$ isYOY                              : num [1:199614] 1 2 2 2 2 2 2 2 2 2 ...\n  ..$ riverN                             : num [1:199614] 4 4 4 4 4 4 4 4 4 4 ...\n  ..$ riverOrdered                       : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 4 4 4 4 4 4 4 4 4 4 ...\n  ..$ sampleInterval                     : num [1:199614] 72 105 62 136 69 ...\n  ..$ indexByCohort                      : int [1:199614] 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ sectionTMP                         : chr [1:199614] \"7\" NA NA NA ...\n  ..$ sectionRiverN                      : num [1:199614] 86 NA NA NA NA NA NA NA NA NA ...\n\n\n\n\nCode\n# for(i in 1:length(cdWB_CMR0_WB)){\n#   write.csv(cdWB_CMR0_WB[i], paste0(\"./data/outForXiaowei/april_18_2023/\", names(cdWB_CMR0_WB)[i], \".csv\"))\n# }\n\n\n\n\nCode\ncdWB_CMR0_WB$data %&gt;% \n  group_by(riverOrdered, cohort) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.1: Count of CMR data (including 0’s) by river\n\n\ncohort\nWest Brook\nWB Jimmy\nWB Mitchell\nWB OBear\n\n\n\n\n2002\n13023\n1440\n626\n2139\n\n\n2003\n24489\n2396\n444\n2747\n\n\n2004\n24963\n3637\n2707\n1666\n\n\n2005\n5471\n943\n1003\n723\n\n\n2006\n6797\n1973\n533\n1322\n\n\n2007\n3958\n1530\n1068\n968\n\n\n2008\n8668\n1424\n131\n886\n\n\n2009\n18696\n3497\n1889\n5081\n\n\n2010\n7693\n689\n281\n453\n\n\n2011\n2202\n1792\n395\n394\n\n\n2012\n16663\n2377\n1721\n5305\n\n\n2013\n4999\n1246\n304\n729\n\n\n2014\n3853\n528\n427\n725\n\n\n\n\n\n\n\n\n\n\nCode\ncdWB_CMR0_WB$data %&gt;% \n  filter(enc == 1) %&gt;% \n  group_by(riverOrdered, cohort) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.2: Count of CMR data (encounters only) by river\n\n\ncohort\nWest Brook\nWB Jimmy\nWB Mitchell\nWB OBear\n\n\n\n\n2002\n2974\n379\n209\n564\n\n\n2003\n4932\n491\n142\n709\n\n\n2004\n5140\n734\n638\n426\n\n\n2005\n939\n216\n204\n163\n\n\n2006\n1350\n379\n77\n278\n\n\n2007\n882\n318\n273\n228\n\n\n2008\n1606\n273\n33\n193\n\n\n2009\n3375\n569\n403\n1075\n\n\n2010\n1294\n164\n73\n99\n\n\n2011\n470\n426\n71\n104\n\n\n2012\n2731\n490\n282\n1196\n\n\n2013\n1184\n433\n99\n216\n\n\n2014\n1431\n248\n236\n395"
  },
  {
    "objectID": "getDataCMR.html#get-electrofishing-data-target-ob",
    "href": "getDataCMR.html#get-electrofishing-data-target-ob",
    "title": "5  Create Capture-Recapture data",
    "section": "5.2 Get electrofishing data target OB",
    "text": "5.2 Get electrofishing data target OB\nO’Bear also known as Isolated Large\n\n\nCode\ncdWB_CMR0_OB &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\nCode\ncdWB_CMR0_OB$data %&gt;% \n  group_by(riverOrdered, cohort) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.3: Count of CMR data (including 0’s) by river\n\n\ncohort\nWest Brook\nWB Jimmy\nWB OBear\n\n\n\n\n2002\n11\nNA\n2139\n\n\n2003\n23\nNA\n2747\n\n\n2004\n61\n9\n1666\n\n\n2006\n34\nNA\n1322\n\n\n2007\n35\nNA\n968\n\n\n2009\n170\n8\n5081\n\n\n2010\n10\n8\n453\n\n\n2011\n17\nNA\n394\n\n\n2012\n116\n8\n5305\n\n\n2013\n12\nNA\n729\n\n\n2014\n2\nNA\n725\n\n\n2005\nNA\nNA\n723\n\n\n2008\nNA\nNA\n886\n\n\n\n\n\n\n\n\n\n\nCode\ncdWB_CMR0_OB$data %&gt;% \n  filter(enc == 1) %&gt;% \n  group_by(riverOrdered, cohort) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\nTable 5.4: Count of CMR data (encounters only) by river\n\n\ncohort\nWest Brook\nWB Jimmy\nWB OBear\n\n\n\n\n2002\n2\nNA\n564\n\n\n2003\n5\nNA\n709\n\n\n2004\n15\n2\n426\n\n\n2006\n7\nNA\n278\n\n\n2007\n8\nNA\n228\n\n\n2009\n27\n1\n1075\n\n\n2010\n1\n1\n99\n\n\n2011\n2\nNA\n104\n\n\n2012\n13\n1\n1196\n\n\n2013\n4\nNA\n216\n\n\n2014\n1\nNA\n395\n\n\n2005\nNA\nNA\n163\n\n\n2008\nNA\nNA\n193"
  },
  {
    "objectID": "getDataWanding.html#get-wanding-data-targets",
    "href": "getDataWanding.html#get-wanding-data-targets",
    "title": "6  Get wanding data",
    "section": "6.1 Get wanding data targets",
    "text": "6.1 Get wanding data targets\n\n\nCode\nlibrary(targets)\n\ncdWB_wanding &lt;- tar_read(cdWB_wanding_target)\nstr(cdWB_wanding)\n\n\ntibble [14,880 × 31] (S3: tbl_df/tbl/data.frame)\n $ leftOrRight          : chr [1:14880] \"l\" \"m\" NA \"r\" ...\n $ river                : chr [1:14880] \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" \"wb jimmy\" ...\n $ survey               : chr [1:14880] \"portableAntenna\" \"portableAntenna\" \"portableAntenna\" \"portableAntenna\" ...\n $ justification        : chr [1:14880] NA NA NA NA ...\n $ area                 : chr [1:14880] \"trib\" \"trib\" \"trib\" \"trib\" ...\n $ comment              : chr [1:14880] NA NA NA NA ...\n $ section              : num [1:14880] 13 14 14 2 6 8 8 11 12 10 ...\n $ sampleName           : chr [1:14880] \"92710.00\" \"101810.00\" \"102510.00\" \"12610.00\" ...\n $ sampleType           : chr [1:14880] \"portable 2001-tribs\" \"portable 2001-tribs\" \"portable 2001-tribs\" \"portable 2001-tribs\" ...\n $ tag                  : chr [1:14880] \"00088cf41b\" \"00088cf41b\" \"00088cf41b\" \"00088cf435\" ...\n $ detectionDate        : POSIXct[1:14880], format: \"2010-09-27 15:08:45\" \"2010-10-18 18:16:22\" ...\n $ drainage             : chr [1:14880] \"west\" \"west\" \"west\" \"west\" ...\n $ aliveOrDead          : chr [1:14880] \"alive\" \"alive\" NA \"alive\" ...\n $ instance             : num [1:14880] 1 2 3 1 1 1 2 1 1 1 ...\n $ pass                 : num [1:14880] NA NA NA NA NA NA NA NA NA NA ...\n $ quarter              : num [1:14880] 2 1 1 4 2 4 4 3 4 2 ...\n $ cohort               : num [1:14880] 2010 2010 2010 2010 2009 ...\n $ species              : chr [1:14880] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated        : Date[1:14880], format: NA NA ...\n $ sex                  : chr [1:14880] NA NA NA NA ...\n $ riverOrdered         : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 2 2 2 2 2 2 2 2 2 3 ...\n $ sectionN             : num [1:14880] 13 14 14 2 6 8 8 11 12 10 ...\n $ year                 : num [1:14880] 2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ...\n $ j                    : num [1:14880] 270 291 298 340 333 305 313 270 270 236 ...\n $ sectionWQuarter      : num [1:14880] 13.25 14 14 2.75 6.25 ...\n $ sectionWQuarterLagged: num [1:14880] 14 14 NA NA NA ...\n $ detectionDateLagged  : POSIXct[1:14880], format: \"2010-10-18 18:16:22\" \"2010-10-25 15:40:24\" ...\n $ moveDist             : num [1:14880] -15 0 NA NA NA 0 NA NA NA 0 ...\n $ moveTime             : num [1:14880] 3.019 0.985 NA NA NA ...\n $ moveRate             : num [1:14880] -4.97 0 NA NA NA ...\n $ month                : num [1:14880] 9 10 10 12 11 11 11 9 9 8 ...\n\n\nCode\ncdWB_wandingTribs3 &lt;- tar_read(cdWB_wandingTribs3_target)\n\ncdWB_wandingWB2 &lt;- tar_read(cdWB_wandingWB2_target)\ncdWB_wandingWB3 &lt;- tar_read(cdWB_wandingWB3_target)\n\n# Save csv for downloading\n#write.csv(cdWB_wanding, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_wanding.csv\")\n# Save rData file for downloading\n# save(cdWB_wanding, file = \"C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/data/outForDownload/cdWB_wanding.RData\")\n\n\n\n\nCode\ncdWB_wanding %&gt;% \n  group_by(riverOrdered, cohort) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  arrange(cohort) %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\nTable 6.1: Count of wanding data by river\n\n\ncohort\nWest Brook\nWB Jimmy\nWB Mitchell\nWB OBear\n\n\n\n\n1996\n4\nNA\nNA\nNA\n\n\n1997\n9\nNA\nNA\nNA\n\n\n1998\n33\n41\n4\nNA\n\n\n1999\n141\n44\n2\n2\n\n\n2000\n352\n211\n116\n66\n\n\n2001\n1966\n1022\n414\n639\n\n\n2002\n2169\n615\n467\n894\n\n\n2003\n80\n650\n277\n1004\n\n\n2004\n195\n118\n298\n3\n\n\n2005\n61\n51\n90\nNA\n\n\n2006\nNA\n95\n126\nNA\n\n\n2007\nNA\n125\n256\nNA\n\n\n2008\nNA\n186\n41\nNA\n\n\n2009\nNA\n1089\n840\nNA\n\n\n2010\nNA\n50\n28\nNA\n\n\nNA\n6\nNA\nNA\nNA\n\n\n\n\n\n\n\n\n\nWest BrookJimmy (OL)Mitchell (OS)O’Bear (IS)\n\n\n\n\nCode\ncdWB_wanding %&gt;% \n  filter(riverOrdered == \"West Brook\") |&gt; \n  group_by(riverOrdered, cohort, date(detectionDate)) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  arrange(cohort) %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\n\ncohort\ndate(detectionDate)\nWest Brook\n\n\n\n\n1996\n2002-12-09\n1\n\n\n1996\n2003-01-09\n1\n\n\n1996\n2003-02-25\n1\n\n\n1996\n2003-03-13\n1\n\n\n1997\n2002-12-06\n2\n\n\n1997\n2002-12-09\n1\n\n\n1997\n2002-12-17\n2\n\n\n1997\n2002-12-18\n1\n\n\n1997\n2003-01-08\n1\n\n\n1997\n2003-02-25\n1\n\n\n1997\n2003-03-12\n1\n\n\n1998\n2002-12-06\n5\n\n\n1998\n2002-12-09\n2\n\n\n1998\n2002-12-17\n6\n\n\n1998\n2002-12-18\n4\n\n\n1998\n2002-12-19\n4\n\n\n1998\n2003-01-08\n3\n\n\n1998\n2003-01-09\n4\n\n\n1998\n2003-02-25\n2\n\n\n1998\n2003-03-12\n1\n\n\n1998\n2003-03-13\n1\n\n\n1998\n2005-12-13\n1\n\n\n1999\n2002-11-03\n1\n\n\n1999\n2002-11-04\n2\n\n\n1999\n2002-11-05\n1\n\n\n1999\n2002-11-06\n2\n\n\n1999\n2002-11-07\n1\n\n\n1999\n2002-11-13\n1\n\n\n1999\n2002-12-06\n8\n\n\n1999\n2002-12-09\n13\n\n\n1999\n2002-12-17\n7\n\n\n1999\n2002-12-18\n24\n\n\n1999\n2002-12-19\n10\n\n\n1999\n2003-01-08\n11\n\n\n1999\n2003-01-09\n11\n\n\n1999\n2003-02-25\n13\n\n\n1999\n2003-02-26\n1\n\n\n1999\n2003-03-12\n9\n\n\n1999\n2003-03-13\n4\n\n\n1999\n2003-04-06\n1\n\n\n1999\n2003-04-07\n1\n\n\n1999\n2003-04-08\n1\n\n\n1999\n2003-04-09\n2\n\n\n1999\n2003-05-14\n2\n\n\n1999\n2003-05-15\n1\n\n\n1999\n2003-05-17\n2\n\n\n1999\n2003-05-18\n2\n\n\n1999\n2003-06-17\n1\n\n\n1999\n2003-06-18\n2\n\n\n1999\n2003-06-19\n1\n\n\n1999\n2005-12-12\n4\n\n\n1999\n2005-12-13\n2\n\n\n2000\n2002-12-06\n24\n\n\n2000\n2002-12-09\n42\n\n\n2000\n2002-12-10\n16\n\n\n2000\n2002-12-17\n19\n\n\n2000\n2002-12-18\n47\n\n\n2000\n2002-12-19\n44\n\n\n2000\n2003-01-08\n38\n\n\n2000\n2003-01-09\n40\n\n\n2000\n2003-02-25\n36\n\n\n2000\n2003-02-26\n4\n\n\n2000\n2003-03-12\n20\n\n\n2000\n2003-03-13\n13\n\n\n2000\n2005-12-12\n8\n\n\n2000\n2005-12-13\n1\n\n\n2001\n2002-08-20\n50\n\n\n2001\n2002-08-21\n37\n\n\n2001\n2002-08-22\n40\n\n\n2001\n2002-08-23\n26\n\n\n2001\n2002-08-24\n38\n\n\n2001\n2002-09-25\n23\n\n\n2001\n2002-09-26\n22\n\n\n2001\n2002-09-30\n17\n\n\n2001\n2002-10-01\n3\n\n\n2001\n2002-10-07\n45\n\n\n2001\n2002-10-08\n13\n\n\n2001\n2002-11-02\n22\n\n\n2001\n2002-11-03\n37\n\n\n2001\n2002-11-04\n29\n\n\n2001\n2002-11-05\n63\n\n\n2001\n2002-11-06\n25\n\n\n2001\n2002-11-07\n43\n\n\n2001\n2002-11-13\n25\n\n\n2001\n2002-12-06\n101\n\n\n2001\n2002-12-08\n18\n\n\n2001\n2002-12-09\n135\n\n\n2001\n2002-12-10\n30\n\n\n2001\n2002-12-17\n65\n\n\n2001\n2002-12-18\n147\n\n\n2001\n2002-12-19\n118\n\n\n2001\n2003-01-08\n96\n\n\n2001\n2003-01-09\n119\n\n\n2001\n2003-02-25\n86\n\n\n2001\n2003-02-26\n13\n\n\n2001\n2003-03-12\n52\n\n\n2001\n2003-03-13\n37\n\n\n2001\n2003-04-04\n10\n\n\n2001\n2003-04-06\n22\n\n\n2001\n2003-04-07\n39\n\n\n2001\n2003-04-08\n28\n\n\n2001\n2003-04-09\n30\n\n\n2001\n2003-05-14\n31\n\n\n2001\n2003-05-15\n27\n\n\n2001\n2003-05-16\n36\n\n\n2001\n2003-05-17\n34\n\n\n2001\n2003-05-18\n38\n\n\n2001\n2003-06-16\n8\n\n\n2001\n2003-06-17\n27\n\n\n2001\n2003-06-18\n25\n\n\n2001\n2003-06-19\n12\n\n\n2001\n2003-06-20\n6\n\n\n2001\n2005-12-12\n16\n\n\n2001\n2005-12-13\n2\n\n\n2002\n2002-08-20\n1\n\n\n2002\n2002-08-21\n1\n\n\n2002\n2002-08-22\n2\n\n\n2002\n2002-08-24\n1\n\n\n2002\n2002-09-30\n1\n\n\n2002\n2002-10-01\n1\n\n\n2002\n2002-10-07\n50\n\n\n2002\n2002-10-08\n24\n\n\n2002\n2002-11-02\n22\n\n\n2002\n2002-11-03\n62\n\n\n2002\n2002-11-04\n47\n\n\n2002\n2002-11-05\n79\n\n\n2002\n2002-11-06\n53\n\n\n2002\n2002-11-07\n64\n\n\n2002\n2002-11-13\n24\n\n\n2002\n2002-12-06\n116\n\n\n2002\n2002-12-08\n17\n\n\n2002\n2002-12-09\n129\n\n\n2002\n2002-12-10\n41\n\n\n2002\n2002-12-17\n57\n\n\n2002\n2002-12-18\n145\n\n\n2002\n2002-12-19\n103\n\n\n2002\n2003-01-08\n124\n\n\n2002\n2003-01-09\n92\n\n\n2002\n2003-01-23\n3\n\n\n2002\n2003-02-25\n107\n\n\n2002\n2003-02-26\n27\n\n\n2002\n2003-03-12\n82\n\n\n2002\n2003-03-13\n42\n\n\n2002\n2003-04-04\n7\n\n\n2002\n2003-04-06\n29\n\n\n2002\n2003-04-07\n47\n\n\n2002\n2003-04-08\n36\n\n\n2002\n2003-04-09\n32\n\n\n2002\n2003-05-14\n55\n\n\n2002\n2003-05-15\n69\n\n\n2002\n2003-05-16\n63\n\n\n2002\n2003-05-17\n63\n\n\n2002\n2003-05-18\n60\n\n\n2002\n2003-06-16\n23\n\n\n2002\n2003-06-17\n54\n\n\n2002\n2003-06-18\n53\n\n\n2002\n2003-06-19\n25\n\n\n2002\n2003-06-20\n14\n\n\n2002\n2005-12-12\n16\n\n\n2002\n2005-12-13\n6\n\n\n2003\n2005-12-12\n58\n\n\n2003\n2005-12-13\n22\n\n\n2004\n2005-12-12\n143\n\n\n2004\n2005-12-13\n52\n\n\n2005\n2005-12-12\n49\n\n\n2005\n2005-12-13\n12\n\n\nNA\n2002-12-10\n1\n\n\nNA\n2002-12-18\n1\n\n\nNA\n2003-01-09\n2\n\n\nNA\n2003-02-25\n1\n\n\nNA\n2003-03-12\n1\n\n\n\n\n\n\n\n\n\n\n\nCode\ncdWB_wanding %&gt;% \n  filter(riverOrdered == \"WB Jimmy\") |&gt; \n  group_by(riverOrdered, cohort, date(detectionDate)) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  arrange(cohort) %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\n\ncohort\ndate(detectionDate)\nWB Jimmy\n\n\n\n\n1998\n2002-08-08\n1\n\n\n1998\n2002-09-05\n1\n\n\n1998\n2002-10-08\n1\n\n\n1998\n2002-10-29\n2\n\n\n1998\n2002-11-02\n2\n\n\n1998\n2002-11-03\n2\n\n\n1998\n2002-11-20\n2\n\n\n1998\n2002-12-12\n1\n\n\n1998\n2003-03-18\n1\n\n\n1998\n2003-04-23\n1\n\n\n1998\n2003-05-14\n1\n\n\n1998\n2003-06-02\n1\n\n\n1998\n2003-08-27\n1\n\n\n1998\n2003-10-05\n1\n\n\n1998\n2003-11-07\n2\n\n\n1998\n2003-12-01\n1\n\n\n1998\n2004-03-11\n1\n\n\n1998\n2004-04-15\n1\n\n\n1998\n2004-05-17\n2\n\n\n1998\n2004-05-24\n1\n\n\n1998\n2004-06-01\n2\n\n\n1998\n2004-06-07\n2\n\n\n1998\n2004-06-14\n1\n\n\n1998\n2004-07-08\n2\n\n\n1998\n2004-07-12\n2\n\n\n1998\n2004-07-19\n2\n\n\n1998\n2004-07-27\n2\n\n\n1998\n2004-09-14\n2\n\n\n1999\n2002-08-08\n1\n\n\n1999\n2002-09-05\n1\n\n\n1999\n2002-10-08\n1\n\n\n1999\n2002-10-29\n2\n\n\n1999\n2002-11-02\n3\n\n\n1999\n2002-11-03\n2\n\n\n1999\n2002-11-20\n2\n\n\n1999\n2002-12-12\n1\n\n\n1999\n2003-04-09\n1\n\n\n1999\n2003-04-23\n1\n\n\n1999\n2003-05-14\n1\n\n\n1999\n2003-06-02\n2\n\n\n1999\n2003-08-27\n1\n\n\n1999\n2003-10-04\n1\n\n\n1999\n2003-10-05\n2\n\n\n1999\n2003-11-07\n3\n\n\n1999\n2003-12-01\n3\n\n\n1999\n2004-03-11\n1\n\n\n1999\n2004-04-15\n3\n\n\n1999\n2004-05-17\n2\n\n\n1999\n2004-05-24\n1\n\n\n1999\n2004-06-07\n1\n\n\n1999\n2004-06-14\n1\n\n\n1999\n2004-07-08\n2\n\n\n1999\n2004-07-19\n1\n\n\n1999\n2004-07-27\n2\n\n\n1999\n2004-09-14\n1\n\n\n1999\n2010-10-25\n1\n\n\n2000\n2002-08-08\n2\n\n\n2000\n2002-08-22\n1\n\n\n2000\n2002-09-05\n1\n\n\n2000\n2002-10-08\n4\n\n\n2000\n2002-10-29\n8\n\n\n2000\n2002-11-02\n7\n\n\n2000\n2002-11-03\n7\n\n\n2000\n2002-11-20\n5\n\n\n2000\n2002-12-12\n4\n\n\n2000\n2003-01-07\n2\n\n\n2000\n2003-03-18\n5\n\n\n2000\n2003-04-09\n5\n\n\n2000\n2003-04-23\n7\n\n\n2000\n2003-05-14\n5\n\n\n2000\n2003-06-02\n9\n\n\n2000\n2003-08-08\n2\n\n\n2000\n2003-08-27\n7\n\n\n2000\n2003-10-04\n2\n\n\n2000\n2003-10-05\n6\n\n\n2000\n2003-11-07\n8\n\n\n2000\n2003-12-01\n9\n\n\n2000\n2004-03-11\n8\n\n\n2000\n2004-04-15\n9\n\n\n2000\n2004-05-17\n8\n\n\n2000\n2004-05-24\n6\n\n\n2000\n2004-06-01\n8\n\n\n2000\n2004-06-07\n5\n\n\n2000\n2004-06-14\n5\n\n\n2000\n2004-07-08\n7\n\n\n2000\n2004-07-12\n5\n\n\n2000\n2004-07-19\n7\n\n\n2000\n2004-07-27\n7\n\n\n2000\n2004-08-18\n1\n\n\n2000\n2004-08-24\n2\n\n\n2000\n2004-09-14\n5\n\n\n2000\n2009-09-01\n1\n\n\n2000\n2009-09-08\n2\n\n\n2000\n2009-09-14\n1\n\n\n2000\n2009-09-21\n1\n\n\n2000\n2009-10-05\n1\n\n\n2000\n2009-10-12\n2\n\n\n2000\n2009-10-19\n1\n\n\n2000\n2009-11-02\n2\n\n\n2000\n2009-11-09\n1\n\n\n2000\n2009-11-17\n3\n\n\n2000\n2009-11-23\n3\n\n\n2000\n2009-12-07\n1\n\n\n2000\n2010-11-01\n1\n\n\n2000\n2010-11-15\n1\n\n\n2000\n2010-12-06\n1\n\n\n2001\n2002-07-25\n38\n\n\n2001\n2002-08-06\n6\n\n\n2001\n2002-08-08\n20\n\n\n2001\n2002-08-22\n34\n\n\n2001\n2002-09-05\n33\n\n\n2001\n2002-10-08\n46\n\n\n2001\n2002-10-29\n57\n\n\n2001\n2002-11-02\n61\n\n\n2001\n2002-11-03\n77\n\n\n2001\n2002-11-20\n53\n\n\n2001\n2002-12-12\n33\n\n\n2001\n2003-01-07\n28\n\n\n2001\n2003-03-18\n21\n\n\n2001\n2003-04-09\n42\n\n\n2001\n2003-04-23\n35\n\n\n2001\n2003-05-14\n31\n\n\n2001\n2003-06-02\n33\n\n\n2001\n2003-08-08\n13\n\n\n2001\n2003-08-26\n8\n\n\n2001\n2003-08-27\n26\n\n\n2001\n2003-10-04\n13\n\n\n2001\n2003-10-05\n10\n\n\n2001\n2003-11-07\n30\n\n\n2001\n2003-12-01\n34\n\n\n2001\n2004-03-11\n32\n\n\n2001\n2004-04-15\n21\n\n\n2001\n2004-05-17\n19\n\n\n2001\n2004-05-24\n11\n\n\n2001\n2004-06-01\n13\n\n\n2001\n2004-06-07\n11\n\n\n2001\n2004-06-14\n9\n\n\n2001\n2004-07-08\n18\n\n\n2001\n2004-07-12\n9\n\n\n2001\n2004-07-19\n15\n\n\n2001\n2004-07-27\n15\n\n\n2001\n2004-08-18\n3\n\n\n2001\n2004-08-24\n4\n\n\n2001\n2004-09-14\n19\n\n\n2001\n2009-08-26\n1\n\n\n2001\n2009-09-01\n2\n\n\n2001\n2009-09-08\n2\n\n\n2001\n2009-09-14\n1\n\n\n2001\n2009-09-21\n2\n\n\n2001\n2009-09-29\n1\n\n\n2001\n2009-10-05\n4\n\n\n2001\n2009-10-12\n1\n\n\n2001\n2009-10-19\n2\n\n\n2001\n2009-10-26\n1\n\n\n2001\n2009-11-02\n2\n\n\n2001\n2009-11-09\n6\n\n\n2001\n2009-11-17\n2\n\n\n2001\n2009-12-07\n2\n\n\n2001\n2010-10-04\n1\n\n\n2001\n2010-10-18\n2\n\n\n2001\n2010-10-25\n1\n\n\n2001\n2010-11-01\n1\n\n\n2001\n2010-11-09\n2\n\n\n2001\n2010-11-15\n2\n\n\n2001\n2010-11-29\n2\n\n\n2001\n2010-12-06\n1\n\n\n2002\n2002-08-08\n1\n\n\n2002\n2002-09-05\n1\n\n\n2002\n2002-10-08\n1\n\n\n2002\n2002-10-29\n17\n\n\n2002\n2002-11-02\n19\n\n\n2002\n2002-11-03\n19\n\n\n2002\n2002-11-20\n16\n\n\n2002\n2002-12-12\n13\n\n\n2002\n2003-01-07\n7\n\n\n2002\n2003-03-18\n4\n\n\n2002\n2003-04-09\n7\n\n\n2002\n2003-04-23\n11\n\n\n2002\n2003-05-14\n32\n\n\n2002\n2003-06-02\n26\n\n\n2002\n2003-08-08\n25\n\n\n2002\n2003-08-26\n4\n\n\n2002\n2003-08-27\n40\n\n\n2002\n2003-10-04\n13\n\n\n2002\n2003-10-05\n15\n\n\n2002\n2003-11-07\n43\n\n\n2002\n2003-12-01\n37\n\n\n2002\n2004-03-11\n37\n\n\n2002\n2004-04-15\n22\n\n\n2002\n2004-05-17\n23\n\n\n2002\n2004-05-24\n18\n\n\n2002\n2004-06-01\n13\n\n\n2002\n2004-06-07\n14\n\n\n2002\n2004-06-14\n13\n\n\n2002\n2004-07-08\n19\n\n\n2002\n2004-07-12\n15\n\n\n2002\n2004-07-19\n14\n\n\n2002\n2004-07-27\n13\n\n\n2002\n2004-08-18\n3\n\n\n2002\n2004-08-24\n3\n\n\n2002\n2004-09-14\n20\n\n\n2002\n2009-08-26\n1\n\n\n2002\n2009-09-01\n2\n\n\n2002\n2009-09-08\n4\n\n\n2002\n2009-09-14\n3\n\n\n2002\n2009-09-21\n3\n\n\n2002\n2009-09-29\n3\n\n\n2002\n2009-10-05\n1\n\n\n2002\n2009-10-12\n1\n\n\n2002\n2009-10-19\n1\n\n\n2002\n2009-10-26\n1\n\n\n2002\n2009-11-02\n2\n\n\n2002\n2009-11-09\n2\n\n\n2002\n2009-11-17\n1\n\n\n2002\n2009-11-23\n2\n\n\n2002\n2009-12-07\n1\n\n\n2002\n2010-09-13\n1\n\n\n2002\n2010-09-20\n1\n\n\n2002\n2010-10-04\n1\n\n\n2002\n2010-11-09\n3\n\n\n2002\n2010-11-15\n1\n\n\n2002\n2010-11-29\n2\n\n\n2003\n2003-08-08\n2\n\n\n2003\n2003-08-26\n1\n\n\n2003\n2003-08-27\n4\n\n\n2003\n2003-10-04\n3\n\n\n2003\n2003-10-05\n2\n\n\n2003\n2003-11-07\n62\n\n\n2003\n2003-12-01\n61\n\n\n2003\n2004-03-11\n44\n\n\n2003\n2004-04-15\n47\n\n\n2003\n2004-05-17\n41\n\n\n2003\n2004-05-24\n28\n\n\n2003\n2004-06-01\n23\n\n\n2003\n2004-06-07\n28\n\n\n2003\n2004-06-14\n24\n\n\n2003\n2004-07-08\n54\n\n\n2003\n2004-07-12\n25\n\n\n2003\n2004-07-19\n36\n\n\n2003\n2004-07-27\n37\n\n\n2003\n2004-08-18\n5\n\n\n2003\n2004-08-24\n22\n\n\n2003\n2004-09-14\n48\n\n\n2003\n2009-08-26\n1\n\n\n2003\n2009-09-01\n3\n\n\n2003\n2009-09-08\n3\n\n\n2003\n2009-09-14\n1\n\n\n2003\n2009-09-21\n2\n\n\n2003\n2009-09-29\n1\n\n\n2003\n2009-10-05\n2\n\n\n2003\n2009-10-19\n2\n\n\n2003\n2009-10-26\n2\n\n\n2003\n2009-11-02\n4\n\n\n2003\n2009-11-09\n3\n\n\n2003\n2009-11-17\n2\n\n\n2003\n2009-12-07\n2\n\n\n2003\n2010-08-30\n1\n\n\n2003\n2010-09-20\n2\n\n\n2003\n2010-10-04\n3\n\n\n2003\n2010-10-12\n3\n\n\n2003\n2010-10-18\n2\n\n\n2003\n2010-10-25\n2\n\n\n2003\n2010-11-01\n3\n\n\n2003\n2010-11-09\n2\n\n\n2003\n2010-11-15\n2\n\n\n2003\n2010-11-22\n1\n\n\n2003\n2010-11-29\n3\n\n\n2003\n2010-12-06\n1\n\n\n2004\n2004-07-08\n6\n\n\n2004\n2004-07-12\n2\n\n\n2004\n2004-07-19\n4\n\n\n2004\n2004-07-27\n2\n\n\n2004\n2004-09-14\n2\n\n\n2004\n2009-08-26\n2\n\n\n2004\n2009-09-01\n2\n\n\n2004\n2009-09-08\n7\n\n\n2004\n2009-09-14\n5\n\n\n2004\n2009-09-21\n4\n\n\n2004\n2009-09-29\n4\n\n\n2004\n2009-10-05\n4\n\n\n2004\n2009-10-12\n6\n\n\n2004\n2009-10-19\n4\n\n\n2004\n2009-10-26\n7\n\n\n2004\n2009-11-02\n8\n\n\n2004\n2009-11-09\n9\n\n\n2004\n2009-11-17\n8\n\n\n2004\n2009-11-23\n2\n\n\n2004\n2009-12-07\n6\n\n\n2004\n2010-08-24\n2\n\n\n2004\n2010-09-13\n2\n\n\n2004\n2010-09-27\n2\n\n\n2004\n2010-10-04\n5\n\n\n2004\n2010-10-12\n3\n\n\n2004\n2010-10-18\n1\n\n\n2004\n2010-11-01\n1\n\n\n2004\n2010-11-09\n1\n\n\n2004\n2010-11-15\n4\n\n\n2004\n2010-12-06\n3\n\n\n2005\n2009-08-26\n3\n\n\n2005\n2009-09-01\n3\n\n\n2005\n2009-09-08\n3\n\n\n2005\n2009-09-14\n3\n\n\n2005\n2009-09-21\n1\n\n\n2005\n2009-09-29\n2\n\n\n2005\n2009-10-05\n2\n\n\n2005\n2009-10-12\n2\n\n\n2005\n2009-10-26\n1\n\n\n2005\n2009-11-02\n1\n\n\n2005\n2009-11-09\n2\n\n\n2005\n2009-11-17\n4\n\n\n2005\n2009-11-23\n2\n\n\n2005\n2009-12-07\n1\n\n\n2005\n2010-09-13\n1\n\n\n2005\n2010-09-20\n1\n\n\n2005\n2010-09-27\n1\n\n\n2005\n2010-10-04\n3\n\n\n2005\n2010-10-12\n1\n\n\n2005\n2010-10-18\n2\n\n\n2005\n2010-10-25\n2\n\n\n2005\n2010-11-01\n1\n\n\n2005\n2010-11-09\n3\n\n\n2005\n2010-11-15\n3\n\n\n2005\n2010-11-22\n1\n\n\n2005\n2010-11-29\n1\n\n\n2005\n2010-12-06\n1\n\n\n2006\n2009-08-26\n3\n\n\n2006\n2009-09-01\n5\n\n\n2006\n2009-09-08\n6\n\n\n2006\n2009-09-14\n4\n\n\n2006\n2009-09-21\n2\n\n\n2006\n2009-09-29\n7\n\n\n2006\n2009-10-05\n7\n\n\n2006\n2009-10-12\n7\n\n\n2006\n2009-10-19\n6\n\n\n2006\n2009-10-26\n6\n\n\n2006\n2009-11-02\n5\n\n\n2006\n2009-11-09\n5\n\n\n2006\n2009-11-17\n5\n\n\n2006\n2009-11-23\n7\n\n\n2006\n2009-12-07\n5\n\n\n2006\n2010-08-24\n1\n\n\n2006\n2010-09-13\n1\n\n\n2006\n2010-09-27\n3\n\n\n2006\n2010-10-12\n1\n\n\n2006\n2010-10-18\n1\n\n\n2006\n2010-11-09\n3\n\n\n2006\n2010-11-15\n2\n\n\n2006\n2010-11-29\n1\n\n\n2006\n2010-12-06\n2\n\n\n2007\n2009-08-26\n3\n\n\n2007\n2009-09-01\n8\n\n\n2007\n2009-09-08\n7\n\n\n2007\n2009-09-14\n10\n\n\n2007\n2009-09-21\n7\n\n\n2007\n2009-09-29\n10\n\n\n2007\n2009-10-05\n7\n\n\n2007\n2009-10-12\n7\n\n\n2007\n2009-10-19\n10\n\n\n2007\n2009-10-26\n8\n\n\n2007\n2009-11-02\n7\n\n\n2007\n2009-11-09\n8\n\n\n2007\n2009-11-17\n7\n\n\n2007\n2009-11-23\n6\n\n\n2007\n2009-12-07\n4\n\n\n2007\n2010-08-30\n1\n\n\n2007\n2010-09-20\n1\n\n\n2007\n2010-09-27\n1\n\n\n2007\n2010-10-04\n2\n\n\n2007\n2010-10-12\n1\n\n\n2007\n2010-10-18\n1\n\n\n2007\n2010-11-01\n3\n\n\n2007\n2010-11-09\n1\n\n\n2007\n2010-11-15\n3\n\n\n2007\n2010-11-29\n1\n\n\n2007\n2010-12-06\n1\n\n\n2008\n2009-08-26\n5\n\n\n2008\n2009-09-01\n6\n\n\n2008\n2009-09-08\n7\n\n\n2008\n2009-09-14\n9\n\n\n2008\n2009-09-21\n10\n\n\n2008\n2009-09-29\n11\n\n\n2008\n2009-10-05\n8\n\n\n2008\n2009-10-12\n11\n\n\n2008\n2009-10-19\n17\n\n\n2008\n2009-10-26\n9\n\n\n2008\n2009-11-02\n10\n\n\n2008\n2009-11-09\n22\n\n\n2008\n2009-11-17\n7\n\n\n2008\n2009-11-23\n7\n\n\n2008\n2009-12-07\n14\n\n\n2008\n2010-08-24\n2\n\n\n2008\n2010-08-30\n4\n\n\n2008\n2010-09-13\n1\n\n\n2008\n2010-09-20\n3\n\n\n2008\n2010-09-27\n4\n\n\n2008\n2010-10-04\n1\n\n\n2008\n2010-10-12\n3\n\n\n2008\n2010-10-18\n1\n\n\n2008\n2010-10-25\n1\n\n\n2008\n2010-11-01\n2\n\n\n2008\n2010-11-09\n6\n\n\n2008\n2010-11-15\n1\n\n\n2008\n2010-11-29\n2\n\n\n2008\n2010-12-06\n2\n\n\n2009\n2009-08-26\n1\n\n\n2009\n2009-09-01\n1\n\n\n2009\n2009-09-14\n2\n\n\n2009\n2009-09-29\n88\n\n\n2009\n2009-10-05\n79\n\n\n2009\n2009-10-12\n74\n\n\n2009\n2009-10-19\n69\n\n\n2009\n2009-10-26\n75\n\n\n2009\n2009-11-02\n65\n\n\n2009\n2009-11-09\n78\n\n\n2009\n2009-11-17\n58\n\n\n2009\n2009-11-23\n45\n\n\n2009\n2009-12-07\n55\n\n\n2009\n2010-08-24\n27\n\n\n2009\n2010-08-30\n16\n\n\n2009\n2010-09-13\n23\n\n\n2009\n2010-09-20\n22\n\n\n2009\n2010-09-27\n25\n\n\n2009\n2010-10-04\n34\n\n\n2009\n2010-10-12\n25\n\n\n2009\n2010-10-18\n31\n\n\n2009\n2010-10-25\n30\n\n\n2009\n2010-11-01\n31\n\n\n2009\n2010-11-09\n34\n\n\n2009\n2010-11-15\n33\n\n\n2009\n2010-11-22\n14\n\n\n2009\n2010-11-29\n25\n\n\n2009\n2010-12-06\n29\n\n\n2010\n2010-09-27\n1\n\n\n2010\n2010-10-04\n4\n\n\n2010\n2010-10-12\n2\n\n\n2010\n2010-10-18\n5\n\n\n2010\n2010-10-25\n6\n\n\n2010\n2010-11-01\n3\n\n\n2010\n2010-11-09\n4\n\n\n2010\n2010-11-15\n6\n\n\n2010\n2010-11-29\n7\n\n\n2010\n2010-12-06\n12\n\n\n\n\n\n\n\n\n\n\n\nCode\ncdWB_wanding %&gt;% \n  filter(riverOrdered == \"WB Mitchell\") |&gt; \n  group_by(riverOrdered, cohort, date(detectionDate)) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  arrange(cohort) %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\n\ncohort\ndate(detectionDate)\nWB Mitchell\n\n\n\n\n1998\n2002-11-03\n1\n\n\n1998\n2002-11-04\n1\n\n\n1998\n2003-11-29\n1\n\n\n1998\n2004-04-10\n1\n\n\n1999\n2002-12-12\n1\n\n\n1999\n2004-09-15\n1\n\n\n2000\n2002-07-22\n1\n\n\n2000\n2002-08-06\n2\n\n\n2000\n2002-08-21\n1\n\n\n2000\n2002-09-05\n2\n\n\n2000\n2002-10-08\n2\n\n\n2000\n2002-10-17\n1\n\n\n2000\n2002-10-19\n5\n\n\n2000\n2002-10-29\n5\n\n\n2000\n2002-11-03\n4\n\n\n2000\n2002-11-04\n3\n\n\n2000\n2002-11-19\n5\n\n\n2000\n2002-12-12\n1\n\n\n2000\n2003-01-07\n2\n\n\n2000\n2003-04-08\n4\n\n\n2000\n2003-04-23\n4\n\n\n2000\n2003-05-14\n4\n\n\n2000\n2003-06-01\n5\n\n\n2000\n2003-08-08\n4\n\n\n2000\n2003-08-27\n2\n\n\n2000\n2003-09-30\n2\n\n\n2000\n2003-11-04\n2\n\n\n2000\n2003-11-07\n3\n\n\n2000\n2003-11-29\n4\n\n\n2000\n2004-04-10\n4\n\n\n2000\n2004-05-17\n4\n\n\n2000\n2004-05-24\n2\n\n\n2000\n2004-06-01\n1\n\n\n2000\n2004-06-07\n1\n\n\n2000\n2004-06-14\n2\n\n\n2000\n2004-07-07\n1\n\n\n2000\n2004-07-12\n2\n\n\n2000\n2004-07-19\n3\n\n\n2000\n2004-07-26\n3\n\n\n2000\n2004-09-15\n5\n\n\n2000\n2007-10-05\n2\n\n\n2000\n2007-10-11\n1\n\n\n2000\n2007-10-18\n1\n\n\n2000\n2007-10-25\n1\n\n\n2000\n2007-11-01\n1\n\n\n2000\n2007-11-08\n2\n\n\n2000\n2007-11-16\n1\n\n\n2000\n2007-11-21\n2\n\n\n2000\n2007-11-30\n1\n\n\n2000\n2009-08-24\n1\n\n\n2000\n2009-08-31\n1\n\n\n2000\n2009-09-21\n1\n\n\n2000\n2009-09-28\n1\n\n\n2000\n2009-10-05\n1\n\n\n2000\n2009-10-19\n1\n\n\n2000\n2009-10-26\n1\n\n\n2000\n2009-11-09\n1\n\n\n2001\n2002-07-22\n6\n\n\n2001\n2002-08-06\n9\n\n\n2001\n2002-08-21\n11\n\n\n2001\n2002-09-05\n5\n\n\n2001\n2002-10-08\n11\n\n\n2001\n2002-10-15\n13\n\n\n2001\n2002-10-17\n16\n\n\n2001\n2002-10-19\n18\n\n\n2001\n2002-10-29\n20\n\n\n2001\n2002-11-03\n22\n\n\n2001\n2002-11-04\n22\n\n\n2001\n2002-11-19\n15\n\n\n2001\n2002-12-12\n10\n\n\n2001\n2003-01-07\n7\n\n\n2001\n2003-03-18\n4\n\n\n2001\n2003-04-08\n15\n\n\n2001\n2003-04-23\n14\n\n\n2001\n2003-05-14\n9\n\n\n2001\n2003-06-01\n12\n\n\n2001\n2003-08-08\n6\n\n\n2001\n2003-08-27\n4\n\n\n2001\n2003-09-30\n10\n\n\n2001\n2003-11-04\n3\n\n\n2001\n2003-11-07\n16\n\n\n2001\n2003-11-29\n10\n\n\n2001\n2004-04-10\n15\n\n\n2001\n2004-05-17\n4\n\n\n2001\n2004-05-24\n2\n\n\n2001\n2004-06-01\n7\n\n\n2001\n2004-06-07\n3\n\n\n2001\n2004-06-14\n6\n\n\n2001\n2004-07-07\n6\n\n\n2001\n2004-07-12\n2\n\n\n2001\n2004-07-19\n5\n\n\n2001\n2004-07-26\n2\n\n\n2001\n2004-08-18\n1\n\n\n2001\n2004-08-24\n1\n\n\n2001\n2004-09-15\n2\n\n\n2001\n2007-10-05\n6\n\n\n2001\n2007-10-11\n5\n\n\n2001\n2007-10-18\n2\n\n\n2001\n2007-10-25\n2\n\n\n2001\n2007-11-01\n5\n\n\n2001\n2007-11-08\n7\n\n\n2001\n2007-11-16\n3\n\n\n2001\n2007-11-21\n9\n\n\n2001\n2007-11-30\n4\n\n\n2001\n2007-12-06\n2\n\n\n2001\n2009-08-31\n1\n\n\n2001\n2009-09-21\n1\n\n\n2001\n2009-09-28\n5\n\n\n2001\n2009-10-05\n1\n\n\n2001\n2009-10-12\n2\n\n\n2001\n2009-11-02\n3\n\n\n2001\n2009-11-16\n2\n\n\n2001\n2009-11-23\n1\n\n\n2001\n2009-12-07\n1\n\n\n2001\n2010-10-12\n1\n\n\n2001\n2010-10-18\n2\n\n\n2001\n2010-10-25\n1\n\n\n2001\n2010-11-09\n1\n\n\n2001\n2010-11-15\n1\n\n\n2001\n2010-11-22\n1\n\n\n2001\n2010-12-06\n1\n\n\n2002\n2002-10-19\n11\n\n\n2002\n2002-10-29\n10\n\n\n2002\n2002-11-03\n12\n\n\n2002\n2002-11-04\n14\n\n\n2002\n2002-11-19\n10\n\n\n2002\n2002-12-12\n12\n\n\n2002\n2003-01-07\n5\n\n\n2002\n2003-03-18\n3\n\n\n2002\n2003-04-08\n8\n\n\n2002\n2003-04-23\n5\n\n\n2002\n2003-05-14\n12\n\n\n2002\n2003-06-01\n11\n\n\n2002\n2003-08-08\n20\n\n\n2002\n2003-08-27\n19\n\n\n2002\n2003-09-30\n11\n\n\n2002\n2003-11-04\n12\n\n\n2002\n2003-11-07\n33\n\n\n2002\n2003-11-29\n27\n\n\n2002\n2004-04-10\n32\n\n\n2002\n2004-05-17\n23\n\n\n2002\n2004-05-24\n12\n\n\n2002\n2004-06-01\n11\n\n\n2002\n2004-06-07\n14\n\n\n2002\n2004-06-14\n13\n\n\n2002\n2004-07-07\n14\n\n\n2002\n2004-07-12\n6\n\n\n2002\n2004-07-19\n13\n\n\n2002\n2004-07-26\n6\n\n\n2002\n2004-08-18\n3\n\n\n2002\n2004-08-24\n5\n\n\n2002\n2004-09-02\n12\n\n\n2002\n2004-09-15\n18\n\n\n2002\n2007-10-05\n2\n\n\n2002\n2007-10-11\n3\n\n\n2002\n2007-10-18\n1\n\n\n2002\n2007-10-25\n2\n\n\n2002\n2007-11-01\n4\n\n\n2002\n2007-11-08\n5\n\n\n2002\n2007-11-21\n3\n\n\n2002\n2007-11-30\n3\n\n\n2002\n2007-12-06\n4\n\n\n2002\n2009-08-31\n1\n\n\n2002\n2009-09-14\n2\n\n\n2002\n2009-09-21\n2\n\n\n2002\n2009-09-28\n2\n\n\n2002\n2009-10-05\n1\n\n\n2002\n2009-10-12\n1\n\n\n2002\n2009-10-19\n1\n\n\n2002\n2009-11-09\n1\n\n\n2002\n2010-10-04\n1\n\n\n2002\n2010-10-18\n1\n\n\n2002\n2010-11-01\n1\n\n\n2002\n2010-11-09\n1\n\n\n2002\n2010-11-15\n2\n\n\n2002\n2010-11-22\n1\n\n\n2002\n2010-11-29\n2\n\n\n2002\n2010-12-06\n3\n\n\n2003\n2003-08-08\n1\n\n\n2003\n2003-08-27\n1\n\n\n2003\n2003-09-30\n2\n\n\n2003\n2003-11-07\n21\n\n\n2003\n2003-11-29\n20\n\n\n2003\n2004-04-10\n18\n\n\n2003\n2004-05-17\n18\n\n\n2003\n2004-05-24\n7\n\n\n2003\n2004-06-01\n11\n\n\n2003\n2004-06-07\n17\n\n\n2003\n2004-06-14\n19\n\n\n2003\n2004-07-07\n19\n\n\n2003\n2004-07-12\n14\n\n\n2003\n2004-07-19\n12\n\n\n2003\n2004-07-26\n15\n\n\n2003\n2004-08-18\n2\n\n\n2003\n2004-08-24\n5\n\n\n2003\n2004-09-02\n13\n\n\n2003\n2004-09-15\n15\n\n\n2003\n2007-10-05\n1\n\n\n2003\n2007-10-11\n4\n\n\n2003\n2007-10-18\n3\n\n\n2003\n2007-10-25\n2\n\n\n2003\n2007-11-01\n2\n\n\n2003\n2007-11-08\n4\n\n\n2003\n2007-11-16\n1\n\n\n2003\n2007-11-21\n1\n\n\n2003\n2007-11-30\n1\n\n\n2003\n2009-08-31\n1\n\n\n2003\n2009-09-14\n2\n\n\n2003\n2009-09-21\n1\n\n\n2003\n2009-09-28\n2\n\n\n2003\n2009-10-05\n1\n\n\n2003\n2009-10-12\n2\n\n\n2003\n2009-10-19\n1\n\n\n2003\n2009-10-26\n1\n\n\n2003\n2009-11-09\n2\n\n\n2003\n2009-11-23\n1\n\n\n2003\n2010-09-27\n1\n\n\n2003\n2010-10-04\n1\n\n\n2003\n2010-10-18\n1\n\n\n2003\n2010-10-25\n1\n\n\n2003\n2010-11-01\n1\n\n\n2003\n2010-11-09\n2\n\n\n2003\n2010-11-15\n2\n\n\n2003\n2010-11-22\n2\n\n\n2003\n2010-11-29\n2\n\n\n2003\n2010-12-06\n1\n\n\n2004\n2004-07-07\n8\n\n\n2004\n2004-07-12\n8\n\n\n2004\n2004-07-19\n5\n\n\n2004\n2004-07-26\n5\n\n\n2004\n2004-08-18\n3\n\n\n2004\n2004-08-24\n3\n\n\n2004\n2004-09-02\n7\n\n\n2004\n2004-09-03\n1\n\n\n2004\n2004-09-15\n6\n\n\n2004\n2007-10-05\n19\n\n\n2004\n2007-10-11\n25\n\n\n2004\n2007-10-18\n13\n\n\n2004\n2007-10-25\n19\n\n\n2004\n2007-11-01\n30\n\n\n2004\n2007-11-08\n39\n\n\n2004\n2007-11-16\n10\n\n\n2004\n2007-11-21\n33\n\n\n2004\n2007-11-30\n18\n\n\n2004\n2007-12-06\n8\n\n\n2004\n2009-08-31\n1\n\n\n2004\n2009-09-28\n7\n\n\n2004\n2009-10-05\n2\n\n\n2004\n2009-10-19\n1\n\n\n2004\n2009-10-26\n3\n\n\n2004\n2009-11-02\n2\n\n\n2004\n2009-11-09\n1\n\n\n2004\n2009-11-23\n1\n\n\n2004\n2009-12-07\n2\n\n\n2004\n2010-08-30\n1\n\n\n2004\n2010-10-04\n2\n\n\n2004\n2010-10-18\n2\n\n\n2004\n2010-10-25\n1\n\n\n2004\n2010-11-01\n1\n\n\n2004\n2010-11-09\n4\n\n\n2004\n2010-11-15\n2\n\n\n2004\n2010-11-22\n1\n\n\n2004\n2010-11-29\n1\n\n\n2004\n2010-12-06\n3\n\n\n2005\n2007-10-05\n11\n\n\n2005\n2007-10-11\n7\n\n\n2005\n2007-10-18\n4\n\n\n2005\n2007-10-25\n7\n\n\n2005\n2007-11-01\n9\n\n\n2005\n2007-11-08\n9\n\n\n2005\n2007-11-16\n1\n\n\n2005\n2007-11-21\n8\n\n\n2005\n2007-11-30\n5\n\n\n2005\n2007-12-06\n3\n\n\n2005\n2009-08-24\n1\n\n\n2005\n2009-09-28\n2\n\n\n2005\n2009-10-05\n2\n\n\n2005\n2009-10-12\n1\n\n\n2005\n2009-10-19\n1\n\n\n2005\n2009-10-26\n1\n\n\n2005\n2009-11-02\n1\n\n\n2005\n2009-11-16\n2\n\n\n2005\n2009-11-23\n1\n\n\n2005\n2009-12-07\n2\n\n\n2005\n2010-10-18\n1\n\n\n2005\n2010-10-25\n2\n\n\n2005\n2010-11-01\n1\n\n\n2005\n2010-11-09\n2\n\n\n2005\n2010-11-15\n1\n\n\n2005\n2010-11-22\n1\n\n\n2005\n2010-11-29\n2\n\n\n2005\n2010-12-06\n2\n\n\n2006\n2007-10-05\n8\n\n\n2006\n2007-10-11\n6\n\n\n2006\n2007-10-18\n5\n\n\n2006\n2007-10-25\n6\n\n\n2006\n2007-11-01\n6\n\n\n2006\n2007-11-08\n11\n\n\n2006\n2007-11-16\n3\n\n\n2006\n2007-11-21\n10\n\n\n2006\n2007-11-30\n7\n\n\n2006\n2007-12-06\n7\n\n\n2006\n2009-08-24\n4\n\n\n2006\n2009-08-31\n2\n\n\n2006\n2009-09-08\n1\n\n\n2006\n2009-09-14\n3\n\n\n2006\n2009-09-21\n5\n\n\n2006\n2009-09-28\n4\n\n\n2006\n2009-10-05\n6\n\n\n2006\n2009-10-12\n1\n\n\n2006\n2009-10-19\n2\n\n\n2006\n2009-10-26\n4\n\n\n2006\n2009-11-02\n4\n\n\n2006\n2009-12-07\n1\n\n\n2006\n2010-08-30\n1\n\n\n2006\n2010-09-13\n2\n\n\n2006\n2010-09-20\n1\n\n\n2006\n2010-09-27\n1\n\n\n2006\n2010-10-04\n1\n\n\n2006\n2010-10-12\n1\n\n\n2006\n2010-10-18\n3\n\n\n2006\n2010-10-25\n3\n\n\n2006\n2010-11-01\n1\n\n\n2006\n2010-11-09\n1\n\n\n2006\n2010-11-15\n1\n\n\n2006\n2010-11-22\n1\n\n\n2006\n2010-11-29\n1\n\n\n2006\n2010-12-06\n2\n\n\n2007\n2007-10-05\n19\n\n\n2007\n2007-10-11\n16\n\n\n2007\n2007-10-18\n23\n\n\n2007\n2007-10-25\n18\n\n\n2007\n2007-11-01\n24\n\n\n2007\n2007-11-08\n28\n\n\n2007\n2007-11-16\n5\n\n\n2007\n2007-11-21\n25\n\n\n2007\n2007-11-30\n19\n\n\n2007\n2007-12-06\n16\n\n\n2007\n2009-08-24\n5\n\n\n2007\n2009-08-31\n4\n\n\n2007\n2009-09-08\n3\n\n\n2007\n2009-09-14\n6\n\n\n2007\n2009-09-21\n2\n\n\n2007\n2009-09-28\n5\n\n\n2007\n2009-10-05\n4\n\n\n2007\n2009-10-12\n5\n\n\n2007\n2009-10-19\n4\n\n\n2007\n2009-10-26\n4\n\n\n2007\n2009-11-02\n4\n\n\n2007\n2009-11-09\n4\n\n\n2007\n2009-11-16\n4\n\n\n2007\n2009-11-23\n4\n\n\n2007\n2009-12-07\n4\n\n\n2007\n2010-08-24\n1\n\n\n2008\n2009-08-24\n2\n\n\n2008\n2009-08-31\n2\n\n\n2008\n2009-09-08\n1\n\n\n2008\n2009-09-14\n2\n\n\n2008\n2009-09-21\n2\n\n\n2008\n2009-09-28\n4\n\n\n2008\n2009-10-05\n4\n\n\n2008\n2009-10-12\n1\n\n\n2008\n2009-10-19\n3\n\n\n2008\n2009-10-26\n3\n\n\n2008\n2009-11-02\n3\n\n\n2008\n2009-11-09\n3\n\n\n2008\n2009-11-16\n4\n\n\n2008\n2009-11-23\n3\n\n\n2008\n2009-12-07\n3\n\n\n2008\n2010-11-09\n1\n\n\n2009\n2009-08-24\n3\n\n\n2009\n2009-08-31\n1\n\n\n2009\n2009-09-08\n2\n\n\n2009\n2009-09-14\n2\n\n\n2009\n2009-09-21\n1\n\n\n2009\n2009-09-28\n67\n\n\n2009\n2009-10-05\n61\n\n\n2009\n2009-10-12\n63\n\n\n2009\n2009-10-19\n57\n\n\n2009\n2009-10-26\n59\n\n\n2009\n2009-11-02\n57\n\n\n2009\n2009-11-09\n59\n\n\n2009\n2009-11-16\n43\n\n\n2009\n2009-11-23\n76\n\n\n2009\n2009-12-07\n71\n\n\n2009\n2010-08-24\n15\n\n\n2009\n2010-08-30\n19\n\n\n2009\n2010-09-13\n17\n\n\n2009\n2010-09-20\n22\n\n\n2009\n2010-09-27\n16\n\n\n2009\n2010-10-04\n19\n\n\n2009\n2010-10-12\n14\n\n\n2009\n2010-10-18\n14\n\n\n2009\n2010-10-25\n11\n\n\n2009\n2010-11-01\n9\n\n\n2009\n2010-11-09\n9\n\n\n2009\n2010-11-15\n15\n\n\n2009\n2010-11-22\n12\n\n\n2009\n2010-11-29\n15\n\n\n2009\n2010-12-06\n11\n\n\n2010\n2010-09-27\n3\n\n\n2010\n2010-10-18\n1\n\n\n2010\n2010-10-25\n2\n\n\n2010\n2010-11-01\n1\n\n\n2010\n2010-11-09\n2\n\n\n2010\n2010-11-15\n2\n\n\n2010\n2010-11-22\n1\n\n\n2010\n2010-11-29\n9\n\n\n2010\n2010-12-06\n7\n\n\n\n\n\n\n\n\n\n\n\nCode\ncdWB_wanding %&gt;% \n  filter(riverOrdered == \"WB OBear\") |&gt; \n  group_by(riverOrdered, cohort, date(detectionDate)) %&gt;% \n  summarize(n = n()) %&gt;%\n  pivot_wider(values_from = \"n\", names_from = \"riverOrdered\") %&gt;%\n  arrange(cohort) %&gt;%\n  kable() %&gt;%\n  kable_styling(full_width = T)\n\n\n\n\n\ncohort\ndate(detectionDate)\nWB OBear\n\n\n\n\n1999\n2002-11-04\n1\n\n\n1999\n2002-12-12\n1\n\n\n2000\n2002-07-25\n3\n\n\n2000\n2002-08-09\n1\n\n\n2000\n2002-08-21\n3\n\n\n2000\n2002-09-05\n3\n\n\n2000\n2002-09-21\n2\n\n\n2000\n2002-10-09\n4\n\n\n2000\n2002-10-29\n2\n\n\n2000\n2002-11-04\n6\n\n\n2000\n2002-11-05\n11\n\n\n2000\n2002-11-19\n4\n\n\n2000\n2002-12-12\n5\n\n\n2000\n2003-01-07\n2\n\n\n2000\n2003-04-06\n1\n\n\n2000\n2003-04-23\n3\n\n\n2000\n2003-05-14\n1\n\n\n2000\n2003-06-03\n1\n\n\n2000\n2003-08-26\n2\n\n\n2000\n2003-11-08\n2\n\n\n2000\n2003-12-02\n1\n\n\n2000\n2004-04-12\n1\n\n\n2000\n2004-05-17\n1\n\n\n2000\n2004-06-01\n2\n\n\n2000\n2004-07-07\n1\n\n\n2000\n2004-07-26\n1\n\n\n2000\n2004-08-17\n1\n\n\n2000\n2004-09-01\n1\n\n\n2000\n2004-09-15\n1\n\n\n2001\n2002-07-25\n15\n\n\n2001\n2002-08-09\n9\n\n\n2001\n2002-08-21\n22\n\n\n2001\n2002-09-05\n16\n\n\n2001\n2002-09-21\n7\n\n\n2001\n2002-10-09\n20\n\n\n2001\n2002-10-29\n23\n\n\n2001\n2002-11-04\n57\n\n\n2001\n2002-11-05\n72\n\n\n2001\n2002-11-19\n40\n\n\n2001\n2002-12-12\n48\n\n\n2001\n2003-01-07\n21\n\n\n2001\n2003-03-18\n15\n\n\n2001\n2003-04-06\n31\n\n\n2001\n2003-04-23\n27\n\n\n2001\n2003-05-14\n34\n\n\n2001\n2003-06-03\n25\n\n\n2001\n2003-08-09\n14\n\n\n2001\n2003-08-26\n16\n\n\n2001\n2003-10-03\n3\n\n\n2001\n2003-11-08\n18\n\n\n2001\n2003-12-02\n20\n\n\n2001\n2004-04-12\n13\n\n\n2001\n2004-05-17\n6\n\n\n2001\n2004-05-24\n7\n\n\n2001\n2004-06-01\n10\n\n\n2001\n2004-06-07\n8\n\n\n2001\n2004-06-14\n4\n\n\n2001\n2004-07-07\n8\n\n\n2001\n2004-07-12\n3\n\n\n2001\n2004-07-20\n5\n\n\n2001\n2004-07-26\n6\n\n\n2001\n2004-08-17\n3\n\n\n2001\n2004-08-23\n2\n\n\n2001\n2004-09-01\n5\n\n\n2001\n2004-09-15\n6\n\n\n2002\n2002-11-04\n30\n\n\n2002\n2002-11-05\n38\n\n\n2002\n2002-11-19\n29\n\n\n2002\n2002-12-12\n18\n\n\n2002\n2003-01-07\n14\n\n\n2002\n2003-03-18\n10\n\n\n2002\n2003-04-06\n17\n\n\n2002\n2003-04-23\n16\n\n\n2002\n2003-05-14\n70\n\n\n2002\n2003-06-03\n39\n\n\n2002\n2003-08-09\n48\n\n\n2002\n2003-08-26\n56\n\n\n2002\n2003-10-03\n33\n\n\n2002\n2003-11-08\n59\n\n\n2002\n2003-12-02\n65\n\n\n2002\n2004-04-12\n46\n\n\n2002\n2004-05-17\n38\n\n\n2002\n2004-05-24\n34\n\n\n2002\n2004-06-01\n26\n\n\n2002\n2004-06-07\n26\n\n\n2002\n2004-06-14\n23\n\n\n2002\n2004-07-07\n31\n\n\n2002\n2004-07-12\n26\n\n\n2002\n2004-07-20\n31\n\n\n2002\n2004-07-26\n19\n\n\n2002\n2004-08-17\n7\n\n\n2002\n2004-08-23\n14\n\n\n2002\n2004-09-01\n17\n\n\n2002\n2004-09-15\n14\n\n\n2003\n2003-08-09\n1\n\n\n2003\n2003-08-26\n1\n\n\n2003\n2003-10-03\n1\n\n\n2003\n2003-11-08\n76\n\n\n2003\n2003-12-02\n79\n\n\n2003\n2004-04-12\n69\n\n\n2003\n2004-05-17\n86\n\n\n2003\n2004-05-24\n64\n\n\n2003\n2004-06-01\n46\n\n\n2003\n2004-06-07\n54\n\n\n2003\n2004-06-14\n52\n\n\n2003\n2004-07-07\n103\n\n\n2003\n2004-07-12\n72\n\n\n2003\n2004-07-20\n71\n\n\n2003\n2004-07-26\n65\n\n\n2003\n2004-08-17\n28\n\n\n2003\n2004-08-23\n39\n\n\n2003\n2004-09-01\n50\n\n\n2003\n2004-09-15\n47\n\n\n2004\n2004-07-07\n1\n\n\n2004\n2004-07-20\n1\n\n\n2004\n2004-07-26\n1"
  },
  {
    "objectID": "getDataWanding.html#all-wanding-data",
    "href": "getDataWanding.html#all-wanding-data",
    "title": "6  Get wanding data",
    "section": "6.2 All wanding data",
    "text": "6.2 All wanding data\nBased on the following, looks like best data for analysis are trout in the tribs in 2009 2010. Need to decide what to do for salmon\n\n\nCode\n#everything\nggplot(cdWB_wanding, aes(j, sectionWQuarter, color = tag) )+\n  geom_point()+\n  geom_line() +\n  scale_y_continuous(limits = c(0,50))+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Everything\") +\n  facet_grid(riverOrdered ~ year)\n\n\n\n\n\nCode\n#everything\nggplot(filter(cdWB_wanding, aliveOrDead != 'dead'), aes(j, sectionWQuarter, color = tag) )+\n  geom_point()+\n  geom_line() +\n  scale_y_continuous(limits = c(0, 50))+\n  theme(legend.position = \"none\")+\n  ggtitle(\"Not dead\") +\n  facet_grid(river~year)"
  },
  {
    "objectID": "getDataWanding.html#tributaries",
    "href": "getDataWanding.html#tributaries",
    "title": "6  Get wanding data",
    "section": "6.3 Tributaries",
    "text": "6.3 Tributaries\n\n\nCode\n# Tribs\n# Loop over species\nfor (s in c(\"bkt\",\"bnt\") ) {\n  tmp2 &lt;-\n    ggplot(filter(cdWB_wanding, river!=\"west brook\" & species == s & aliveOrDead != 'dead'), \n           aes(detectionDate,sectionWQuarter, group = tag))+\n    geom_point(aes(shape = aliveOrDead), size = 2)+\n    geom_line() +\n    scale_y_continuous(limits = c(-2, 15))+\n    #  theme(legend.position=\"none\")+\n    ggtitle(paste(\"Tribs\", s, \"not dead\")) +\n    facet_grid(river ~ year, scales = 'free')\n  print(tmp2)\n}\n\n\n\n\n\n\n\n\n\n6.3.1 Which species_year_tributary?\nRaw data graphs for the 4 sets of data to focus on\n\n\nCode\n#| cache: true\n\n# Tribs - focus on a year\nfor (s in c(\"bkt\", \"bnt\") ) {\n  for (y in c(2009, 2010) ) {\n    for (r in c(\"wb mitchell\", \"wb jimmy\", \"wb obear\")) {\n\n      tmp &lt;-\n        ggplot(filter(cdWB_wanding, river == r & species == s & year == y & aliveOrDead != 'dead'), \n               aes(detectionDate,sectionWQuarter, color = tag))+\n        geom_point(aes(shape=aliveOrDead),size=2)+\n        geom_line() +\n        #  scale_y_continuous(limits=c(0,15))+\n        theme(legend.position=\"none\")+\n        ggtitle(paste(\"Tribs\", s, y, r, \"not dead\"))\n      #  facet_grid(species~year,scales='free')\n\n      print(tmp)\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.2 Movement\nCounts of observations by month, river, year\n\n\nCode\ntable(cdWB_wandingTribs3$month, cdWB_wandingTribs3$river, cdWB_wandingTribs3$year)\n\n\n, ,  = 2009\n\n    \n     wb jimmy wb mitchell\n  9        42          66\n  10      185         161\n  11      170         117\n\n, ,  = 2010\n\n    \n     wb jimmy wb mitchell\n  9        20          14\n  10       46          17\n  11       21          12\n\n\nCode\n ggplot(cdWB_wandingTribs3, aes(moveRate, color = species)) +\n   geom_freqpoly() +\n   facet_grid(river ~ year)\n\n\n\n\n\nFrequency distribution of movement rates\n\n\nCode\nggplot(cdWB_wandingTribs3, aes(moveRate, linetype = species)) +\n  geom_freqpoly(binwidth=5, boundary = min(cdWB_wandingTribs3$moveRate)) +\n  scale_x_continuous(\"Movement rate (m/week)\") +\n  scale_y_continuous(\"Frequency\") +\n  theme_bw(base_size=25)+\n  theme( strip.background = element_blank()\n         #strip.text = element_blank()\n         #legend.position = \"none\"\n         ) +\n  facet_grid(~ river)\n\n\n\n\n\n\n\n6.3.3 Intervals\n\n\nCode\n# #Cut moveTime into intervals to make sure patterns look same for recaptures of different intervals\n\n# ggplot(cdWB_wandingTribs4_target, aes( moveRate, color=interval ) ) +\n#   geom_freqpoly() +\n#   facet_grid(river~year+species)\n\n #Try a boxplot\n ggplot( cdWB_wandingTribs3 %&gt;% filter(month %in% 9:11), \n         aes( factor(month),moveRate, color = species ) ) +\n   geom_boxplot() +\n   facet_grid(river~year)\n\n\n\n\n\n\n\n6.3.4 Random effect models\n\n\nCode\n# RE model for individual movement variation\n# \n mod0 &lt;- lmer(abs(moveRate) ~ (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod1 &lt;- lmer(abs(moveRate) ~ factor(species) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod2 &lt;- lmer(abs(moveRate) ~ factor(species) * factor(month) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod3 &lt;- lmer(abs(moveRate) ~ factor(species) + factor(month) + factor(year) + (1|tag), data = cdWB_wandingTribs3)\n# ####\n mod4 &lt;- lmer(abs(moveRate) ~ factor(species) * factor(month) * factor(year) + (1|tag), data = cdWB_wandingTribs3)\n# \n AIC(mod0,mod1,mod2,mod3,mod4) %&gt;% arrange(AIC)\n\n\n     df      AIC\nmod4 14 7388.654\nmod2  8 7429.937\nmod3  7 7434.280\nmod1  4 7460.786\nmod0  3 7466.674\n\n\nCode\n# \n summary(mod4)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: abs(moveRate) ~ factor(species) * factor(month) * factor(year) +  \n    (1 | tag)\n   Data: cdWB_wandingTribs3\n\nREML criterion at convergence: 7360.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.4602 -0.2715 -0.1552 -0.0014  9.1656 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n tag      (Intercept)  31.14    5.581  \n Residual             266.81   16.334  \nNumber of obs: 871, groups:  tag, 326\n\nFixed effects:\n                                                    Estimate Std. Error t value\n(Intercept)                                           15.462      1.774   8.714\nfactor(species)bnt                                    -9.948      4.965  -2.004\nfactor(month)10                                      -10.510      1.989  -5.283\nfactor(month)11                                      -11.744      2.049  -5.733\nfactor(year)2010                                      -8.289      3.486  -2.378\nfactor(species)bnt:factor(month)10                     6.680      5.466   1.222\nfactor(species)bnt:factor(month)11                     8.700      5.652   1.539\nfactor(species)bnt:factor(year)2010                    2.813     18.086   0.156\nfactor(month)10:factor(year)2010                       9.706      4.219   2.300\nfactor(month)11:factor(year)2010                      21.045      4.745   4.435\nfactor(species)bnt:factor(month)10:factor(year)2010   -3.630     19.402  -0.187\nfactor(species)bnt:factor(month)11:factor(year)2010  -17.396     20.572  -0.846\n\nCorrelation of Fixed Effects:\n            (Intr) fctr() fc()10 fc()11 f()201 fc():()10 fc():()11 f():()2\nfctr(spcs)b -0.357                                                        \nfctr(mnt)10 -0.850  0.304                                                 \nfctr(mnt)11 -0.831  0.297  0.739                                          \nfctr(y)2010 -0.500  0.179  0.432  0.423                                   \nfctr():()10  0.309 -0.879 -0.364 -0.269 -0.157                            \nfctr():()11  0.301 -0.856 -0.268 -0.362 -0.153  0.779                     \nfc():()2010  0.096 -0.274 -0.083 -0.082 -0.193  0.241     0.235           \nf()10:()201  0.397 -0.142 -0.470 -0.346 -0.799  0.171     0.125     0.154 \nf()11:()201  0.361 -0.129 -0.319 -0.431 -0.706  0.116     0.156     0.136 \nf():()10:() -0.086  0.247  0.102  0.075  0.174 -0.281    -0.218    -0.915 \nf():()11:() -0.083  0.235  0.074  0.099  0.163 -0.214    -0.275    -0.851 \n            f()10: f()11: f():()10:\nfctr(spcs)b                        \nfctr(mnt)10                        \nfctr(mnt)11                        \nfctr(y)2010                        \nfctr():()10                        \nfctr():()11                        \nfc():()2010                        \nf()10:()201                        \nf()11:()201  0.582                 \nf():()10:() -0.217 -0.127          \nf():()11:() -0.134 -0.231  0.789   \n\n\nCode\n# \n randoms &lt;- REsim( mod4, n.sims = 1000 )\n plotREsim(randoms)\n\n\n\n\n\nCode\n# \n\n ggplot(randoms, aes(mean)) + \n   geom_histogram(binwidth = 0.75, boundary = min(randoms$mean)) +\n   scale_x_continuous(\"Indivdual random effect for movement rate (m/week)\") +\n   scale_y_continuous(\"Frequency\") +\n   theme_bw(base_size = 25)\n\n\n\n\n\nCode\n# # % of fish with CI that don't overlap 0\n randoms$lCI &lt;- randoms$mean - randoms$sd * 1.96\n randoms$uCI &lt;- randoms$mean + randoms$sd * 1.96\n randoms$sig &lt;- (randoms$uCI &lt; 0 | randoms$lCI &gt; 0)\n# \n count(randoms, sig)$n/nrow(randoms)\n\n\n[1] 0.98466258 0.01533742\n\n\n\n\n6.3.5 Young-of-year fish\n\n\nCode\nggplot(cdWB_wandingTribs3, aes(moveRate, linetype = species)) +\n  geom_freqpoly() +\n  scale_x_continuous(\"Movement rate (m/week)\") +\n  scale_y_continuous(\"Frequency\") +\n  #theme_bw(base_size=25)+\n  facet_grid(month ~ yoy + river)"
  },
  {
    "objectID": "getDataWanding.html#west-brook-1",
    "href": "getDataWanding.html#west-brook-1",
    "title": "6  Get wanding data",
    "section": "6.4 West Brook",
    "text": "6.4 West Brook\nDid not filter by moveTime &gt; 1 because there were within-day samples in the WB (in contrast to the tribs)\n\n6.4.1 West brook wanding data\nCalculate and plot movement\n\n\nCode\n# Loop over species\nfor (s in unique(cdWB_wanding$species)) {\n  tmp &lt;-\n    ggplot(filter(cdWB_wanding, river == \"west brook\" & species==s & aliveOrDead != 'dead'), \n           aes(detectionDate,sectionWQuarter, color = tag))+\n    geom_point(size=2)+\n    geom_line() +\n    scale_y_continuous(limits = c(30,35))+\n    theme(legend.position = \"none\")+\n    ggtitle(paste(\"WB\", s, \"not dead\")) +\n    facet_wrap(~ year, scales = 'free')\n  print(tmp)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.4.2 Movement\n\n\nCode\ntable(cdWB_wandingWB3$species, cdWB_wandingWB3$month, cdWB_wandingWB3$river, cdWB_wandingWB3$year)\n\n\n, ,  = west brook,  = 2002\n\n     \n        4   5   6   8   9  10  11  12\n  ats   0   0   0  28  11  14 149   8\n  bkt   0   0   0  18   3  12 101   5\n\n, ,  = west brook,  = 2003\n\n     \n        4   5   6   8   9  10  11  12\n  ats 186 281 147   0   0   0   0   0\n  bkt  90 180  93   0   0   0   0   0\n\n\nCode\n# \n# # raw\n ggplot(cdWB_wandingWB3, aes(j, sectionWQuarter, color = tag)) +\n   geom_point()+\n   geom_line() +\n   #  scale_y_continuous(limits=c(0,50))+\n   theme(legend.position=\"none\")+\n   ggtitle(\"Not dead\") +\n   facet_grid(river~year)\n\n\n\n\n\nCode\n ggplot(cdWB_wandingWB3, aes(moveRate, color = species)) +\n   geom_freqpoly() +\n   facet_grid(river ~ year)\n\n\n\n\n\nCode\n ggplot(cdWB_wandingWB3, aes(moveRate, linetype=species)) +\n   geom_freqpoly(binwidth = 5, boundary = min(cdWB_wandingWB3$moveRate, na.rm=T)) +\n   scale_x_continuous(\"Movement rate (m/week)\") +\n   scale_y_continuous(\"Frequency\") +\n   theme_bw(base_size=25)+\n   theme( strip.background = element_blank()\n          #strip.text = element_blank(),\n          #legend.position = \"none\"\n          ) \n\n\n\n\n\nCode\n# #ats is solid line\n\n# \n\n\n\n\n6.4.3 Random effects models\n\n\nCode\n  mod0WB &lt;- lmer( abs(moveRate) ~ (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod1WB &lt;- lmer( abs(moveRate) ~ factor(species) + (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod2WB &lt;- lmer( abs(moveRate) ~ factor(species) * factor(month) + (1|tag), data=cdWB_wandingWB3 )\n  ####\n  mod3WB &lt;- lmer( abs(moveRate) ~ factor(species) + factor(month) + factor(year) + (1|tag), data=cdWB_wandingWB3 )\n \n \n  AIC(mod0WB,mod1WB,mod2WB,mod3WB) %&gt;% arrange(AIC)\n\n\n       df      AIC\nmod2WB 18 12944.76\nmod3WB 11 13001.44\nmod1WB  4 13052.68\nmod0WB  3 13060.72\n\n\nCode\n  summary(mod2WB)\n\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: abs(moveRate) ~ factor(species) * factor(month) + (1 | tag)\n   Data: cdWB_wandingWB3\n\nREML criterion at convergence: 12908.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.5703 -0.4130 -0.1898  0.0996 10.7899 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n tag      (Intercept)  531.2   23.05   \n Residual             2369.0   48.67   \nNumber of obs: 1216, groups:  tag, 124\n\nFixed effects:\n                                   Estimate Std. Error t value\n(Intercept)                          15.257      4.977   3.066\nfactor(species)bkt                    7.872      8.440   0.933\nfactor(month)5                        7.095      4.977   1.426\nfactor(month)6                        2.478      6.373   0.389\nfactor(month)8                        8.650     10.720   0.807\nfactor(month)9                      -12.233     15.934  -0.768\nfactor(month)10                     -10.745     18.187  -0.591\nfactor(month)11                      -2.775      5.712  -0.486\nfactor(month)12                     -18.671     18.086  -1.032\nfactor(species)bkt:factor(month)5     7.775      8.643   0.900\nfactor(species)bkt:factor(month)6    23.543     10.572   2.227\nfactor(species)bkt:factor(month)8   -31.321     18.194  -1.722\nfactor(species)bkt:factor(month)9   -10.230     33.752  -0.303\nfactor(species)bkt:factor(month)10   59.008     25.208   2.341\nfactor(species)bkt:factor(month)11   -8.667      9.734  -0.890\nfactor(species)bkt:factor(month)12    4.149     31.494   0.132\n\n\nCode\n  randomsWB &lt;- REsim(mod2WB, n.sims = 1000)\n  plotREsim(randomsWB)\n\n\n\n\n\nCode\n  ggplot(randomsWB, aes(mean)) +\n    geom_histogram(binwidth = 4.75, boundary = min(randomsWB$mean)) +\n    scale_x_continuous(\"Indivdual random effect for movement rate (m/week)\") +\n    scale_y_continuous(\"Frequency\") +\n    theme_bw(base_size = 25)\n\n\n\n\n\nCode\n  # % of fish with CI that don't overlap 0\n  randomsWB$lCI &lt;- randomsWB$mean - randomsWB$sd * 1.96\n  randomsWB$uCI &lt;- randomsWB$mean + randomsWB$sd * 1.96\n  randomsWB$sig &lt;- (randomsWB$uCI &lt; 0 | randomsWB$lCI &gt; 0)\n  \n  count(randomsWB,sig)$n/nrow(randomsWB)\n\n\n[1] 0.90322581 0.09677419"
  },
  {
    "objectID": "getDataAntenna.html#get-antenna-data-target",
    "href": "getDataAntenna.html#get-antenna-data-target",
    "title": "7  Get antenna data",
    "section": "7.1 Get antenna data target",
    "text": "7.1 Get antenna data target\n\n\nCode\nlibrary(targets)\ncdWB_antenna0 &lt;- tar_read(cdWB_antenna0_target)\nstr(cdWB_antenna0)\n\n\ntibble [410,915 × 14] (S3: tbl_df/tbl/data.frame)\n $ departure    : POSIXct[1:410915], format: \"2014-10-17 20:22:33\" \"2014-10-24 15:34:31\" ...\n $ river        : chr [1:410915] \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" \"wb mitchell\" ...\n $ readerType   : chr [1:410915] \"stationary 2001-iso\" \"stationary 2001-iso\" \"stationary 2001-iso\" \"stationary 2001-iso\" ...\n $ tag          : chr [1:410915] \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" \"00088cbed9\" ...\n $ detectionDate: POSIXct[1:410915], format: \"2014-10-18 00:22:33\" \"2014-10-24 19:34:31\" ...\n $ cohort       : num [1:410915] 2013 2013 2013 2013 2013 ...\n $ species      : chr [1:410915] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated: Date[1:410915], format: \"2014-10-25\" \"2014-10-25\" ...\n $ sex          : chr [1:410915] NA NA NA NA ...\n $ riverOrdered : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 3 3 3 3 1 2 2 2 2 2 ...\n $ year         : num [1:410915] 2014 2014 2014 2014 2014 ...\n $ yday         : num [1:410915] 291 297 297 297 298 258 260 260 289 289 ...\n $ date         : Date[1:410915], format: \"2014-10-18\" \"2014-10-24\" ...\n $ drainage     : chr [1:410915] \"west\" \"west\" \"west\" \"west\" ...\n\n\nNeed to find previous antanna analysis - lower left drawer in office desk."
  },
  {
    "objectID": "dataAll.html#merge-all-data",
    "href": "dataAll.html#merge-all-data",
    "title": "8  All fish data",
    "section": "8.1 Merge All data",
    "text": "8.1 Merge All data\n\n8.1.1 Read merged data target\nVariables in the all data dataset\n\n\ntibble [516,898 × 92] (S3: tbl_df/tbl/data.frame)\n $ tag                                      : chr [1:516898] \"00088cbed0\" \"00088cbed3\" \"00088cbed4\" \"00088cbed4\" ...\n $ detectionDate                            : POSIXct[1:516898], format: \"2013-03-25 04:00:00\" \"2012-06-07 13:03:00\" ...\n $ sampleName                               : chr [1:516898] \"84\" \"81\" \"84\" \"85\" ...\n $ sampleNumber                             : num [1:516898] 73 70 73 74 70 71 73 79 80 71 ...\n $ river                                    : chr [1:516898] \"wb obear\" \"west brook\" \"west brook\" \"west brook\" ...\n $ section                                  : num [1:516898] 7 1 40 44 25 32 32 3 3 23 ...\n $ area                                     : chr [1:516898] \"trib\" \"inside\" \"inside\" \"inside\" ...\n $ observedLength                           : num [1:516898] 62 62 109 154 113 120 147 70 74 86 ...\n $ survey                                   : chr [1:516898] \"shock\" \"shock\" \"shock\" \"shock\" ...\n $ pass                                     : num [1:516898] 1 1 1 1 1 1 1 1 1 1 ...\n $ observedWeight                           : num [1:516898] 1.9 2.7 12.6 41.3 15.5 18.3 30.4 3.5 4.8 6.7 ...\n $ comments                                 : chr [1:516898] \"additional genetic sample\" NA NA NA ...\n $ cohort                                   : num [1:516898] 2012 2012 2012 2012 2011 ...\n $ species                                  : chr [1:516898] \"bkt\" \"bkt\" \"bkt\" \"bkt\" ...\n $ dateEmigrated                            : Date[1:516898], format: NA NA ...\n $ sex                                      : chr [1:516898] NA NA NA NA ...\n $ year                                     : num [1:516898] 2013 2012 2013 2013 2012 ...\n $ season                                   : num [1:516898] 1 2 1 2 2 3 1 3 4 3 ...\n $ proportionSampled                        : num [1:516898] 1 1 1 1 1 1 1 1 1 1 ...\n $ lagDetectionDate                         : POSIXct[1:516898], format: NA NA ...\n $ meanTemperature                          : num [1:516898] NaN NaN 10.7 NaN 16.5 ...\n $ meanFlow                                 : num [1:516898] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByRiver                          : num [1:516898] NaN NaN 0.598 NaN 0.135 ...\n $ meanFlowByArea_flowExt                   : num [1:516898] NaN NaN 0.5247 NaN 0.0338 ...\n $ meanFlowByArea_ByRiver                   : num [1:516898] NaN NaN 0.598 NaN 0.135 ...\n $ sdFlow                                   : num [1:516898] NA NA 0.58 NA 0.181 ...\n $ sdFlowByRiver                            : num [1:516898] NA NA 0.4467 NA 0.0767 ...\n $ sdFlowByArea_flowExt                     : num [1:516898] NA NA 0.58 NA 0.181 ...\n $ sdFlowByArea_ByRiver                     : num [1:516898] NA NA 0.4467 NA 0.0767 ...\n $ propBelowLoFlowThreshByRiver             : num [1:516898] NaN NaN 0 NaN 0 ...\n $ propAboveHiFlowThreshByRiver             : num [1:516898] NaN NaN 0.182 NaN 0 ...\n $ propBelowLoFlowThreshByArea_flowExt      : num [1:516898] NaN NaN 0.0682 NaN 0.0901 ...\n $ propAboveHiFlowThreshByArea_flowExt      : num [1:516898] NaN NaN 0.148 NaN 0.018 ...\n $ riverOrdered                             : Ord.factor w/ 4 levels \"West Brook\"&lt;\"WB Jimmy\"&lt;..: 4 1 1 1 1 1 1 4 4 1 ...\n $ readerId                                 : logi [1:516898] NA NA NA NA NA NA ...\n $ sectionN                                 : num [1:516898] 7 1 40 44 25 32 32 3 3 23 ...\n $ aliveOrDead                              : chr [1:516898] \"alive\" \"alive\" \"alive\" \"alive\" ...\n $ instance                                 : num [1:516898] NA NA NA NA NA NA NA NA NA NA ...\n $ quarter                                  : num [1:516898] NA NA NA NA NA NA NA NA NA NA ...\n $ leftOrRight                              : chr [1:516898] NA NA NA NA ...\n $ habitat                                  : logi [1:516898] NA NA NA NA NA NA ...\n $ cover                                    : logi [1:516898] NA NA NA NA NA NA ...\n $ justification                            : chr [1:516898] NA NA NA NA ...\n $ sectionWQuarter                          : num [1:516898] NA NA NA NA NA NA NA NA NA NA ...\n $ j                                        : num [1:516898] NA NA NA NA NA NA NA NA NA NA ...\n $ date                                     : Date[1:516898], format: \"2013-03-25\" \"2012-06-07\" ...\n $ dummy                                    : num [1:516898] 1 1 1 1 1 1 1 1 1 1 ...\n $ sectionOriginal                          : chr [1:516898] \"7\" \"1\" \"40\" \"44\" ...\n $ inside                                   : logi [1:516898] TRUE TRUE TRUE TRUE TRUE TRUE ...\n $ yday                                     : num [1:516898] 84 159 88 176 160 271 87 260 335 270 ...\n $ ageInSamples                             : num [1:516898] 3 0 3 4 4 5 7 1 2 1 ...\n $ isYOY                                    : logi [1:516898] TRUE TRUE TRUE FALSE FALSE FALSE ...\n $ lagSection                               : num [1:516898] NA NA 44 NA 32 32 NA 3 NA 24 ...\n $ distMoved                                : num [1:516898] NA NA -4 NA -7 0 NA 0 NA -1 ...\n $ lagObservedWeight                        : num [1:516898] NA NA 41.3 NA 18.3 30.4 NA 4.8 NA 12.7 ...\n $ lagObservedLength                        : num [1:516898] NA NA 154 NA 120 147 NA 74 NA 108 ...\n $ lagSampleNumber                          : num [1:516898] NA NA 74 NA 71 73 NA 80 NA 73 ...\n $ sampleNumberDiff                         : num [1:516898] NA NA 1 NA 1 2 NA 1 NA 2 ...\n $ grWeight                                 : num [1:516898] NA NA 0.0135 NA 0.0015 ...\n $ grLength                                 : num [1:516898] NA NA 0.5102 NA 0.0631 ...\n $ minSample                                : num [1:516898] 73 70 73 73 70 70 70 79 79 71 ...\n $ maxSample                                : num [1:516898] 73 70 74 74 73 73 73 80 80 74 ...\n $ minYear                                  : num [1:516898] 1997 1997 1997 1997 1997 ...\n $ moveDir                                  : num [1:516898] NA NA -1 NA -1 0 NA 0 NA -1 ...\n $ sampleInterval                           : num [1:516898] NA NA 88.2 NA 110.9 ...\n $ drainage                                 : chr [1:516898] \"west\" \"west\" \"west\" \"west\" ...\n $ quarter_length                           : num [1:516898] 5 5.2 5.03 4.83 4.75 ...\n $ river_meter                              : num [1:516898] 5252 4394 5208 5292 4903 ...\n $ confluence_river_meter                   : num [1:516898] 5114 0 0 0 0 ...\n $ riverMeter                               : num [1:516898] 5252 4394 5208 5292 4903 ...\n $ nPasses                                  : num [1:516898] 1 2 1 2 2 2 1 1 1 2 ...\n $ wGR_Slope                                : num [1:516898] -0.397 -0.535 -0.367 -0.535 -0.278 ...\n $ grWeightS                                : num [1:516898] NA NA 4.98e-08 NA 7.90e-09 ...\n $ lw_intercept                             : num [1:516898] -5.02 -5.02 -5.02 -5.02 -4.98 ...\n $ lw_slope                                 : num [1:516898] 3.02 3.02 3.02 3.02 3.01 ...\n $ cf                                       : num [1:516898] 0.0797 0.1133 0.0973 0.1131 0.1074 ...\n $ relCF                                    : num [1:516898] 0.0734 0.1043 0.0886 0.1022 0.102 ...\n $ nPerInd                                  : int [1:516898] 1 1 2 2 3 3 3 2 2 3 ...\n $ meanTemperatureScaledBySeason            : num [1:516898] NaN NaN 0.393 NaN 0.819 ...\n $ meanFlowScaledBySeason                   : num [1:516898] NaN NaN 0.526 NaN -0.736 ...\n $ meanFlowByRiverScaledBySeason            : num [1:516898] NaN NaN 0.881 NaN -0.225 ...\n $ meanFlowByArea_flowExtScaledBySeason     : num [1:516898] NaN NaN 0.822 NaN -0.608 ...\n $ meanFlowByArea_ByRiverScaledBySeason     : num [1:516898] NaN NaN 0.881 NaN -0.225 ...\n $ meanTemperatureScaledBySeasonRiver       : num [1:516898] NaN NaN 0.429 NaN 0.771 ...\n $ meanFlowScaledBySeasonRiver              : num [1:516898] NaN NaN 0.609 NaN -0.832 ...\n $ meanFlowByRiverScaledBySeasonRiver       : num [1:516898] NaN NaN 0.667 NaN -0.713 ...\n $ meanFlowByArea_flowExtScaledBySeasonRiver: num [1:516898] NaN NaN 0.609 NaN -0.832 ...\n $ meanFlowByArea_ByRiverScaledBySeasonRiver: num [1:516898] NaN NaN 0.667 NaN -0.713 ...\n $ comment                                  : chr [1:516898] NA NA NA NA ...\n $ sampleType                               : chr [1:516898] NA NA NA NA ...\n $ departure                                : POSIXct[1:516898], format: NA NA ...\n $ readerType                               : chr [1:516898] NA NA NA NA ...\n\n\n\n\nCode\nallOJS = transpose(allOJS0)\n\ntags = tidy(allOJS, groupBy(\"tag\", [summarize({ n: n() })]), arrange([desc(\"n\")]))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviewof selectTag = Inputs.select(\n  tags.map((d) =&gt; d.tag),\n  {\n    //value: \"1bf20ebcae\",\n    label: \"Tags:\",\n    multiple: true\n  }\n)\n\n\n\n\n\n\n\nFacet by river, symbol identifies survey type\n\n\nCode\ntagsToPlot0 = allOJS.filter((d) =&gt; selectTag.includes(d.tag))\n\ntagsToPlot = tidy(\n  tagsToPlot0,\n  mutate({\n    newDate: (d) =&gt; new Date(d.detectionDate)\n  })\n)\n\ntagsOverTime = Plot.plot({\n  marks: [\n    Plot.dot(tagsToPlot, {\n      x: \"newDate\",\n      y: \"riverMeter\",\n      stroke: \"tag\",\n      symbol: \"survey\"\n    }),\n    Plot.line(tagsToPlot, {\n      x: \"newDate\",\n      y: \"riverMeter\",\n      stroke: \"tag\"\n    }),\n    Plot.axisX({ ticks: \"3 months\" })\n  ],\n  \n  facet: {\n    data: tagsToPlot, x: \"river\"\n  },\n  // Include a legend for the color channel \n  color: {\n    legend: true,\n  },\n  symbol: {\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne panel, symbol identifies river\n\n\nCode\ntagsOverTimeRiver = Plot.plot({\n  marks: [\n    Plot.dot(tagsToPlot, {\n      x: \"newDate\",\n      y: \"riverMeter\",\n      stroke: \"tag\",\n      symbol: \"river\"\n    }),\n    Plot.line(tagsToPlot, { x: \"newDate\", y: \"riverMeter\", stroke: \"tag\" }),\n    Plot.axisX({ ticks: \"3 months\" })\n  ],\n  // Include a legend for the color channel\n  color: {\n    legend: true\n  },\n  symbol: {\n    legend: true\n  }\n})\n\n\n\n\n\n\n\n\n\nCode\nselectTag\n\n\n\n\n\n\n\n\n\nCode\ntagsToPlot\n\n\n\n\n\n\n\n\n\nCode\nallOJS\n\n\n\n\n\n\n\n\n\n\n\nCode\nimport {tidy, max, nDistinct, groupBy, mutate, filter, summarize, first, last, distinct, count, n, arrange, mutateWithSummary, desc, debug, sum, slice, mean, deviation, variance, meanRate, median, min, total, sliceMax, innerJoin, leftJoin, pivotLonger, pivotWider, select, rename, complete, contains, when} from \"@pbeshai/tidyjs\"\n\n// Gets most recent version of Plot\nPlot = import(\"https://esm.sh/@observablehq/plot\")"
  },
  {
    "objectID": "dataFlow.html#raw-daily-flow-data",
    "href": "dataFlow.html#raw-daily-flow-data",
    "title": "9  Flow data",
    "section": "9.1 Raw daily flow data",
    "text": "9.1 Raw daily flow data\nRaw data by day.\nFour types of flow data:\n\nPrimary flow data types\n- FlowByArea_flowExt (orange), flow from the flow extension model scaled by watershed area as a proportion of WB area.\n- FlowByRiver (black), flows for each river hindcast from Jenn’s model based on tributary-specific flow estimates.\n\nAdditional flow data types\n- Flow (red), flow extension model for the West Brook from the Mill River.\n- FlowByArea_ByRiver (orange), flow from the West Brook from Jenn’s models scaled to tributaries based on relative tributary area.\n\n9.1.1 Frequency plots of flow data types\n\n\nCode\nggplot(envData |&gt; filter(!is.na(season)), aes(flow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5, linewidth = 2) +\n  geom_density(aes(flowByRiver), color = colorsTalk[2], adjust = 2.5) +\n  geom_density(aes(flowByArea_flowExt), color = colorsTalk[1], adjust = 2.5) +\n  geom_density(aes(flowByArea_ByRiver), color = colorsTalk[3], adjust = 2.5) +\n  labs(x = \"Flow (m3/s)\") +\n  scale_x_log10() +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow distributions, type (red = flow, black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n9.1.2 Time series\n\n9.1.2.1 For talk\n\n\nCode\nlo = 2008\nhi = 2010\n\n\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"west brook\", year &gt; lo, year &lt;= hi)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver+0.1), color = colorsTalk[2], size = 0.1) +\n  geom_line(aes(yday, flowByRiver+0.1), color = colorsTalk[2]) +\n  \n  geom_point(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1], size = 0.5) +\n  geom_line(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1]) +\n  \n  geom_point(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3], size = 0.5) +\n  geom_line(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3]) +\n  scale_y_log10() +\n  theme_publication() +\n  labs(x = \"Day of year\", y = \"Stream flow (m3/s)\") +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb jimmy\", year &gt; lo, year &lt;= hi)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver+0.1), color = colorsTalk[2], size = 0.1) +\n  geom_line(aes(yday, flowByRiver+0.1), color = colorsTalk[2]) +\n  \n  geom_point(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1], size = 0.5) +\n  geom_line(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1]) +\n  \n  geom_point(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3], size = 0.5) +\n  geom_line(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3]) +\n  scale_y_log10() +\n  theme_publication() +\n  labs(x = \"Day of year\", y = \"Stream flow (m3/s)\") +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb mitchell\", year &gt; lo, year &lt;= hi)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver+0.1), color = colorsTalk[2], size = 0.1) +\n  geom_line(aes(yday, flowByRiver+0.1), color = colorsTalk[2]) +\n  \n  geom_point(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1], size = 0.5) +\n  geom_line(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1]) +\n  \n  geom_point(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3], size = 0.5) +\n  geom_line(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3]) +\n  scale_y_log10() +\n  theme_publication() +\n  labs(x = \"Day of year\", y = \"Stream flow (m3/s)\") +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb obear\", year &gt; lo, year &lt;= hi)) +\n  #geom_point(color = \"red3\") +\n  geom_point(aes(yday, flowByRiver+0.1), color = colorsTalk[2], size = 0.1) +\n  geom_line(aes(yday, flowByRiver+0.1), color = colorsTalk[2]) +\n  \n  geom_point(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1], size = 0.5) +\n  geom_line(aes(yday, flowByArea_flowExt+0.1), color = colorsTalk[1]) +\n  \n  geom_point(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3], size = 0.5) +\n  geom_line(aes(yday, flowByArea_ByRiver+0.1), color = colorsTalk[3]) +\n  scale_y_log10() +\n  theme_publication() +\n  labs(x = \"Day of year\", y = \"Stream flow (m3/s)\") +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\n\n9.1.2.2 All years\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"west brook\", year &gt; 1999), aes(yday, flow)) +\n  #geom_point(color = \"red3\") +\n  geom_line(aes(yday, flowByRiver), color = colorsTalk[2]) +\n  geom_line(aes(yday, flowByArea_flowExt), color = colorsTalk[1]) +\n  geom_line(aes(yday, flowByArea_ByRiver), color = colorsTalk[3]) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb jimmy\", year &gt; 1999), aes(yday, flow)) +\n  #geom_line(color = \"red3\") +\n  geom_line(aes(yday, flowByRiver), color = colorsTalk[2]) +\n  geom_line(aes(yday, flowByArea_flowExt), color = colorsTalk[1]) +\n  geom_line(aes(yday, flowByArea_ByRiver), color = colorsTalk[3]) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb mitchell\", year &gt; 1999), aes(date, flow)) +\n  #geom_line(color = \"red3\") +\n  geom_line(aes(yday, flowByRiver), color = colorsTalk[2]) +\n  geom_line(aes(yday, flowByArea_flowExt), color = colorsTalk[1]) +\n  geom_line(aes(yday, flowByArea_ByRiver), color = colorsTalk[3]) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\nCode\nggplot(envData |&gt; filter(river == \"wb obear\", year &gt; 1999), aes(date, flow)) +\n  #geom_line(color = \"red3\") +\n  geom_line(aes(yday, flowByRiver), color = colorsTalk[2]) +\n  geom_line(aes(yday, flowByArea_flowExt), color = colorsTalk[1]) +\n  geom_line(aes(yday, flowByArea_ByRiver), color = colorsTalk[3]) +\n  scale_y_log10() +\n  facet_wrap(~year)\n\n\n\n\n\nStream flow distributions, type (black = flowByRiver, orange = flowByArea_flowExt, green = FlowByArea_ByRiver)\n\n\n\n\n\n\n\n\n\n\n9.1.3 Summary stats\n\n\nCode\nsummaryStats &lt;- envData |&gt; \n  filter(!is.na(season)) |&gt; \n  group_by(river, season) |&gt; \n  summarize(meanFlowByRiver = mean(flowByRiver, na.rm = TRUE),\n            sdFlowByRiver = sd(flowByRiver, na.rm = TRUE),\n            meanFlowByArea = mean(flowByArea_flowExt, na.rm = TRUE),\n            sdFlowByArea = sd(flowByArea_flowExt, na.rm = TRUE),\n            meanFlowByArea_ByRiver = mean(flowByArea_ByRiver, na.rm = TRUE),\n            sdFlowByArea_ByRiver = sd(flowByArea_ByRiver, na.rm = TRUE))\n\nsummaryStatsLong &lt;- \n  summaryStats |&gt; \n  pivot_longer(cols = c(meanFlowByArea, meanFlowByRiver, meanFlowByArea_ByRiver), names_to = \"flowType\") |&gt; \n  addGG_noSpecies()\n\nggplot(summaryStatsLong, aes(seasonGG, value, color = flowType)) +\n  geom_point(size = 4) +\n  geom_line(aes(season,value, color = flowType), size = 1.2) + # using seasonGG in ggplot aes throws an error because it is an ordered factor\n  scale_x_discrete(\"Season\") +\n  scale_y_continuous(\"Mean stream flow (m3/s)\") +\n  scale_color_manual(values = colorsTalk) +\n # scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  #guides(color = FALSE) +\n  facet_wrap(~riverGG, scales = \"free\")\n\n\n\n\n\nCode\n#talk\nggplot(summaryStatsLong |&gt; filter(flowType %in% c('meanFlowByArea', 'meanFlowByRiver')), aes(seasonGG, value, color = flowType)) +\n  geom_point(size = 4) +\n  geom_line(aes(season,value, color = flowType), size = 1.2) + # using seasonGG in ggplot aes throws an error because it is an ordered factor\n  scale_x_discrete(\"Season\") +\n  scale_y_continuous(\"Mean stream flow (m3/s)\") +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  #guides(color = FALSE) +\n  facet_wrap(~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n9.1.4 Flow duration curves\n\n9.1.4.1 Across all years and seasons\n90% for low flow - look for inflection point\nPeak flow analysis for spring\n\n\nCode\nggplot(fdcStats, aes(stat, perc, color = variable)) +\n  geom_line() +\n  geom_point(size = 2) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication() +\n  facet_wrap(~river, scales = \"free\", labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n9.1.4.2 Grouped by year\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(fdcStatsY |&gt; filter(river == \"west brook\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |&gt; filter(river == \"wb jimmy\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |&gt; filter(river == \"wb mitchell\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsY |&gt; filter(river == \"wb obear\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_wrap(~variable, ncol = 2, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\n\n9.1.4.3 Grouped by season\n\nWest BrookOpen LargeOpen SmallIsolated Small\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"west brook\", !is.na(season)), aes(stat, perc+0.1, color = factor(season))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorBlindGrey8) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~variable, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"west brook\", !is.na(season)), aes(stat, perc+0.1, color = (variable))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb jimmy\", !is.na(season)), aes(stat, perc+0.1, color = factor(season))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorBlindGrey8) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~variable, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb jimmy\", !is.na(season)), aes(stat, perc+0.1, color = (variable))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb mitchell\", !is.na(season)), aes(stat, perc+0.1, color = factor(season))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorBlindGrey8) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~variable, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb mitchell\", !is.na(season)), aes(stat, perc+0.1, color = (variable))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb obear\", !is.na(season)), aes(stat, perc+0.1, color = factor(season))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorBlindGrey8) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~variable, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(fdcStatsS |&gt; filter(river == \"wb obear\", !is.na(season)), aes(stat, perc+0.1, color = (variable))) +\n  geom_line(size = 1) +\n  geom_point(size = 3) +\n  geom_vline(xintercept = c(0.11, 0.89), color = \"black\") +\n  labs(x = \"Flow percentile\", y = \"Flow (+0.1)\") +\n  scale_y_log10() +\n  scale_color_manual(values = colorsTalk) +\n  theme_publication(18) +\n  theme(strip.background = element_blank()) +\n  facet_grid(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\n\n9.1.4.4 Grouped by year and season\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nggplot(fdcStatsYS |&gt; filter(river == \"west brook\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |&gt; filter(river == \"wb jimmy\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |&gt; filter(river == \"wb mitchell\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(fdcStatsYS |&gt; filter(river == \"wb obear\"), aes(stat, perc, color = year, group = year)) +\n  geom_line() +\n  geom_point(size = 0.5) +\n  labs(x = \"Flow percentile\", y = \"Flow\") +\n  scale_y_log10() +\n  scale_color_viridis() +\n  facet_grid(season~variable, scales = \"free\", labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\n\n9.1.4.5 Proportion of days above/below flow duration curve thresholds\nThresholds defined in fdcThresholds_target in modelFDC_targets.R. Based on season-specific flow duration curves.\n\nBy river, high flowsBy river, low flowsBy area, high flowsBy area, low flowsBy area_byRiver, high flows\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |&gt; filter(year &gt; 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |&gt; filter(year &gt; 1999), aes(year, propAboveHiFlowThreshRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |&gt; filter(year &gt; 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(propFDC_aboveBelow |&gt; filter(year &gt; 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\n# ggplot(propFDC_aboveBelow |&gt; filter(year &gt; 1999), aes(year, propBelowLoFlowThreshByArea_byArea, color = riverGG)) + \n#   geom_point() +\n#   geom_line() +\n#   scale_color_discrete() +\n#   labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n#   facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n#### Proportion of days above/below flow duration curve thresholds for individual fish data\nThresholds defined in fdcThresholds_target in modelFDC_targets.R. Based on season-specific flow duration curves. Individual-specific proportion of days calculated in addEnvironmental3() in getDAtaElectro.R and in addEnvrionmental() in getDataCMR_targets.R.\nThis series of figures confirms that values from cd1 are similar to seasonal values from propFDC_aboveBelow and also shows the indvidual variation in proportion of days stats.\n\nBy river, high flowsBy river, low flowsBy area, high flowsBy area, low flows\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(year &gt; 1999), aes(year, propBelowLoFlowThreshByRiver, color = riverGG)) +\n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(year &gt; 1999), aes(year, propAboveHiFlowThreshByRiver, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(year &gt; 1999), aes(year, propBelowLoFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows higher than the high flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(year &gt; 1999), aes(year, propAboveHiFlowThreshByArea_flowExt, color = riverGG)) + \n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Proportion of days with flows lower than the low flow threshold\") +\n  facet_wrap(~season, labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n\n\n\n\n\n9.1.5 Raw mean flow data\nMean flow data that go into models as independent data. Calculated for each fish based on dates of capture for each interval.\n#### Mean flow data types plotted against each other\n\n\nCode\nggplot(cd1, aes(meanFlow, meanFlowByRiver)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow (m3/s) for the West Brook against stream flow by river\n\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlow, meanFlowByArea_flowExt)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow (m3/s) against stream flow by area\n\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowByRiver, meanFlowByArea_flowExt)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow by river (m3/s) against stream flow by area\n\n\n\n\n\n9.1.5.1 Frequency plots of mean flow data types\n\n\nCode\nggplot(cd1, aes(meanFlow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByRiver), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByArea_flowExt), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Flow m3/s\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n9.1.5.2 Time series plots of flow data types\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByArea_flowExt), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n\n9.1.6 Raw sd flow data\n\n\nCode\nggplot(cd1, aes(sdFlowByArea_flowExt, sdFlowByRiver)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStandard deviation of stream flow (m3/s) for the West Brook against stream flow by river\n\n\n\n\n\n9.1.6.1 Frequency plots of sd flow data types\n\n\nCode\nggplot(cd1, aes(sdFlow)) +\n  #geom_density(color = viridis(10)[1], adjust = 2.5) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(sdFlowByRiver), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(sdFlowByArea_flowExt), color = \"green4\", adjust = 2.5) +\n  geom_density(aes(sdFlowByArea_ByRiver), color = \"orange2\", adjust = 2.5) +\n  labs(x = \"Flow m3/s\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStandard deviation in stream flow distributions, type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n9.1.6.2 Time series plots of standard deviation of flow data types\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  #geom_line(aes(date, sdFlow), color = \"red3\") +\n  geom_line(aes(date, sdFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, sdFlowByArea_flowExt), color = \"green4\") +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)"
  },
  {
    "objectID": "dataFlow.html#scaled-mean-flow-data",
    "href": "dataFlow.html#scaled-mean-flow-data",
    "title": "9  Flow data",
    "section": "9.2 Scaled mean flow data",
    "text": "9.2 Scaled mean flow data\n\n9.2.1 Scaled by season\n\n\nCode\nggplot(cd1, aes(meanFlowByArea_flowExtScaledBySeason, meanFlowByRiverScaledBySeason, color = cohort)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeason)) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByRiverScaledBySeason), color = \"blue3\", adjust = 2.5) +\n  geom_density(aes(meanFlowByArea_flowExtScaledBySeason), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanTemperatureScaledBySeason)) +\n  geom_density(color = \"red3\", adjust = 2.5) +\n  #geom_density(aes(meanTemperatureByRiverScaledBySeason), color = \"blue3\", adjust = 2.5) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\n\n9.2.1.1 Time series plots of flow data types scaled by season\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiverScaledBySeason), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByArea_flowExtScaledBySeason), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\n\n\n\n9.2.2 Scaled by season and river\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeasonRiver, meanFlowByRiverScaledBySeasonRiver, color = cohort)) +\n  geom_point() +\n  geom_abline(slope = 1, intercept = 0) +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nCode\nggplot(cd1, aes(meanFlowScaledBySeasonRiver)) +\n  geom_density(color = \"red3\", adjust = 2.5, linewidth = 2) +\n  geom_density(aes(meanFlowByRiverScaledBySeasonRiver), color = \"blue3\", adjust = 2.5, linewidth = 1) +\n  geom_density(aes(meanFlowByArea_flowExtScaledBySeasonRiver), color = \"green4\", adjust = 2.5, linewidth = 0.75) +\n  labs(x = \"Flow type (red = flow, blue = flowByRiver, green = flowByArea_flowExt)\") +\n  facet_grid(river~season, labeller = global_labellerRiverSeasonInt_WB)#, scales = 'free')\n\n\n\n\n\n\n9.2.2.1 Time series plots of flow data types scaled by season and river\n\n\nCode\nggplot(cd1) +\n  #geom_point(aes(date, meanFlowByRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByRiverScaledBySeasonRiver), color = \"blue3\") +\n  geom_line(aes(date, meanFlowByArea_flowExtScaledBySeasonRiver), color = \"green4\", adjust = 2.5) +\n  labs(x = \"Date\", y = \"Stream flow\") +\n  facet_grid(river~season, scales = 'free', labeller = global_labellerRiverSeasonInt_WB)\n\n\n\n\n\nStream flow time series, flow type (blue = flowByRiver, green = flowByArea_flowExt)\n\n\n\n\nCheck cumulative flow\nStream power as flow metric??"
  },
  {
    "objectID": "modelGrowthFlowByRiver.html#growth-models",
    "href": "modelGrowthFlowByRiver.html#growth-models",
    "title": "10  Growth in mass byRiver/byArea",
    "section": "10.1 Growth models",
    "text": "10.1 Growth models\n\n10.1.0.1 Environment/growth raw data graphs\n\n\nCode\nplotFlowGR_byRiver &lt;- function(d, r){\n  fig1 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(meanFlowByArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by area\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFlowGR_byRiverOverlay &lt;- function(d, r){\n  ggplot(d |&gt; filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(meanFlowByArea_flowExt, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(meanFlowByArea_flowExt, grWeight)) +\n    \n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFlowGR_byRiverOverlay(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n\n10.1.1 Flow duration curve data\n\n\nCode\nplotFDC_GR_byRiver &lt;- function(d, r){\n  fig1 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(propBelowLoFlowThreshByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of high flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by river\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(propAboveHiFlowThreshByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of low flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by river\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFDC_GR_byArea &lt;- function(d, r){            \n  fig1 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(propBelowLoFlowThreshByArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of high flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by area\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(propAboveHiFlowThreshByArea_flowExt, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    #geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Proportion of low flow days\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    ggtitle(\"Flow by area\") +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\n\nplotFlowGR_byRiverOverlay &lt;- function(d, r){\n  ggplot(d |&gt; filter(riverGG == r), aes(meanFlowByRiver, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(meanFlowByArea_flowExt, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(meanFlowByArea_flowExt, grWeight)) +\n    \n    labs(x = \"Mean flow by river (black = byRiver, green = byArea)\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFDC_GR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFDC_GR_byArea(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n10.1.1.1 Flow compared with flow duration curve metrics\n\n\nCode\n ggplot(dGAM, aes(flowByRiverS, propBelowLoFlowThreshByRiver)) +\n   geom_point() +\n   geom_point(aes(flowByRiverS, propBelowLoFlowThreshByArea_flowExt), color  = \"green4\") +\n   facet_grid(seasonGG ~ riverGG, scales = \"free\")\n\n\n\n\n\nBy river in black and by area in green\n\n\n\n\n\n\nCode\n ggplot(dGAM, aes(flowByRiverS, propAboveHiFlowThreshByRiver)) +\n   geom_point() +\n   geom_point(aes(flowByRiverS, propAboveHiFlowThreshByArea_flowExt), color  = \"green4\") +\n   facet_grid(seasonGG ~ riverGG, scales = \"free\")\n\n\n\n\n\nBy river in black and by area in green\n\n\n\n\n\n\n\n10.1.2 Flow models\n\n10.1.2.1 Flow standardized by season\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n10.1.2.2 Brook trout - flow by area\nredo models\n\n\nCode\nlmS1ByArea &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight + tempS + flowByAreaS + \n     propBelowLoFlowThreshByArea_flowExt + propAboveHiFlowThreshByArea_flowExt)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\nlmS2ByArea &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight)^2 +\n    (riverGG + seasonGG + poly(tempS, 2) + poly(flowByAreaS, 2))^2 + \n    (riverGG + seasonGG + propBelowLoFlowThreshByArea_flowExt + propAboveHiFlowThreshByArea_flowExt)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\nAIC(lmS1ByArea, lmS2ByArea) |&gt; arrange(AIC)\n\n\n           df       AIC\nlmS2ByArea 71 -86696.71\nlmS1ByArea 62 -86590.70\n\n\n\n\n10.1.2.3 Brook trout - flow by river\nredo models\n\n\nCode\nlmS1ByRiver &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight + tempS + flowByRiverS + \n     propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\nlmS2ByRiver &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight)^2 +\n    (riverGG + seasonGG + poly(tempS, 2) + poly(flowByRiverS, 2))^2 + \n    (riverGG + seasonGG + propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\nlmS3ByRiver &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight)^2 +\n    (riverGG + seasonGG + poly(tempS, 2) + poly(flowByRiverS, 2))^2, \n    #(riverGG + seasonGG + propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\nlmS4ByRiver &lt;- lm(\n  grWeight ~\n    (riverGG + seasonGG + observedWeight)^2 +\n    (riverGG + seasonGG + poly(tempS, 2) + poly(flowByRiverS, 2))^2 + \n    (propBelowLoFlowThreshByRiver + propAboveHiFlowThreshByRiver)^2,\n  data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013))\n\n\nAIC(lmS1ByRiver, lmS2ByRiver, lmS3ByRiver, lmS4ByRiver) |&gt; arrange(AIC)\n\n\n            df       AIC\nlmS2ByRiver 71 -86945.42\nlmS4ByRiver 59 -86729.02\nlmS1ByRiver 62 -86559.57\nlmS3ByRiver 56 -86505.21\n\n\n\n\n10.1.2.4 Brook trout - compare flow byArea and flow byRiver gams\n\n\nCode\npredictBKTlmS &lt;- function(dIn, modInFlowByArea, modInFlowByRiver){\n    \n  predMatByArea0 &lt;- \n    expand.grid(\n      flowByAreaS = seq(-1.5, 1.5, 0.5),\n      propBelowLoFlowThreshByArea_flowExt = seq(0, 0.8, 0.2),\n      propAboveHiFlowThreshByArea_flowExt = seq(0, 0.6, 0.2),\n      tempS = seq(-1.5, 1.5, 0.5), \n      #meanFlowByArea_flowExt = seq(0, 0.8, 0.2), \n      #meanTemperature = seq(0, 20, 5), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = c(2, 10, 30, 60), #seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      #cohortF = 2000:2013,#unique(dIn$cohortF),\n      byRiver = FALSE\n    ) \n  predMatByArea &lt;- \n    add_column(\n      pred = predict.lm(modInFlowByArea, predMatByArea0),\n      predMatByArea0\n    ) |&gt; \n    rename(flow = flowByAreaS, temp = tempS,\n           #meanFlow = meanFlowByArea_flowExt, meanTemperature = meanTemperature,\n           loFlowThresh = propBelowLoFlowThreshByArea_flowExt, \n           hiFlowThresh = propAboveHiFlowThreshByArea_flowExt)\n  \n########\n  predMatByRiver0 &lt;- \n    expand.grid(\n      flowByRiverS = seq(-1.5, 1.5, 0.5), \n      propBelowLoFlowThreshByRiver = seq(0, 0.8, 0.2),\n      propAboveHiFlowThreshByRiver = seq(0, 0.6, 0.2),\n      tempS = seq(-1.5, 1.5, 0.5), \n      #meanFlowByRiver = seq(0, 0.8, 0.2), \n      #meanTemperature = seq(0, 20, 5),\n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = c(2, 10, 30, 60), #seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      #cohortF = 2000:2013,#uunique(dIn$cohortF),\n      byRiver = TRUE\n  )\n  \n  predMatByRiver &lt;- \n    add_column(\n      pred = predict.lm(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |&gt; \n    rename(flow = flowByRiverS, temp = tempS,\n           #meanFlow = meanFlowByRiver, meanTemperature = meanTemperature,\n           loFlowThresh = propBelowLoFlowThreshByRiver, hiFlowThresh = propAboveHiFlowThreshByRiver)\n\n  return(add_row(predMatByArea, predMatByRiver))\n}\n\nlmSBKTPredictions &lt;- predictBKTlmS(dGAM, lmS2ByArea, lmS2ByRiver) |&gt; \n  mutate(byLoFlowThresh = paste(byRiver, loFlowThresh, sep=\"_\"),\n         byHiFlowThresh = paste(byRiver, hiFlowThresh, sep=\"_\"))\n\n\n\n\n10.1.2.5 For talk\n\n\n10.1.2.6 West brook\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"West Brook\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(linewidth = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"West Brook\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(10),\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      #flow %in% c(-1.5,0,1.5),\n      temp %in% 1.5,#c(-1.5,0,1.5)\n      riverGG == \"West Brook\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(linewidth = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"West Brook\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nWB alpha\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      #loFlowThresh == 0,\n      hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"West Brook\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byLoFlowThresh), alpha = loFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"West Brook\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      loFlowThresh == 0,\n      #hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"West Brook\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byHiFlowThresh), alpha = hiFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"West Brook\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\n\n\n10.1.2.7 Open Large\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(10),\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      #cohortF == 2012, \n      #flow %in% c(-1.5,0,1.5),\n      #meanFlow == 0.4,\n      #meanTemperature == 10,\n      temp %in% 0,#c(-1.5,0,1.5)\n      riverGG == \"Open Large\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Open Large\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(10),\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      #flow %in% c(-1.5,0,1.5),\n      temp %in% 1,#c(-1.5,0,1.5)\n      riverGG == \"Open Large\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Open Large\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nOL alpha\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      #loFlowThresh == 0,\n      hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"Open Large\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byLoFlowThresh), alpha = loFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Open Large\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      loFlowThresh == 0,\n      #hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"Open Large\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byHiFlowThresh), alpha = hiFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Open Large\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\n\n\n10.1.2.8 Open Small\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(10),\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      #cohortF == 2012, \n      #flow %in% c(-1.5,0,1.5),\n      #meanFlow == 0.4,\n      #meanTemperature == 10,\n      temp %in% 0,#c(-1.5,0,1.5)\n      riverGG == \"Open Small\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Open Small\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\n\n\n10.1.2.9 Isolated Small\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(10),\n      loFlowThresh == 0,\n      hiFlowThresh == 0,\n      #cohortF == 2012, \n      #flow %in% c(-1.5,0,1.5),\n      #meanFlow == 0.4,\n      #meanTemperature == 10,\n      temp %in% 0,#c(-1.5,0,1.5)\n      riverGG == \"Isolated Small\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byRiver))) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Isolated Small\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      #loFlowThresh == 0,\n      hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"Isolated Small\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byLoFlowThresh), alpha = loFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Isolated Small\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nIS alpha\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      #loFlowThresh == 0,\n      hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"Isolated Small\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byLoFlowThresh), alpha = loFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Isolated Small\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\nCode\nggplot(\n  lmSBKTPredictions |&gt; \n    filter(\n      observedWeight == 10,\n      loFlowThresh == 0,\n      #hiFlowThresh == 0,\n      temp == 0,#c(-1.5,0,1.5)\n      riverGG == \"Open Large\"\n    ), \n  aes(flow, pred, color = (byRiver), group = (byHiFlowThresh), alpha = hiFlowThresh)) +\n  scale_alpha(range = c(1, 0.1)) +\n  geom_line(size = 1.5) +\n  geom_point(size = 5) +\n  labs(x = \"Standardized stream flow\", y = \"Predicted growth rate\") +\n  #ylim(-0.02, 0.06) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication(24) +\n  ggtitle(\"Isolated Small\") +\n  scale_color_manual(values = colorsTalk) +\n  facet_wrap(~seasonGG)#, scales = 'free')\n\n\n\n\n\n\n\n\n10.1.3 Flow std by season/river (not used)\n\n\nCode\nplotFlowGR_SR_byRiver &lt;- function(d, r){\n  fig1 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(flowByRiverSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  fig2 &lt;- ggplot(d |&gt; filter(riverGG == r), aes(flowByAreaSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_smooth(se = FALSE) +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n    labs(x = \"Mean flow by area\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n  \n  grid.arrange(fig1, fig2, ncol = 2)\n}\n\nplotFlowGR_SR_byRiverOverlay &lt;- function(d, r){\n  ggplot(d |&gt; filter(riverGG == r), aes(flowByRiverSR, grWeight)) +\n    geom_point(alpha = 0.05)  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"grey3\") +\n    \n    geom_point(alpha = 0.05, color = \"green4\", aes(flowByAreaSR, grWeight))  +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = \"green4\", aes(flowByAreaSR, grWeight)) +\n    \n    labs(x = \"Mean flow by river\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    #ggtitle(r) +\n    facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"West Brook\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"West Brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Open Large\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Open Large\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Open Small\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Open Small\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiver(dGAM, \"Isolated Small\")\n\n\n\n\n\nCode\nplotFlowGR_SR_byRiverOverlay(dGAM, \"Isolated Small\")\n\n\n\n\n\n\n\n\n\n10.1.3.1 Brook trout - flow\nuse scale(temperature) instead of tempSR?\n\n\nCode\nkIn = 4\nspeciesIn &lt;- \"Brook trout\"\n\ngamSR0 &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1 &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2 &lt;- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3 &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR) + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0, gamSR1, gamSR2, gamSR3) |&gt; arrange(AIC)\n\n\n              df       AIC\ngamSR0 118.63321 -87435.05\ngamSR1  70.75463 -86603.50\ngamSR2 108.81196 -85899.61\ngamSR3 100.34986 -85672.15\n\n\n\n\n10.1.3.2 Brook trout - flow by river\n\n\nCode\ngamSR0ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0ByRiver, gamSR1ByRiver, gamSR2ByRiver, gamSR3ByRiver) |&gt; arrange(AIC)\n\n\n                     df       AIC\ngamSR0ByRiver 116.89094 -87224.07\ngamSR1ByRiver  70.59026 -86375.49\ngamSR2ByRiver 105.40682 -85711.79\ngamSR3ByRiver 102.06380 -85375.03\n\n\n\n\n10.1.3.3 Brook trout - flow by area\n\n\nCode\ngamSR0ByArea &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngamSR1ByArea &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR)^2 + cohortF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngamSR2ByArea &lt;- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByAreaSR)^2 + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngamSR3ByArea &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByAreaSR) + cohortF * ageF +             \n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByAreaSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gamSR0ByArea, gamSR1ByArea, gamSR2ByArea, gamSR3ByArea) |&gt; arrange(AIC)\n\n\n                   df       AIC\ngamSR0ByArea 118.8198 -87442.36\ngamSR1ByArea  70.7452 -86610.01\ngamSR2ByArea 108.9753 -85905.42\ngamSR3ByArea 100.2851 -85675.76\n\n\n\n\nCode\npredictBKTgamSR &lt;- function(dIn, modInFlowByRiver, modInFlowByArea){\n\n  predMatByRiver0 &lt;- \n    expand.grid(\n      flowByRiverSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#uunique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = TRUE\n  )\n  predMatByRiver &lt;- \n    add_column(\n      pred = predict.bam(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |&gt; \n    rename(flow = flowByRiverSR, temp = tempSR)\n  \n  predMatByArea0 &lt;- \n    expand.grid(\n      flowByAreaSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#unique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = FALSE\n    ) \n  predMatByArea &lt;- \n    add_column(\n      pred = predict.bam(modInFlowByArea, predMatByArea0),\n      predMatByArea0\n    ) |&gt; \n    rename(flow = flowByAreaSR, temp = tempSR)\n\n  return(add_row(predMatByRiver, predMatByArea))\n}\ngamSR_BKTPredictions &lt;- predictBKTgamSR(dGAM, gamSR0ByRiver, gamSR0ByArea)\n\n\n\n\n10.1.3.4 Graph predictions\nAcross cohorts, small fish\n\n\nCode\nggplot(\n  gamSR_BKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(22), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.005, 0.02) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')\n\n\n\n\n\nAcross cohorts, large fish\n\n\nCode\nggplot(\n  gamSR_BKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(122), \n      #cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  ylim(-0.02, 0.02) +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(seasonGG ~ riverGG + byRiver, scales = 'free')"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_OB.html",
    "href": "modelsCMR_ft_cohort_Flow_OB.html",
    "title": "11  Flow/survival models - O’Bear (IS) only",
    "section": "",
    "text": "Probability of survival (phi) model structure:\nlogit(phi[t,i]) &lt;-\nbetaInt[ isYOY[i,t],season[t],cohort[i]] +\nbetaFlow[1,isYOY[i,t],season[t]] * flow[i,t] +\nbetaFlow[2,isYOY[i,t],season[t]] * temp[i,t] +\nbetaFlow[3,isYOY[i,t],season[t]] * temp[i,t] * flow[i,t]\nProbability of capture (p) model structure:\nlogit(p[t,i]) &lt;- betaP[isYOY[i,t],season[t-1],cohort[i]]\nThe goal of this modelling exercise is to evaluate the effect of new tributary-specific stream flow estimates on survival of brook trout. Here, we compare survival within one tributary (O’Bear Brook) with flow input data as 1) single flow estimate for all locations (historical approach) and 2) hindcasted flows for each tributary based on new tributary-specific flows which are available since 2000.\nThe goal is to compare survival estimates with tributary-specific flow to estimates with common flow across locations.\nNote: a model without cohort structure is here modelsCMR_ft_Flow_OB.qmd but is not included because results are similar but without the cohort estimates.\nStructure options include [species, cohort, season, isYOY, flow, flow^2]\n\n11.0.1 Model with original flow data\nCohort-dependent estimates of phi and p with flow and temperature hierarchical effects\n\n11.0.1.1 Retrieve model results\nModel is run using targets in R/modelCMR_tt_ft_cohort_OB.R\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  out_flow &lt;- tar_read(tt_modelOut_ft_cohort_OB_flow)\n\n  MCMCplot(object = out_flow$mcmc)\n\n\n\n\n\nCode\n  summary_flow &lt;- MCMCsummary(object = out_flow$mcmc, round = 3) %&gt;%\n    mutate(flowData = \"flow\") %&gt;%\n    rownames_to_column(var = \"var\")\n  \n  #summary_flow %&gt;% filter(grepl(\"betaIntYOYSeason\", var))\n  #summary_flow %&gt;% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flow %&gt;% filter(grepl(\"betaFlow\", var))\n  #summary_flow %&gt;% filter(grepl(\"betaInt\", var))\n  \n  \n  priors &lt;- runif(out_flow$runData$nIter * out_flow$runData$nChains, 0, 1)\n  MCMCtrace(object = out_flow$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaIntYOYSeason\", \"betaPhiYOYSeason\",\"betaPYOYSeason\"\n            #  \"betaIntTop\", \"betaPhiTop\",\"betaFlowTop\",\"betaPTop\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n    MCMCtrace(object = out_flow$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaIntYOY\", \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n11.0.2 Model with flow data hindcast for each rvier\nCohort-dependent estimates of phi and p with flowByRiver hierarchical effects\n\n11.0.2.1 Retrieve model results\nModel is run using targets in R/modelCMR_tt_ft_cohort_OB\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  out_flowByRiver &lt;- tar_read(tt_modelOut_ft_cohort_OB_flowByRiver)\n\n  MCMCplot(object = out_flowByRiver$mcmc)\n\n\n\n\n\nCode\n  summary_flowByRiver &lt;- MCMCsummary(object = out_flowByRiver$mcmc, round = 3) %&gt;%\n    mutate(flowData = \"flowByRiver\") %&gt;%\n    rownames_to_column(var = \"var\")\n  \n  #summary_flowByRiver %&gt;% filter(grepl(\"betaIntYOYSeason\", var))\n  #summary_flowByRiver %&gt;% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flowByRiver %&gt;% filter(grepl(\"betaFlow\", var))\n  \n  \n  priors &lt;- runif(out_flowByRiver$runData$nIter * out_flowByRiver$runData$nChains, 0, 1)\n  MCMCtrace(object = out_flowByRiver$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c( \"betaIntYOY\", \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\" ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n  # MCMCtrace(object = out_flowByRiver$mcmc,\n  #           #ISB = FALSE,\n  #           #exact = TRUE, \n  #           params = c(\"betaInt\"),\n  #           pdf = FALSE, \n  #           priors = priors)\n\n\n\n\n\n11.0.3 Compare parameter estimates of models with flow and flowByRiver\n\n\nCode\nboth &lt;- bind_rows(summary_flow, summary_flowByRiver) %&gt;%\n  rename(lo = '2.5%', hi = '97.5%')\n\nggplot(both %&gt;% filter(grepl(\"betaFlowTop\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) \n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaFlowYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaIntYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaIntYOYSeason\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaInt\\\\[\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaPYOY\", var)), aes(color = flowData)) +\n  geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\nCode\n# ggplot(both %&gt;% filter(grepl(\"betaPOut\", var)), aes(color = flowData)) +\n#   geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n#   geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n11.0.4 Survival comparisons\n\n\nCode\ngetBetas &lt;- function(d) {\n  #betaFlow\n  betaFlow &lt;- d %&gt;% \n    filter(grepl(\"betaInt\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3\n    ) %&gt;%\n    select(-tmp)\n  \n  betaFlowYOY &lt;- d %&gt;% \n    filter(grepl(\"betaFlowYOY\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %&gt;% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n    ) %&gt;%\n    select(-tmp)\n  \n  betaFlowTop &lt;- d %&gt;% \n    filter(grepl(\"betaFlowTop\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %&gt;% as.data.frame(),\n      param = tmp$V2\n    ) %&gt;%\n    select(-tmp)\n  \n  \n}\n\ngetBetaIntOuts &lt;- function(d, dataType = \"flow\") {\n  #betaFlow\n  betaInt &lt;- d %&gt;% \n    filter(grepl(\"betaIntOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n      isYOY = tmp$V1,\n      season = tmp$V2,\n      cohort = tmp$V3,\n      varName = \"betaInt\"\n    ) %&gt;%\n    select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n    \n  betaIntYOY &lt;- d %&gt;% \n    filter(grepl(\"betaIntYOYOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %&gt;% as.data.frame(),\n      isYOY = tmp$V2,\n      varName = \"betaIntYOY\"\n    ) %&gt;%\n    select(-tmp)\n  \n  betaIntYOYSeason &lt;- d %&gt;% \n    filter(grepl(\"betaIntYOYSeasonOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %&gt;% as.data.frame(),\n      isYOY = tmp$V1,\n      season = tmp$V2,\n      varName = \"betaIntYOYSeason\"\n    ) %&gt;%\n    select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n\n  return(\n    bind_rows(betaInt, betaIntYOY, betaIntYOYSeason) %&gt;%\n      mutate(cohort = as.numeric(cohort) + 2002 - 1)\n         )\n}\n\n\n\n11.0.4.1 Get betaIntOut estimates\n\n\nCode\nbetaIntFlow &lt;- getBetaIntOuts(summary_flow, \"flow\")\nbetaIntFlowByRiver &lt;- getBetaIntOuts(summary_flowByRiver, \"flowByRiver\")\n\nbetaInts &lt;- bind_rows(betaIntFlow, betaIntFlowByRiver) %&gt;%\n  rename(lo = '2.5%', hi = '97.5%', median = '50%')\n\n\n\n\nCode\n# Define the facet labeller function\nlabelsIntYOY &lt;- c(\n  \"1\" = \"Growth year 1\",\n  \"2\" = \"Growth year 2\"\n)\n\nlabelsIntSeason &lt;- c(\n  \"1\" = \"Spring\",\n  \"2\" = \"Summer\",\n  \"3\" = \"Autumn\",\n  \"4\" = \"Winter\"\n)\n\nglobal_labellerInt &lt;- labeller(\n  isYOY = labelsIntYOY,\n  season = labelsIntSeason\n  #.default = label_both\n)\n\nggplot(betaInts %&gt;% filter(varName == \"betaInt\"), aes(cohort, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(cohort, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_continuous(\"Cohort\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_grid(season~isYOY, labeller = global_labellerInt) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nglobal_labellerIntYOYSeason &lt;- labeller(\n  isYOY = labelsIntYOY\n # season = labelsIntSeason\n  #.default = label_both\n)\n\nggplot(betaInts %&gt;% filter(varName == \"betaIntYOYSeason\"), aes(season, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(season, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_discrete(\"Season\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_grid(~isYOY, labeller = global_labellerIntYOYSeason) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(betaInts %&gt;% filter(varName == \"betaIntYOY\"), aes(isYOY, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(isYOY, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5))\n\n\n\n\n\n\n\n\n\n\n\n11.0.5 Flow effect predictions\n\n\nCode\ngetPredictions_FlowYOYSeasonCohort &lt;- function(toSave, everyNIters = 10, flowStep = 0.5){\n  \n  mcmc &lt;- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons,\n    cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] &lt;- mcmc$chain1[[predictorsBetaInt[i, \"iter\"], \n                                                 paste0(\"betaInt[\", predictorsBetaInt[i, \"isYOY\"],\n                                                        \", \",       predictorsBetaInt[i, \"season\"],\n                                                        \", \",       predictorsBetaInt[i, \"cohort\"],\n                                                        \"]\")\n    ]]\n  }\n\n  # ## betaPhi\n  # predictorsBetaPhi &lt;- expand.grid(\n  #   iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n  #   isYOY = 1:2,\n  #   season = 1:toSave$myConstants$nSeasons,\n  #   cohort = 1:toSave$myConstants$nCohorts\n  # )\n  # \n  # for(i in 1:nrow(predictorsBetaPhi)){\n  #   predictorsBetaPhi$betaPhi[i] &lt;- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"], \n  #                                                paste0(\"betaPhi[\", predictorsBetaPhi[i, \"isYOY\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"season\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"cohort\"],\n  #                                                       \"]\")\n  #   ]]\n  # }\n  \n  ## betaFlow\n  predictorsBetaFlow &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  #  cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[1, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                      #     \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    predictorsBetaFlow$betaFlow2[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[2, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    \n    predictorsBetaFlow$betaFlow3[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[3, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n  }\n  \n\n  predictorsAll &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    cohort = 1:toSave$myConstants$nCohorts,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n  \n  preds &lt;- predictorsAll %&gt;%\n    left_join(predictorsBetaInt) %&gt;%\n    left_join(predictorsBetaFlow) %&gt;%\n #   left_join(predictorsBetaPhi) %&gt;%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n  \n  return(preds)\n}\n\n\n\n\nCode\ngetPredictions_FlowYOYSeason &lt;- function(toSave, everyNIters = 10, flowStep = 0.5){\n  \n  mcmc &lt;- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n#    cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] &lt;- mcmc$chain1[[predictorsBetaInt[i, \"iter\"], \n                                                 paste0(\"betaIntYOYSeason[\", predictorsBetaInt[i, \"isYOY\"],\n                                                        \", \",       predictorsBetaInt[i, \"season\"],\n                                                  #      \", \",       predictorsBetaInt[i, \"cohort\"],\n                                                        \"]\")\n    ]]\n  }\n\n#   ## betaPhi\n#   predictorsBetaPhi &lt;- expand.grid(\n#     iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n#     isYOY = 1:2,\n#     season = 1:toSave$myConstants$nSeasons\n# #    cohort = 1:toSave$myConstants$nCohorts\n#   )\n#   \n#   for(i in 1:nrow(predictorsBetaPhi)){\n#     predictorsBetaPhi$betaPhi[i] &lt;- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"], \n#                                                  paste0(\"betaPhiYOYSeason[\", predictorsBetaPhi[i, \"isYOY\"],\n#                                                         \", \",       predictorsBetaPhi[i, \"season\"],\n#                                                   #      \", \",       predictorsBetaPhi[i, \"cohort\"],\n#                                                         \"]\")\n#     ]]\n#   }\n  \n  ## betaFlow\n  predictorsBetaFlow &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  #  cohort = 1:toSave$myConstants$nCohorts\n  )\n  \n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[1, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                      #     \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    predictorsBetaFlow$betaFlow2[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[2, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    \n    predictorsBetaFlow$betaFlow3[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"], \n                                                    paste0(\"betaFlow[3, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n  }\n  \n\n  predictorsAll &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n   # cohort = 1:toSave$myConstants$nCohorts,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n  \n  preds &lt;- predictorsAll %&gt;%\n    left_join(predictorsBetaInt) %&gt;%\n    left_join(predictorsBetaFlow) %&gt;%\n  #  left_join(predictorsBetaPhi) %&gt;%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n  \n  return(preds)\n}\n\n\n\n\nCode\npredFlowYOYSeason &lt;- getPredictions_FlowYOYSeason(out_flow, everyNIters = 5) %&gt;%\n    mutate(flowData = \"flow\") \n\npredFlowByRiverYOYSeason &lt;- getPredictions_FlowYOYSeason(out_flowByRiver, everyNIters = 5) %&gt;%\n    mutate(flowData = \"flowByRiver\")\n\npredBoth &lt;- bind_rows(predFlowYOYSeason, predFlowByRiverYOYSeason)\n\n\n\n11.0.5.1 Graph effect flow predictions\nPredictions based on flow from the flow extension curve - original approach\n\n\nCode\ncolors &lt;- c(\"blue\", \"green\", \"red\")\n\nggplot(predFlowYOYSeason %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nPredictions based on flow from flowByRiver\n\n\nCode\nggplot(predFlowByRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nSimilar format to to the 2015 paper\n\n\nCode\ncolors &lt;- c(\"red\", \"green\", \"blue\")\n\nggplot(predFlowYOYSeason %&gt;% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\n\n\n\n\n\n\n11.0.6 Flow effect predictions by cohort\n\n\nCode\npredFlowYOYSeasonCohort &lt;- getPredictions_FlowYOYSeasonCohort(out_flow, everyNIters = 5) %&gt;%\n    mutate(flowData = \"flow\") \n\npredFlowByRiverYOYSeasonCohort &lt;- getPredictions_FlowYOYSeasonCohort(out_flowByRiver, everyNIters = 5) %&gt;%\n    mutate(flowData = \"flowByRiver\")\n\npredBothCohort &lt;- bind_rows(predFlowYOYSeasonCohort, predFlowByRiverYOYSeasonCohort)\n\n\n\n11.0.6.1 Graph flow predictions\nPredictions based on flow from the flow extension curve - original approach\n\n\nCode\ncolors &lt;- c(\"blue\", \"green\", \"red\")\n\nggplot(predFlowYOYSeasonCohort %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY + cohort)\n\n\n\n\n\nPredictions based on flow from flowByRiver\n\n\nCode\nggplot(predFlowByRiverYOYSeasonCohort %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY + cohort)\n\n\n\n\n\nSimilar format to to the 2015 paper\n\n\nCode\nggplot(predFlowYOYSeasonCohort %&gt;% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow,cohort, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\n\n\n\n\n\n\n11.0.7 Relate flow/temp to survival\nGet flow average flow and temp data for each occasion (cohort/season)\nFlow data pathway -\n| Raw data in envDataWB_target from getDataEnv_targets.R\n| Data added to cdWB_CMR0_target using addEnvironmental() in getDataCMR_targets.R\n| Data scaled using scaleEnvData() in getDataCMR_targets.R\n| meanFlowScaled\n| meanFlowByRiverScaled\n| meanTemperatureScaled\n| cdWB_CMR0_target feeds into getEH_AIS() to create eh_WB_2002_2014_target\n| eh_WB_2002_2014_target\\(data contains filtered data that created the components of eh_WB_2002_2014_target that are used for CMR analysis. We can use `eh_WB_2002_2014_target`\\)data to get summary flow and temp data\n\n\nCode\neh_OB_2002_2014_target = tar_read(eh_OB_2002_2014_target)\n\nmFlowTemp &lt;- eh_OB_2002_2014_target$data %&gt;%\n  group_by(cohort, season) %&gt;%\n  summarize(mFlow = mean(meanFlowScaled),\n            mFlowByRiver = mean(meanFlowByRiverScaled),\n            mTemp = mean(meanTemperatureScaled),\n            n = n()) %&gt;%\n  mutate(season = as.character(season))\n\nbetaIntsFT &lt;- betaInts %&gt;% \n  left_join(mFlowTemp)\n\n\nHow do the flow metrics (river, byRiver) compare to each other?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlow, mFlowByRiver, color = as.factor(cohort))) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nHow do flow/flowByRiver compare to temperature?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlow, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlowByRiver, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_wrap(~ season)\n\n\n\n\n\nHow do the flow metrics (river, byRiver) compare to survival estimates?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlow, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mTemp, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nHow do mean survival estimates compare to flow and flowByriver on the same graph?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlow, mean), se = FALSE, color = \"#d46313\", method = lm) +\n  geom_point(aes(mFlow, mean), color = \"#d46313\") +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaInt\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\") +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlow, mean), se = FALSE, color = \"#d46313\") +\n  geom_point(aes(mFlow, mean), color = \"#d46313\") +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY)"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_WB.html#load-data",
    "href": "modelsCMR_ft_cohort_Flow_WB.html#load-data",
    "title": "12  Survival by river/area",
    "section": "12.1 Load data",
    "text": "12.1 Load data\nmove this section to targets\n\n\nCode\n#|label: loadDataCMR\n\n# byArea\nload(paste0('./models/cmrFlowWB/runsOut/mod', 1, '/ttt_WB_mod', 1, '_mostRecent.RData'))\n  out_flowByArea &lt;- d\n\n  #  move to targets  \nsummary_flowByArea &lt;- MCMCsummary(object = out_flowByArea$mcmc, round = 3) %&gt;%\n  mutate(flowData = \"flowByArea\") %&gt;%\n  rownames_to_column(var = \"var\")\n\n# byRiver    \nload(paste0('./models/cmrFlowWB/runsOut/mod', 2, '/ttt_WB_mod', 2, '_mostRecent.RData'))\n  out_flowByRiver &lt;- d\n \nsummary_flowByRiver &lt;- MCMCsummary(object = out_flowByRiver$mcmc, round = 3) %&gt;%\n  mutate(flowData = \"flowByRiver\") %&gt;%\n  rownames_to_column(var = \"var\")\n\n# combined\nboth &lt;- bind_rows(summary_flowByArea, summary_flowByRiver) %&gt;%\n  rename(lo = '2.5%', hi = '97.5%', median = '50%')"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_WB.html#nimble-models",
    "href": "modelsCMR_ft_cohort_Flow_WB.html#nimble-models",
    "title": "12  Survival by river/area",
    "section": "12.2 Nimble models",
    "text": "12.2 Nimble models\n\n12.2.1 Model with original flow data\nCohort-dependent estimates of phi and p with flow and temperature hierarchical effects\n\n12.2.1.1 Retrieve model results\nModel is run using this file wbBook_quarto_targets/models/cmrFlowWB/modelCMR_ttt_ft_cohort_WB_makeFile.R\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  #out_flow &lt;- tar_read(toSave_ttt_WB_target)\n  # out_flow_target &lt;- tar_read(toSave_ttt_WB_target)\n\n  # load(paste0('./models/cmrFlowWB/runsOut/mod', 1, '/ttt_WB_mod', 1, '_mostRecent.RData'))\n  # out_flowByArea &lt;- d\n  \n  \n  #out_flow &lt;- read.csv( paste0('./models/cmrFlowWB/runsOut/mod', modelNum, '/ttt_WB_mcmc_mod', modelNum,'_chains12.csv'))\n  \n  MCMCplot(object = out_flowByArea$mcmc)\n\n\n\n\n\nCode\n  # summary_flowByArea &lt;- MCMCsummary(object = out_flowByArea$mcmc, round = 3) %&gt;%\n  #   mutate(flowData = \"flowByArea\") %&gt;%\n  #   rownames_to_column(var = \"var\")\n  \n  #summary_flowByArea %&gt;% filter(grepl(\"phi\", var))\n  #summary_flowByArea %&gt;% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flowByArea %&gt;% filter(grepl(\"betaFlow\", var))\n  #summary_flowByArea %&gt;% filter(grepl(\"betaInt\", var))\n  \n  \n  #   parametersToSave &lt;- c( \"betaIntOut\", \"betaIntRiverYOYSeasonOut\", \"betaIntRiverSeasonOut\", \"betaIntRiverOut\",                                   \"betaIntTopOut\", \n  #                        \"betaFlowOut\", \"betaFlowRiverOut\", \"betaFlowTopOut\",\n  #                        \"betaInt\", \"betaFlow\",\n  #                        \"betaPOut\", \n  #                        \"psi\"\n  # )\n  \n  priors &lt;- runif(out_flowByArea$nIter * out_flowByArea$nChains, 0, 1)\n  MCMCtrace(object = out_flowByArea$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaIntRiverSeasonOut\"#, \"betaPhiYOYSeason\",\"betaPYOYSeason\"\n            #  \"betaIntTop\", \"betaPhiTop\",\"betaFlowTop\",\"betaPTop\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n    MCMCtrace(object = out_flowByArea$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\n              \"betaFlowRiverOut\"\n             # \"betaIntYOY\", \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\"  \n            #  \"betaInt\", \"betaPhi\",\"betaFlow\",\"betaP\",\n            #  \"betaIntOut\", \"betaPhiOut\",\"betaFlowOut\",\"betaPOut\"\n            ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12.2.2 Model with flow data hindcast for each river\nCohort-dependent estimates of phi and p with flowByRiver hierarchical effects\n\n12.2.2.1 Retrieve model results\nModel is run using this file wbBook_quarto_targets/models/cmrFlowWB/modelCMR_ttt_ft_cohort_WB_makeFile.R\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  #out_flowByRiver &lt;- tar_read(mcmcOutMod2)\n\n  # load(paste0('./models/cmrFlowWB/runsOut/mod', 2, '/ttt_WB_mod', 2, '_mostRecent.RData'))\n  # out_flowByRiver &lt;- d\n  # \n\n  MCMCplot(object = out_flowByRiver$mcmc)\n\n\n\n\n\nCode\n  # summary_flowByRiver &lt;- MCMCsummary(object = out_flowByRiver$mcmc, round = 3) %&gt;%\n  #   mutate(flowData = \"flowByRiver\") %&gt;%\n  #   rownames_to_column(var = \"var\")\n  \n  #summary_flowByRiver %&gt;% filter(grepl(\"betaIntYOYSeason\", var))\n  #summary_flowByRiver %&gt;% filter(grepl(\"betaPhiYOYSeason\", var))\n  #summary_flowByRiver %&gt;% filter(grepl(\"betaFlow\", var))\n  \n  \n  priors &lt;- runif(out_flowByRiver$nIter * out_flowByRiver$nChains, 0, 1)\n  MCMCtrace(object = out_flowByRiver$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c( \n              \"betaIntRiverSeasonOut\"#, \"betaPhiYOY\",\"betaFlowYOY\",\"betaPYOY\" \n                        ),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n  # MCMCtrace(object = out_flowByRiver$mcmc,\n  #           #ISB = FALSE,\n  #           #exact = TRUE, \n  #           params = c(\"betaInt\"),\n  #           pdf = FALSE, \n  #           priors = priors)\n\n\n\n\n\n12.2.3 Compare parameter estimates of models with flowByArea and flowByRiver\n\n\nCode\n# both &lt;- bind_rows(summary_flowByArea, summary_flowByRiver) %&gt;%\n#   rename(lo = '2.5%', hi = '97.5%', median = '50%') \n  # mutate(medianIlogit = ilogit(median),\n  #        loIlogit = ilogit(lo),\n  #        hiIlogit = ilogit(hi))\n  \n\nggplot(both %&gt;% filter(grepl(\"betaIntTop\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaFlowTop\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  )) \n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaFlowRiver\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaFlowRiverOut\", var)), aes(color = flowData)) +\n  geom_point(aes(var, qlogis(median)), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = qlogis(lo), ymax = qlogis(hi)), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaFlow\\\\[\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaIntRiverOut\\\\[\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaIntRiverSeason\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(both %&gt;% filter(grepl(\"betaIntRiverYOYSeason\", var)), aes(color = flowData)) +\n  geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1)) +\n  #labs(x = \"Variable\", y = \"Survival\") +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\n# Uncomment and run to save file for observable\n# write.csv(\n#   both %&gt;% filter(grepl(\"betaIntRiverYOYSeason\", var)), \n#   file = './data/outForObservable/betaIntRiverYOYSeason.csv'\n# )\n\n\n\n# ggplot(both %&gt;% filter(grepl(\"betaInt\\\\[\", var)), aes(color = flowData)) +\n#   geom_point(aes(var, median), size = 2, position = position_dodge(width = 0.5)) +\n#   geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n# ggplot(both %&gt;% filter(grepl(\"betaP\", var)), aes(color = flowData)) +\n#   geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n#   geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n# ggplot(both %&gt;% filter(grepl(\"betaPOut\", var)), aes(color = flowData)) +\n#   geom_point(aes(var, mean), size = 2, position = position_dodge(width = 0.5)) +\n#   geom_errorbar( aes(var, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n#   theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1))\n\n\n\n\nCode\n# out_flow$mcmc$chain1 %&gt;% \n#     filter(grepl(\"phi\\\\[\", var)) %&gt;%\n#     mutate(\n#       flowData = \"flow\",\n#       tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n#       param = tmp$V1,\n#       isYOY = tmp$V2,\n#       season = tmp$V3\n#     ) %&gt;%\n#     dplyr::select(-tmp)\n\n\n\n\n\n\n\n12.2.4 Survival comparisons\n\n\nCode\ngetBetas &lt;- function(d) {\n  #betaFlow\n  betaFlow &lt;- d %&gt;% \n    filter(grepl(\"betaInt\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3\n    ) %&gt;%\n    dplyr::select(-tmp)\n  \n  betaFlowYOY &lt;- d %&gt;% \n    filter(grepl(\"betaFlowYOY\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %&gt;% as.data.frame(),\n      param = tmp$V1,\n      isYOY = tmp$V2,\n    ) %&gt;%\n    dplyr::select(-tmp)\n  \n  betaFlowTop &lt;- d %&gt;% \n    filter(grepl(\"betaFlowTop\", var)) %&gt;%\n    mutate(\n      flowData = \"flow\",\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %&gt;% as.data.frame(),\n      param = tmp$V2\n    ) %&gt;%\n    dplyr::select(-tmp)\n  \n  \n}\n\ngetBetaIntOuts &lt;- function(d, dataType = \"flow\") {\n  #betaFlow\n  betaInt &lt;- d %&gt;% \n    filter(grepl(\"betaIntOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:5] %&gt;% as.data.frame(),\n      river = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3,\n      cohort = tmp$V4,\n      varName = \"betaIntOut\"\n    ) %&gt;%\n    dplyr::select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n    \n  betaIntRiver &lt;- d %&gt;% \n    filter(grepl(\"betaIntRiverOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+)\\\\]\") %&gt;% as.data.frame(),\n      river = tmp$V2,\n      varName = \"betaIntRiverOut\"\n    ) %&gt;%\n    dplyr::select(-tmp)\n  \n  betaIntRiverSeason &lt;- d %&gt;% \n    filter(grepl(\"betaIntRiverSeasonOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+)\\\\]\")[, 2:3] %&gt;% as.data.frame(),\n      river = tmp$V1,\n      season = tmp$V2,\n      varName = \"betaIntRiverSeasonOut\"\n    ) %&gt;%\n    dplyr::select(-tmp) #%&gt;%\n    #filter(!(season == 2 & isYOY == 1))\n  \n  betaIntRiverYOYSeason &lt;- d %&gt;% \n    filter(grepl(\"betaIntRiverYOYSeasonOut\\\\[\", var)) %&gt;%\n    mutate(\n      flowData = dataType,\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n      river = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3,\n      varName = \"betaIntRiverYOYSeasonOut\"\n    ) %&gt;%\n    dplyr::select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n\n  return(\n    bind_rows(betaInt, betaIntRiver, betaIntRiverSeason, betaIntRiverYOYSeason) %&gt;%\n      mutate(\n        cohort = as.numeric(cohort) + 2002 - 1)\n      )\n}\n\n\n\n12.2.4.1 Get betaIntOut estimates\n\n\nCode\nbetaIntFlowByArea &lt;- getBetaIntOuts(summary_flowByArea, \"flowByArea\")\nbetaIntFlowByRiver &lt;- getBetaIntOuts(summary_flowByRiver, \"flowByRiver\")\n\nbetaInts &lt;- bind_rows(betaIntFlowByArea, betaIntFlowByRiver) %&gt;%\n  rename(lo = '2.5%', hi = '97.5%', median = '50%')\n\n\n\n\nCode\nggplot(betaInts %&gt;% filter(varName == \"betaIntOut\"), aes(cohort, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(cohort, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_continuous(\"Cohort\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_grid(season~isYOY+river, labeller = global_labellerInt_WB) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(betaInts %&gt;% filter(varName == \"betaIntRiverSeasonOut\"), aes(season, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(season, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  scale_x_discrete(\"Season\") +  \n  scale_y_continuous(\"Suvrival\") +\n  facet_wrap(~river, labeller = global_labellerInt_WB) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\nCode\nggplot(betaInts %&gt;% filter(varName == \"betaIntRiverYOYSeasonOut\"), aes(isYOY, mean, color = flowData)) +\n  geom_point(size = 2, position = position_dodge(width = 0.5)) +\n  geom_errorbar(aes(isYOY, ymin = lo, ymax = hi), width = 0.4, position = position_dodge(width = 0.5)) +\n  facet_grid(season~river, labeller = global_labellerInt_WB) +\n  guides(color = guide_legend(\n    title = \"Data source\"\n  ))\n\n\n\n\n\n\n\n\n\n\n\n12.2.5 Flow effect predictions\n\n\nCode\n#Has not been updated to new mcmc model\n\ngetPredictions_FlowYOYSeasonCohort &lt;- function(toSave, everyNIters = 10, flowStep = 0.5){\n\n  mcmc &lt;- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons,\n    cohort = 1:toSave$myConstants$nCohorts\n  )\n\n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] &lt;- mcmc$chain1[[predictorsBetaInt[i, \"iter\"],\n                                                 paste0(\"betaInt[\", predictorsBetaInt[i, \"isYOY\"],\n                                                        \", \",       predictorsBetaInt[i, \"season\"],\n                                                        \", \",       predictorsBetaInt[i, \"cohort\"],\n                                                        \"]\")\n    ]]\n  }\n\n  # ## betaPhi\n  # predictorsBetaPhi &lt;- expand.grid(\n  #   iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n  #   isYOY = 1:2,\n  #   season = 1:toSave$myConstants$nSeasons,\n  #   cohort = 1:toSave$myConstants$nCohorts\n  # )\n  #\n  # for(i in 1:nrow(predictorsBetaPhi)){\n  #   predictorsBetaPhi$betaPhi[i] &lt;- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"],\n  #                                                paste0(\"betaPhi[\", predictorsBetaPhi[i, \"isYOY\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"season\"],\n  #                                                       \", \",       predictorsBetaPhi[i, \"cohort\"],\n  #                                                       \"]\")\n  #   ]]\n  # }\n\n  ## betaFlow\n  predictorsBetaFlow &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  #  cohort = 1:toSave$myConstants$nCohorts\n  )\n\n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"],\n                                                    paste0(\"betaFlow[1, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                      #     \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n    predictorsBetaFlow$betaFlow2[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"],\n                                                    paste0(\"betaFlow[2, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n\n    predictorsBetaFlow$betaFlow3[i] &lt;- mcmc$chain1[[predictorsBetaFlow[i, \"iter\"],\n                                                    paste0(\"betaFlow[3, \", predictorsBetaFlow[i, \"isYOY\"],\n                                                           \", \",           predictorsBetaFlow[i, \"season\"],\n                                                  #         \", \",           predictorsBetaFlow[i, \"cohort\"],\n                                                           \"]\")\n    ]]\n  }\n\n\n  predictorsAll &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    isYOY = 1:2,\n    cohort = 1:toSave$myConstants$nCohorts,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n\n  preds &lt;- predictorsAll %&gt;%\n    left_join(predictorsBetaInt) %&gt;%\n    left_join(predictorsBetaFlow) %&gt;%\n #   left_join(predictorsBetaPhi) %&gt;%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n\n  return(preds)\n}\n\n\n\n\nCode\ngetPredictions_FlowRiverYOYSeason &lt;- function(toSave, everyNIters = 10, flowStep = 0.5){\n\n  mcmc &lt;- toSave$mcmc\n  ## betaInt\n  predictorsBetaInt &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    river = 1:toSave$myConstants$nRivers,\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  )\n\n  for(i in 1:nrow(predictorsBetaInt)){\n    predictorsBetaInt$betaInt[i] &lt;-\n      qlogis( #because don't have var w/o Out as of 4/24/23\n        mcmc$chain1[[\n          predictorsBetaInt[i, \"iter\"],\n          paste0(\"betaIntRiverYOYSeasonOut[\",\n                 predictorsBetaInt[i, \"river\"],\n                 \", \", \n                 predictorsBetaInt[i, \"isYOY\"],\n                 \", \",       \n                 predictorsBetaInt[i, \"season\"],\n                 \"]\")\n        ]]\n      )\n  }\n\n    #   parametersToSave &lt;- c( \"betaIntOut\", \"betaIntRiverYOYSeasonOut\", \"betaIntRiverSeasonOut\", \"betaIntRiverOut\",                                   \"betaIntTopOut\", \n  #                        \"betaFlowOut\", \"betaFlowRiverOut\", \"betaFlowTopOut\",\n  #                        \"betaInt\", \"betaFlow\",\n  #                        \"betaPOut\", \n  #                        \"psi\"\n  # )\n  \n  \n#   ## betaPhi\n#   predictorsBetaPhi &lt;- expand.grid(\n#     iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n#     isYOY = 1:2,\n#     season = 1:toSave$myConstants$nSeasons\n# #    cohort = 1:toSave$myConstants$nCohorts\n#   )\n#\n#   for(i in 1:nrow(predictorsBetaPhi)){\n#     predictorsBetaPhi$betaPhi[i] &lt;- mcmc$chain1[[predictorsBetaPhi[i, \"iter\"],\n#                                                  paste0(\"betaPhiYOYSeason[\", predictorsBetaPhi[i, \"isYOY\"],\n#                                                         \", \",       predictorsBetaPhi[i, \"season\"],\n#                                                   #      \", \",       predictorsBetaPhi[i, \"cohort\"],\n#                                                         \"]\")\n#     ]]\n#   }\n\n  ## betaFlow\n  predictorsBetaFlow &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    river = 1:toSave$myConstants$nRivers,\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons\n  )\n\n  for(i in 1:nrow(predictorsBetaFlow)){\n    predictorsBetaFlow$betaFlow1[i] &lt;-\n      mcmc$chain1[[\n        predictorsBetaFlow[i, \"iter\"],\n        paste0(\"betaFlowOut[1, \", \n               predictorsBetaFlow[i, \"river\"],\n               \", \",\n               predictorsBetaFlow[i, \"isYOY\"],\n               \", \",           \n               predictorsBetaFlow[i, \"season\"],\n        \"]\") \n      ]]\n    \n    \n    predictorsBetaFlow$betaFlow2[i] &lt;- \n      mcmc$chain1[[\n        predictorsBetaFlow[i, \"iter\"],\n        paste0(\"betaFlow[2, \", \n               predictorsBetaFlow[i, \"river\"],\n               \", \",\n               predictorsBetaFlow[i, \"isYOY\"],\n               \", \",           \n               predictorsBetaFlow[i, \"season\"],\n        \"]\") \n    ]]\n    \n    predictorsBetaFlow$betaFlow3[i] &lt;- \n      mcmc$chain1[[\n        predictorsBetaFlow[i, \"iter\"],\n        paste0(\"betaFlow[3, \", \n               predictorsBetaFlow[i, \"river\"],\n               \", \",\n               predictorsBetaFlow[i, \"isYOY\"],\n               \", \",           \n               predictorsBetaFlow[i, \"season\"],\n        \"]\") \n    ]]\n  }\n\n\n  predictorsAll &lt;- expand.grid(\n    iter = seq(1, dim(mcmc$chain1)[1], everyNIters),\n    river = 1:toSave$myConstants$nRivers,\n    isYOY = 1:2,\n    season = 1:toSave$myConstants$nSeasons,\n    flow = seq(-1.5, 1.5, flowStep),\n    temp = seq(-1.5, 1.5, flowStep)\n  )\n\n  preds &lt;- predictorsAll %&gt;%\n    left_join(predictorsBetaInt) %&gt;%\n    left_join(predictorsBetaFlow) %&gt;%\n  #  left_join(predictorsBetaPhi) %&gt;%\n    mutate(predPhi = plogis(betaInt + betaFlow1 * flow + betaFlow2 * temp + betaFlow3 * flow * temp))\n\n  return(preds)\n}\n\n\n\n\nCode\npredFlowByAreaRiverYOYSeason &lt;- getPredictions_FlowRiverYOYSeason(out_flowByArea, everyNIters = 2) %&gt;%\n    mutate(flowData = \"flow\")\n\npredFlowByRiverRiverYOYSeason &lt;- getPredictions_FlowRiverYOYSeason(out_flowByRiver, everyNIters = 2) %&gt;%\n    mutate(flowData = \"flowByRiver\")\n\npredBoth &lt;- bind_rows(predFlowByAreaRiverYOYSeason, predFlowByRiverRiverYOYSeason)\n\n\n\n12.2.5.1 Graph flow predictions\nPredictions based on flow from the flow extension curve (flowByArea) - original approach\n\n\nCode\ncolors &lt;- c(\"blue\", \"green\", \"red\")\n\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ river+isYOY, labeller = global_labellerInt_WB)\n\n\n\n\n\nPredictions based on flow from flowByRiver\n\n\nCode\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1)), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ river+isYOY, labeller = global_labellerInt_WB)\n\n\n\n\n\n\n\n12.2.5.2 Figures for talk\nbyArea\n\n\nCode\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 1), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  ggtitle(\"Younger fish, by Area\") +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 2), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  ggtitle(\"Older fish, by Area\") +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\n## subset data for actual talk figures\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 1, river == 1, season != 2), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = cbColorsTalk) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Younger fish, by Area\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  theme_publication(24) +\n  facet_wrap(~season, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 2, river == 1), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = cbColorsTalk) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Older fish, by Area\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  theme_publication(24) +\n  facet_wrap(~season, labeller = global_labellerInt_WB)\n\n\n\n\n\nBy river\n\n\nCode\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 1), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Younger fish, by River\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 2), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = colors) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Older fish, by River\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\n## subset data for actual talk figures\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 1, river == 1, season != 2), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = cbColorsTalk) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Younger fish, by River\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  theme_publication(24) +\n  facet_wrap(~season, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(temp %in% c(-1,0,1), isYOY == 2, river == 1), aes(flow, predPhi, group = ((paste0(iter,temp, sep = \"_\"))))) +\n  geom_line(aes(color = factor(temp)), alpha = 0.05) +\n  scale_color_manual(values = cbColorsTalk) +\n  labs(x = \"Scaled stream flow\", y = \"Survival\") +\n  ggtitle(\"Older fish, by River\") +\n  guides(colour = guide_legend(override.aes = list(alpha = 1), title = \"Scaled\\n Temp\")) +\n  theme_publication(24) +\n  facet_wrap(~season, labeller = global_labellerInt_WB)\n\n\n\n\n\nSimilar format to to the 2015 paper\nflowByArea\n\n\nCode\ncolors2 &lt;- c(\"red\", \"green\", \"blue\")\n\nggplot(predFlowByAreaRiverYOYSeason %&gt;% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors2) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ river+isYOY, labeller = global_labellerInt_WB)\n\n\n\n\n\nflowByRiver\n\n\nCode\nggplot(predFlowByRiverRiverYOYSeason %&gt;% filter(flow %in% c(-1,0,1)), aes(temp, predPhi, group = ((paste0(iter,flow, sep = \"_\"))))) +\n  geom_line(aes(color = factor(flow)), alpha = 0.05) +\n  scale_color_manual(values = colors2) +\n  guides(colour = guide_legend(override.aes = list(alpha = 1))) +\n  facet_grid(season ~ river+isYOY, labeller = global_labellerInt_WB)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n12.2.6 Relate flow/temp to survival\nGet flow average flow and temp data for each occasion (cohort/season)\nFlow data pathway -\n| Raw data in envDataWB_target from getDataEnv_targets.R\n| Data added to cdWB_CMR0_target using addEnvironmental3() in getDataCMR_targets.R (now in generalFunctions.R)\n| Data scaled using scaleEnvData() in getDataCMR_targets.R\n| meanFlowScaled\n| meanFlowByRiverScaled\n| meanTemperatureScaled\n| cdWB_CMR0_target feeds into getEH_AIS() to create eh_WB_2002_2014_target\n| eh_WB_2002_2014_target$data contains filtered data that created the components of eh_WB_2002_2014_target that are used for CMR analysis.\nWe can use eh_WB_2002_2014_target$data to get summary flow and temp data\n\n\nCode\neh_WB_2002_2014_target = tar_read(eh_WB_2002_2014_target)\n\nmFlowTemp &lt;- eh_WB_2002_2014_target$data %&gt;%\n  group_by(riverN, cohort, season) %&gt;%\n  summarize(mFlowByArea = mean(meanFlowByArea_flowExtScaled, na.rm = TRUE),\n            mFlowByRiver = mean(meanFlowByRiverScaled, na.rm = TRUE),\n            mTemp = mean(meanTemperatureScaled, na.rm = TRUE),\n            n = n()) %&gt;%\n  rename(river = riverN) |&gt; \n  mutate(season = as.character(season),\n         river = as.character(river)) \n \n\nbetaIntsFT &lt;- betaInts %&gt;%\n  left_join(mFlowTemp)\n\n\n\n12.2.6.1 Environmental variables\nHow do the flow metrics (byArea, byRiver) compare to each other?\nThese are based on the individual fish flow metrics\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByArea, mFlowByRiver, color = season)) +\n  geom_abline(intercept = 0, slope = 1, size = 1.5) +\n  geom_point(size = 4) +\n  labs(x = \"Standardized stream flow by area\", y = \"Standardized stream flow by river\") +\n  guides(color = guide_legend(\n    title = \"Season\"\n  )) +\n  theme_publication(24) \n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByArea, mFlowByRiver, color = river)) +\n  geom_abline(intercept = 0, slope = 1, size = 1.5) +\n  geom_point(size = 4) +\n  geom_smooth(linewidth = 1.5, se = FALSE, method = \"lm\") +\n  scale_color_manual(values = cbColorsTalk4) +\n  labs(x = \"Standardized stream flow by area\", y = \"Standardized stream flow by river\") +\n  guides(color = guide_legend(\n    title = \"River\"\n  )) +\n  theme_publication(24) \n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByArea, mFlowByRiver, color = as.factor(cohort))) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1) +\n  labs(x = \"Standardized stream flow by area\", y = \"Standardized stream flow by river\") +\n  theme_publication() +\n  guides(color = FALSE) +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nHow do flowByArea/flowByRiver compare to temperature?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByArea, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByRiver, mTemp)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(aes(color = as.factor(cohort))) +\n  geom_abline(intercept = 0, slope = 1) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\n\n\n12.2.6.2 Survival variables\nHow do the flow metrics (byArea, byRiver) compare to survival estimates?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByArea, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\"), aes(mTemp, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_smooth(se = FALSE, color = \"darkgrey\") +\n  geom_point(aes(color = as.factor(cohort))) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nHow do mean survival estimates compare to flowByArea and flowByriver on the same graph?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = FALSE, color = \"#d46313\", method = lm, \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n             data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  scale_x_continuous(\"Flow byr area (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\n# with spline smooths\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\",\n              method = \"lm\", formula = y ~ splines::ns(x, df=3)) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = FALSE, color = \"#d46313\", \n              method = \"lm\", formula = y ~ splines::ns(x, df=3), \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n             data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  scale_x_continuous(\"Flow by area (orange) or flow by river (black)\") +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nFigures for talk\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\", isYOY == 1), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = FALSE, color = \"#d46313\", method = lm, \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\", isYOY == 1)) +\n  geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n             data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\", isYOY == 1)) +\n  scale_x_continuous(\"Scaled stream flow by area (orange) or flow by river (black)\") +\n  scale_y_continuous(\"Survival\") +\n  theme_publication() +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\", isYOY == 2), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = FALSE, color = \"#303140\", method = lm) +\n  geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = FALSE, color = \"#d46313\", method = lm, \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\", isYOY == 2)) +\n  geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n             data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\", isYOY == 2)) +\n  scale_x_continuous(\"Scaled stream flow by area (orange) or flow by river (black)\") +\n  scale_y_continuous(\"Survival\") +\n  theme_publication() +\n  facet_grid(season ~ river, labeller = global_labellerInt_WB)\n\n\n\n\n\nHow do mean survival estimates compare to flowByArea and flowByriver on the same graph without points?\n\n\nCode\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = TRUE, color = \"#303140\", method = lm) +\n  #geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = TRUE, color = \"#d46313\", method = lm, \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  #geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n  #           data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  scale_y_continuous(\"Seasonal survival\", limits = c(0, 1)) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)\n\n\n\n\n\nCode\n# with spline smooths\nggplot(betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByRiver\"), aes(mFlowByRiver, mean)) +\n  geom_smooth(se = TRUE, color = \"#303140\",\n              method = \"lm\", formula = y ~ splines::ns(x, df=3)) +\n  #geom_point(color = \"#303140\") +\n  geom_smooth(aes(mFlowByArea, mean), se = TRUE, color = \"#d46313\", \n              method = \"lm\", formula = y ~ splines::ns(x, df=3), \n              data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  #geom_point(aes(mFlowByArea, mean), color = \"#d46313\", \n  #           data = betaIntsFT %&gt;% filter(varName == \"betaIntOut\", flowData == \"flowByArea\")) +\n  scale_x_continuous(\"Flow (orange) or flow by river (black)\") +\n  scale_y_continuous(\"Seasonal survival\", limits = c(0, 1.2)) +\n  facet_grid(season ~ isYOY+river, labeller = global_labellerInt_WB)"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_WB.html#projection-model",
    "href": "modelsCMR_ft_cohort_Flow_WB.html#projection-model",
    "title": "12  Survival by river/area",
    "section": "12.3 Projection model",
    "text": "12.3 Projection model\nFunctions to get the parameter estimates for the projection model.\nNote: these are grabbing the summarized values - may want to get individual iterations in the future.\n\n\nCode\ngetBetaIntProj &lt;- function(d) {\n  #betaFlow\n  betaInt &lt;- d %&gt;% \n    filter(grepl(\"betaIntRiverYOYSeasonOut\", var)) %&gt;%\n    mutate(\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:4] %&gt;% as.data.frame(),\n      river = tmp$V1,\n      isYOY = tmp$V2,\n      season = tmp$V3,\n      varName = \"betaInt\",\n      medianQlogis = qlogis(median) # didn't output betaIntRiverYOYSeason with current run\n    ) %&gt;%\n    dplyr::select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n}\n\ngetBetaFlowProj &lt;- function(d) {\n  betaFlow &lt;- d %&gt;% \n    filter(grepl(\"betaFlow\\\\[\", var)) %&gt;%\n    mutate(\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:5] %&gt;% as.data.frame(),\n      param = tmp$V1,\n      river = tmp$V2,\n      isYOY = tmp$V3,\n      season = tmp$V4,\n      varName = \"betaFlow\"\n    ) %&gt;%\n    dplyr::select(-tmp) %&gt;%\n    filter(!(season == 2 & isYOY == 1))\n}\n    \ngetPsiProjAll &lt;- function(d) {\n  seasonArray &lt;- c(3,4,1,2,3,4,1,2,3,4,1,2)\n  \n  betaPsi &lt;- d %&gt;% \n    filter(grepl(\"psi\", var)) %&gt;%\n    mutate(\n      tmp = str_match(var, \"\\\\[([0-9]+), ([0-9]+), ([0-9]+), ([0-9]+)\\\\]\")[, 2:5] %&gt;% as.data.frame(),\n      fromRiver = tmp$V1,\n      toRiver = tmp$V2,\n      time = tmp$V3,\n      cohort = tmp$V4,\n      season = seasonArray[as.numeric(time)],\n      varName = \"psi\"\n    ) %&gt;%\n    dplyr::select(-tmp) \n}\n\n# Average over years (t) and cohorts\ngetPsiProj &lt;- function(d) {\n  d |&gt; \n    group_by(fromRiver, toRiver, season) |&gt; \n    summarize(\n      meanMedian = mean(median),\n      sdMedian = sd(median),\n      n = n()\n    ) |&gt; \n    ungroup()\n}\n\n\nGet projection parameters\n\n\nCode\n#both %&gt;% filter(grepl(\"betaIntRiverYOYSeasonOut\", var))\n#both %&gt;% filter(grepl(\"betaFlow\\\\[\", var))\n#both %&gt;% filter(grepl(\"psi\", var))\n\nbetaIntProj &lt;- getBetaIntProj(both)\nbetaFlowProj &lt;- getBetaFlowProj(both)\nbetaPsiProj &lt;- getPsiProj(getPsiProjAll(both))\n\n\n\n\nCode\nbInt &lt;- betaIntProj |&gt; filter(season == 1, flowData == \"flowByArea\")\nbFlow &lt;- betaFlowProj |&gt; filter(season == 1)\nbPsi &lt;- betaPsiProj |&gt; filter(season == 1)\n\n\n\ngetParamInt &lt;- function(d, r, y, s, f, varIn, tform = FALSE) {\n  dOut &lt;- d |&gt; \n    filter(\n      river == r,\n      isYOY == y,\n      season == s,\n      flowData == f\n    ) |&gt; \n    dplyr::select(all_of(varIn)) |&gt; \n    as.numeric()\n  \n  if(tform) dOut &lt;- ilogit(dOut)\n  \n  return(dOut)\n}\n\ngetParamFlow &lt;- function(d, p, r, y, s, f, varIn, tform = FALSE) {\n  dOut &lt;- d |&gt; \n    filter(\n      param == p,\n      river == r,\n      isYOY == y,\n      season == s,\n      flowData == f\n    ) |&gt; \n    dplyr::select(all_of(varIn)) |&gt; \n    as.numeric()\n  \n  if(tform) dOut &lt;- ilogit(dOut)\n  \n  return(dOut)\n}\n\ngetParamPsi &lt;- function(d, r1, r2, s, varIn, tform = FALSE) {\n  dOut &lt;- d |&gt; \n    filter(\n      fromRiver == r1,\n      toRiver == r2,\n      season == s\n    ) |&gt; \n    dplyr::select(all_of(varIn)) |&gt; \n    as.numeric()\n  \n  if(tform) dOut &lt;- ilogit(dOut)\n  \n  return(dOut)\n}\n\ngetEst &lt;- function(dInt, r, y, s, flowType, varInInt, tformInt = FALSE,\n                   dFlow, varInFlow, tformFlow = FALSE, \n                   dPsi, sameAsR, r2, sameAsS, varInPsi, tformPsi = FALSE,\n                   flowIn, tempIn\n                   ) {\n  \n  ilogit(\n    getParamInt(dInt, r, y, s, flowType, varInInt, FALSE) + \n      getParamFlow(dFlow, 1, r, y, s, flowType, varInFlow, tform = FALSE) * flowIn +\n      getParamFlow(dFlow, 2, r, y, s, flowType, varInFlow, tform = FALSE) * tempIn +\n      getParamFlow(dFlow, 3, r, y, s, flowType, varInFlow, tform = FALSE) * flowIn * tempIn\n  ) *\n  getParamPsi(dPsi, r, r2, s, varInPsi, FALSE)\n  \n}\n\n\n    logit(phi[r,k]) &lt;- \n      betaInt [  r,isYOYK[k],seasonK[k],cohortK[k]] +\n      betaFlow[1,r,isYOYK[k],seasonK[k]           ] * flowK[k] +\n      betaFlow[2,r,isYOYK[k],seasonK[k]           ] * tempK[k] +\n      betaFlow[3,r,isYOYK[k],seasonK[k]           ] * tempK[k] * flowK[k]\n####Spring\nYOY (isYOY= 1) transition to adult (isYOY = 2)\n\n\nCode\ngetA1 &lt;- function(flowType, fIn, tIn) {\n  A1 &lt;- matrix(0, nrow = 12, ncol = 12, byrow = TRUE)\n  s &lt;- 1\n  \n  \n  #getParamInt &lt;- function(d, r, y, s, f, varIn, tform = FALSE) {\n  #getParamFlow &lt;- function(d, p, r, y, s, f, varIn, tform = FALSE) {\n  #getParamPsi &lt;- function(d, r1, r2, s, varIn, tform = FALSE) {\n\n  # from WB1\n  A1[6,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,5] &lt;- getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,5] &lt;- getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from WB2\n  A1[6,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n    \n  # from OL1\n  A1[6,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,7] &lt;- getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,7] &lt;- getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n \n   \n  # from OL2\n  A1[6,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  \n  # from OS1\n  A1[6,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,9] &lt;-   getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,9] &lt;-   getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n \n  \n  # from OS2\n  A1[6,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from IS1\n  A1[6,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,11] &lt;- getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,11] &lt;- getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n   \n  # from IS2\n  A1[6,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[8,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[10,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A1[12,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  return(A1)  \n}\n\n\n\n12.3.0.1 Summer\nNo transitions from isYOY or reproduction. No yoy data.\n\n\nCode\ngetA2 &lt;- function(flowType, fIn, tIn){\n  A2 &lt;- matrix(0, nrow = 12, ncol = 12, byrow = TRUE)\n  s &lt;- 2\n  \n  # from WB1\n  #A[6,5] &lt;-    getParamInt(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 1, 1, s, \"meanMedian\", FALSE)\n  # A[8,5] &lt;-    getParamInt(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 1, 2, s, \"meanMedian\", FALSE)\n  # A[10,5] &lt;-   getParamInt(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 1, 3, s, \"meanMedian\", FALSE)\n  # A[12,5] &lt;-   getParamInt(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 1, 4, s, \"meanMedian\", FALSE)\n  \n  # from WB2\n  A2[6,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[8,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[10,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[12,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n\n  # from OL1\n  # #A2[6,7] &lt;-    getParamInt(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 2, 1, s, \"meanMedian\", FALSE)\n  # A2[8,7] &lt;-    getParamInt(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 2, 2, s, \"meanMedian\", FALSE)\n  # A2[10,7] &lt;-   getParamInt(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 2, 3, s, \"meanMedian\", FALSE)\n  # A2[12,7] &lt;-   getParamInt(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 2, 4, s, \"meanMedian\", FALSE)\n  \n  # from OL2\n  A2[6,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[8,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[10,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[12,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n \n  \n  # from OS1\n  # #A2[6,9] &lt;-    getParamInt(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 3, 1, s, \"meanMedian\", FALSE)\n  # A2[8,9] &lt;-    getParamInt(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 3, 2, s, \"meanMedian\", FALSE)\n  # A2[10,9] &lt;-   getParamInt(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 3, 3, s, \"meanMedian\", FALSE)\n  # A2[12,9] &lt;-   getParamInt(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 3, 4, s, \"meanMedian\", FALSE)\n  \n  # from OS2\n  A2[6,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[8,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[10,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[12,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  \n  # # from IS1\n  # #A2[6,11] &lt;-    getParamInt(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 4, 1, s, \"meanMedian\", FALSE)\n  # A2[8,11] &lt;-    getParamInt(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 4, 2, s, \"meanMedian\", FALSE)\n  # A2[10,11] &lt;-   getParamInt(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 4, 3, s, \"meanMedian\", FALSE)\n  # A2[12,11] &lt;-   getParamInt(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", TRUE) * getParamPsi(betaPsiProj, 4, 4, s, \"meanMedian\", FALSE)\n  \n  # from IS2\n  A2[6,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[8,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[10,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A2[12,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  return(A2)\n}\n\n\n\n\n12.3.0.2 Autumn\nReproduction\n\n\nCode\ngetA3 &lt;- function(flowType, numEggs = 10, fIn, tIn) {\n  A3 &lt;- matrix(0, nrow = 12, ncol = 12, byrow = TRUE)\n  s &lt;- 3\n  \n  # reproduction\n  #numEggs &lt;- 10\n  \n  A3[1,6] &lt;- numEggs\n  A3[2,8] &lt;- numEggs\n  A3[3,10] &lt;- numEggs\n  A3[4,12] &lt;- numEggs\n  \n  # from WB1\n  A3[5,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[7,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[9,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[11,5] &lt;- getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from WB2\n  A3[6,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[8,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[10,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[12,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OL1\n  A3[5,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[7,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[9,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[11,7] &lt;- getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OL2\n  A3[6,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[8,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[10,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[12,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OS1\n  A3[5,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[7,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[9,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[11,9] &lt;-   getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OS2\n  A3[6,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[8,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[10,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[12,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # # from IS1\n  A3[5,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[7,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[9,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[11,11] &lt;- getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from IS2\n  A3[6,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[8,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[10,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A3[12,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  return(A3)\n}\n\n\n\n\n12.3.0.3 Winter\nEarly survival\n\n\nCode\ngetA4 &lt;- function(flowType, earlySurvival = 0.1, fIn, tIn) {\n  A4 &lt;- matrix(0, nrow = 12, ncol = 12, byrow = TRUE)\n  s &lt;- 4\n\n  # early survival\n  A4[5,1] &lt;- earlySurvival\n  A4[7,2] &lt;- earlySurvival\n  A4[9,3] &lt;- earlySurvival\n  A4[11,4] &lt;- earlySurvival\n  \n  # from WB1\n  A4[5,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[7,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[9,5] &lt;-  getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[11,5] &lt;- getEst(betaIntProj, 1, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from WB2\n  A4[6,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[8,6] &lt;-  getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[10,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[12,6] &lt;- getEst(betaIntProj, 1, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 1, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OL1\n  A4[5,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[7,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[9,7] &lt;-  getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[11,7] &lt;- getEst(betaIntProj, 2, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from OL2\n  A4[6,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[8,8] &lt;-   getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[10,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[12,8] &lt;-  getEst(betaIntProj, 2, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 2, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n\n  # from OS1\n  A4[5,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[7,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[9,9] &lt;-    getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[11,9] &lt;-   getEst(betaIntProj, 3, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n\n  # from OS2\n  A4[6,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[8,10] &lt;-  getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[10,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[12,10] &lt;- getEst(betaIntProj, 3, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 3, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n    \n  # # from IS1\n  A4[5,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[7,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[9,11] &lt;-  getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[11,11] &lt;- getEst(betaIntProj, 4, 1, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  # from IS2\n  A4[6,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 1, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[8,12] &lt;-  getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 2, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[10,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 3, s,\"meanMedian\", FALSE, fIn,tIn)\n  A4[12,12] &lt;- getEst(betaIntProj, 4, 2, s, flowType, \"medianQlogis\", FALSE,   betaFlowProj, \"median\", FALSE,   betaPsiProj, 4, 4, s,\"meanMedian\", FALSE, fIn,tIn)\n  \n  return(A4)\n}\n\n\n\n\n12.3.1 Simulations\n\n\nCode\ngetEigen &lt;- function(flowType, numEggs, earlySurvival, fIn1, fIn2, fIn3, fIn4, tIn){\n  A1 &lt;- getA1(flowType, fIn1, tIn)\n  A2 &lt;- getA2(flowType, fIn2, tIn)  \n  A3 &lt;- getA3(flowType, numEggs = numEggs, fIn3, tIn)\n  A4 &lt;- getA4(flowType, earlySurvival = earlySurvival, fIn4, tIn)\n  \n  A &lt;- A2%*%A1%*%A4%*%A3\n  return(list(A = A, lambdas = eigen(A), A1=A1, A2=A2, A3=A3, A4=A4, fIn1=fIn1, fIn2=fIn2, fIn3=fIn3, fIn4=fIn4))\n}\n\nrunSens &lt;- FALSE\n\nif(runSens) {\n\n  fStart &lt;- -0.1; fEnd &lt;- 0.1; fStep &lt;- 0.1\n  sens &lt;- tibble(flowType = character(), e=numeric(), s=numeric(), fIn1=numeric(), fIn2=numeric(), fIn3=numeric(), fIn4=numeric(), tIn = numeric(), lambda=numeric())\n  As &lt;- list()\n  counter = 0\n  for(flowType in c(\"flowByArea\", \"flowByRiver\")){\n    for(fIn1 in seq(fStart, fEnd, fStep)){\n      for(fIn2 in seq(fStart, fEnd, fStep)){\n        for(fIn3 in seq(fStart, fEnd, fStep)){\n          for(fIn4 in seq(fStart, fEnd, fStep)){\n            for(tIn in seq(fStart, fEnd, fStep)){\n              ss &lt;- 0.03356\n              #tIn = 0\n              if(flowType == \"flowByArea\") {\n                ee = 76.5\n              } else {\n                ee = 117.5\n              }\n              print(c(flowType, ee, fIn1, fIn2, fIn3, fIn4))\n              counter &lt;- counter + 1\n              As[[counter]] &lt;- getEigen(flowType, ee, ss, fIn1=fIn1, fIn2=fIn2, fIn3=fIn3, fIn4=fIn4, tIn = tIn)\n              sens &lt;- bind_rows(sens, tibble(flowType=flowType, e=ee, s=ss, fIn1=fIn1, fIn2=fIn2, fIn3=fIn3, fIn4=fIn4, tIn=tIn, lambda = As[[counter]]$lambdas$values[1]))\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  save(As, sens, file = './data/out/projMatricies.RData')\n} else {\n  load('./data/out/projMatricies.RData')\n}\n\n# ggplot(sens |&gt; filter(tIn == 0), aes(fIn3, lambda, color = flowType)) +\n#   geom_point() +\n#   geom_hline(yintercept = 1) +\n#   geom_line() +\n#   facet_grid(fIn4~fIn1~fIn2)\n\n\n\n\nCode\nsensLM_byArea &lt;- (lm(lambda~(fIn1+fIn2+fIn3+fIn4+tIn), data = sens |&gt; filter(flowType == \"flowByArea\")))\nsummary(sensLM_byArea)\n\n\n\nCall:\nlm(formula = lambda ~ (fIn1 + fIn2 + fIn3 + fIn4 + tIn), data = filter(sens, \n    flowType == \"flowByArea\"))\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.025894 -0.015294 -0.008604  0.008841  0.070540 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.018200   0.001397 728.899   &lt;2e-16 ***\nfIn1         0.050160   0.017108   2.932   0.0037 ** \nfIn2         0.273277   0.017108  15.973   &lt;2e-16 ***\nfIn3         0.007761   0.017108   0.454   0.6505    \nfIn4        -0.007266   0.017108  -0.425   0.6714    \ntIn         -0.563052   0.017108 -32.911   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.02178 on 237 degrees of freedom\nMultiple R-squared:  0.8504,    Adjusted R-squared:  0.8472 \nF-statistic: 269.4 on 5 and 237 DF,  p-value: &lt; 2.2e-16\n\n\nCode\nsensLM_byRiver &lt;- (lm(lambda~(fIn1+fIn2+fIn3+fIn4+tIn), data = sens |&gt; filter(flowType == \"flowByRiver\")))\nsummary(sensLM_byRiver)\n\n\n\nCall:\nlm(formula = lambda ~ (fIn1 + fIn2 + fIn3 + fIn4 + tIn), data = filter(sens, \n    flowType == \"flowByRiver\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.08618 -0.06698  0.01550  0.04009  0.08639 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.089694   0.003528 308.886  &lt; 2e-16 ***\nfIn1        -0.148886   0.043207  -3.446 0.000673 ***\nfIn2         0.209347   0.043207   4.845 2.29e-06 ***\nfIn3        -0.008361   0.043207  -0.194 0.846732    \nfIn4        -0.026707   0.043207  -0.618 0.537096    \ntIn         -2.201930   0.043207 -50.963  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.05499 on 237 degrees of freedom\nMultiple R-squared:  0.9174,    Adjusted R-squared:  0.9157 \nF-statistic: 526.6 on 5 and 237 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nCode\nggFlowSeason &lt;- function(d, var, title) {\n  ggplot(d, aes(get(var), lambda, color = flowType)) +\n    geom_hline(yintercept = 1) +   \n    geom_point(size = 12) +\n    geom_line(size = 1.2) +\n    scale_x_continuous(\"Stream flow (sd units)\", breaks = c(-0.1,0,0.1)) +\n    scale_y_continuous(\"Population growth rate (lambda)\", limits = c(0.85,1.15)) +\n    scale_color_manual(values = colorsTalk) +\n    ggtitle(title) +\n    theme_publication(36) + \n    guides(color = FALSE)\n}\n\n\n\nSpringSummerAutummWinter\n\n\n\n\nCode\nggFlowSeason(sens |&gt; filter(fIn2==0, fIn3==0, fIn4==0, tIn==0), \"fIn1\", \"Spring\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeason(sens |&gt; filter(fIn1==0, fIn3==0, fIn4==0, tIn==0), \"fIn2\", \"Summer\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeason(sens |&gt; filter(fIn1==0, fIn2==0, fIn4==0, tIn==0), \"fIn3\", \"Autumn\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeason(sens |&gt; filter(fIn1==0, fIn2==0, fIn3==0, tIn==0), \"fIn4\", \"Winter\")\n\n\n\n\n\n\n\n\nHotter\n\n\nCode\nggFlowSeasonHot &lt;- function(d, var, title) {\n  ggplot(d, aes(get(var), lambda, color = flowType)) +\n    geom_point(size = 12) +\n    geom_line(size = 1.2) +\n    geom_hline(yintercept = 1) +\n    scale_x_continuous(\"Stream flow (sd units)\", breaks = c(-0.1,0,0.1)) +\n    scale_y_continuous(\"Population growth rate (lambda)\", limits = c(0.7,1.04)) +\n    ggtitle(title) +\n    scale_color_manual(values = colorsTalk) +\n    theme_publication(28) +\n    guides(color = FALSE)\n}\n\n\n\nSpringSummerAutummWinter\n\n\n\n\nCode\nggFlowSeasonHot(sens |&gt; filter(fIn2==0, fIn3==0, fIn4==0, tIn==0.1), \"fIn1\", \"Spring\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonHot(sens |&gt; filter(fIn1==0, fIn3==0, fIn4==0, tIn==0.1), \"fIn2\", \"Summer\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonHot(sens |&gt; filter(fIn1==0, fIn2==0, fIn4==0, tIn==0.1), \"fIn3\", \"Autumn\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonHot(sens |&gt; filter(fIn1==0, fIn2==0, fIn3==0, tIn==0.1), \"fIn4\", \"Winter\")\n\n\n\n\n\n\n\n\nColder\n\n\nCode\nggFlowSeasonCold &lt;- function(d, var, title) {\n  ggplot(d, aes(get(var), lambda, color = flowType)) +\n    geom_point(size = 12) +\n    geom_line(size = 1.2) +\n    geom_hline(yintercept = 1) +\n    scale_x_continuous(\"Stream flow (sd units)\", breaks = c(-0.1,0,0.1)) +\n    scale_y_continuous(\"Population growth rate (lambda)\", limits = c(0.95,1.4)) +\n    ggtitle(title) +\n    scale_color_manual(values = colorsTalk) +\n    theme_publication(28) +\n    guides(color = FALSE)\n}\n\n\n\nSpringSummerAutummWinterAll\n\n\n\n\nCode\n  ggFlowSeasonCold(sens |&gt; filter(fIn2==0, fIn3==0, fIn4==0, tIn== -0.1), \"fIn1\", \"Spring\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonCold(sens |&gt; filter(fIn1==0, fIn3==0, fIn4==0, tIn== -0.1), \"fIn2\", \"Summer\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonCold(sens |&gt; filter(fIn1==0, fIn2==0, fIn4==0, tIn== -0.1), \"fIn3\", \"Autumn\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonCold(sens |&gt; filter(fIn1==0, fIn2==0, fIn3==0, tIn== -0.1), \"fIn4\", \"Winter\")\n\n\n\n\n\n\n\n\n\nCode\nggFlowSeasonCold(sens |&gt; filter(fIn1==0, fIn2==0, fIn3==0, tIn== -0.1), \"fIn4\", \"Winter\")\n\n\n\n\n\n\n\n\n\n\n12.3.2 Projections\n\n\nCode\ninitPop &lt;- 200\ninitN &lt;- matrix(rep(initPop / 12, 12), nrow = 12, ncol = 1)\ninitN &lt;- matrix(rep(c(200,50,50, 50), 3), nrow = 12, ncol = 1)\nnYears &lt;- 50\n\nprojBySeason &lt;- function(initN, nYears, flowType, numEggs, earlySurvival, fIn1, fIn2, fIn3, fIn4, tIn) {\n  A &lt;- list()\n  A[[1]] &lt;- getA1(flowType, fIn1, tIn)\n  A[[2]] &lt;- getA2(flowType, fIn2, tIn)  \n  A[[3]] &lt;- getA3(flowType, numEggs = numEggs, fIn3, tIn)\n  A[[4]] &lt;- getA4(flowType, earlySurvival = earlySurvival, fIn4, tIn)\n  \n  \n  N &lt;- matrix(NA, ncol = nYears * 4, nrow = 12)\n  N[,1] &lt;- initN\n\n  i &lt;- 1\n  for(t in 1:(nYears - 1)) {\n    for(s in c(3,4,1,2)) {\n      i &lt;- i + 1\n      N[,i] &lt;- A[[s]] %*% N[,i-1]\n      \n    }\n  }\n  #plot(N[6,])\n  \n  N2 &lt;- t(N) |&gt; \n    as_tibble() |&gt; \n    rename(\n      wb0 = V1,\n      ol0 = V2,\n      os0 = V3,\n      is0 = V4,\n      wb1 = V5,\n      wb2 = V6,\n      ol1 = V7,\n      ol2 = V8,\n      os1 = V9,\n      os2 = V10,\n      is1 = V11,\n      is2 = V12\n    ) |&gt; \n    rownames_to_column('t') |&gt; \n    pivot_longer(cols = 2:13) |&gt; \n    mutate(\n      time = as.numeric(t),\n      season = rep(c(3,4,1,2), nYears, each = 12),\n      river = substr(name, 1, 2),\n      age = as.numeric(substr(name, 3, 3)),\n      flowType = flowType\n    )\n  \n  return(N2)\n}\n\n# reproduction #s that provide lambda~1\n# 76.5\ngetEigen(\"flowByArea\", 76.5, 0.03356, fIn1=0, fIn2=0, fIn3=0, fIn4=0, tIn = 0)$lambdas$values[1]\n\n\n[1] 1.005668\n\n\nCode\nnByArea &lt;- projBySeason(initN, nYears, \"flowByArea\", 76.5, 0.03356, fIn1=0, fIn2=0, fIn3=0, fIn4=0, tIn = 0)\n\nggplot(nByArea, aes(time, value, color = factor(age))) +\n  geom_point() +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +\n  geom_line() +\n  ggtitle(\"nByArea\") +\n  labs(x = \"Time step (season*year)\", y = \"Number of fish\") +\n  facet_grid(season~river, scales = \"free\")\n\n\n\n\n\nCode\n# 117.5\ngetEigen(\"flowByRiver\", 117.5, 0.03356, fIn1=0, fIn2=0, fIn3=0, fIn4=0, tIn = 0)$lambdas$values[1]\n\n\n[1] 1.009186\n\n\nCode\nnByRiver &lt;- projBySeason(initN, nYears, \"flowByRiver\", 117.5, 0.03356, fIn1=0, fIn2=0, fIn3=0, fIn4=0, tIn = 0)\n\nggplot(nByRiver, aes(time, value, color = factor(age))) +\n  geom_point() +\n  scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +\n  geom_line() +\n  ggtitle(\"nByRiver\") +\n  labs(x = \"Time step (season*year)\", y = \"Number of fish\") +\n  facet_grid(season~river, scales = \"free\")\n\n\n\n\n\nCode\n### both\nnBoth &lt;- bind_rows(nByArea, nByRiver)\nnBothEnd &lt;- nBoth |&gt; filter(time %in% 193:196)\n\nggplot(nBothEnd, aes(age, value, color = flowType)) +\n  geom_point() +\n  geom_line() +\n  scale_color_manual(values = colorsTalk) +\n  facet_grid(season~river, scales = \"free\")\n\n\n\n\n\nCode\nnBothEndSum &lt;- nBothEnd |&gt; \n  filter(age &gt; 0) |&gt; \n  group_by(river, flowType) |&gt; \n  summarize(sum = sum(value))\n\nggplot(nBothEndSum, aes(river, sum, fill = flowType)) +\n  scale_fill_manual(values = colorsTalk) +\n  geom_col(position = \"dodge\")\n\n\n\n\n\nCode\n#check 0's in some age1 entries\n\n\nprojByYear &lt;- function(initN, nYears, flowType, numEggs, earlySurvival, fIn1, fIn2, fIn3, fIn4, tIn) {\n  A1 &lt;- getA1(flowType, fIn1, tIn)\n  A2 &lt;- getA2(flowType, fIn2, tIn)  \n  A3 &lt;- getA3(flowType, numEggs = numEggs, fIn3, tIn)\n  A4 &lt;- getA4(flowType, earlySurvival = earlySurvival, fIn4, tIn)\n  \n  A &lt;- A2%*%A1%*%A4%*%A3\n  \n  N &lt;- matrix(NA, ncol = nYears, nrow = 12)\n  N[,1] &lt;- initN\n  \n  for(t in 2:nYears) {\n    N[,t] &lt;- A%*%N[,t-1]\n  }\n  \n}"
  },
  {
    "objectID": "modelsCMR_ft_cohort_Flow_WB.html#aiml-models",
    "href": "modelsCMR_ft_cohort_Flow_WB.html#aiml-models",
    "title": "12  Survival by river/area",
    "section": "12.4 AI/ML models",
    "text": "12.4 AI/ML models\nModel runs from Xiaowei\n\n\nCode\n# np &lt;- import(\"numpy\")\n# \n# npyGrowth &lt;- np$load('./models/cmrFlowWB/xiaowei/USGS_0320/USGS_0320/growth.npy')\n# npyGrowthByRiver &lt;- np$load('./models/cmrFlowWB/xiaowei/USGS_0320/USGS_0320/growth_byriver.npy')\n# \n# npySurvival &lt;- np$load('./models/cmrFlowWB/xiaowei/USGS_0320/USGS_0320/survival.npy')\n# npySurvivalByRiver &lt;- np$load('./models/cmrFlowWB/xiaowei/USGS_0320/USGS_0320/survival_byriver.npy')"
  },
  {
    "objectID": "modelYOY.html#raw-data-for-yoy-model",
    "href": "modelYOY.html#raw-data-for-yoy-model",
    "title": "13  Young-of-year size model",
    "section": "13.1 Raw data for YOY model",
    "text": "13.1 Raw data for YOY model\n\nEnvironmental data (flow, temperature) are from 1, 3, or 5 months prior to date of individual capture. Also can used fixed dates: assumed spawning dates, assumed emergence dates and actual observation (sample) dates.\nAll fish data are from age-0 in autumn.\nAbundance data."
  },
  {
    "objectID": "modelYOY.html#get-data-from-targets",
    "href": "modelYOY.html#get-data-from-targets",
    "title": "13  Young-of-year size model",
    "section": "13.2 Get data from targets",
    "text": "13.2 Get data from targets\nWest Brook environmental data (flow and temperature) and electrofishing data\n\n\nCode\nlibrary(targets)\nenvDataWB &lt;- tar_read(envDataWB_target)\ncdWB_electro &lt;- tar_read(cdWB_electro_target)"
  },
  {
    "objectID": "modelYOY.html#get-first-observations",
    "href": "modelYOY.html#get-first-observations",
    "title": "13  Young-of-year size model",
    "section": "13.3 Get first observations",
    "text": "13.3 Get first observations\n\nFilter cdWB_electro for first observations in the autumn for age-0 fish (ageInsamples == 1). Including both tagged and untagged fish.\n\n\n\nCode\nfirstObs_noTag &lt;- tar_read(firstObs_noTag_target)\nfirstObs_tag &lt;- tar_read(firstObs_tag_target)\nfirstObs0 &lt;- tar_read(firstObs0_target)\n\n\nFor each date in firstObs0 that at least one fish was captured, calculate summary stats for flow and temperature for different time periods:\n1. Assumed spawning to capture\n2. Assumed spawning to assumed emergence\n3. Assumed emergence to capture\n4. One month preceding capture\n5. Three months preceding capture\n5. Five months preceding capture\nThen merge results with firstObs0 to create firstObs.\n\n\nCode\nfirstObsDates &lt;- tar_read(firstObsDates_target) \n    \nfirstObs_Env &lt;- tar_read(firstObs_Env_target)\n# merge env data into firstObs0\nfirstObs &lt;- tar_read(firstObs_target)\n\n\nUnnest firstObs so environmental summary stats are available as data frame with the name of the time interval as the prefix to the statisticVariable name\n\n\nCode\nfirstObsUnnested &lt;- tar_read(firstObsUnnested_target)\n\n\n\n\nCode\nggplot(firstObsUnnested, aes(oneMonth_sumTScaled, fiveMonth_sumTScaled)) +\n geom_point() +\n facet_wrap(~river)\n\n\n\n\n\n\n13.3.1 Counts of captured fish\nMin and max years (inclusive) for standardizing counts This is in targets, not sure if needed here\n\n\nCode\nminYear &lt;- 2000\nmaxYear &lt;- 2015\n\n\nCounts by river and species\n\n\nCode\ncountsRSY &lt;- tar_read(countsRSY_target)\n\n\n\n\nCode\nggplot(countsRSY, aes(year, countRS_Scaled, color = species)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~ river)\n\n\n\n\n\nCounts by river\n\n\nCode\ncountsRY &lt;- tar_read(countsRY_target)\n\n\n\n\nCode\nggplot(countsRY, aes(year, countR_Scaled, color = river)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\nCounts for the metaPopulation (WB, Jimmy, Mitchell)\nUse these for modelling.\n\n\nCode\ncountsMetaY &lt;- tar_read(countsMetaY_target)\n\n\n\n\nCode\nggplot(countsMetaY, aes(year, count_Scaled)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\nMerge metapopulation scaled counts into firstObsUnnested\n\n\nCode\nfirstObsUnnested &lt;- tar_read(firstObsUnnested_target)\nfirstObsUnnestedWB &lt;- tar_read(firstObsUnnestedWB_target)"
  },
  {
    "objectID": "modelYOY.html#raw-data-plots",
    "href": "modelYOY.html#raw-data-plots",
    "title": "13  Young-of-year size model",
    "section": "13.4 Raw data plots",
    "text": "13.4 Raw data plots\n\n13.4.1 Frequency plots by species and river\n\n\n13.4.2 Brook Trout, West brook\n\n\nCode\n  #cd1 &lt;- cdWB_electro %&gt;% filter(ageInSamples == 1, species != 'ats')\n\n  plotSppRiv = function(s, r) { \n    ggplot(firstObs %&gt;% filter(species == s, river == r), aes(observedLength, color = is.na(tag))) +\n      geom_freqpoly() +\n      geom_vline(xintercept = 60) +\n      ggtitle(paste(s, r, sep = ', ')) +\n      xlim(c(30,125)) +\n      facet_wrap(~ year, scales = \"free_y\")\n  }\n  \n  species = 'bkt'\n  riverOrdered = \"west brook\"\n\n  plotSppRiv(species, riverOrdered)\n\n\n\n\n\n\n\n13.4.3 Brook Trout, wb jimmy\n\n\n\n\n\n\n\n13.4.4 Brook Trout, wb mitchell\n\n\n\n\n\n\n\n13.4.5 Brook Trout, wb obear\n\n\n\n\n\n\n\n13.4.6 Brown Trout, West brook\n\n\n\n\n\n\n\n13.4.7 Brown Trout, wb jimmy\n\n\n\n\n\n\n\n13.4.8 Brown Trout, wb mitchell\n\n\n\n\n\n\n\n13.4.9 Brown Trout, wb obear - there are no Brown trout in O’Bear\n\n\n13.4.10 Trout, in the WB mainstem only\n\n\nCode\n  ggplot(firstObs %&gt;% filter(species != \"ats\"), aes(observedLength)) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60, color = 'orange') +\n    facet_grid(species ~ year)\n\n\n\n\n\nCode\n  ggplot(firstObs %&gt;% filter(species != \"ats\"), aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60, color = 'orange') +\n    facet_grid(species ~ year)\n\n\n\n\n\n\n\n13.4.11 Why are there untagged fish bigger than 60mm?\nCheck 2002/bkt/WB, as an example Answer: because they are outside the study area (area = ‘above’ or ‘below’) or were tagging mortalities\n\n\nCode\n  firstObs2002BKT &lt;- firstObs %&gt;% filter(year == 2002, species == \"bkt\")\n  table(is.na(firstObs2002BKT$tag))\n\n\n\nFALSE  TRUE \n  295   253 \n\n\nCode\n  ggplot(firstObs2002BKT, aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60)\n\n\n\n\n\nCode\n  # looks like untagged area=inside fish wee morts, the rest were above or below\n  ggplot(firstObs2002BKT, aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60) +\n    facet_grid(~area)\n\n\n\n\n\nCode\n  # check 2003\n  ggplot(firstObs %&gt;% filter(year == 2003, species == \"bkt\"), aes(observedLength, color = is.na(tag))) +\n    geom_freqpoly() +\n    geom_vline(xintercept = 60) +\n    facet_grid(~area)\n\n\n\n\n\nCode\n  # same story as 2002"
  },
  {
    "objectID": "modelYOY.html#models-based-on-yearly-means",
    "href": "modelYOY.html#models-based-on-yearly-means",
    "title": "13  Young-of-year size model",
    "section": "13.5 Models based on yearly means",
    "text": "13.5 Models based on yearly means\nFilter firstObsUnnestedWB for bkt, bnt and min/maxYear\n\n\nCode\nd_WB_BKT_BNT &lt;- firstObsUnnestedWB %&gt;% filter(species != \"ats\", year %in% minYear:maxYear) %&gt;%\n  mutate(species01 = ifelse(species == \"bkt\", 1, 0))\n\nhist(d_WB_BKT_BNT$detectionDate, breaks = 250)\n\n\n\n\n\nCode\nd_BKT_BNT &lt;- firstObsUnnested %&gt;% filter(species != \"ats\", year %in% minYear:maxYear) %&gt;%\n  mutate(species01 = ifelse(species == \"bkt\", 1, 0))\n\n\nMean model functions d_WB_BKT_BNT, “oneMonth_sumTScaled”, “oneMonth_sumFScaled” means1R &lt;- getMeansDataByRiver(d_BKT_BNT, “oneMonth_sumTScaled”, “oneMonth_sumFScaled”)\n\n\nCode\ngetMeansData &lt;- function(d, t, f) {\n  means &lt;- d %&gt;% \n    group_by(species, year) %&gt;% \n    summarize(\n      meanLength = mean(observedLength, na.rm = TRUE), \n      meanEmerge_detect_sumTScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n      meanEmerge_detect_sumFScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n      meanTTime_sumTScaled = mean(get(t), na.rm = TRUE),\n      meanFTime_sumFScaled = mean(get(f), na.rm = TRUE),\n      meanYdayScaled = mean(ydayScaled, na.rm = TRUE),\n      meanCount_Scaled = mean(count_Scaled, na.rm = TRUE)\n    )\n  return(means)\n}\n\ngetMeansDataByRiver &lt;- function(d, t, f) {\n  means &lt;- d %&gt;% \n    group_by(species, year, river) %&gt;% \n    summarize(meanLength = mean(observedLength, na.rm = TRUE), \n              meanEmerge_detect_sumTScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanEmerge_detect_sumFScaled = mean(emerge_detect_sumTScaled, na.rm = TRUE),\n              meanTTime_sumTScaled = mean(get(t), na.rm = TRUE),\n              meanFTime_sumFScaled = mean(get(f), na.rm = TRUE),\n              meanYdayScaled = mean(ydayScaled, na.rm = TRUE),\n              meanCount_Scaled = mean(count_Scaled, na.rm = TRUE)\n              )\n  return(means)\n}\n\nplotMeans &lt;- function(means){\n  out &lt;- list()\n  out[[1]] &lt;- ggplot(means, aes(meanTTime_sumTScaled, meanLength, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  \n  out[[2]] &lt;- ggplot(means, aes(meanFTime_sumFScaled, meanLength, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  \n  out[[3]] &lt;- ggplot(means, aes(meanTTime_sumTScaled, meanFTime_sumFScaled, color = species)) +\n    geom_point() + \n    geom_smooth(method = \"lm\", se = FALSE)\n  return(out)\n}\n\nrunMeanModels &lt;- function(means) {\n  modLMMeans1 &lt;- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), data = means)\n  modLMMeans2 &lt;- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled)^2, data = means)\n  modLMMeans3 &lt;- lm(meanLength ~ (factor(species) + meanFTime_sumFScaled + meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled)^3, data = means)\n  return(list(modLMMeans1, modLMMeans2, modLMMeans3))\n}\n\n\nMean lengths by river. This is information only. Using the WB data only shown here and in the next graph for the models.\n\n\n\n\n\nMean lengths for the mean length model.\n\n\n\n\n\nGraphs for variables that do not depend on number of months\n\n\n\n\n\n\n\n\n\n13.5.0.1 Models with flow and temperature from previous one month\nThese models don’t run now (Jan 2024) because there is no vaiability in these variables meanFTime_sumFScaled + meanTTime_sumTScaled. Tried to track this down in modelYOY.R, but couldn’t find the reason - needs more digging.\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod1[[1]]  5 203.0546\nmod1[[2]]  8 206.3338\nmod1[[3]]  9 207.9349\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.6248 -1.9281 -0.5945  3.5942 12.4438 \n\nCoefficients: (2 not defined because of singularities)\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           70.9536     1.3330  53.229   &lt;2e-16 ***\nfactor(species)bnt     0.9456     1.8744   0.504   0.6179    \nmeanFTime_sumFScaled       NA         NA      NA       NA    \nmeanTTime_sumTScaled       NA         NA      NA       NA    \nmeanYdayScaled         3.3232     1.7043   1.950   0.0613 .  \nmeanCount_Scaled      -2.6859     0.9826  -2.733   0.0107 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.282 on 28 degrees of freedom\nMultiple R-squared:  0.3324,    Adjusted R-squared:  0.2609 \nF-statistic: 4.648 on 3 and 28 DF,  p-value: 0.009275\n\n\nRelative importance for main effects model\n\n\n13.5.0.2 Models with flow and temperature from previous three months\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod3[[1]]  5 203.0546\nmod3[[2]]  8 206.3338\nmod3[[3]]  9 207.9349\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.6248 -1.9281 -0.5945  3.5942 12.4438 \n\nCoefficients: (2 not defined because of singularities)\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           70.9536     1.3330  53.229   &lt;2e-16 ***\nfactor(species)bnt     0.9456     1.8744   0.504   0.6179    \nmeanFTime_sumFScaled       NA         NA      NA       NA    \nmeanTTime_sumTScaled       NA         NA      NA       NA    \nmeanYdayScaled         3.3232     1.7043   1.950   0.0613 .  \nmeanCount_Scaled      -2.6859     0.9826  -2.733   0.0107 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.282 on 28 degrees of freedom\nMultiple R-squared:  0.3324,    Adjusted R-squared:  0.2609 \nF-statistic: 4.648 on 3 and 28 DF,  p-value: 0.009275\n\n\nRelative importance for main effects model\n\n\n13.5.0.3 Models with flow and temperature from previous five months\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\n\n\n\n\n\n\n[[3]]\n\n\n\n\n\n          df      AIC\nmod5[[1]]  5 203.0546\nmod5[[2]]  8 206.3338\nmod5[[3]]  9 207.9349\n\n\n\nCall:\nlm(formula = meanLength ~ (factor(species) + meanFTime_sumFScaled + \n    meanTTime_sumTScaled + meanYdayScaled + meanCount_Scaled), \n    data = means)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9.6248 -1.9281 -0.5945  3.5942 12.4438 \n\nCoefficients: (2 not defined because of singularities)\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           70.9536     1.3330  53.229   &lt;2e-16 ***\nfactor(species)bnt     0.9456     1.8744   0.504   0.6179    \nmeanFTime_sumFScaled       NA         NA      NA       NA    \nmeanTTime_sumTScaled       NA         NA      NA       NA    \nmeanYdayScaled         3.3232     1.7043   1.950   0.0613 .  \nmeanCount_Scaled      -2.6859     0.9826  -2.733   0.0107 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.282 on 28 degrees of freedom\nMultiple R-squared:  0.3324,    Adjusted R-squared:  0.2609 \nF-statistic: 4.648 on 3 and 28 DF,  p-value: 0.009275\n\n\nRelative importance for main effects model\nr-squared values and AICs for 1st, 2nd (2-way interactions) and 3rd (3-way interactions) order models\nRelative importance of main effects models (repeat of above, but all in one place here)\n\n\n13.5.1 Models with extreme flow events (droughts)\nWe get negative cumulFlows because we have some negative flows from the flow extension model\n\n\nCode\n# put some of these calculations into envDataWB\nenvDataWBFlow = tar_read(envDataWBFlow_target)\n\n\n\n\nCode\nfirstObsYears &lt;- firstObs %&gt;%\n    filter(year %in% minYear:maxYear, \n           yday &gt; 100, yday &lt; 300)\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, flow)) +\n  geom_point(aes(yday, observedLength/20), size = 0.75, alpha = 0.2, color = 'lightblue', data = firstObsYears) +\n  geom_point(size = 0.5) +\n  scale_x_continuous(breaks = seq(0,300, 30)) +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulFlow / 10)) +\n  geom_point(aes(yday, observedLength / 20), size = 0.75, alpha = 0.2, color = 'lightblue', data = firstObsYears) +\n  geom_point(size = 0.5, color = 'darkgrey') +\n  geom_point(aes(yday, cumulTemp / 800), size = 0.5, color = \"orange\", data = envDataWBFlow) +\n  geom_point(aes(yday, flow), size = 0.5, data = envDataWBFlow) +\n  scale_x_continuous(breaks = seq(0, 300, 30)) +\n  #theme_publication() +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulFlow, color = (year))) +\n  geom_point() +\n  scale_x_continuous(breaks = seq(0, 300, 30)) \n\n\n\n\n\nCode\nggplot(envDataWBFlow, aes(yday, cumulTemp, color = (year))) +\n  geom_point() +\n  #geom_point(aes(yday, cumulTemp / 800, color = factor(year)), data = tmp) +\n  scale_x_continuous(breaks = seq(0, 300, 30))\n\n\n\n\n\nIs there a sampling section effect?\nNote: there are fish in sections &gt; 50 for years 2002 and 2003, need to filter out early\n\n\nCode\nggplot(d_WB_BKT_BNT %&gt;% filter( section &lt;= 47), aes(factor(section), observedLength)) +\n  geom_boxplot() +\n  geom_smooth() +\n  facet_wrap(~year)\n\n\n\n\n\nCode\nggplot(d_WB_BKT_BNT %&gt;% filter( section &lt;= 47), aes(factor(year), observedLength)) +\n  geom_boxplot() +\n  geom_smooth() +\n  facet_wrap(~section)"
  },
  {
    "objectID": "modelFlow.html",
    "href": "modelFlow.html",
    "title": "14  Flow model",
    "section": "",
    "text": "Code\ndataFlow &lt;- tar_read(dataFlow_target)\ndFlow &lt;- tar_read(dFlow_target)\ndFlowWide &lt;- tar_read(dFlowWide_target)\n\n\n\n\nCode\ntibble(dataFlow)\n\n\n# A tibble: 582,388 × 9\n   Station_No Site_Name   DateTime_EST   GageHeight_Hobo_ft Discharge_Hobo_cfs\n        &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;                       &lt;dbl&gt;              &lt;dbl&gt;\n 1    1171000 Avery Brook 2/20/2020 0:00               4.17               5.37\n 2    1171000 Avery Brook 2/20/2020 0:15               4.17               5.3 \n 3    1171000 Avery Brook 2/20/2020 0:30               4.16               5.17\n 4    1171000 Avery Brook 2/20/2020 0:45               4.17               5.27\n 5    1171000 Avery Brook 2/20/2020 1:00               4.17               5.3 \n 6    1171000 Avery Brook 2/20/2020 1:15               4.15               4.94\n 7    1171000 Avery Brook 2/20/2020 1:30               4.13               4.56\n 8    1171000 Avery Brook 2/20/2020 1:45               4.1                4.14\n 9    1171000 Avery Brook 2/20/2020 2:00               4.08               3.84\n10    1171000 Avery Brook 2/20/2020 2:15               4.09               4.02\n# ℹ 582,378 more rows\n# ℹ 4 more variables: WaterTemperature_HOBO_DegF &lt;dbl&gt;, AirPressure_PSI &lt;dbl&gt;,\n#   AirTemperature_HOBO_degF &lt;dbl&gt;, X &lt;lgl&gt;\n\n\nCode\ntable(dataFlow$Site_Name)\n\n\n\n         Avery Brook          Jimmy Brook       Mitchell Brook \n               56536                57849                56978 \n   Obear Brook Lower      Sanderson Brook         West Brook 0 \n               60392                55336                58548 \n    West Brook Lower West Brook Reservoir     West Brook Upper \n               61279                61059                57301 \n  West Whately Brook \n               57110 \n\n\nCode\n#check for real entries\ndFlow %&gt;% filter(is.infinite(dischargeLog))\n\n\n [1] Station_No                 Site_Name                 \n [3] DateTime_EST               GageHeight_Hobo_ft        \n [5] Discharge_Hobo_cfs         WaterTemperature_HOBO_DegF\n [7] AirPressure_PSI            AirTemperature_HOBO_degF  \n [9] X                          date                      \n[11] site                       dischargeLog              \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n\nCode\nggplot(dFlow, aes(date, dischargeLog, color = Site_Name)) +\n  geom_point(size = 0.02) +\n  facet_wrap(~Site_Name)\n\n\n\n\n\nCode\nggpairs(dFlowWide,\n          columns = 6:9,\n          mapping = ggplot2::aes(color = as.factor(year), alpha = 0.7),\n          #diag = list(continuous = myDens),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.1), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )\n\n\n\n\n\nCode\nggpairs(dFlowWide %&gt;% filter(yday &gt; 90, yday &lt; 300),\n          columns = 6:9,\n          mapping = ggplot2::aes(color = as.factor(year)),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.1), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )\n\n\n\n\n\nCode\nggpairs(dFlowWide %&gt;% filter(yday == 110),\n          columns = 8:11,\n          mapping = ggplot2::aes(color = as.factor(year)),\n          lower = list(continuous = wrap(\"points\", alpha = 0.3, size=0.2), \n                       combo = wrap(\"dot\", alpha = 0.4, size=0.2))\n        )"
  },
  {
    "objectID": "modelConditionFactor.html#get-data",
    "href": "modelConditionFactor.html#get-data",
    "title": "15  Condition factor",
    "section": "15.1 Get data",
    "text": "15.1 Get data\n\n15.1.1 Get electrofishing data\n\n\nCode\nlibrary(targets)\n\ncd &lt;- tar_read(cdWB_electro_target) # raw data\ncd1 &lt;- tar_read(cd1_target)\n\nrelCF_byYear &lt;- tar_read(relCF_byYear_target)\nrelCF_byYearWide &lt;- tar_read(relCF_byYearWide_target)\n\n\n\n\n15.1.2 Plot raw lengths/mass\n\n\nCode\nggplot(cd1, aes(observedLength, observedWeight, color = speciesGG)) +\n  geom_point(alpha = 0.1) +\n  guides(color = guide_legend(override.aes = list(alpha = 1))) +\n  scale_x_log10(\"Length (mm)\") +\n  scale_y_log10(\"Mass (g)\") +\n  scale_color_discrete() +\n  facet_wrap(~speciesGG) \n\n\n\n\n\nCode\nggplot(cd1, aes(observedLength, observedWeight, color = speciesGG)) +\n  geom_point(alpha = 0.05) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10(\"Length (mm)\") +\n  scale_y_log10(\"Mass (g)\") +\n  scale_color_discrete()\n\n\n\n\n\n\n\n15.1.3 Length/mass regression\nDoes species matter? Yes Differences appear very small on the graphs, but there are significant differences in slope between brook trout and the other two species (brown trout and Atlantic salmon).\nUse slopes for each species in relative condition factor calculation. Model code below is repeated in getDataElectro_targets.R in addCF() to add cf and relCF to cdWB_electro_target\n\n\nCode\nmod1 &lt;- lm(log10(observedWeight) ~ log10(observedLength) * factor(species), data = cd1)\nmod2 &lt;- lm(log10(observedWeight) ~ log10(observedLength) + factor(species), data = cd1)\nmod3 &lt;- lm(log10(observedWeight) ~ log10(observedLength), data = cd1)\n\nAIC(mod1,mod2,mod3) |&gt; arrange(AIC)\n\n\n     df       AIC\nmod1  7 -83918.12\nmod2  5 -83873.46\nmod3  3 -79430.81\n\n\nCode\nsummary(mod1)\n\n\n\nCall:\nlm(formula = log10(observedWeight) ~ log10(observedLength) * \n    factor(species), data = cd1)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.72259 -0.02808  0.00011  0.02785  0.43945 \n\nCoefficients:\n                                          Estimate Std. Error  t value Pr(&gt;|t|)\n(Intercept)                              -5.006985   0.007429 -673.955  &lt; 2e-16\nlog10(observedLength)                     3.035531   0.003772  804.761  &lt; 2e-16\nfactor(species)bkt                       -0.097179   0.010050   -9.669  &lt; 2e-16\nfactor(species)bnt                       -0.007608   0.011159   -0.682    0.495\nlog10(observedLength):factor(species)bkt  0.027446   0.005083    5.399 6.76e-08\nlog10(observedLength):factor(species)bnt -0.006029   0.005541   -1.088    0.277\n                                            \n(Intercept)                              ***\nlog10(observedLength)                    ***\nfactor(species)bkt                       ***\nfactor(species)bnt                          \nlog10(observedLength):factor(species)bkt ***\nlog10(observedLength):factor(species)bnt    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04289 on 24249 degrees of freedom\n  (42 observations deleted due to missingness)\nMultiple R-squared:  0.9886,    Adjusted R-squared:  0.9886 \nF-statistic: 4.22e+05 on 5 and 24249 DF,  p-value: &lt; 2.2e-16\n\n\nCode\n(CF_coefs &lt;- tibble(\n  species = c(\"ats\", \"bkt\", \"bnt\"),\n  intercept = c(\n    coef(mod1)[[\"(Intercept)\"]],\n    coef(mod1)[[\"(Intercept)\"]] + coef(mod1)[[\"factor(species)bkt\"]],\n    coef(mod1)[[\"(Intercept)\"]] + coef(mod1)[[\"factor(species)bnt\"]]\n  ),\n  slope = c(\n    coef(mod1)[[\"log10(observedLength)\"]],\n    coef(mod1)[[\"log10(observedLength)\"]] + coef(mod1)[[\"log10(observedLength):factor(species)bkt\"]],\n    coef(mod1)[[\"log10(observedLength)\"]] + coef(mod1)[[\"log10(observedLength):factor(species)bnt\"]]\n  )\n))\n\n\n# A tibble: 3 × 3\n  species intercept slope\n  &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;\n1 ats         -5.01  3.04\n2 bkt         -5.10  3.06\n3 bnt         -5.01  3.03\n\n\n\n\n15.1.4 Relative condition factor by species\n\n\nCode\nggplot(cd1, aes(relCF, color = speciesGG)) +\n  geom_freqpoly(bins = 50) +\n  labs(x = \"Relative condition factor\", y = \"Frequency\") +\n  scale_color_discrete() +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n15.1.5 Relative condition factor by species across years\n\n\nCode\nggplot(relCF_byYear, aes(year, mRCF, color = speciesGG)) +\n  geom_point() +\n  geom_line() +\n  scale_color_discrete() +\n  labs(x = \"Year\", y = \"Relative condition factor\") +\n  facet_grid(riverGG~seasonGG)\n\n\n\n\n\n\n\n15.1.6 Relative condition factor species comparison\nDo relative condition factors covary between species?\n\n\nCode\nggplot(relCF_byYearWide |&gt; filter(riverGG != \"Isolated Small\"), aes(`Brook trout`, `Brown trout`)) +\n  geom_point(aes(color = factor(year))) +\n  geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n  scale_color_discrete() +\n  labs(x = \"Brook trout relative condition factor\", y = \"Brown trout relative condition factor\") +\n  facet_grid(riverGG~seasonGG)\n\n\n\n\n\nCode\nggplot(relCF_byYearWide |&gt; filter(riverGG == \"West Brook\"), aes(`Brook trout`, `Atlantic salmon`)) +\n  geom_point(aes(color = factor(year))) +\n  geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n  scale_color_discrete() +\n  labs(x = \"Brook trout relative condition factor\", y = \"Atlantic salmon relative condition factor\") +\n  facet_wrap(~seasonGG)\n\n\n\n\n\nCode\nggplot(relCF_byYearWide |&gt; filter(riverGG == \"West Brook\"), aes(`Brown trout`, `Atlantic salmon`)) +\n  geom_point(aes(color = factor(year))) +\n  geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n  scale_color_discrete() +\n  labs(x = \"Brown trout relative condition factor\", y = \"Atlantic salmon relative condition factor\") +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n15.1.7 Seasonal comparison\nTO ADD"
  },
  {
    "objectID": "modelGrowthInMass.html#get-data",
    "href": "modelGrowthInMass.html#get-data",
    "title": "16  Growth in mass",
    "section": "16.1 Get data",
    "text": "16.1 Get data\n\n16.1.1 Get electrofishing data\n\n\nCode\nlibrary(targets)\ncd &lt;- tar_read(cdWB_electro_target) # raw data\n\ncd1 &lt;- tar_read(cd1_target) # from modelGrowthInMass_target\npropNegSRS &lt;- tar_read(propNegSRS_target)\npropNegSRsN &lt;- tar_read(propNegSRsN_target)\n\nindCountsBySpp &lt;- tar_read(indCountsBySpp_target) \nindCounts &lt;- tar_read(indCounts_target) \npropNegLabels &lt;- tar_read(propNegLabels_target)\n\nnegGr_beforeLast &lt;- tar_read(negGr_beforeLast_target)\nnegGr_beforeLastMean &lt;- tar_read(negGr_beforeLastMean_target)\nnegGr_beforeLastMean_year &lt;- tar_read(negGr_beforeLastMean_year_target)\n\nmeanNegSRsN &lt;- tar_read(meanNegSRsN_target)\nmeanNegSRsNWide &lt;- tar_read(meanNegSRsNWide_target)\n\n# df for pairs plots\ncd1Wide_grWeight &lt;- tar_read(cd1Wide_grWeight_target)\ncd1Wide_observedWeight &lt;- tar_read(cd1Wide_observedWeight_target)\n\ndGAM &lt;- tar_read(dGAM_target) # from modelGrowthInMass_target\n\n\n\n\n16.1.2 Get environmental data\n\n\nCode\nlibrary(targets)\ndummy=0 # change to force cache update??\nenvIn &lt;- tar_read(envIn_target)\nenvIn_propNeg &lt;- tar_read(envIn_propNeg_target)"
  },
  {
    "objectID": "modelGrowthInMass.html#examine-raw-data",
    "href": "modelGrowthInMass.html#examine-raw-data",
    "title": "16  Growth in mass",
    "section": "16.2 Examine raw data",
    "text": "16.2 Examine raw data\n\n16.2.1 Limit data to consecutive sample captures (cd1)\nPrevious growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.\n\n\nCode\n# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |&gt; \n#   data.frame() |&gt; \n#   filter(Freq &gt; 0) |&gt; \n#   arrange(Var1, Var2) |&gt; \n#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |&gt; \n#   filter(year == 2010)\n\n\n##### in targets\n# cd1 &lt;- cd |&gt; \n#   filter(sampleNumberDiff == 1,\n#          tag %notin% c('1bf20ff490', '1bf20ebe4e')) |&gt; \n#   mutate(negGrowth = grWeight &lt; 0,\n#          month = month(date),\n#          dummy = 1) # change to force cache update\n\n\n\n\n16.2.2 Find outlier growth rates\n\n16.2.2.1 Negative outlier growth\n1bf20ebe4e and 1bf20ff490 have incorrect weights leading to very negative growth rates.\nExclude these tags in cd1_target. The rest of the quite negative growth fish seem plausible (remember we can’t account for stomach contents or egg loss).\n\n\nCode\ncd |&gt; \n  arrange(grWeightS) |&gt; \n  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)\n\n\n# A tibble: 91,103 × 8\n   tag        species season sampleNumber lagSampleNumber observedWeight\n   &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1 1bf20ebe4e bnt          3           55              56           46.5\n 2 257c67e414 bkt          3           59              60            7.3\n 3 1bf0fec291 bkt          3           27              28            2.7\n 4 1bf20ff490 bnt          2           54              55          167. \n 5 257c67b532 bnt          3           63              64           34  \n 6 1bf1984439 bnt          1           41              43           61.8\n 7 00088d1ad4 bnt          3           63              64            4.5\n 8 257c67db60 bnt          3           63              64           24.2\n 9 00088d0b59 bnt          3           63              64            3.7\n10 414b684955 ats          3           15              16            5.7\n# ℹ 91,093 more rows\n# ℹ 2 more variables: lagObservedWeight &lt;dbl&gt;, grWeightS &lt;dbl&gt;\n\n\n\n\n16.2.2.2 Positive outlier growth\nLots of very fast growth mostly in the spring. No clear way to exclude fish. 1c2c582218 is excluded in cd1_target because of very high growth in length.\n\n\nCode\ncd1 |&gt; \n  arrange(desc(grWeightS)) |&gt; \n  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |&gt; \n  print(n = 10)\n\n\n# A tibble: 24,297 × 8\n   tag        species season sampleNumber lagSampleNumber observedWeight\n   &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;        &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n 1 1bf1020623 bkt          1           29              30            1.3\n 2 0009f6eef4 bkt          1           77              78            2.3\n 3 413f4b1845 ats          1           13              14            1.8\n 4 1bf16366cf bnt          1           33              34            2  \n 5 410a015165 ats          1           13              14            2.1\n 6 00088d2d2c bkt          1           73              74            1.8\n 7 410a0f0653 ats          1           13              14            2.2\n 8 1bf18b7637 bkt          1           33              34            2.5\n 9 1bf20e4e30 bnt          1           53              54            2.3\n10 1bf1930917 ats          1           37              38            1.9\n# ℹ 24,287 more rows\n# ℹ 2 more variables: lagObservedWeight &lt;dbl&gt;, grWeightS &lt;dbl&gt;\n\n\n\n\n\n16.2.3 Numbers of observations for analysis\n\n\nCode\nmin(cd1$year)\n\n\n[1] 1997\n\n\nCode\nmax(cd1$year)\n\n\n[1] 2016\n\n\nCode\ntable(cd1$species, cd1$year)\n\n\n     \n      1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010\n  ats  762 1576 1395 1183 1004  615 1076  935  644  234   31    8    0    0\n  bkt    0    0    0  139  367  535 1135  953  874  588  344  589  971  890\n  bnt    0    0    0  357  453  211  190  161  368  467  204  298  483  469\n     \n      2011 2012 2013 2014 2015 2016\n  ats    0    0    0    0    0    0\n  bkt  382  618  708  582  471    1\n  bnt   89  119  513  161  144    0\n\n\nCode\ntable(cd1$species)\n\n\n\n  ats   bkt   bnt \n 9463 10147  4687 \n\n\n\n\nCode\nlength(unique(cd1$tag))\n\n\n[1] 13119\n\n\nCode\ncd1 |&gt; \n  group_by(species) |&gt; \n  summarize(tag = (unique(tag))) |&gt; \n  reframe(count = n())\n\n\n# A tibble: 3 × 2\n  species count\n  &lt;chr&gt;   &lt;int&gt;\n1 ats      4541\n2 bkt      5786\n3 bnt      2792\n\n\n\n\n16.2.4 Raw length, weight data graphs\n\n16.2.4.1 Distribution of growth rates\n\n\nCode\nggplot(cd1, aes(grWeight, color = speciesGG, linetype = speciesGG)) +\n  geom_freqpoly(bins = 50) +\n  labs(x = \"Growth in mass (/d)\", y = \"Frequency\") +\n  #scale_color_discrete() +\n  geom_vline(xintercept = 0) +\n  xlim(c(-0.01, 0.028)) +\n  theme_publication() +\n  scale_color_grey() +\n  facet_wrap(~seasonGG)\n\n\n\n\n\nCode\nggplot(cd1, aes(grLength, color = speciesGG)) +\n  geom_freqpoly(bins = 50) +\n  labs(x = \"Growth in Length (mm/d)\", y = \"Frequency\") +\n  scale_color_discrete() +\n  geom_vline(xintercept = 0) +\n  theme_publication() +\n  facet_wrap(~seasonGG)\n\n\n\n\n\n\n\n\n16.2.5 Length vs weight by species\nVery few outliers\n\n\nCode\nplotLenW &lt;- function(d, s){\n  ggplot(d |&gt; filter(species == s), aes(observedLength, observedWeight)) +\n    geom_point(alpha = 0.5, size = 1) +\n    scale_x_log10() +\n    scale_y_log10() +\n    #ggtitle(s) +\n    labs(x = \"Length (mm)\", y = \"Mass (mg)\") +\n    scale_color_discrete() +\n    theme_publication() +\n    facet_grid(riverGG~year, scales = 'free')\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotLenW(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\nCode\nplotLenW(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\nCode\nplotLenW(cd1, \"ats\")\n\n\n\n\n\n\n\n\n\n\n16.2.6 Weight vs weight at next sample\n\n\nCode\nplotWW &lt;- function(d, spp){\n  ggplot(d |&gt; filter(species == spp), aes(observedWeight, lagObservedWeight, color = seasonGG)) +\n    geom_point(alpha = 0.15) +\n    guides(color = guide_legend(override.aes = list(alpha = 1))) +\n    labs(x = \"Mass (mg)\", y = \"Mass (mg) at next sample\") +\n    scale_color_discrete() +\n    theme_publication() +\n    facet_wrap(~riverGG, scales = 'free')\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotWW(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\nCode\nplotWW(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\nCode\nplotWW(cd1, \"ats\")\n\n\n\n\n\n\n\n\n\n\n16.2.7 Growth rate pairs plots\nBy species, all cohorts\nRow and column labels in the pairs plots are ‘age’_‘season’\n\n\nCode\nplotPairs &lt;- function(d0, sppIn, cohortIn, firstSamp = 1, lastSamp = 9, upperBlank = FALSE){\n  d &lt;- d0 |&gt; \n    filter(speciesGG == sppIn, cohort %in% cohortIn) |&gt; \n    select_if(~any(!is.na(.))) |&gt;  # remove all-NA columns\n    filter(firstObserved != lastObserved - 1) # remove single obs fish\n  \n  lowerFn &lt;- function(data, mapping, method = \"lm\", ...) {\n    ggplot(data = data, mapping = mapping) +\n      geom_vline(xintercept = 0, color = 'darkgrey') +\n      geom_hline(yintercept = 0, color = 'darkgrey') +\n      geom_abline(intercept = 0, slope = 1) +\n      geom_smooth(aes(color = factor(cohort)), method = method, se = FALSE, ...) +\n      geom_point(aes(color = factor(cohort))) +\n      geom_smooth(color = 'black', size = 1.1, method = method, se = FALSE, ...) +\n      theme_publication() \n  }\n\n  if(upperBlank) {\n    out &lt;- ggpairs(\n      d |&gt; \n        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),\n      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column\n      lower = list(continuous = wrap(lowerFn, method = \"lm\")),\n      upper = \"blank\"\n    ) \n  } else {\n    out &lt;- ggpairs(\n      d |&gt; \n        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),\n      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column\n      lower = list(continuous = wrap(lowerFn, method = \"lm\"))\n    )\n  }\n  return(out)\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2000:2015, 1, 9)\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Brook trout\", 2000:2015)\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brown trout\", 2000:2015, 1, 9)\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Brook trout\", 2000:2015)\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Atlantic salmon\", 2000:2015, 1, 8) # missing data in column 9\n\n\n\n\n\nCode\n#plotPairs(cd1Wide_observedWeight, \"Atlantic salmon\", 2000:2015)\n\n\n\n\n\n\n16.2.7.1 Brook trout by cohort\nRow and column labels are ‘age’_‘season’\nColor by river - make new function\n\n200020012002200320042005200620072008200920102011201220132014\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2000, 1, 8, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2001, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2002, 1, 9, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2003, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2004, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2005, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2006, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2007, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2008, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2009, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2010, 1, 8, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2011, 1, 7, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2012, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2013, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\nCode\nplotPairs(cd1Wide_grWeight, \"Brook trout\", 2014, 1, 5, upperBlank = TRUE)\n\n\n\n\n\n\n\n\n\n\n16.2.7.2 Consecutive season growth comparisons by age_season\nBrook trout\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014, `0_4` &lt; 0.01), aes(`0_3`, `0_4`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +\n  facet_wrap(~cohort)\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`0_4`, `1_1`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`1_1`, `1_2`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2014), aes(`1_2`, `1_3`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  #geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\nCode\nggplot(cd1Wide_grWeight |&gt; filter(speciesGG == \"Brook trout\", cohort %in% 2000:2012), aes(`1_1`, `2_1`, color = factor(cohort))) +\n  geom_point() +\n  geom_vline(xintercept = 0, color = 'darkgrey') +\n  geom_hline(yintercept = 0, color = 'darkgrey') +\n  geom_abline(intercept = 0, slope = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, color = '#45454d') +\n  guides(colour = FALSE) +\n  theme_publication() +  \n  facet_wrap(~cohort)\n\n\n\n\n\n\n\n\n16.2.8 Growth rate in length vs growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeight)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Growth in length\", y = \"Growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nplotGrLenMass &lt;- function(d, s){\n  ggplot(cd1 |&gt; filter(species==s), aes(grLength, grWeight, color = factor(year))) +\n    geom_point(alpha = 0.5) +\n    geom_smooth(method=\"lm\", se=FALSE) +\n    guides(size = guide_legend(override.aes = list(alpha = 1))) +\n    labs(x = \"Growth in length\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n    theme_publication(legendPosition = \"right\", legendDirection = \"vertical\") +\n    facet_wrap(~seasonGG, scales = 'free')  \n}\n#  facet_wrap(~year)\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotGrLenMass(cd1, \"bkt\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrLenMass(cd1, \"bnt\")\n\n\n\n\n\n\n\n\n\nCode\nplotGrLenMass(cd1, \"ats\")\n\n\n\n\n\n\n\n\nNo relationship between means of neg and pos growth\n\n\nCode\nggplot(meanNegSRsN |&gt; filter(speciesGG == \"Brook trout\"), aes(year, meanNegPos, color = negGrowth, group = negGrowth)) +\n  geom_point() +\n  geom_line() +\n  geom_hline(yintercept = 0) +\n  theme_publication() +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\nggplot(meanNegSRsNWide, aes(`FALSE`, `TRUE`)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#body-size-effect-on-probability-of-negative-growth",
    "href": "modelGrowthInMass.html#body-size-effect-on-probability-of-negative-growth",
    "title": "16  Growth in mass",
    "section": "16.3 Body size effect on probability of negative growth",
    "text": "16.3 Body size effect on probability of negative growth\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), riverGG == \"West Brook\", seasonGG %in% c(\"Summer\", \"Autumn\")), aes(observedWeight, negGrowth*1, color = speciesGG, fill = speciesGG)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_dotplot(x = observedWeight, y = negGrowth*1, fill = speciesGG) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\")\n              \n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  scale_color_grey() +\n  scale_fill_grey() +\n  xlim(c(0,200)) +\n  facet_wrap(~seasonGG)\n\n\n\n\n\nCode\ndfPlot &lt;- cd1 |&gt; filter(!is.na(negGrowth), riverGG == \"West Brook\", seasonGG %in% c(\"Summer\", \"Autumn\"))\n\nggplot(dfPlot) +\n  geom_point(\n    aes(observedWeight, negGrowth*1, colour = speciesGG, fill = speciesGG),\n    alpha = 0\n  ) +\n  \n  geom_density(\n    aes(x = observedWeight, y = (-..density..* 4 + 1) , \n        linetype = speciesGG),\n    color = \"grey15\", \n    data = dfPlot |&gt; \n      filter(negGrowth == TRUE)\n  ) +\n  \n  geom_density(\n    aes(x = observedWeight, ..density..* 4, \n        linetype = speciesGG\n        ),\n    color = \"grey15\", \n    data = dfPlot |&gt;\n      filter(negGrowth == FALSE)\n  ) +\n\n  geom_smooth(\n    aes(observedWeight, negGrowth*1, \n        color = speciesGG, \n        fill = speciesGG, \n        linetype = speciesGG),\n      method = \"glm\", \n      method.args = list(family = \"binomial\")\n  ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  scale_color_manual(values = c(\"black\",\"black\",\"black\")) +\n  scale_fill_grey() +\n  #scale_fill_brewer() +\n  xlim(c(0,200)) +\n  facet_wrap(~seasonGG)\n\n\n\n\n\nCode\n#####################3\n\nggplot(cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG %in% c(\"Summer\", \"Autumn\")), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              color = \"black\"\n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\n####\ndataPlotBKT &lt;- cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG %in% c(\"Summer\", \"Autumn\"))\nggplot(\n  dataPlotBKT, \n    aes(observedWeight, negGrowth*1)\n  ) +\n  geom_density(\n    aes(x = observedWeight, y = (-..density..* 4 + 1) ),\n    data = dataPlotBKT |&gt; \n      filter(negGrowth == TRUE), color = \"grey15\"\n    ) +\n  \n  geom_density(\n    aes(x = observedWeight, ..density..* 4), \n    data = dataPlotBKT |&gt; \n      filter(negGrowth == FALSE), color = \"grey15\"\n    ) +\n  \n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              color = \"black\"\n              #se = FALSE\n              ) +\n  theme_publication() +  \n  labs(x = \"Fish mass (mg)\", y = \"Probability of negative growth\") +\n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\n############################\n\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG != \"Spring\"), aes(observedWeight, negGrowth*1, color = speciesGG)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  #geom_smooth() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\")\n              \n              #se = FALSE\n              ) +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), species == \"bkt\", seasonGG != \"Spring\"), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth() +\n  geom_smooth(method = \"lm\") +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\"), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth() +\n  geom_smooth(method = \"lm\") +\n  theme_publication() +  \n  facet_grid(speciesGG~riverGG, scales = \"free\")\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(observedWeight, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(observedWeight, grWeight*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001), aes(ageInSamples, grWeight*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")\n\n\n\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth), seasonGG == \"Summer\", speciesGG == \"Brook trout\", riverGG == \"West Brook\", year &gt; 2001, ageInSamples &gt; 0), aes(ageInSamples, negGrowth*1)) +\n  #geom_point(alpha = 0.1, ) +\n  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +\n  geom_smooth(se=FALSE) +\n  geom_smooth(method = \"lm\", color = \"black\", se = FALSE) +\n  theme_publication() +  \n  facet_wrap(~year)#, scales = \"free\")"
  },
  {
    "objectID": "modelGrowthInMass.html#flow-and-temperature-growth-relationships",
    "href": "modelGrowthInMass.html#flow-and-temperature-growth-relationships",
    "title": "16  Growth in mass",
    "section": "16.4 Flow and temperature growth relationships",
    "text": "16.4 Flow and temperature growth relationships\n\n16.4.1 Mean flow effect on growth?\n\n\nCode\nplotFlowGR &lt;- function(d, r){\nggplot(d |&gt; filter(river == r), aes(meanFlowByRiver, grWeight, color = speciesGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_smooth(se = FALSE) +\n  geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2)) +\n  labs(x = \"Mean flow\", y = \"Growth in mass\") +\n  scale_color_discrete() +\n  #ggtitle(r) +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)#, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotFlowGR(cd1, \"west brook\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb jimmy\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb mitchell\")\n\n\n\n\n\n\n\n\n\nCode\nplotFlowGR(cd1, \"wb obear\")\n\n\n\n\n\n\n\n\n\n\n16.4.2 Mean temperature effect on growth?\nMaybe in Jimmy for bnt, or for ats\n\n\nCode\nplotTempGR &lt;- function(d, s){\n  ggplot(d |&gt; filter(seasonGG == s), aes(meanTemperature, grWeight, color = speciesGG)) +\n    geom_point(alpha = 0.5)  +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    geom_smooth(se = FALSE, color = 'darkgrey') +\n    geom_smooth(method = \"lm\", se =FALSE, formula = y~poly(x,2), color = 'darkgrey') +\n    labs(x = \"Mean temperature (c)\", y = \"Growth in mass\") +\n    scale_color_discrete() +\n   # ggtitle(s) +\n    theme_publication() +  \n    facet_grid(speciesGG~riverGG)#, scales = 'free')\n}\n\n\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotTempGR(cd1, \"Spring\")\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Summer\")\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Autumn\")\n\n\n\n\n\n\n\n\n\nCode\nplotTempGR(cd1, \"Winter\")"
  },
  {
    "objectID": "modelGrowthInMass.html#proportion-of-observations-with-negative-growth",
    "href": "modelGrowthInMass.html#proportion-of-observations-with-negative-growth",
    "title": "16  Growth in mass",
    "section": "16.5 Proportion of observations with negative growth",
    "text": "16.5 Proportion of observations with negative growth\nCounts/proportions of negative growth\nProportions for Table 1\n\n\nCode\n# All\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  mutate(nTotal = n()) |&gt; \n  group_by(nTotal, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  mutate(prop = n/nTotal)\n\n\n# A tibble: 2 × 4\n# Groups:   nTotal [1]\n  nTotal negGrowth     n  prop\n   &lt;int&gt; &lt;lgl&gt;     &lt;int&gt; &lt;dbl&gt;\n1  24193 FALSE     20620 0.852\n2  24193 TRUE       3573 0.148\n\n\nCode\n#by river\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   riverGG [4]\n  riverGG        `FALSE` `TRUE`   prop\n  &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook       15496   2937 0.159 \n2 Open Large        1661    268 0.139 \n3 Open Small        1129     93 0.0761\n4 Isolated Small    2334    275 0.105 \n\n\nCode\n#by species\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(species, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 3 × 4\n# Groups:   species [3]\n  species `FALSE` `TRUE`   prop\n  &lt;chr&gt;     &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 ats        7445   2003 0.212 \n2 bkt        8745   1344 0.133 \n3 bnt        4430    226 0.0485\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`    prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;   &lt;dbl&gt;\n1      1    5857      7 0.00119\n2      2    5438   2151 0.283  \n3      3    5675   1150 0.168  \n4      4    3650    265 0.0677 \n\n\n\n16.5.0.1 Brook trout\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`     prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n1      1    2435      1 0.000411\n2      2    2492    825 0.249   \n3      3    2250    449 0.166   \n4      4    1568     69 0.0422  \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   riverGG [4]\n  riverGG        `FALSE` `TRUE`   prop\n  &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook        4121    739 0.152 \n2 Open Large        1255    241 0.161 \n3 Open Small        1035     89 0.0792\n4 Isolated Small    2334    275 0.105 \n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bkt') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 16 × 5\n# Groups:   season, riverGG [16]\n   season riverGG        `FALSE` `TRUE`      prop\n    &lt;dbl&gt; &lt;ord&gt;            &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;\n 1      1 West Brook        1247      1  0.000801\n 2      1 Open Large         307     NA NA       \n 3      1 Open Small         294     NA NA       \n 4      1 Isolated Small     587     NA NA       \n 5      2 West Brook        1340    565  0.297   \n 6      2 Open Large         342    135  0.283   \n 7      2 Open Small         231     44  0.16    \n 8      2 Isolated Small     579     81  0.123   \n 9      3 West Brook         959    159  0.142   \n10      3 Open Large         368     83  0.184   \n11      3 Open Small         264     33  0.111   \n12      3 Isolated Small     659    174  0.209   \n13      4 West Brook         575     14  0.0238  \n14      4 Open Large         238     23  0.0881  \n15      4 Open Small         246     12  0.0465  \n16      4 Isolated Small     509     20  0.0378  \n\n\n\n\n16.5.0.2 Brown trout\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`    prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;   &lt;dbl&gt;\n1      1    1067      4 0.00373\n2      2    1299    108 0.0768 \n3      3    1454     83 0.0540 \n4      4     610     31 0.0484 \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 3 × 4\n# Groups:   riverGG [3]\n  riverGG    `FALSE` `TRUE`   prop\n  &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;  &lt;dbl&gt;\n1 West Brook    3946    201 0.0485\n2 Open Large     390     21 0.0511\n3 Open Small      94      4 0.0408\n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'bnt') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 12 × 5\n# Groups:   season, riverGG [12]\n   season riverGG    `FALSE` `TRUE`     prop\n    &lt;dbl&gt; &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n 1      1 West Brook     959      4  0.00415\n 2      1 Open Large      85     NA NA      \n 3      1 Open Small      23     NA NA      \n 4      2 West Brook    1172    103  0.0808 \n 5      2 Open Large     102      4  0.0377 \n 6      2 Open Small      25      1  0.0385 \n 7      3 West Brook    1309     71  0.0514 \n 8      3 Open Large     121     11  0.0833 \n 9      3 Open Small      24      1  0.04   \n10      4 West Brook     506     23  0.0435 \n11      4 Open Large      82      6  0.0682 \n12      4 Open Small      22      2  0.0833 \n\n\n\n\n16.5.0.3 Atlantic salmon\n\n\nCode\n# by season\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(season, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 4 × 4\n# Groups:   season [4]\n  season `FALSE` `TRUE`     prop\n   &lt;dbl&gt;   &lt;int&gt;  &lt;int&gt;    &lt;dbl&gt;\n1      1    2355      2 0.000849\n2      2    1647   1218 0.425   \n3      3    1971    618 0.239   \n4      4    1472    165 0.101   \n\n\nCode\n# by river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 2 × 4\n# Groups:   riverGG [2]\n  riverGG    `FALSE` `TRUE`  prop\n  &lt;ord&gt;        &lt;int&gt;  &lt;int&gt; &lt;dbl&gt;\n1 West Brook    7429   1997 0.212\n2 Open Large      16      6 0.273\n\n\nCode\n# by season/river\ncd1 |&gt; \n  filter(!is.na(negGrowth), species == 'ats') |&gt; \n  group_by(season, riverGG, negGrowth) |&gt; \n  summarize(n = n()) |&gt; \n  pivot_wider(names_from = negGrowth, values_from = n) |&gt; \n  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))\n\n\n# A tibble: 8 × 5\n# Groups:   season, riverGG [8]\n  season riverGG    `FALSE` `TRUE`      prop\n   &lt;dbl&gt; &lt;ord&gt;        &lt;int&gt;  &lt;int&gt;     &lt;dbl&gt;\n1      1 West Brook    2350      2  0.000850\n2      1 Open Large       5     NA NA       \n3      2 West Brook    1644   1216  0.425   \n4      2 Open Large       3      2  0.4     \n5      3 West Brook    1966    617  0.239   \n6      3 Open Large       5      1  0.167   \n7      4 West Brook    1469    162  0.0993  \n8      4 Open Large       3      3  0.5     \n\n\n\n\n16.5.1 Proportion of observations with negative growth by species/river/season\n\n\nCode\nggplot(cd1 |&gt; filter(!is.na(negGrowth)), aes(negGrowth)) +\n  geom_bar() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG+riverGG, scales = \"free\")\n\n\n\n\n\n\n\n16.5.2 Proportion of observations with negative growth by species/season\n\n\nCode\nggplot(propNegSRS |&gt; filter(n &gt; 50), aes(seasonGG, propNeg, color = riverGG, group = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  labs(x = \"Season\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +  \n  theme(axis.text.x = element_text(angle = 360-45, vjust = 0, hjust = 0.5)) +\n  facet_wrap(~speciesGG)\n\n\n\n\n\n\n\n16.5.3 Proportion of observations with negative growth by species/river/year\n\n\nCode\nplotPropNegByRiver &lt;- function(d, spp){\n  ggplot(d |&gt; filter(n &gt; 20,  speciesGG == spp), \n         aes(year, propNeg, color = factor(seasonGG))) +\n    geom_point(aes(size = n)) +\n    geom_line() +\n    labs(x = \"Year\", y = \"Proportion of opnservations with negative growth in mass\") +\n    scale_color_discrete() +\n    theme_publication() +  \n    facet_wrap(~riverGG)\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN, \"Brook trout\")\n\n\n\n\n\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN |&gt; filter(riverGG != \"Open Small\"), \"Brown trout\")\n\n\n\n\n\n\n\n\n\nCode\nplotPropNegByRiver(propNegSRsN, \"Atlantic salmon\")\n\n\n\n\n\n\n\n\n\n\n16.5.4 Proportion of observations with negative growth by species/river/year\nBreak down season by year, compare across rivers\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10), aes(year, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 15, seasonGG == \"Summer\", speciesGG == \"Brook trout\", year &gt; 2001), aes(year, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_line() +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication()\n\n\n\n\n\nTrends across years\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001), aes(year, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se=FALSE) +\n  labs(x = \"Year\", y = \"Proportion of observations with negative growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +\n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\n# Regression\npropNegYear =lm(propNeg~year*riverGG, data = propNegSRsN |&gt; filter(n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brook trout\"))\n\nsummary(propNegYear)\n\n\n\nCall:\nlm(formula = propNeg ~ year * riverGG, data = filter(propNegSRsN, \n    n &gt; 15, year &gt; 2001, seasonGG == \"Summer\", speciesGG == \"Brook trout\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.35591 -0.11275 -0.02433  0.07847  0.64231 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)     2.739e-01  1.784e+01   0.015    0.988\nyear           -2.120e-05  8.887e-03  -0.002    0.998\nriverGG.L      -2.231e+01  2.964e+01  -0.753    0.456\nriverGG.Q       4.160e+01  3.568e+01   1.166    0.251\nriverGG.C       5.250e+01  4.084e+01   1.285    0.206\nyear:riverGG.L  1.106e-02  1.476e-02   0.749    0.458\nyear:riverGG.Q -2.075e-02  1.777e-02  -1.167    0.250\nyear:riverGG.C -2.614e-02  2.035e-02  -1.285    0.207\n\nResidual standard error: 0.2096 on 38 degrees of freedom\nMultiple R-squared:  0.1758,    Adjusted R-squared:  0.02398 \nF-statistic: 1.158 on 7 and 38 DF,  p-value: 0.3493\n\n\nCode\nanova(propNegYear)\n\n\nAnalysis of Variance Table\n\nResponse: propNeg\n             Df  Sum Sq  Mean Sq F value Pr(&gt;F)\nyear          1 0.03074 0.030745  0.6995 0.4082\nriverGG       3 0.22715 0.075716  1.7228 0.1786\nyear:riverGG  3 0.09834 0.032780  0.7458 0.5315\nResiduals    38 1.67007 0.043949"
  },
  {
    "objectID": "modelGrowthInMass.html#negative-growth-by-individual",
    "href": "modelGrowthInMass.html#negative-growth-by-individual",
    "title": "16  Growth in mass",
    "section": "16.6 Negative growth by individual",
    "text": "16.6 Negative growth by individual\nPlot growth negative/positive for individual fish that lost mass. Order the individuals on the y-axis by proportion of observations that were negative.\n\n\nCode\nplotIndNegGrowth &lt;- function(sppIn, maxGr = 0){\n  ggplot(\n    cd1 |&gt; \n      filter(\n        species == sppIn, \n        cohort &gt;= 2000, cohort &lt;= 2013, \n        !is.na(negGrowth), \n        ageInSamples &gt; 0,\n        propNegGrowthByInd &gt; maxGr,\n        ageInSamples &lt; 12\n        ), \n    aes(ageInSamples, reorder(tag, propNegGrowthByInd))\n  ) +\n  geom_tile(\n    aes(fill = negGrowth)#, colour = \"grey50\", linewidth = 0.2\n  ) +\n  scale_y_discrete(\"Individual fish\") +\n  scale_x_continuous(\n    \"Season and age\",\n    breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15),\n    labels = c(\"F0\", \"W0\", \"S1\", \"S1\", \"F1\", \"W1\", \"S2\", \"S2\",\"F2\", \"W2\", \"S3\", \"S3\",\"F3\", \"W3\", \"S4\")) +\n  scale_fill_manual(values = c(\"#E66100\", \"#5D3A9B\")) +\n  theme(\n    axis.text.y=element_blank(),\n    axis.ticks.y=element_blank()\n  ) +\n  facet_wrap(~cohort, scales = \"free\")\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplotIndNegGrowth(\"bkt\", -1)\n\n\n\n\n\n\n\n\n\nCode\nplotIndNegGrowth(\"bnt\")\n\n\n\n\n\n\n\n\n\nCode\nplotIndNegGrowth(\"ats\")\n\n\n\n\n\n\n\n\n\n\nCode\ndistinctIndNegGrowth &lt;- \n  cd1 |&gt; \n    filter(\n      #species == \"bkt\", \n      cohort &gt;= 2000, cohort &lt;= 2013, \n      !is.na(negGrowth), \n      ageInSamples &gt; 0,\n      #propNegGrowthByInd &gt; maxGr,\n      ageInSamples &lt; 12\n    ) |&gt; \n  dplyr::select(tag, speciesGG, propNegGrowthByInd, nPerInd) |&gt; \n  distinct() |&gt; \n  mutate(numNegIntervals = as.integer(propNegGrowthByInd * nPerInd))\n  \n  ggplot(\n    distinctIndNegGrowth,\n    aes(numNegIntervals)\n  ) +\n  geom_bar(aes(fill = speciesGG), position = \"dodge\") +\n  scale_fill_grey() +\n  theme_publication() +\n  labs(\n    x = \"Number of intervals with negative growth\", \n    y = \"Count\"\n  ) +\n  xlim(c(-0.5, 5))\n\n\n\n\n\nCode\n  distinctIndNegGrowth |&gt; \n    group_by(speciesGG, numNegIntervals) |&gt; \n    summarize(\n      nNegGrowthIntervals = n()\n    )\n\n\n# A tibble: 17 × 3\n# Groups:   speciesGG [3]\n   speciesGG       numNegIntervals nNegGrowthIntervals\n   &lt;ord&gt;                     &lt;int&gt;               &lt;int&gt;\n 1 Brook trout                   0                3872\n 2 Brook trout                   1                1079\n 3 Brook trout                   2                 105\n 4 Brook trout                   3                  15\n 5 Brook trout                   4                   1\n 6 Brown trout                   0                2320\n 7 Brown trout                   1                 176\n 8 Brown trout                   2                  18\n 9 Brown trout                   3                   1\n10 Brown trout                   5                   1\n11 Atlantic salmon               0                1403\n12 Atlantic salmon               1                 741\n13 Atlantic salmon               2                 192\n14 Atlantic salmon               3                  38\n15 Atlantic salmon               4                   9\n16 Atlantic salmon               5                   4\n17 Atlantic salmon               6                   1\n\n\nCode\n  distinctIndNegGrowth |&gt; \n  group_by(speciesGG) |&gt; \n  summarize(\n    nNegGrowthIntervals = n()\n  )\n\n\n# A tibble: 3 × 2\n  speciesGG       nNegGrowthIntervals\n  &lt;ord&gt;                         &lt;int&gt;\n1 Brook trout                    5072\n2 Brown trout                    2516\n3 Atlantic salmon                2388\n\n\nCode\n  #bkt\n  (propBKTNegGr &lt;- 1 - 3872/5072)\n\n\n[1] 0.2365931\n\n\nCode\n    #bnt\n  (propBNTNegGr &lt;- 1 - 2320/2516)\n\n\n[1] 0.07790143\n\n\nCode\n    #bnt\n  (propATSNegGr &lt;- 1 - 1403/2388)\n\n\n[1] 0.4124791"
  },
  {
    "objectID": "modelGrowthInMass.html#environmental-effects-on-proportion-of-observations-with-negative-growth",
    "href": "modelGrowthInMass.html#environmental-effects-on-proportion-of-observations-with-negative-growth",
    "title": "16  Growth in mass",
    "section": "16.7 Environmental effects on Proportion of observations with negative growth",
    "text": "16.7 Environmental effects on Proportion of observations with negative growth\n\n16.7.1 Models for proportions\n\n16.7.1.1 Brool trout\nProbably delete this section\n\n\nCode\npropModBKT1 &lt;- lm(propNeg ~ (mT + mF_log10 + nInd + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT2 &lt;- lm(propNeg ~ (mT + mF_log10 + nInd + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT3 &lt;- lm(propNeg ~ (mT + mF_log10 + nInd )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT4 &lt;- lm(propNeg ~ (mT + mF_log10  + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT5 &lt;- lm(propNeg ~ (mT  + nInd + seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT6 &lt;- lm(propNeg ~ (mT + mF_log10 + nInd )^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT7 &lt;- lm(propNeg ~ (mT + mF_log10  + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT8 &lt;- lm(propNeg ~ (mT + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT9 &lt;- lm(propNeg ~ (nInd + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT10 &lt;- lm(propNeg ~ (mF_log10 + seasonGG + riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT11 &lt;- lm(propNeg ~ (riverGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT12&lt;- lm(propNeg ~ (seasonGG)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT13 &lt;- lm(propNeg ~ (nInd)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT14 &lt;- lm(propNeg ~ (mF_log10)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModBKT15 &lt;- lm(propNeg ~ (mT)^2, data = propNegSRsN |&gt; filter(speciesGG == \"Brook trout\"))\n\npropModAIC &lt;- AIC(propModBKT1, propModBKT2, propModBKT3, propModBKT4, propModBKT5, propModBKT6, propModBKT7, propModBKT8, propModBKT9, propModBKT10, propModBKT11, propModBKT12, propModBKT13, propModBKT14, propModBKT15) |&gt;  arrange(AIC)\n\nsummary(rownames(propModAIC)[1])\n\n\n   Length     Class      Mode \n        1 character character \n\n\nCode\nget(rownames(propModAIC)[1])\n\n\n\nCall:\nlm(formula = propNeg ~ (mF_log10 + seasonGG + riverGG)^2, data = filter(propNegSRsN, \n    speciesGG == \"Brook trout\"))\n\nCoefficients:\n         (Intercept)              mF_log10            seasonGG.L  \n           -0.102080             -0.125794              0.212557  \n          seasonGG.Q            seasonGG.C             riverGG.L  \n            0.188602             -0.568568             -0.169175  \n           riverGG.Q             riverGG.C   mF_log10:seasonGG.L  \n            0.080556              0.011321              0.115009  \n mF_log10:seasonGG.Q   mF_log10:seasonGG.C    mF_log10:riverGG.L  \n            0.215843             -0.395742             -0.044697  \n  mF_log10:riverGG.Q    mF_log10:riverGG.C  seasonGG.L:riverGG.L  \n            0.046653             -0.001675              0.155177  \nseasonGG.Q:riverGG.L  seasonGG.C:riverGG.L  seasonGG.L:riverGG.Q  \n            0.269973             -0.466788             -0.049743  \nseasonGG.Q:riverGG.Q  seasonGG.C:riverGG.Q  seasonGG.L:riverGG.C  \n           -0.099291              0.099554              0.028025  \nseasonGG.Q:riverGG.C  seasonGG.C:riverGG.C  \n            0.022183             -0.054596  \n\n\n\n\n\n16.7.2 Proportion of observations with negative growth by flow\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(mF, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(mF, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot\n  scale_color_discrete(drop = FALSE) +\n  ggtitle(\"Tributaries\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, speciesGG == \"Brook trout\"), aes(mF, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(bquote(\"Mean flow \" ~ (m^3 ~ \"·\" ~ s^{-1}))) + #alt-250 for dot\n  scale_color_discrete(drop = FALSE) +\n  ggtitle(\"Brook trout\") +\n  theme_publication() +  \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n\n16.7.3 Proportion of observations with negative growth by temperature\n\n\nCode\nplotNegGrowth_temp &lt;- function(d, s){\n  ggplot(d |&gt; filter(n &gt; 10, seasonGG == s), aes(mT, propNeg, color = riverGG)) +\n    geom_point(aes(size = n)) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n    scale_x_continuous(\"Mean temperature (C)\") +\n    scale_color_discrete() +\n    ggtitle(s) +\n    theme_publication() +  \n    facet_grid(riverGG~speciesGG)\n}\n\n\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Spring\")\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Summer\")\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Autumn\")\n\n\n\n\n\n\n\n\n\nCode\nplotNegGrowth_temp(propNegSRsN, \"Winter\")\n\n\n\n\n\n\n\n\n\n\n16.7.4 Proportion of observations with negative growth by 3 species fish counts\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(nInd, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"3 species count\") +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(nInd, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"3 species count\") +\n  scale_color_discrete() +\n  ggtitle(\"Tributaries\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\n\n\n16.7.5 Proportion of observations with negative growth by conspecific fish counts\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == \"West Brook\"), aes(nIndBySpp, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"conspecific count\") +\n  scale_color_discrete() +\n  ggtitle(\"West Brook\") +\n  theme_publication() +\n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG != \"West Brook\"), aes(nIndBySpp, propNeg, color = riverGG)) +\n  geom_point(aes(size = n)) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_y_continuous(\"Proportion of observations with negative growth in mass\") +\n  scale_x_log10(\"conspecific count\") +\n  scale_color_discrete() +\n  ggtitle(\"Tributaries\") +\n  theme_publication() +  \n  facet_grid(seasonGG~speciesGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#xgboost-model-for-proportion-of-fish-with-negative-growth",
    "href": "modelGrowthInMass.html#xgboost-model-for-proportion-of-fish-with-negative-growth",
    "title": "16  Growth in mass",
    "section": "16.8 XGBoost model for proportion of fish with negative growth",
    "text": "16.8 XGBoost model for proportion of fish with negative growth\n\n16.8.1 Hyperparameter search grid\n\n\nCode\nrunHyperparamSearch &lt;- function(d = propNegSRsN, vars = c(\"speciesGG\", \"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"), nRoundsIn = 100000, early_stopping_roundsIn = 500) {\n  \n  set.seed(123)\n  \n  dML_propNeg &lt;- d |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_propNeg &lt;- setdiff(names(dML_propNeg), \"propNeg\")\n  \n  # Create the treatment plan from the training data\n  treatplan_propNeg &lt;- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_propNeg &lt;- treatplan_propNeg %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_train_propNeg &lt;- dML_propNeg$propNeg\n  \n  # create hyperparameter grid\n  hyper_grid_propNeg &lt;- expand.grid(\n    eta = c(.01, .05, .1, .3),\n    max_depth = c(1, 3, 5, 7),\n    min_child_weight = c(1, 3, 5, 7),\n    subsample = c(.65, .8, 1),\n    colsample_bytree = c(.8, .9, 1),\n    optimal_trees = 0,               # a place to dump results\n    min_RMSE = 0                     # a place to dump results\n  )\n\n  # reproducibility\n    set.seed(123)\n  #   \n  # grid search\n  for(i in 1:nrow(hyper_grid_propNeg)) {\n    print(paste0(i, \" out of \", nrow(hyper_grid_propNeg)))\n    # create parameter list\n    params_propNeg &lt;- list(\n      eta = hyper_grid_propNeg$eta[i],\n      max_depth = hyper_grid_propNeg$max_depth[i],\n      min_child_weight = hyper_grid_propNeg$min_child_weight[i],\n      subsample = hyper_grid_propNeg$subsample[i],\n      colsample_bytree = hyper_grid_propNeg$colsample_bytree[i]\n    )\n  \n  \n    # train model\n    xgb.tune_propNeg &lt;- xgb.cv(\n      params = params_propNeg,\n      data = features_train_propNeg,\n      label = response_train_propNeg,\n      nrounds = 100000,\n      nfold = 5,\n      objective = \"reg:squarederror\", #\"reg:linear\",  # for regression models\n      verbose = 0,               # silent,\n      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees\n    )\n  \n    # add min training error and trees to grid\n    hyper_grid_propNeg$optimal_trees[i] &lt;- which.min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)\n    hyper_grid_propNeg$min_RMSE[i] &lt;- min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)\n  }\n  \n  return(hyper_grid_propNeg |&gt; arrange(min_RMSE))\n}\n#   \n# &gt; #     eta max_depth min_child_weight subsample colsample_bytree optimal_trees  min_RMSE\n# &gt; # 1  0.10         1                7      0.80              0.9            57 0.1833918\n# &gt; # 2  0.10         3                3      1.00              1.0            52 0.1835447\n# &gt; # 3  0.05         3                1      0.65              0.9            88 0.1849762\n# &gt; # 4  0.01         3                7      1.00              0.9           514 0.1853950\n# &gt; # 5  0.30         5                1      0.80              1.0            17 0.1854102\n# &gt; # 6  0.01         3                3      0.65              0.8           438 0.1854346\n# &gt; # 7  0.30         5                1      1.00              0.9            14 0.1856684\n# &gt; # 8  0.01         1                3      0.65              0.9           560 0.1857717\n# &gt; # 9  0.30         3                1      1.00              1.0            13 0.1859183\n# &gt; # 10 0.30         3                3      0.65              0.8            21 0.1860299\n# &gt; # 11 0.05         7                3      0.80              0.8           123 0.1860336\n# &gt; # 12 0.01         3                5      0.80              1.0           512 0.1861016\n# &gt; # 13 0.10         3                7      0.65              1.0            45 0.1861042\n# &gt; # 14 0.10         3                5      1.00              1.0            55 0.1861160\n# # &gt; # 15 0.10         1                1      1.00              0.9           179 0.1861891\n\n\n\n\n16.8.2 Function to run models\n\n\nCode\n# http://uc-r.github.io/gbm_regression\nrunXGB &lt;- function(d = propNegSRsN, vars = c(\"speciesGG\", \"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"), nRoundsIn = 100000, params = params_propNegIn) {\n  \n  set.seed(125)\n  \n  dML_propNeg &lt;- d |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_propNeg &lt;- setdiff(names(dML_propNeg), \"propNeg\")\n  \n  # Create the treatment plan from the training data\n  treatplan_propNeg &lt;- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_propNeg &lt;- treatplan_propNeg %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_train_propNeg &lt;- dML_propNeg$propNeg\n  \n  # Prepare the test data\n  features_test_propNeg &lt;- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %&gt;% as.matrix()\n  response_test_propNeg &lt;- dML_propNeg$propNeg\n\n  ##### Run model\n  # parameter list - from the top model of the grid search above\n  params_propNeg &lt;- list(\n    eta = params$eta, #0.01,\n    max_depth = params$max_depth, #1,\n    min_child_weight = params$min_child_weight, #7,\n    subsample = params$subsample, #0.8,\n    colsample_bytree = params$colsample_bytree #0.9\n   # optimal_trees = params$optimal_trees\n  )\n  \n  # train final model\n  xgb.fit.final_propNeg &lt;- xgboost(\n    params = params_propNeg,\n    data = features_train_propNeg,\n    label = response_train_propNeg,\n    nrounds = nRoundsIn,\n    objective = \"reg:squarederror\",\n    verbose = 0,\n    early_stopping_rounds = 250 # stop if no improvement for 20 consecutive trees\n  )\n  \n\n  return(\n    list(\n      dat = dML_propNeg,\n      xgb = xgb.fit.final_propNeg,\n      new_vars = new_vars_propNeg,\n      features_train = features_train_propNeg,\n      response_train = response_train_propNeg\n    )\n  )\n\n}\n\n\n\n\n16.8.3 Brook trout\n\n\nCode\n#### uncomment to run hyperparameter search grid\n# hpPropNegBKT &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brook trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegBKT, file = \"./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData\")\nhpPropNegBKT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.01         5                5      0.80              0.9           596\n2  0.01         3                3      1.00              0.8          1375\n3  0.05         3                1      0.80              0.9           208\n4  0.01         3                5      0.80              0.8          1132\n5  0.01         7                7      1.00              1.0           392\n6  0.01         7                5      0.65              0.8           581\n7  0.10         5                3      0.80              0.8            38\n8  0.01         5                7      0.80              0.9           450\n9  0.30         3                1      0.80              0.8            57\n10 0.05         5                3      1.00              0.9           123\n    min_RMSE\n1  0.1289382\n2  0.1294819\n3  0.1301824\n4  0.1302462\n5  0.1302568\n6  0.1306034\n7  0.1308955\n8  0.1308964\n9  0.1310481\n10 0.1313799\n\n\nCode\n#### uncomment to run XGBoost\n# propNegBKT &lt;- runXGB(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brook trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   params = hpPropNegBKT[1,]\n# )\n# save(propNegBKT, file = \"./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData\")\n\npropNegBKT$xgb$best_iteration\n\n\n[1] 67631\n\n\nCode\npropNegBKT$xgb$best_score\n\n\n[1] 0.0005971119\n\n\nCode\n# variable importance plot\nviBKT &lt;- xgb.importance(model = propNegBKT$xgb)\nxgb.plot.importance(viBKT, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\ns_propNegBKT &lt;- hstats(propNegBKT$xgb, v = propNegBKT$new_vars, X = propNegBKT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=========                                                             |  12%\n  |                                                                            \n  |==================                                                    |  25%\n  |                                                                            \n  |==========================                                            |  38%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |============================================                          |  62%\n  |                                                                            \n  |====================================================                  |  75%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_propNegBKT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.364951\n\n\nCode\nplot(s_propNegBKT)\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegBKT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_propNegBKT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_propNegBKT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNeg &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBKT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Brook Trout\")\n\npMT_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Brook Trout\")\n\npNInd_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brook Trout\")\n\npYear_propNegDataBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brook Trout\")\n\n\nall_propNegDataBKT &lt;- bind_rows(pFlow_propNegDataBKT, pMT_propNegDataBKT, pNInd_propNegDataBKT, pYear_propNegDataBKT)\n\n(\nall_propNegDataBKT_gg &lt;- ggplot(all_propNegDataBKT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialISBKT &lt;- propNegBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Isolated_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|&gt; \n  mutate(riverGG = \"Isolated Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Isolated_Small\")\n\npartialRiversBKT &lt;- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"), \n                             ordered = T))\n\nggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegBKT$xgb, v = \"mT\", X = propNegBKT$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegBKT$xgb, v = \"mF_log10\", X = propNegBKT$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegBKT$xgb, v = \"mF_log10\", X = propNegBKT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n16.8.4 Brown trout\n\n\nCode\n# hpPropNegBNT &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Brown trout\", year &gt; 2001),\n#   vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegBNT, file = \"./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData\")\nhpPropNegBNT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         1                3      0.65              0.9            11\n2  0.30         1                3      1.00              0.9            17\n3  0.05         1                3      0.80              0.9           178\n4  0.10         1                3      0.80              0.9            48\n5  0.01         1                3      1.00              0.9           455\n6  0.10         3                1      0.65              0.9            29\n7  0.30         1                3      0.65              1.0            21\n8  0.01         1                3      0.65              0.8           523\n9  0.10         1                3      0.80              1.0            44\n10 0.30         1                5      0.80              0.9            41\n    min_RMSE\n1  0.1271580\n2  0.1275897\n3  0.1293155\n4  0.1307409\n5  0.1308256\n6  0.1312113\n7  0.1312372\n8  0.1314425\n9  0.1314432\n10 0.1316114\n\n\nCode\npropNegBNT &lt;- runXGB(\n  d = propNegSRsN |&gt;  filter(speciesGG == \"Brown trout\", year &gt; 2001, nInd &gt; 10),\n  vars = c(\"riverGG\", \"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n  nRoundsIn = 250000,\n  params = hpPropNegBNT[1,]\n)\n# save(propNegBNT, file = \"./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData\")\n\npropNegBNT$xgb$best_iteration\n\n\n[1] 13581\n\n\nCode\npropNegBNT$xgb$best_score\n\n\n[1] 0.0004765856\n\n\nCode\n# variable importance plot\nviBNT &lt;- xgb.importance(model = propNegBNT$xgb)\nxgb.plot.importance(viBNT, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\n#s_propNegBNT &lt;- hstats(propNegBNT$xgb, v = propNegBNT$new_vars, X = propNegBNT$features_train)\n# s_propNegBNT\n# plot(s_propNegBNT)\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegBNT, normalize = FALSE, squared = FALSE, top_m = 8)\n# \n# # 3-way interactions\n# plot(s_propNegBNT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNeg &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegBNT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)\n\n\n\n\n\nCode\n##################################################################\n# all partials on one graph\npFlow_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Brown Trout\")\n\npMT_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Brown Trout\")\n\npNInd_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brown Trout\")\n\npYear_propNegDataBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brown Trout\")\n\n\nall_propNegDataBNT &lt;- bind_rows(pFlow_propNegDataBNT, pMT_propNegDataBNT, pNInd_propNegDataBNT, pYear_propNegDataBNT)\n\n(\nall_propNegDataBNT_gg &lt;- \n  ggplot(all_propNegDataBNT, aes(xScaled, yhat, color = var)) +\n    #geom_point(alpha = 0.2) +\n    geom_smooth(se = FALSE) +\n    theme_publication() +\n    labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBNT &lt;- propNegBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\n\npartialRiversBNT &lt;- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\"), \n                             ordered = T))\n\nggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegBNT$xgb, v = \"mT\", X = propNegBNT$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegBNT$xgb, v = \"mF_log10\", X = propNegBNT$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegBNT$xgb, v = \"mF_log10\", X = propNegBNT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n16.8.5 Atlantic salmon\n\n\nCode\n# hpPropNegATS &lt;- runHyperparamSearch(\n#   d = propNegSRsN |&gt;  filter(speciesGG == \"Atlantic salmon\", riverGG == \"West Brook\", year &lt; 2007),\n#   vars = c(\"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   early_stopping_roundsIn = 250\n# )\n# save(hpPropNegATS, file = \"./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData\")\nload(\"./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData\")\nhpPropNegATS[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         1                1      0.65              0.9            17\n2  0.10         5                3      0.65              0.8            36\n3  0.30         1                5      0.80              1.0            85\n4  0.01         1                3      0.80              0.9           427\n5  0.30         1                1      0.80              1.0            16\n6  0.01         7                3      0.80              0.8           351\n7  0.01         7                1      0.65              0.9           371\n8  0.10         7                1      0.65              0.9            34\n9  0.30         5                3      0.65              0.9            20\n10 0.10         3                5      0.80              0.8            47\n    min_RMSE\n1  0.1802524\n2  0.1810207\n3  0.1825029\n4  0.1834041\n5  0.1839152\n6  0.1856746\n7  0.1866094\n8  0.1871390\n9  0.1874577\n10 0.1887720\n\n\nCode\npropNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\") |&gt; \n  ggplot(aes(year, n, color = seasonGG)) + geom_line() + facet_wrap(~riverGG)\n\n\n\n\n\nCode\n# propNegATS &lt;- runXGB(\n#   d = propNegSRsN |&gt; filter(speciesGG == \"Atlantic salmon\", riverGG == \"West Brook\", year &lt; 2007),\n#   vars = c(\"year\", \"mT\", \"mF_log10\", \"nInd\", \"propNeg\"),\n#   params = hpPropNegATS[1,]\n# )\n# save(propNegATS, file = \"./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData\")\nload(\"./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData\")\n\npropNegATS$xgb$best_iteration\n\n\n[1] 2720\n\n\nCode\npropNegATS$xgb$best_score\n\n\n[1] 0.0004255186\n\n\nCode\n# variable importance plot\nviATS &lt;- xgb.importance(model = propNegATS$xgb)\nxgb.plot.importance(viATS, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\n#s_propNegATS &lt;- hstats(propNegATS$xgb, v = propNegATS$new_vars, X = propNegATS$features_train)\n# s_propNegATS\n# plot(s_propNegATS)\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_propNegATS, normalize = FALSE, squared = FALSE, top_m = 8)\n# \n# # 3-way interactions\n# plot(s_propNegATS, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npFlow_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_propNegATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = propNegATS$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pFlow_propNegATS, pTemp_propNegATS, pNInd_propNegATS, pYear_propNegATS, nrow = 2)\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mF_log10\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),\n         var = \"Flow\",\n         speciesGG = \"Atlantic Salmon\")\n\npMT_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"mT\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (mT-mean(mT))/sd(mT),\n         var = \"Temperature\",\n         speciesGG = \"Atlantic Salmon\")\n\npNInd_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Atlantic Salmon\")\n\npYear_propNegDataATS &lt;- propNegATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Atlantic Salmon\")\n\n\nall_propNegDataATS &lt;- bind_rows(pFlow_propNegDataATS, pMT_propNegDataATS, pNInd_propNegDataATS, pYear_propNegDataATS)\n\n(\nall_propNegDataATS_gg &lt;- \nggplot(all_propNegDataATS, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(propNegATS$xgb, v = \"mT\", X = propNegATS$features_train, BY = \"mF_log10\")) +\n  geom_smooth(aes(color = mF_log10), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegATS$xgb, v = \"mF_log10\", X = propNegATS$features_train, BY = \"mT\")) +\n  geom_smooth(aes(color = mT), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(propNegATS$xgb, v = \"mF_log10\", X = propNegATS$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\nCode\n##################################################################\n\n\n\n\n16.8.6 3 species together\n\n\nCode\n# variable importance plots\n\nviAll &lt;- bind_rows(\n  viBKT |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brook Trout\"),\n  viBNT |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brown Trout\"),\n  viATS |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Atlantic Salmon\")\n) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE),\n         feature2 = case_when(\n           Feature == \"mF_log10\" ~ \"Flow\",\n           Feature == \"mT\" ~ \"Temperature\",\n           Feature == \"nInd\" ~ \"Num Individuals\",\n           Feature == \"year\" ~ \"Year\")\n  )\n\nggplot(viAll |&gt; filter(Feature %in% c(\"mF_log10\", \"mT\", \"nInd\", \"year\")), aes(feature2, Gain, fill = sppOrdered)) +\n  geom_col(position = \"dodge\") +\n  theme_publication() +\n  scale_fill_grey() +\n  labs(y = \"Variable importance for the proportion of negative observations\", x = \"Variable\")\n\n\n\n\n\nCode\n########################################################\n\nall_propNegData3spp &lt;- bind_rows(all_propNegDataBKT, all_propNegDataBNT, all_propNegDataATS) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE))\n\nall_propNegData3sppFlow_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Flow\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled flow\") +\n  theme(legend.position = \"none\")  \n\n\nall_propNegData3sppTemp_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Temperature\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled temperature\") +\n  theme(legend.position = \"none\")  \n\nall_propNegData3sppNInd_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Num inds\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled Number of individuals\") +\n  theme(legend.position = \"none\")  \n\nall_propNegData3sppYear_gg &lt;- ggplot(all_propNegData3spp |&gt; filter(var == \"Year\"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n  scale_color_grey() +\n  labs(y = NULL, x = \"Year\") +\n  theme(legend.position = \"none\")  \n\ngridExtra::grid.arrange(\n  all_propNegData3sppFlow_gg, \n  all_propNegData3sppTemp_gg,\n  all_propNegData3sppNInd_gg,\n  all_propNegData3sppYear_gg,\n  left = textGrob(expression(bold(\"Effect on proportion of negative observations\")), rot = 90, gp = gpar(fontsize = 16))\n)\n\n\n\n\n\nCode\n#######################################"
  },
  {
    "objectID": "modelGrowthInMass.html#ft-cycle-graphs",
    "href": "modelGrowthInMass.html#ft-cycle-graphs",
    "title": "16  Growth in mass",
    "section": "16.9 F/T cycle graphs",
    "text": "16.9 F/T cycle graphs\n\n16.9.1 Mean flow and temperature\n\n\nCode\nplot_mT_mF &lt;- function(d, s, plotText){\n  ggplot(d |&gt; filter(n &gt; 25, speciesGG == s), aes(mT, mF_log10, color = factor(seasonGG))) +\n    geom_point(aes(size = propNeg)) +\n    {if(plotText) geom_text(aes(label = year), vjust = 0, nudge_y = -0.075, check_overlap = FALSE, size = 3)} +\n    labs(x = \"Mean temperature (C)\", y = \"log10 of mean Flow\") +\n    scale_color_discrete() +\n    theme_publication() +  \n    facet_wrap(~riverGG, scales = \"free\")\n}\n\n\n\nBrook troutBrown troutAtlantic salmon\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brook trout\", FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brown trout\", FALSE)\n\n\n\n\n\n\n\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Atlantic salmon\", FALSE)\n\n\n\n\n\n\n\n\n\n\n16.9.2 Mean flow and temperature with year labels\n\n16.9.2.1 panel-tabset\n\n\n\n16.9.3 Brook trout\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brook trout\", TRUE)\n\n\n\n\n\n\n16.9.3.1 Brown trout\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Brown trout\", TRUE)\n\n\n\n\n\n\n\n16.9.3.2 Atlantic salmon\n\n\nCode\nplot_mT_mF(propNegSRsN, \"Atlantic salmon\", TRUE)\n\n\n\n\n\n:::\nMean flow and temperature values for each season and year for the West Brook\nNot very informative\n\n\nCode\nggplot(propNegSRsN |&gt; filter(n &gt; 10, riverGG == 'West Brook') |&gt; arrange(riverGG, speciesGG, year, seasonGG), aes(mT, mF_log10)) +\n  geom_line() +\n  geom_point(aes(color = factor(seasonGG))) +\n  facet_wrap(~year)\n\n\n\n\n\n\n\n\n16.9.4 Yearly temperature/flow cycles of daily data\n\n\nCode\nplotMerged &lt;- function(d, r, minYear = 2000, maxYear = 2017){\n  ggplot(d |&gt; filter(riverGG == r, year %in% c(minYear:maxYear)), \n         aes(temperature, log10(flowByRiver), color = seasonGG, group = seasonGG)) +\n    geom_point() +\n    geom_smooth(se = FALSE) +\n    #geom_line() +\n    labs(x = \"Temperature (C)\", y = \"log10 of Flow\") +\n    scale_color_discrete() +\n    ggtitle(r) +\n    theme_publication() +  \n    facet_wrap(~year, scales = 'free')\n}\n# this plots f/t for all three species - good for filling in gaps\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"West Brook\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Open Large\", 2002, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Open Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMerged(envIn_propNeg, \"Isolated Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\n\n16.9.5 Smooths of temperature/flow cycles of daily data by season\n\n\nCode\nplotMergedBySeason &lt;- function(d, r, minYear = 2000, maxYear = 2017) {\n  ggplot(d |&gt; filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), \n         aes(temperature, log10(flowByRiver), \n             color = factor(year), group = year\n             )\n         ) +\n    #geom_point() +\n    geom_smooth(se = FALSE) +\n    labs(x = \"Temperature (C)\", y = \"log10 of Flow\") +\n    scale_color_discrete() +\n    ggtitle(r) +\n    theme_publication(legendPosition = \"right\", legendDirection = \"vertical\") +  \n    facet_wrap(~seasonGG, scales = 'free')\n}\n\n\n\nWest BrookOpen LargeOpen SmallIsolated small\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"West Brook\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Open Large\", 2002, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Open Small\", 2002, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeason(envIn_propNeg, \"Isolated Small\", 2002, 2017)\n\n\n\n\n\n\n\n\nTO ADD: low flow high density important? Look at interaction btw flow:density\n\n\n16.9.6 F/T cycles with labels\nPlot F/T cycles by river, season, species with label for propNeg and conspecific and all-species abundances\n\n\nCode\nplotMergedBySeasonByEverything &lt;- function(d, d2, r, s, spp, minYear = 2000, maxYear = 2017){\n  ggplot(d |&gt; \n           filter(riverGG == r,\n                  year %in% c(minYear:maxYear), \n                  !is.na(seasonGG), \n                  seasonGG == s, \n                  speciesGG == spp), \n         aes(temperature, log10(flowByRiver))\n         ) +\n    geom_smooth(se = FALSE, color = \"darkgrey\") +\n    geom_point(aes(color = yday)) +\n    geom_text(aes(\n      x = minTemp + 3.0, \n      y = log10(minFlow) - 1, \n      label = paste(\"propNeg=\",round(propNeg, 2)) \n      #size = propNeg\n      ), \n        data = d2|&gt; \n          filter(riverGG == r, \n                 year %in% c(minYear:maxYear),\n                 seasonGG == s, \n                 speciesGG == spp)\n        ) +\n    geom_text(aes(\n      x = minTemp + 3.0,\n      y = log10(minFlow) - 0.3,\n      label = paste(paste(\"nIndAllSpp=\", nInd), paste(\"nIndBySpp=\", nIndBySpp), sep = \"\\n\")\n      ),\n        data = d2|&gt;\n          filter(riverGG == r,\n                 year %in% c(minYear:maxYear),\n                 seasonGG == s,\n                 speciesGG == spp)\n        ) +\n    labs(x = \"Temperature (c)\", y = \"log10 Flow\") +\n    ggtitle(paste(r, s, spp, sep = \", \")) +\n  theme_publication() +  \n  facet_wrap(~year)\n}\n\n\n\n16.9.6.1 West Brook\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Spring\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Summer\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Autumn\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"West Brook\", \"Winter\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n16.9.6.2 Open Large\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Spring\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Summer\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Autumn\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Large\", \"Winter\", \"Atlantic salmon\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n16.9.6.3 Open Small\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Spring\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Summer\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Autumn\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Winter\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Open Small\", \"Winter\", \"Brown trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\n\n16.9.6.4 Isolated Small\n\nSpringSummerAutumnWinter\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Spring\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Summer\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Autumn\", \"Brook trout\", 2000, 2017)\n\n\n\n\n\n\n\n\n\nCode\nplotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, \"Isolated Small\", \"Winter\", \"Brook trout\", 2000, 2017)"
  },
  {
    "objectID": "modelGrowthInMass.html#consequences-of-negative-growth",
    "href": "modelGrowthInMass.html#consequences-of-negative-growth",
    "title": "16  Growth in mass",
    "section": "16.10 Consequences of negative growth",
    "text": "16.10 Consequences of negative growth\n\n16.10.1 Growth and last observation\n\n16.10.1.1 All years\nMean number of last observed sample as response variable\n\n\nCode\nplot_negGr_beforeLastMean &lt;- function(sppIn) {\n  ggplot(negGr_beforeLastMean |&gt; filter(speciesGG == sppIn, seasonGG != \"Spring\"), aes(negGrowth, meanSamplesBeforeLast, fill = negGrowth)) +\n    geom_col() +\n    theme_publication() +    \n    facet_grid(seasonGG~riverGG)    \n}\n\nplot_negGr_beforeLastMean(\"Brook trout\")\n\n\n\n\n\nCode\nplot_negGr_beforeLastMean(\"Brown trout\")\n\n\n\n\n\nCode\nplot_negGr_beforeLastMean(\"Atlantic salmon\")\n\n\n\n\n\nCode\n  ggplot(negGr_beforeLastMean |&gt; filter(speciesGG == \"Brook trout\", seasonGG != \"Spring\"), aes(meanGR, meanSamplesBeforeLast)) +\n    geom_point(aes(color = riverGG, shape = riverGG)) +\n    geom_line(aes(shape = riverGG, color = riverGG)) +\n    #geom_smooth(method = \"lm\", se = FALSE) +\n    theme_publication() +    \n    facet_wrap(~seasonGG, scales = \"free\")\n\n\n\n\n\n\n\n16.10.1.2 By year\n\n\nCode\n  ggplot(negGr_beforeLastMean_year |&gt; filter(n &gt; 2, year &gt; 2001, year &lt; 2015, speciesGG == \"Brook trout\", seasonGG != \"Spring\"), aes(meanGR, meanSamplesBeforeLast)) +\n    geom_point(aes(color = riverGG, shape = riverGG)) +\n    geom_line(aes(shape = riverGG, color = riverGG)) +\n    #geom_smooth(method = \"lm\", se = FALSE) +\n    theme_publication() +    \n    facet_grid(seasonGG ~ year, scales = \"free\")\n\n\n\n\n\nSplit data by samplesBeforeLast = 1 and samplesBeforeLast &gt; 1.\nThe graph shows mean growth for fish that were caught for the last time in the next sample or at some later sample\n\n\nCode\nnumSamplesBeforeLastGT1_data &lt;-  cd1 |&gt;\n  mutate(numSamplesBeforeLastGT1 = samplesBeforeLast &gt; 1) |&gt; \n  filter(!is.na(negGrowth)) |&gt; \n  group_by(speciesGG, riverGG, seasonGG, numSamplesBeforeLastGT1) |&gt; \n  summarize(\n    meanGR = mean(grWeight, na.rm = TRUE),\n    sdGR = sd(grWeight, na.rm = TRUE),\n    meanSamplesBeforeLast = mean(samplesBeforeLast, na.rm = TRUE),\n    sdSamplesBeforeLast = sd(samplesBeforeLast, na.rm = TRUE),\n    ymax = meanGR + sdGR,\n    n = n()\n  )\n\n #  ggplot(tmp |&gt; filter(n &gt; 2, speciesGG == \"Brook trout\"), aes(numSamplesBeforeLastGT1, meanGR)) +\n #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +\n #    geom_col() +\n #    theme_publication() +    \n #    facet_grid(riverGG~seasonGG , scales = \"free\")\n #  \n # ggplot(tmp |&gt; filter(n &gt; 2, speciesGG == \"Brown trout\"), aes(numSamplesBeforeLastGT1, meanGR)) +\n #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +\n #    geom_col() +\n #    theme_publication() +    \n #    facet_grid(riverGG~seasonGG , scales = \"free\")\n \n   ggplot(numSamplesBeforeLastGT1_data |&gt; filter(n &gt; 2, !is.na(numSamplesBeforeLastGT1)), aes(numSamplesBeforeLastGT1, meanGR, fill = speciesGG, color = speciesGG)) +\n    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +\n    geom_col(position = \"dodge\") +\n    theme_publication() +    \n    facet_grid(riverGG~seasonGG , scales = \"free\")\n\n\n\n\n\nCode\n  ggplot(numSamplesBeforeLastGT1_data |&gt; filter(n &gt; 2, !is.na(numSamplesBeforeLastGT1)), aes(speciesGG, meanGR, fill = numSamplesBeforeLastGT1, color = numSamplesBeforeLastGT1)) +\n    geom_errorbar(aes(x = speciesGG, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +\n    geom_col(position = \"dodge\") +\n    theme_publication() +\n    theme(axis.text.x = element_text(angle = 360 - 60, vjust = 0.3, hjust = 0.1)) +\n    facet_grid(riverGG~seasonGG , scales = \"free\")\n\n\n\n\n\nRelationship between individual growth and length of subsequent observations (how many more observations before the last observation) for individual fish.\n\n\n16.10.1.3 Broken up by years\n\n\nCode\nplotGrowthSamplesLeft &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011, samplesBeforeLast &gt;= 0), aes(grWeight, samplesBeforeLast)) +\n    geom_point(alpha = 0.3) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_grid(seasonGG~year)\n}\n\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeft(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\n\n\n16.10.1.4 All years\n\n\nCode\nplotGrowthSamplesLeftNoYear &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011, samplesBeforeLast &gt;= 0), aes(grWeight, samplesBeforeLast)) +\n    geom_point(alpha = 0.3) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +  \n    facet_wrap(~seasonGG)\n}\n\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthSamplesLeftNoYear(cd1, \"Atlantic salmon\", \"West Brook\")\n\n\n\n\n\n\n\n16.10.1.5 Break up by pos/neg growth\n\n\nCode\nplotGR_sampsBL &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r), aes(meanGR, samplesBeforeLast, color = negGrowth)) + \n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_grid(speciesGG~seasonGG+riverGG, scales = \"free\")\n}\n\nplotGR_sampsBL(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\", \"Open Large\"))\n\n\n\n\n\nCode\nplotGR_sampsBL2 &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(meanGR, samplesBeforeLast, color = speciesGG)) + \n    geom_point(aes(size = n)) +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_grid(riverGG~negGrowth+seasonGG, scales = \"free\")\n}\n\nplotGR_sampsBL2(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\", \"Open Large\"))\n\n\n\n\n\nCode\nplotGR_sampsBL3 &lt;- function(d, spp, r, ng) {\n  ggplot(d |&gt; filter(n &gt; 5, speciesGG %in% spp, riverGG %in% r, negGrowth %in% ng), aes(meanGR, samplesBeforeLast, color = speciesGG)) + \n    geom_point() +\n    geom_smooth(method = \"lm\", se = FALSE) +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, ng, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Number of samples before last observation\") +\n    theme_publication() +    \n    facet_wrap(negGrowth~seasonGG, scales = \"free\")\n}\n\nplotGR_sampsBL3(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\"), FALSE)\n\n\n\n\n\nCode\nplotGR_sampsBL3(negGr_beforeLast, c(\"Brook trout\",\"Brown trout\", \"Atlantic salmon\"), c(\"West Brook\"), TRUE)\n\n\n\n\n\nTO ADD: mean samplesBeforeLast by negGR\n\n\nCode\nplotGrowthKnownZPosNeg &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG == r, year &lt; 2011, !is.na(samplesBeforeLast)), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_boxplot() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(r)) +\n    theme_publication() +   \n    theme(axis.text.y = element_blank()) +\n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\", \"Atlantic salmon\"), \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\", \"Atlantic salmon\"), \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\", \"Brown trout\"), \"Open Small\")\n\n\n\n\n\nCode\nplotGrowthKnownZPosNeg(cd1, c(\"Brook trout\"), \"Isolated Small\")\n\n\n\n\n\nTO ADD: knownZ=0 vs knownZ==1, growth in previous interval\n\n\nCode\nplotGrowthKnownZ &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_density() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_wrap(~seasonGG, scales = \"free\")\n}\n\nplotGrowthKnownZ(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthKnownZ(cd1, \"Brown trout\", \"Open Small\")\n\n\n\n\n\nBy year\n\n\nCode\nplotGrowthKnownZByYear &lt;- function(d, spp, r){\n  ggplot(d |&gt; filter(speciesGG == spp, riverGG == r, year &lt; 2011), aes(grWeight, color = samplesBeforeLast == 1)) +\n    geom_boxplot() +\n    geom_vline(xintercept = 0) +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    theme_publication() +    \n    facet_grid(year~seasonGG)\n}\n\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"West Brook\")\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Open Large\")\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Open Small\")\n\n\n\n\n\nCode\nplotGrowthKnownZByYear(cd1, \"Brook trout\", \"Isolated Small\")\n\n\n\n\n\n\n\n\n16.10.2 Growth and movement distance\nTO add: break avg move into negGR/not negGR\n\n\nCode\nplotGR_moveDistNegPos &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(distMoved, color = negGrowth)) + \n    geom_boxplot() +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Movement distance\") +\n    theme_publication() +  \n    theme(axis.text.y = element_blank()) +\n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDistNegPos(cd1, c(\"Brook trout\",\"Brown trout\",\"Atlantic salmon\"), c(\"West Brook\"))\n\n\n\n\n\n\n\nCode\nplotGR_moveDist &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + \n    geom_point(alpha = 0.2) +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Movement distance\") +\n    theme_publication() +    \n    facet_grid(speciesGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDist(cd1, c(\"Brook trout\",\"Brown trout\",\"Atlantic salmon\"), c(\"West Brook\"))\n\n\n\n\n\n\n\nCode\nplotGR_moveDist2 &lt;- function(d, spp, r) {\n  ggplot(d |&gt; filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + \n    geom_point(alpha = 0.2) +\n    geom_smooth(method = \"lm\", se = FALSE, color = 'darkgrey') +\n    scale_color_discrete() +\n    ggtitle(paste(spp, r, sep = \", \")) +\n    labs(x = \"Individual growth in mass\", y = \"Movement distance\") +\n    theme_publication() +    \n    facet_grid(riverGG~seasonGG, scales = \"free\")\n}\n\nplotGR_moveDist2(cd1, c(\"Brook trout\"), c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"))\n\n\n\n\n\nCode\nplotGR_moveDist2(cd1, c(\"Brown trout\"), c(\"West Brook\", \"Open Large\", \"Open Small\"))"
  },
  {
    "objectID": "modelGrowthInMass.html#machine-learning-models---individual-data",
    "href": "modelGrowthInMass.html#machine-learning-models---individual-data",
    "title": "16  Growth in mass",
    "section": "16.11 Machine Learning models - individual data",
    "text": "16.11 Machine Learning models - individual data\nUsing xgBoost to explore patterns in:\n- Binary, lose mass:gain mass\n- Regression, growth in mass\n\n16.11.1 Binary model with negative growth, yes:no\nNot yet in targets….\n\n\n16.11.2 Function to run hyperparameters\n\n\nCode\nrunHyperparamSearchIndData &lt;- function(d = cd1, vars = c(\"riverGG\", \"observedWeight\", \"cohort\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"negGrowth\"), nRoundsIn = 150000, early_stopping_roundsIn = 50) {\n  \n  #set.seed(123)\n  \n  dML_negGrowth &lt;- d |&gt; \n    mutate(age = year - cohort) |&gt; \n    dplyr::select(all_of(vars)) \n  \n  # variable names\n  features_negGrowth &lt;- setdiff(names(dML_negGrowth), \"negGrowth\")\n  \n  # Create the treatment plan from the training data\n  treatplan_negGrowth &lt;- vtreat::designTreatmentsZ(dML_negGrowth, features_negGrowth, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_negGrowth &lt;- treatplan_negGrowth %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML_negGrowth, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_train_negGrowth &lt;- dML_negGrowth$negGrowth\n  \n  # create hyperparameter grid\n  hyper_grid_negGrowth &lt;- expand.grid(\n    eta = c(.01, .05, .1, .3),\n    max_depth = c(1, 3, 5, 7),\n    min_child_weight = c(1, 3, 5, 7),\n    subsample = c(.65, .8, 1),\n    colsample_bytree = c(.8, .9, 1),\n    optimal_trees = 0,               # a place to dump results\n    min_logloss = 0                     # a place to dump results\n  )\n\n  # reproducibility\n    #set.seed(123)\n  #   \n  # grid search\n  for(i in 1:nrow(hyper_grid_negGrowth)) {\n    print(paste0(i, \" out of \", nrow(hyper_grid_negGrowth)))\n    # create parameter list\n    params_negGrowth &lt;- list(\n      eta = hyper_grid_negGrowth$eta[i],\n      max_depth = hyper_grid_negGrowth$max_depth[i],\n      min_child_weight = hyper_grid_negGrowth$min_child_weight[i],\n      subsample = hyper_grid_negGrowth$subsample[i],\n      colsample_bytree = hyper_grid_negGrowth$colsample_bytree[i]\n    )\n  \n  \n    # train model\n    xgb.tune_negGrowth &lt;- xgb.cv(\n      params = params_negGrowth,\n      data = features_train_negGrowth,\n      label = response_train_negGrowth,\n      nrounds = nRoundsIn,\n      nfold = 5,\n      objective = \"binary:logistic\", #\"reg:linear\",  # for regression models\n      verbose = 0,               # silent,\n      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees\n    )\n  \n    # add min training error and trees to grid\n    hyper_grid_negGrowth$optimal_trees[i] &lt;- which.min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)\n    hyper_grid_negGrowth$min_logloss[i] &lt;- min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)\n  }\n  \n  return(hyper_grid_negGrowth |&gt; arrange(min_logloss))\n}\n\n\n\n\n16.11.3 Function to run models\n\n\nCode\n# http://uc-r.github.io/gbm_regression\nrunXGB_indData &lt;- function(d = cd1, vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"negGrowth\"), nRoundsIn = 200000, early_stopping_roundsIn = 50, params = params_negGrowthIn) {\n  \n  #set.seed(125)\n  \n  dML &lt;- d |&gt; \n    mutate(age = year - cohort) |&gt; \n    dplyr::select(all_of(vars))\n    \n  \n  # variable names\n  features_negGrowth &lt;- setdiff(names(dML), \"negGrowth\")\n  \n  # Create the treatment plan from the training data\n  treatplan_negGrowth &lt;- vtreat::designTreatmentsZ(dML, features_negGrowth, verbose = FALSE)\n  \n  # Get the \"clean\" variable names from the scoreFrame\n  new_vars_negGrowth &lt;- treatplan_negGrowth %&gt;%\n    magrittr::use_series(scoreFrame) %&gt;%        \n    dplyr::filter(code %in% c(\"clean\", \"lev\")) %&gt;% \n    magrittr::use_series(varName)     \n  \n  # Prepare the training data\n  features_train_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_train_negGrowth &lt;- dML$negGrowth\n  \n  # Prepare the test data\n  features_test_negGrowth &lt;- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %&gt;% as.matrix()\n  response_test_negGrowth &lt;- dML$negGrowth\n\n  ##### Run model\n  # parameter list - from the top model of the grid search above\n  params_negGrowth &lt;- list(\n    eta = params$eta, #0.01,\n    max_depth = params$max_depth, #1,\n    min_child_weight = params$min_child_weight, #7,\n    subsample = params$subsample, #0.8,\n    colsample_bytree = params$colsample_bytree #0.9\n   # optimal_trees = params$optimal_trees\n  )\n  \n  # train final model\n  xgb.fit.final_negGrowth &lt;- xgboost(\n    params = params_negGrowth,\n    data = features_train_negGrowth,\n    label = response_train_negGrowth,\n    nrounds = nRoundsIn,\n    objective = \"binary:logistic\",\n    verbose = 1,\n    early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for 20 consecutive trees\n  )\n  \n\n  return(\n    list(\n      dat = dML,\n      xgb = xgb.fit.final_negGrowth,\n      new_vars = new_vars_negGrowth,\n      features_train = features_train_negGrowth,\n      response_train = response_train_negGrowth\n    )\n  )\n\n}\n\n\n\n\n16.11.4 Brook trout\n\n16.11.4.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_BKT = FALSE\nrunXGB_BKT = FALSE\n\nif (runHP_BKT) {\n  hpNegGrowthBKT &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brook trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthBKT, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData\")\n} else {\n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData\")\n}\n\nhpNegGrowthBKT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.05         7                3      1.00              0.8           174\n2  0.05         5                1      0.80              0.9           208\n3  0.10         3                5      1.00              0.9           337\n4  0.01         5                1      1.00              0.8          1362\n5  0.10         3                1      1.00              0.8           324\n6  0.10         5                1      0.80              0.9           124\n7  0.10         5                1      0.65              1.0           112\n8  0.30         3                1      1.00              0.9           105\n9  0.10         5                3      1.00              0.8           159\n10 0.10         3                5      0.80              0.8           296\n   min_logloss\n1    0.2516642\n2    0.2526194\n3    0.2528114\n4    0.2531555\n5    0.2532081\n6    0.2532191\n7    0.2532716\n8    0.2533034\n9    0.2533418\n10   0.2533950\n\n\nCode\nif (runXGB_BKT) {\n  negGrowthBKT &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brook trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthBKT[1,]\n  )\nsave(negGrowthBKT, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData\")\n}\nnegGrowthBKT$xgb$best_iteration\n\n\n[1] 2e+05\n\n\nCode\nnegGrowthBKT$xgb$best_score\n\n\n[1] 0.01244459\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthBKT$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviBKT_negGrowth &lt;- xgb.importance(model = negGrowthBKT$xgb)\nxgb.plot.importance(viBKT_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthBKT &lt;- hstats(negGrowthBKT$xgb, v = negGrowthBKT$new_vars, X = negGrowthBKT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |=============                                                         |  18%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=========================                                             |  36%\n  |                                                                            \n  |================================                                      |  45%\n  |                                                                            \n  |======================================                                |  55%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |=========================================================             |  82%\n  |                                                                            \n  |================================================================      |  91%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthBKT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.7491042\n\n\nCode\nplot(s_negGrowthBKT)\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthBKT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthBKT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthBKT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 25, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\n#n.trees = 1082, grid.resolution = 100,\n\npFlow_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npWeight_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),\n         var = \"Mass\",\n         speciesGG = \"Brook Trout\")\n\npFlow_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Brook Trout\")\n\npMT_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Brook Trout\")\n\npNInd_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brook Trout\")\n\npYear_negGrowthDataBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brook Trout\")\n\n\nall_negGrowthDataBKT &lt;- bind_rows(pWeight_negGrowthDataBKT, pFlow_negGrowthDataBKT, pMT_negGrowthDataBKT, pNInd_negGrowthDataBKT, pYear_negGrowthDataBKT)\n\n(\nall_negGrowthDataBKT_gg &lt;- ggplot(all_negGrowthDataBKT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialISBKT &lt;- negGrowthBKT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Isolated_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|&gt; \n  mutate(riverGG = \"Isolated Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Isolated_Small\")\n\npartialRiversBKT &lt;- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\", \"Isolated Small\"), \n                             ordered = T))\n\nggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanTemperature\", X = negGrowthBKT$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanFlowByRiver\", X = negGrowthBKT$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBKT$xgb, v = \"meanFlowByRiver\", X = negGrowthBKT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n16.11.5 Brown trout\n\n16.11.5.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_BNT = FALSE\nrunXGB_BNT = FALSE\n\nif (runHP_BNT) {\n  hpNegGrowthBNT &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brown trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthBNT, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData\")\n} else {\n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData\")\n}\n  \n  hpNegGrowthBNT[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.30         7                7      0.80              0.9            23\n2  0.10         3                1      0.80              0.9            98\n3  0.10         5                1      0.65              1.0            62\n4  0.05         3                3      1.00              1.0           258\n5  0.05         5                3      1.00              0.9           203\n6  0.10         5                7      0.65              0.8           100\n7  0.05         3                1      0.80              0.9           233\n8  0.10         3                3      0.80              0.8           120\n9  0.01         3                5      1.00              1.0          1343\n10 0.30         7                7      1.00              0.8            26\n   min_logloss\n1    0.1390132\n2    0.1394058\n3    0.1395776\n4    0.1398355\n5    0.1401673\n6    0.1404485\n7    0.1406171\n8    0.1406177\n9    0.1406708\n10   0.1408398\n\n\nCode\nif (runXGB_BNT) {\n  negGrowthBNT &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Brown trout\", !is.na(grWeight), year &gt; 2001) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"riverGG\", \"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthBNT[1,]\n  )\n  save(negGrowthBNT, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData\")\n}\nnegGrowthBNT$xgb$best_iteration\n\n\n[1] 2807\n\n\nCode\nnegGrowthBNT$xgb$best_score\n\n\n[1] 0.01994943\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthBNT$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviBNT_negGrowth &lt;- xgb.importance(model = negGrowthBNT$xgb)\nxgb.plot.importance(viBNT_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthBNT &lt;- hstats(negGrowthBNT$xgb, v = negGrowthBNT$new_vars, X = negGrowthBNT$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthBNT\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.8319475\n\n\nCode\nplot(s_negGrowthBNT)\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthBNT, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthBNT, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthBNT, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npFlow_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\npFlow_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Brown Trout\")\n\npMT_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Brown Trout\")\n\npNInd_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Brown Trout\")\n\npYear_negGrowthDataBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Brown Trout\")\n\n\nall_negGrowthDataBNT &lt;- bind_rows(pFlow_negGrowthDataBNT, pMT_negGrowthDataBNT, pNInd_negGrowthDataBNT, pYear_negGrowthDataBNT)\n\n(\nall_negGrowthDataBNT_gg &lt;- ggplot(all_negGrowthDataBNT, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n##################################################################\n# All river on one graph\npartialWBBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_West_Brook\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(riverGG = \"West Brook\") |&gt; \n  rename(x = \"riverGG_lev_x_West_Brook\")\n\npartialOLBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Large\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train)|&gt; \n  mutate(riverGG = \"Open Large\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Large\")\n\npartialOSBNT &lt;- negGrowthBNT$xgb %&gt;%\n  pdp::partial(pred.var = \"riverGG_lev_x_Open_Small\", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |&gt; \n  mutate(riverGG = \"Open Small\") |&gt; \n  rename(x = \"riverGG_lev_x_Open_Small\")\n\npartialRiversBNT &lt;- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |&gt; \n  filter(x %in% c(0,1)) |&gt; \n  mutate(RiverEffect = ifelse(x ==1, \"Yes\", \"No\"),\n         riverOrdered = factor(riverGG, levels = c(\"West Brook\", \"Open Large\", \"Open Small\"), \n                             ordered = T))\n\nggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +\n  geom_col(position = \"dodge\", linewidth = 1.5) +\n  labs(y = \"Effect on proportion of negative observations\")\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanTemperature\", X = negGrowthBNT$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanFlowByRiver\", X = negGrowthBNT$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthBNT$xgb, v = \"meanFlowByRiver\", X = negGrowthBNT$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n16.11.6 Atlantic salmon\n\n16.11.6.1 Run hyperparameter grid and main model\n\n\nCode\nrunHP_ATS = FALSE\nrunXGB_ATS = FALSE\n\nif (runHP_ATS) {\n  hpNegGrowthATS &lt;- runHyperparamSearchIndData(\n    d = cd1 |&gt;  filter(speciesGG == \"Atlantic salmon\", !is.na(grWeight)) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 50000,\n    early_stopping_roundsIn = 10\n  )\n  save(hpNegGrowthATS, file = \"./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData\")\n} else {  \n  load(\"./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData\")\n}  \nhpNegGrowthATS[1:10,]\n\n\n    eta max_depth min_child_weight subsample colsample_bytree optimal_trees\n1  0.01         5                3      0.80              1.0          1081\n2  0.10         5                1      0.80              0.8           134\n3  0.01         7                7      0.80              0.9           681\n4  0.01         7                3      1.00              0.8           621\n5  0.01         5                5      0.80              0.9           999\n6  0.05         5                7      0.65              0.9           240\n7  0.01         7                3      0.80              0.8           641\n8  0.05         5                5      0.80              0.9           220\n9  0.01         7                5      0.65              0.8           670\n10 0.01         5                5      0.65              0.8          1017\n   min_logloss\n1    0.2966089\n2    0.2969262\n3    0.2972223\n4    0.2973879\n5    0.2975546\n6    0.2975606\n7    0.2977132\n8    0.2978511\n9    0.2979202\n10   0.2979286\n\n\nCode\nif (runXGB_ATS) {\n  negGrowthATS &lt;- runXGB_indData(\n    d = cd1 |&gt;  filter(speciesGG == \"Atlantic salmon\", !is.na(grWeight)) |&gt;\n      left_join(tar_read(indCounts_target)) |&gt;\n      left_join(tar_read(indCountsBySpp_target)),\n    vars = c(\"observedWeight\", \"year\", \"age\", \"meanTemperature\", \"meanFlowByRiver\", \"nInd\", \"nIndBySpp\", \"negGrowth\"),\n    nRoundsIn = 200000,\n    early_stopping_roundsIn = 20,\n    params = hpNegGrowthATS[1,]\n  )\n  save(negGrowthATS, file = \"./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData\")\n} else {\n  load(\"./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData\")\n}\nnegGrowthATS$xgb$best_iteration\n\n\n[1] 2e+05\n\n\nCode\nnegGrowthATS$xgb$best_score\n\n\n[1] 0.03559097\n\n\nCode\n# plot error vs number trees\nggplot(negGrowthATS$xgb$evaluation_log) +\n  geom_line(aes(iter, train_logloss), color = \"red\") \n\n\n\n\n\nCode\n#  geom_line(aes(iter, test_logloss), color = \"blue\")\n\n\n\n\nCode\n# variable importance plot\nviATS_negGrowth &lt;- xgb.importance(model = negGrowthATS$xgb)\nxgb.plot.importance(viATS_negGrowth, top_n = 10, measure = \"Gain\")\n\n\n\n\n\nCode\n####################################################################\ns_negGrowthATS &lt;- hstats(negGrowthATS$xgb, v = negGrowthATS$new_vars, X = negGrowthATS$features_train)\n\n\n1-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |====================                                                  |  29%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |========================================                              |  57%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |============================================================          |  86%\n  |                                                                            \n  |======================================================================| 100%\n2-way calculations...\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\ns_negGrowthATS\n\n\n'hstats' object. Use plot() or summary() for details.\n\nH^2 (normalized)\n[1] 0.6452019\n\n\nCode\nplot(s_negGrowthATS)\n\n\n\n\n\nCode\n# \n# # top 5 2-way interactions\n# h2_pairwise(s_negGrowthATS, normalize = FALSE, squared = FALSE, top_m = 8)\nplot(s_negGrowthATS, which = 1:2, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n\n\n\n\nCode\n# \n# # 3-way interactions\n# plot(s_negGrowthATS, which = 1:3, normalize = F, squared = F, facet_scales = \"free_y\", ncol = 1)\n\n## Partial dep plots ################################################################\n\npWeight_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npFlow_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n  #scale_y_discrete() +\n  #ggtitle(\"PDP\")\npTemp_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npNInd_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\npYear_negGrowth &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %&gt;%\n  autoplot(rug = TRUE, train = negGrowthATS$features_train) +\n  geom_smooth(se = FALSE)\n\ngridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)\n\n\n\n\n\nCode\n##################################################################\n# all on one graph\n\npWeight_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"observedWeight\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),\n         var = \"Mass\",\n         speciesGG = \"Atlantic salmon\")\n\npFlow_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),\n         var = \"Flow\",\n         speciesGG = \"Atlantic salmon\")\n\npMT_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"meanTemperature\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),\n         var = \"Temperature\",\n         speciesGG = \"Atlantic salmon\")\n\npNInd_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"nInd\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),\n         var = \"Num inds\",\n         speciesGG = \"Atlantic salmon\")\n\npYear_negGrowthDataATS &lt;- negGrowthATS$xgb %&gt;%\n  pdp::partial(pred.var = \"year\", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |&gt; \n  mutate(xScaled = (year-mean(year))/sd(year),\n         var = \"Year\",\n         speciesGG = \"Atlantic salmon\")\n\n\nall_negGrowthDataATS &lt;- bind_rows(pWeight_negGrowthDataATS, pFlow_negGrowthDataATS, pMT_negGrowthDataATS, pNInd_negGrowthDataATS, pYear_negGrowthDataATS)\n\n(\nall_negGrowthDataATS_gg &lt;- ggplot(all_negGrowthDataATS, aes(xScaled, yhat, color = var)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE) +\n  theme_publication() +\n  labs(y = \"Effect on proportion of negative observations\", x = \"Scaled value\")\n)\n\n\n\n\n\nCode\n### Interaction plots ##################################################################\n\nplot(partial_dep(negGrowthATS$xgb, v = \"meanTemperature\", X = negGrowthATS$features_train, BY = \"meanFlowByRiver\")) +\n  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthATS$xgb, v = \"meanFlowByRiver\", X = negGrowthATS$features_train, BY = \"meanTemperature\")) +\n  geom_smooth(aes(color = meanTemperature), se = FALSE)\n\n\n\n\n\nCode\nplot(partial_dep(negGrowthATS$xgb, v = \"meanFlowByRiver\", X = negGrowthATS$features_train, BY = c(\"nInd\"))) +\n  geom_smooth(aes(color = nInd), se = FALSE)\n\n\n\n\n\n\n\n\n16.11.7 All 3 species\n\n\nCode\n# variable importance plots\n\nviAll_negGrowth &lt;- bind_rows(\n  viBKT_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brook Trout\"),\n  viBNT_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Brown Trout\"),\n  viATS_negGrowth |&gt; dplyr::select(Feature, Gain) |&gt; mutate(speciesGG = \"Atlantic Salmon\")\n) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE),\n         feature2 = case_when(\n           Feature == \"observedWeight\" ~ \"Fish mass\",\n           Feature == \"meanFlowByRiver\" ~ \"Flow\",\n           Feature == \"meanTemperature\" ~ \"Temperature\",\n           Feature == \"nInd\" ~ \"Num Individuals\",\n           Feature == \"year\" ~ \"Year\")\n  )\n\nggplot(viAll_negGrowth |&gt; filter(Feature %in% c(\"observedWeight\", \"meanFlowByRiver\", \"meanTemperature\", \"nInd\", \"year\")), aes(feature2, Gain, fill = sppOrdered)) +\n  geom_col(position = \"dodge\") +\n  theme_publication() +\n  scale_fill_grey() +\n  labs(y = \"Variable importance for the proportion of negative observations\", x = \"Variable\")\n\n\n\n\n\nCode\n########################################################\n\nall_negGrowthData3spp &lt;- bind_rows(all_negGrowthDataBKT, all_negGrowthDataBNT, all_negGrowthDataATS) |&gt; \n  mutate(sppOrdered = factor(speciesGG, levels = c(\"Brook Trout\", \"Brown Trout\", \"Atlantic Salmon\"), ordered = TRUE))\n\nall_negGrowthData3sppMass_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Mass\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled fish mass\") +\n  theme(legend.position = \"none\")  \n\n\nall_negGrowthData3sppFlow_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Flow\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled flow\") +\n  theme(legend.position = \"none\")  \n\n\nall_negGrowthData3sppTemp_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Temperature\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled temperature\") +\n  theme(legend.position = \"none\")  \n\nall_negGrowthData3sppNInd_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Num inds\"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n    scale_color_grey() +\n  labs(y = NULL, x = \"Scaled Number of individuals\") +\n  theme(legend.position = \"none\")  \n\nall_negGrowthData3sppYear_gg &lt;- ggplot(all_negGrowthData3spp |&gt; filter(var == \"Year\"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +\n  #geom_point(alpha = 0.2) +\n  geom_smooth(se = FALSE, linewidth = 1.5) +\n  theme_publication() +\n  scale_color_grey() +\n  labs(y = NULL, x = \"Year\") +\n  theme(legend.position = \"none\")  \n\ngridExtra::grid.arrange(\n  all_negGrowthData3sppMass_gg,\n  all_negGrowthData3sppFlow_gg, \n  all_negGrowthData3sppTemp_gg,\n  all_negGrowthData3sppNInd_gg,\n  #all_negGrowthData3sppYear_gg,\n  left = textGrob(expression(bold(\"Effect on proportion of negative observations\")), rot = 90, gp = gpar(fontsize = 16))\n)\n\n\n\n\n\nCode\nall_negGrowthData3sppYear_gg\n\n\n\n\n\nCode\n#######################################\n\n\n\n\n16.11.8 Growth model, continuous growth\ncan we add season, river interactions? or do separate analyses?\n\n\nCode\nlibrary(targets)\ndML_W &lt;- tar_read(dML_W_target)\ntreatplan_W &lt;- tar_read(treatplan_W_target)\nfeatures_train_W &lt;- tar_read(features_train_W_target)\nnew_vars_W &lt;- tar_read(new_vars_W_target)\n\n# dimensions of one-hot encoded data\nfeatures_train_W &lt;- tar_read(features_train_W_target)\nfeatures_test_W &lt;- tar_read(features_test_W_target)\n\nresponse_train_W &lt;- tar_read(response_train_W_target)\nresponse_test_W &lt;- tar_read(response_test_W_target)\n\n# run from targets\nhyper_grid_W &lt;- tar_read(hyper_grid_W_target)\ntopModel_W &lt;- tar_read(topModel_W_target)\n\n\nfinalModels_W &lt;- tar_read(finalModels_W_target)\n\nmodelToUse &lt;- 1\n\n\n\n16.11.8.1 Run first model\n\n\nCode\n# reproducibility\nset.seed(1234)\n\nxgb.fit1_W &lt;- xgb.cv(\n  data = features_train_W,\n  label = response_train_W,\n  nrounds = 500,\n  nfold = 5,\n  objective = \"reg:squarederror\",  # for regression models\n  verbose = 0,               # silent,\n  early_stopping_rounds = 10\n)\n\n# get number of trees that minimize error\nxgb.fit1_W$evaluation_log %&gt;%\n  dplyr::summarise(\n    ntrees.train = which(train_rmse_mean == min(train_rmse_mean))[1],\n    rmse.train   = min(train_rmse_mean),\n    ntrees.test  = which(test_rmse_mean == min(test_rmse_mean))[1],\n    rmse.test   = min(test_rmse_mean),\n  )\n\n\n  ntrees.train  rmse.train ntrees.test   rmse.test\n1           67 0.001534427          65 0.001884902\n\n\nCode\n# plot error vs number trees\nggplot(xgb.fit1_W$evaluation_log) +\n  geom_line(aes(iter, train_rmse_mean), color = \"red\") +\n  geom_line(aes(iter, test_rmse_mean), color = \"blue\")\n\n\n\n\n\n\n\n16.11.8.2 Hyperparameter search grid\n\n\nCode\n# create hyperparameter grid\n# original grid - using a smaller one in targets\n# hyper_grid_W0 &lt;- expand.grid(\n#   eta = c(.01, .05, .1, .3),\n#   max_depth = c(1, 3, 5, 7),\n#   min_child_weight = c(1, 3, 5, 7),\n#   subsample = c(.65, .8, 1), \n#   colsample_bytree = c(.8, .9, 1),\n#   optimal_trees = 0,               # a place to dump results\n#   min_RMSE = 0                     # a place to dump results\n# )\n# nrow(hyper_grid_W0)\n\n\n\n# Original run using hyper_grid_W0 \n# eta max_depth min_child_weight\n# subsample colsample_bytree optimal_trees min_RMSE 1 0.01 7 5 0.65 0.8\n# 1376 0.001847600 2 0.05 7 3 0.80 0.9 292 0.001848465 3 0.01 7 7 0.80 0.9\n# 1382 0.001849086 4 0.01 5 1 0.80 0.8 2399 0.001849250 5 0.05 7 3 0.80\n# 0.8 281 0.001849258 6 0.01 5 3 0.65 0.8 2147 0.001849905 7 0.05 5 1 0.65\n# 0.8 459 0.001849931 8 0.01 5 5 0.80 0.9 2296 0.001850049 9 0.01 7 5 0.65\n# 0.9 1402 0.001850246 10 0.01 7 7 0.65 0.8 1382 0.001850544 11 0.01 7 3\n# 0.65 0.8 1384 0.001850704 12 0.05 3 3 0.80 0.8 1509 0.001850763 13 0.01\n# 7 7 0.80 0.8 1453 0.001850975 14 0.01 7 1 0.80 1.0 1281 0.001851069 15\n# 0.01 7 1 0.80 0.8 1473 0.001851078\n\n\n\n\n16.11.8.3 Variable importance plot\n\n\nCode\n#importance_matrix_W &lt;- tar_read(importance_matrix_W_target)\n\n# variable importance plot\n\n\n\n\n16.11.8.4 Partial dependence plots\n\n\nCode\ncreate_xgb_plots &lt;- function(d = finalModels_W, f = features_train_W, modelToUse = modelToUse) {\n  \n  imp &lt;- xgb.ggplot.importance(d$importanceMatrix[[modelToUse]], top_n = 10, measure = \"Gain\") + \n    ggtitle(paste0(\"Model #\", modelToUse))\n\n  pW_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"observedWeight\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f) \n  \n  pFlow_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"meanFlowByRiver\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pTemp_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"meanTemperature\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pAge_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"age\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n  \n  pCohort_W &lt;- d$xgb[[modelToUse]] %&gt;%\n    pdp::partial(pred.var = \"cohort\", n.trees = 1082, grid.resolution = 100, train = f) %&gt;%\n    autoplot(rug = TRUE, train = f)\n\n\n  partials &lt;- gridExtra::grid.arrange(pW_W, pFlow_W, pTemp_W, pAge_W, pCohort_W, nrow = 3, top=textGrob(paste0(\"Model #\", modelToUse)))\n  \n return(list(imp, partials)) \n}\n\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 1)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.1272]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 2)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.1527]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 3)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.1781]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 4)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.2035]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 5)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.2289]\n\n\nCode\ncreate_xgb_plots(finalModels_W, features_train_W, modelToUse = 15)\n\n\n\n\n\n[[1]]\n\n\n\n\n\n\n[[2]]\nTableGrob (4 x 2) \"arrange\": 6 grobs\n  z     cells    name                 grob\n1 1 (2-2,1-1) arrange       gtable[layout]\n2 2 (2-2,2-2) arrange       gtable[layout]\n3 3 (3-3,1-1) arrange       gtable[layout]\n4 4 (3-3,2-2) arrange       gtable[layout]\n5 5 (4-4,1-1) arrange       gtable[layout]\n6 6 (1-1,1-2) arrange text[GRID.text.2543]\n\n\n\n\n16.11.8.5 Lime\n\n\nCode\n# get a few observations to perform local interpretation on\nlocal_obs_W &lt;- dML_W[1:3, ]\n\n# one-hot encode the local observations to be assessed.\nlocal_obs_onehot_W &lt;- vtreat::prepare(treatplan_W, local_obs_W, varRestriction = new_vars_W)\n\n# apply LIME\nexplainer_W &lt;- lime(data.frame(features_train_W), finalModels_W$xgb[[modelToUse]], quantile_bins = FALSE)\nexplanation_W &lt;- lime::explain(local_obs_onehot_W, explainer_W, n_features = 5, n_labels = 2)\nplot_features(explanation_W)\n\n\n\n\n\n\n\n16.11.8.6 Predict\n\n\nCode\ncreatePredictions &lt;- function(d = finalModels_W, f = features_test_W, r = response_test_W, modelToUse = modelToUse) {\n  \n  pred_W &lt;- predict(d$xgb[[modelToUse]], f)\n  rmse &lt;- caret::RMSE(pred_W, r)\n  r2 &lt;- caret::R2(pred_W, r)\n  \n  obsPred_W &lt;- bind_cols(obs = r, pred = pred_W, f)\n  \n  return(list(r2 = r2, rmse = rmse, obsPred_W = obsPred_W))\n}\n\n\n\n\nCode\npredsOP_W &lt;- createPredictions(finalModels_W, features_test_W, response_test_W, modelToUse) \n\nggplot(predsOP_W$obsPred_W, aes(obs, pred)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Observed growth rate\", y = \"Predicted growth rate\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle(paste0(\"r2 = \", round(predsOP_W$r2, 2), \" RMSE = \", round(predsOP_W$rmse, 5)))\n\n\n\n\n\nCode\nggplot(predsOP_W$obsPred_W, aes(obs, pred)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Observed growth rate\", y = \"Predicted growth rate\") +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~cohort)\n\n\n\n\n\n\n\nCode\nrenameLev &lt;- function(d) {\n  d |&gt;  \n    str_split(\"_lev_x_\") |&gt; \n    map(~.x[2]) |&gt; \n    unlist()\n}\n\ncreatePredictionsGrid &lt;- function(d = finalModels_W, pg = gridPred, modelToUse = modelToUse){\n  #, f = features_test_W, r = response_test_W, nSeq = 5, modelToUse = modelToUse) {\n  \n  predGrid &lt;- predict(d$xgb[[modelToUse]], pg)\n  gridPredOut &lt;- bind_cols(pg, pred = predGrid) |&gt; \n    rename_with(\n      renameLev,  \n      contains(\"_lev_x_\")\n    ) |&gt;  \n    rowwise() |&gt; \n    mutate(\n      sumRiver = sum(Isolated_Small + Open_Large + Open_Small + West_Brook),\n      sumSeason = sum(Autumn + Spring + Summer + Winter)\n    ) |&gt;   \n    filter(\n      sumRiver == 1,\n      sumSeason == 1\n    ) |&gt;   \n    mutate(\n      across(c('Isolated_Small':'Winter'), ~.x == 1)\n    )\n\n  return(gridPredOut)\n}\n\n\n\nnSeq &lt;- 5\nxGrid &lt;- expand_grid(\n    observedWeight = 40, #seq(min(f[,\"observedWeight\"]), max(f[,\"observedWeight\"]), length.out = nSeq),\n    cohort = 2010, #seq(min(f[,\"cohort\"]), max(f[,\"cohort\"]), length.out = nSeq),\n    age = 1, #seq(min(f[,\"age\"]), max(f[,\"age\"]), length.out = nSeq),\n    meanTemperature = seq(min(features_test_W[,\"meanTemperature\"]), max(features_test_W[,\"meanTemperature\"]), length.out = nSeq * 3),\n    meanFlowByRiver = seq(min(features_test_W[,\"meanFlowByRiver\"]), max(features_test_W[,\"meanFlowByRiver\"]), length.out = nSeq * 3),\n    riverGG_lev_x_Isolated_Small = c(0, 1),\n    riverGG_lev_x_Open_Large = c(0, 1),\n    riverGG_lev_x_Open_Small = c(0, 1),\n    riverGG_lev_x_West_Brook = c(0, 1),\n    seasonGG_lev_x_Autumn = c(0, 1),\n    seasonGG_lev_x_Spring = c(0, 1),\n    seasonGG_lev_x_Summer = c(0, 1),\n    seasonGG_lev_x_Winter = c(0, 1)\n  ) |&gt; \n  as.matrix()\n\n\npreds_W &lt;- createPredictionsGrid(\n  finalModels_W, \n  xGrid,\n  modelToUse\n) \n\n\nggplot(preds_W |&gt; \n         filter(\n           #Isolated_Small, Open_Large, Open_Small, West_Brook, \n           #Autumn, Spring, Summer, Winter\n           ), \n       aes(meanFlowByRiver, pred, color = meanTemperature, group = meanTemperature)) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream flow\", y = \"Predicted growth rate\") +\n  geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  facet_grid(Isolated_Small+Open_Large+Open_Small+West_Brook ~ Spring+Summer+Autumn+Winter)\n\n\n\n\n\nCode\n# use seasonal zScores for environmetnal data\n\n\n\n\n16.11.8.7 When and where do fish have predicted negative growth?\n\n\nCode\npredNeg &lt;- preds_W |&gt; filter(pred &lt; 0.000)\npredNeg |&gt; \n  count(Isolated_Small, Open_Large, Open_Small, West_Brook, Autumn, Spring, Summer, Winter) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 10 × 9\n# Rowwise: \n   Isolated_Small Open_Large Open_Small West_Brook Autumn Spring Summer Winter\n   &lt;lgl&gt;          &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt; \n 1 FALSE          FALSE      FALSE      TRUE       TRUE   FALSE  FALSE  FALSE \n 2 FALSE          TRUE       FALSE      FALSE      TRUE   FALSE  FALSE  FALSE \n 3 FALSE          FALSE      TRUE       FALSE      TRUE   FALSE  FALSE  FALSE \n 4 TRUE           FALSE      FALSE      FALSE      TRUE   FALSE  FALSE  FALSE \n 5 FALSE          FALSE      FALSE      TRUE       FALSE  FALSE  FALSE  TRUE  \n 6 FALSE          FALSE      FALSE      TRUE       FALSE  FALSE  TRUE   FALSE \n 7 FALSE          TRUE       FALSE      FALSE      FALSE  FALSE  FALSE  TRUE  \n 8 FALSE          TRUE       FALSE      FALSE      FALSE  FALSE  TRUE   FALSE \n 9 TRUE           FALSE      FALSE      FALSE      FALSE  FALSE  FALSE  TRUE  \n10 TRUE           FALSE      FALSE      FALSE      FALSE  FALSE  TRUE   FALSE \n# ℹ 1 more variable: n &lt;int&gt;\n\n\nCode\npredNeg |&gt; \n  count(Autumn, Spring, Summer, Winter) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 3 × 5\n# Rowwise: \n  Autumn Spring Summer Winter     n\n  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;lgl&gt;  &lt;int&gt;\n1 TRUE   FALSE  FALSE  FALSE    190\n2 FALSE  FALSE  FALSE  TRUE      37\n3 FALSE  FALSE  TRUE   FALSE     29\n\n\nCode\npredNeg |&gt; \n  count(Isolated_Small, Open_Large, Open_Small, West_Brook) |&gt; \n  arrange(desc(n))\n\n\n# A tibble: 4 × 5\n# Rowwise: \n  Isolated_Small Open_Large Open_Small West_Brook     n\n  &lt;lgl&gt;          &lt;lgl&gt;      &lt;lgl&gt;      &lt;lgl&gt;      &lt;int&gt;\n1 FALSE          FALSE      FALSE      TRUE         103\n2 FALSE          TRUE       FALSE      FALSE         74\n3 TRUE           FALSE      FALSE      FALSE         42\n4 FALSE          FALSE      TRUE       FALSE         37"
  },
  {
    "objectID": "modelGrowthInMass.html#gam-for-individual-growth",
    "href": "modelGrowthInMass.html#gam-for-individual-growth",
    "title": "16  Growth in mass",
    "section": "16.12 GAM for individual growth",
    "text": "16.12 GAM for individual growth\n\n\nCode\n#riverGG, seasonGG, observedWeight, cohort, age, meanTemperature, meanFlowByRiver, negGrowth\n\n\nkValue &lt;- 4 \n\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(flowByRiverS, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG)\n\n\n\n\n\nCode\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(flowByRiverSR, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.1) +\n  geom_hline(yintercept = 0) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\nCode\nggplot(dGAM |&gt; filter(speciesGG != \"Atlantic salmon\"), aes(tempSR, grWeight, group = speciesGG, color = speciesGG)) +\n  geom_point(alpha = 0.1) +\n  geom_hline(yintercept = 0) +\n  geom_smooth(method = \"gam\", \n              formula = y ~ s(x, bs = \"cs\", fx = TRUE, k = kValue), \n              se = FALSE) +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG, scales = \"free\")\n\n\n\n\n\n\n16.12.1 Linear models for growth\nInitial test of model structure for GAMs\n\n\nCode\nrunLinearModels &lt;- function(d, speciesIn) {\n  models =\n    tibble(model = \n      c(\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF)',\n          'grWeight ~ (riverGG * seasonGG + tempSR * flowByRiverSR + cohortF * ageF)',\n          'grWeight ~ (riverGG * seasonGG + tempSR + flowByRiverSR + cohortF * ageF)'\n       )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~lm(.x, data = d |&gt; filter(speciesGG == speciesIn))),\n      glanced = map(fit, broom::glance),\n      tidied = map(fit, broom::tidy)\n    )\n  return(models)\n}\n\n\n\n16.12.1.1 Brook trout\nMost complex model has lowest AIC\n\n\nCode\nspeciesIn &lt;- \"Brook trout\"\nmodLinearBKT &lt;- runLinearModels(dGAM, speciesIn)\n\nmodLinearBKT |&gt; \n    unnest(glanced) |&gt;\n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n# A tibble: 6 × 5\n  model                                           AIC df.residual fit   tidied  \n  &lt;chr&gt;                                         &lt;dbl&gt;       &lt;int&gt; &lt;lis&gt; &lt;list&gt;  \n1 grWeight ~ (riverGG * seasonGG * tempSR * … -94812.        9893 &lt;lm&gt;  &lt;tibble&gt;\n2 grWeight ~ (riverGG * seasonGG * tempSR * … -93880.        9943 &lt;lm&gt;  &lt;tibble&gt;\n3 grWeight ~ (riverGG * seasonGG * tempSR * … -92957.        9957 &lt;lm&gt;  &lt;tibble&gt;\n4 grWeight ~ (riverGG * seasonGG + tempSR * … -91713.       10002 &lt;lm&gt;  &lt;tibble&gt;\n5 grWeight ~ (riverGG * seasonGG + tempSR + … -91576.       10003 &lt;lm&gt;  &lt;tibble&gt;\n6 grWeight ~ (riverGG * seasonGG * tempSR * … -90183.       10007 &lt;lm&gt;  &lt;tibble&gt;\n\n\n\n\n16.12.1.2 Brown trout\nMost complex model has lowest AIC\n\n\nCode\nspeciesIn &lt;- \"Brown trout\"\nmodLinearBNT &lt;- runLinearModels(dGAM, speciesIn)\n\nmodLinearBNT |&gt; \n    unnest(glanced) |&gt;\n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n# A tibble: 6 × 5\n  model                                           AIC df.residual fit   tidied  \n  &lt;chr&gt;                                         &lt;dbl&gt;       &lt;int&gt; &lt;lis&gt; &lt;list&gt;  \n1 grWeight ~ (riverGG * seasonGG * tempSR * … -45804.        4491 &lt;lm&gt;  &lt;tibble&gt;\n2 grWeight ~ (riverGG * seasonGG * tempSR * … -44981.        4543 &lt;lm&gt;  &lt;tibble&gt;\n3 grWeight ~ (riverGG * seasonGG * tempSR * … -44366.        4539 &lt;lm&gt;  &lt;tibble&gt;\n4 grWeight ~ (riverGG * seasonGG + tempSR * … -43783.        4572 &lt;lm&gt;  &lt;tibble&gt;\n5 grWeight ~ (riverGG * seasonGG + tempSR + … -43714.        4573 &lt;lm&gt;  &lt;tibble&gt;\n6 grWeight ~ (riverGG * seasonGG * tempSR * … -42537.        4591 &lt;lm&gt;  &lt;tibble&gt;\n\n\nThese linear models suggest that we need significant complexity in GAM models\n\n\n\n16.12.2 GAM models for growth\nThis modeling approach map() (which I would like to use), throws an error using bam(). Use gamX model approach below.\n\n\nCode\nrunGAMModels &lt;- function(d, speciesIn, kIn) {\n  models =\n    tibble(model = \n      c(\n            'grWeight ~ riverGG * seasonGG * observedWeight + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG)',\n            \n            'grWeight ~ riverGG * seasonGG * observedWeight * tempSR * flowByRiverSR + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG)'\n       )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~ bam(.x, method = \"REML\", data = d |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013)))\n  #    glanced = map(fit, broom::glance),\n  #    tidied = map(fit, broom::tidy)\n    )\n  return(models)\n}\n\n\n# \n# speciesIn &lt;- \"Brook trout\"\n# modLinearBKT &lt;- runGAMModels(dGAM, speciesIn, kValue)\n# \n# modLinearBKT |&gt; \n#     unnest(glanced) |&gt;\n#     arrange(AIC) |&gt;\n#     dplyr::select(model, AIC, df.residual, fit, tidied)\n\n\n\n16.12.2.1 Brook trout - flow by river\n\n\nCode\nspeciesIn &lt;- \"Brook trout\"\nkIn &lt;- 4\n\ngam0 &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             \n               s(flowSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n######\n\ngam0ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\ngam1ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n# age matters, what about taking out length?\ngam2ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n\n#nope, need to keep length\n#How about without the interactions?\ngam3ByRiver &lt;- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             \n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(flowByRiverSR, bs = \"cr\", k = kIn, by = seasonGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = riverGG) +\n               s(tempSR, bs = \"cr\", k = kIn, by = seasonGG),\n             data = dGAM |&gt; filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = \"REML\")\n#nope, need the interactions\n\nAIC(gam0ByRiver, gam1ByRiver, gam2ByRiver, gam3ByRiver) |&gt; arrange(AIC)\n\n\n                   df       AIC\ngam0ByRiver 116.89094 -87224.07\ngam1ByRiver  70.59026 -86375.49\ngam2ByRiver 105.40682 -85711.79\ngam3ByRiver 102.06380 -85375.03\n\n\n\n\n16.12.2.2 Brook trout - compare flow and flow by river gams\n\n\nCode\npredictBKTgam &lt;- function(dIn, modInFlowByRiver){\n\n  # predMat0 &lt;- \n  #   expand.grid(\n  #     flowSR = seq(-1.5,1.5,0.25), \n  #     tempSR = seq(-1.5,1.5,0.25), \n  #     riverGG = unique(dIn$riverGG), \n  #     seasonGG= unique(dIn$seasonGG),\n  #     observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n  #     cohortF = 2000:2013,#uunique(dIn$cohortF),\n  #     ageF = 0:4,#unique(dIn$ageF),\n  #     byRiver = FALSE\n  # )\n  # predMat &lt;- \n  #   add_column(\n  #     pred = predict.bam(modInFlow, predMat0),\n  #     predMat0\n  #   ) |&gt; \n  #   rename(flow = flowSR, temp = tempSR)\n  \n  predMatByRiver0 &lt;- \n    expand.grid(\n      flowByRiverSR = seq(-1.5,1.5,0.25), \n      tempSR = seq(-1.5,1.5,0.25), \n      riverGG = unique(dIn$riverGG), \n      seasonGG= unique(dIn$seasonGG),\n      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),\n      cohortF = 2000:2013,#unique(dIn$cohortF),\n      ageF = 0:4,#unique(dIn$ageF),\n      byRiver = TRUE\n    ) \n  predMatByRiver &lt;- \n    add_column(\n      pred = predict.bam(modInFlowByRiver, predMatByRiver0),\n      predMatByRiver0\n    ) |&gt; \n    rename(flow = flowByRiverSR, temp = tempSR)\n\n  return(predMatByRiver)\n}\n\ngamBKTPredictions &lt;- predictBKTgam(dGAM, gam0ByRiver)\n\n\n\n\n16.12.2.3 Graph predictions\n\n\nCode\nunique(gamBKTPredictions$observedWeight)\n\n\n [1]   2  22  42  62  82 102 122 142 162 182\n\n\nCode\nggplot(\n  gamBKTPredictions |&gt; \n    filter(\n      observedWeight %in% c(22), \n      cohortF == 2012, \n      ageF == 0\n    ), \n  aes(temp, pred, color = (flow), group = (flow))) +\n  geom_point(alpha = 0.2) +\n  labs(x = \"Stream temperature\", y = \"Predicted growth rate\") +\n  #geom_smooth(se = FALSE) +\n  geom_hline(yintercept = 0) +\n  theme_publication() +    \n  facet_grid(seasonGG~riverGG+byRiver, scales = 'free')"
  },
  {
    "objectID": "modelGrowthInMass.html#logistic-models-for-environmental-effects-on-neggrowth",
    "href": "modelGrowthInMass.html#logistic-models-for-environmental-effects-on-neggrowth",
    "title": "16  Growth in mass",
    "section": "16.13 Logistic models for environmental effects on negGrowth",
    "text": "16.13 Logistic models for environmental effects on negGrowth\n\n16.13.1 Standardize flow and temperature\n\n\nCode\n# getZ &lt;- function(d){\n#   list(\n#     mean = mean(d, na.rm = TRUE),\n#     sd = sd(d, na.rm = TRUE)\n#   )\n# }\n# fZ &lt;- getZ(cd1$meanFlowByRiver)\n# fT &lt;- getZ(cd1$meanTemperature)\n\nz &lt;- cd1 |&gt; \n  left_join(tar_read(indCounts_target)) |&gt;\n  left_join(tar_read(indCountsBySpp_target)) |&gt; \n  group_by(riverGG, speciesGG) |&gt; \n  summarize(\n    fQMean = mean(meanFlowByRiver, na.rm = TRUE),\n    fQSd = sd(meanFlowByRiver, na.rm = TRUE),\n    fTMean = mean(meanTemperature, na.rm = TRUE),\n    fTSd = sd(meanTemperature, na.rm = TRUE),\n    fMMean = mean(observedWeight, na.rm = TRUE),\n    fMSd = sd(observedWeight, na.rm = TRUE),\n    fnIndMean = mean(nInd, na.rm = TRUE),\n    fnIndSd = sd(nInd, na.rm = TRUE),\n    fnIndBySpeciesMean = mean(nIndBySpp, na.rm = TRUE),\n    fnIndBySpeciesSd = sd(nIndBySpp, na.rm = TRUE)\n  )\n\nzBySeason &lt;- cd1 |&gt; \n  group_by(riverGG, speciesGG, seasonGG) |&gt; \n  summarize(fQbySeasonMean = mean(meanFlowByRiver, na.rm = TRUE),\n            fQbySeasonSd = sd(meanFlowByRiver, na.rm = TRUE),\n            fTbySeasonMean = mean(meanTemperature, na.rm = TRUE),\n            fTbySeasonSd = sd(meanTemperature, na.rm = TRUE)\n            )\n\ncd1_z &lt;- cd1 |&gt; \n    left_join(tar_read(indCounts_target)) |&gt;\n  left_join(tar_read(indCountsBySpp_target)) |&gt; \n  left_join(z) |&gt; \n  left_join(zBySeason) |&gt; \n  mutate(\n    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,\n    nIndZ = (nInd - fnIndMean)/fnIndSd,\n    nIndBySpeciesZ = (nIndBySpp - fnIndBySpeciesMean)/fnIndBySpeciesSd,\n    observedWeightZ = (observedWeight - fMMean)/fMSd,\n    \n    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,\n    meanTempZ = (meanTemperature - fTMean)/fTSd,\n    \n    meanFlowByRiverZbySeason = (meanFlowByRiver - fQbySeasonMean)/fQbySeasonSd,\n    meanTempZbySeason = (meanTemperature - fTbySeasonMean)/fTbySeasonSd,\n  )\n\n\n\n\n16.13.2 Raw data with logistic fit for flow effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG + riverGG)\n\n\n\n\n\nCode\n# ggplot(cd1_z |&gt; filter(!is.na(negGrowth)), aes(meanFlowByRiverZbySeason, negGrowth * 1, color = riverGG)) +\n#   geom_point(alpha = 0.1) +\n#   geom_smooth(method = \"glm\", \n#               method.args = list(family = \"binomial\"),\n#               se = FALSE) +\n#   labs(y = \"Probability of negative growth in mass\", x = \"Mean flow (scaled by season)\") +\n#   theme_publication() +    \n#   facet_grid(seasonGG ~ speciesGG + riverGG)\n\n\n\n\n16.13.3 Raw data with logistic fit for temperature effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth), meanTempZbySeason &gt; -4), aes(meanTempZbySeason, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean temperature (scaled by season)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG)\n\n\n\n\n\n\n\n16.13.4 Raw data with logistic fit for observedWeight effect\n\n\nCode\nggplot(cd1_z |&gt; filter(!is.na(negGrowth), meanTempZbySeason &gt; -4), aes(observedWeightZ, negGrowth * 1, color = riverGG)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = \"binomial\"),\n              se = FALSE) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mass (mg, scaled by species and river)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ speciesGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature-one-species-at-a-time",
    "href": "modelGrowthInMass.html#logistic-model-for-flow-and-temperature-one-species-at-a-time",
    "title": "16  Growth in mass",
    "section": "16.14 Logistic model for flow and temperature, one species at a time",
    "text": "16.14 Logistic model for flow and temperature, one species at a time\nSpecies occupy different rivers, so an all-species model will have unequal river representation across species and don’t need to predict where species are not.\nNeed to think through whether these models make sense…\n\n\nCode\nlibrary(car)\n\nrunSppModels &lt;- function(d, speciesIn) {\n  models =\n    tibble(model = \n      c(\n          'negGrowth ~ meanFlowByRiverZbySeason',\n          'negGrowth ~ meanTempZbySeason',\n          'negGrowth ~ river',\n          'negGrowth ~ factor(season)',\n          'negGrowth ~ observedWeightZ',\n          'negGrowth ~ nIndBySpeciesZ',\n          'negGrowth ~ nIndZ',\n        \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason + river',\n          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason + river', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season)',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason * river * factor(season)', \n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndBySpeciesZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ + nIndBySpeciesZ)^2',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^3',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ * nIndBySpeciesZ',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ + nIndBySpeciesZ',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ + factor(season)',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ * factor(season)',\n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ * nIndBySpeciesZ + factor(season)',\n          \n          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nIndBySpeciesZ + river + observedWeightZ + factor(season)',\n          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + nIndBySpeciesZ)^2 + river + observedWeightZ + factor(season)'\n    \n        )\n    ) |&gt;\n    mutate(\n      fit = map(model, ~glm(.x, family = \"binomial\", data = d |&gt; filter(species == speciesIn))),\n      glanced = map(fit, broom::glance),\n      tidied = map(fit, broom::tidy)\n      # anova = map(fit, anova),\n      # summary = map(fit, summary),\n      # confint = map(fit, confint)\n    )\n  return(models)\n}\n\n\n\n16.14.1 Predict p(neg growth in mass)\n\n\nCode\npredictSpp &lt;- function(dIn, modIn, speciesIn){\n  d &lt;- dIn |&gt; filter(species == speciesIn)\n  \n  byAIC = modIn |&gt; \n    unnest(glanced) |&gt; \n    arrange(AIC) |&gt;\n    dplyr::select(model, AIC, df.residual, deviance, fit, tidied) \n  \n  predDSpp &lt;- expand.grid(\n    meanFlowByRiverZbySeason = seq(-1.5,1.5,0.25), \n    meanTempZbySeason = seq(-1.5,1.5,0.25), \n    river = unique(d$river), \n    season = unique(d$season),\n    observedWeightZ = seq(-1.5,1.5,0.25),\n    nIndBySpeciesZ = seq(-1.5,1.5,0.25),\n    nIndZ = seq(-1.5,1.5,0.25)\n    )\n  \n  \n  pred &lt;- add_column(predDSpp, \n                     pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = \"response\")) |&gt; \n             mutate(groupT = paste(river, season, meanTempZbySeason, sep = \"_\"),\n                    groupF = paste(river, season, meanFlowByRiverZbySeason, sep = \"_\"),\n                    groupTM = paste(river, season, meanTempZbySeason, observedWeightZ, sep = \"_\"),\n                    groupFN = paste(river, season, meanFlowByRiverZbySeason, nIndZ, sep = \"_\")) |&gt; \n    addGG_noSpecies()\n  \n  return(\n    list(\n      pred = pred,\n      byAIC = byAIC\n    )\n  )\n}  \n\n\n\n\n16.14.2 Brook trout\nIn the figures with the shading, the shading is the range of effects from number of individuals, with the darker line on one edge of the shaded area representing high numbers of individuals.\n\n\nCode\nspeciesIn &lt;- \"bkt\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\nCode\nmodBKT &lt;- runSppModels(cd1_z, speciesIn)\npredBKT &lt;- predictSpp(cd1_z, modBKT, speciesIn)\npredBKT$byAIC |&gt; dplyr::select(model, AIC, deviance) \n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 5547.    5447.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 5556.    5476.\n 3 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5575.    5319.\n 4 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5577.    5319.\n 5 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5807.    5673.\n 6 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5898.    5826.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 5900.    5822.\n 8 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 5904.    5874.\n 9 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 5906.    5878.\n10 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6249.    6121.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predBKT$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -475.00402288 -406.56540869 FALSE\nmeanFlowByRiverZbySeason                    -84.09603589  -68.36729167 FALSE\nmeanTempZbySeason                            -7.30214216   20.94594044 FALSE\nriverwb mitchell                            -44.72399744  -41.47000528 FALSE\nriverwb obear                               -25.66035543  -23.03664463 FALSE\nriverwest brook                             317.24926727  375.09391827  TRUE\nfactor(season)2                             385.55546528  442.79513644  TRUE\nfactor(season)3                             397.09986984  462.73330667  TRUE\nfactor(season)4                             375.24029255  425.96285514  TRUE\nobservedWeightZ                              -6.21321438    0.89543718 FALSE\nnIndZ                                        -2.32866427   14.47538363 FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason    0.03373671    0.21583984  TRUE\nmeanFlowByRiverZbySeason:riverwb mitchell    -0.52780516    0.13909522 FALSE\nmeanFlowByRiverZbySeason:riverwb obear       -0.82176505   -0.29344342 FALSE\nmeanFlowByRiverZbySeason:riverwest brook     -0.41844001    0.03342069 FALSE\nmeanFlowByRiverZbySeason:factor(season)2     69.41475656   85.77466832  TRUE\nmeanFlowByRiverZbySeason:factor(season)3     70.73457177   87.23566171  TRUE\nmeanFlowByRiverZbySeason:factor(season)4     70.46152197   86.69043471  TRUE\nmeanFlowByRiverZbySeason:observedWeightZ     -0.12466615    0.02603119 FALSE\nmeanFlowByRiverZbySeason:nIndZ                0.06577492    0.28487614  TRUE\nmeanTempZbySeason:riverwb mitchell           -0.12254961    0.47527034 FALSE\nmeanTempZbySeason:riverwb obear               0.01579146    0.46195142  TRUE\nmeanTempZbySeason:riverwest brook             0.11526013    0.50737114  TRUE\nmeanTempZbySeason:factor(season)2           -16.32568736    7.50378760 FALSE\nmeanTempZbySeason:factor(season)3           -89.54071600   24.36203624 FALSE\nmeanTempZbySeason:factor(season)4           -90.04527658   22.36554354 FALSE\nmeanTempZbySeason:observedWeightZ            -0.06457146    0.06933106 FALSE\nmeanTempZbySeason:nIndZ                      -0.10383446    0.06097225 FALSE\nriverwb mitchell:factor(season)2             40.64354334   43.80498102  TRUE\nriverwb obear:factor(season)2                21.69125946   24.23650909  TRUE\nriverwest brook:factor(season)2            -388.39742959 -325.02681021 FALSE\nriverwb mitchell:factor(season)3             40.78235541   44.15586180  TRUE\nriverwb obear:factor(season)3                23.10691834   25.77516618  TRUE\nriverwest brook:factor(season)3            -356.44799065 -306.43155442 FALSE\nriverwb mitchell:factor(season)4             40.72766825   43.81267602  TRUE\nriverwb obear:factor(season)4                22.07660551   24.79174184  TRUE\nriverwest brook:factor(season)4            -379.74745330 -320.46489836 FALSE\nriverwb mitchell:observedWeightZ             -0.24862602    0.28671382 FALSE\nriverwb obear:observedWeightZ                -0.30573578    0.14069559 FALSE\nriverwest brook:observedWeightZ              -0.10831961    0.26296321 FALSE\nriverwb mitchell:nIndZ                       -0.72804651   -0.05272598 FALSE\nriverwb obear:nIndZ                          -0.10693440    0.42704641 FALSE\nriverwest brook:nIndZ                        -0.13976104    0.30051204 FALSE\nfactor(season)2:observedWeightZ              -0.38387371    6.71122219 FALSE\nfactor(season)3:observedWeightZ               0.44399707    7.55244070  TRUE\nfactor(season)4:observedWeightZ              -0.23577639    6.88414305 FALSE\nfactor(season)2:nIndZ                       -14.23703692    1.61610311 FALSE\nfactor(season)3:nIndZ                       -14.12608247    1.50948895 FALSE\nfactor(season)4:nIndZ                       -14.83661892    1.85804697 FALSE\nobservedWeightZ:nIndZ                        -0.11150745    0.02987495 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                    TRUE    FALSE\nmeanTempZbySeason                          FALSE     TRUE\nriverwb mitchell                            TRUE    FALSE\nriverwb obear                               TRUE    FALSE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE     TRUE\nnIndZ                                      FALSE     TRUE\nmeanFlowByRiverZbySeason:meanTempZbySeason FALSE    FALSE\nmeanFlowByRiverZbySeason:riverwb mitchell  FALSE     TRUE\nmeanFlowByRiverZbySeason:riverwb obear      TRUE    FALSE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)3   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE    FALSE\nmeanFlowByRiverZbySeason:observedWeightZ   FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndZ             FALSE    FALSE\nmeanTempZbySeason:riverwb mitchell         FALSE     TRUE\nmeanTempZbySeason:riverwb obear            FALSE    FALSE\nmeanTempZbySeason:riverwest brook          FALSE    FALSE\nmeanTempZbySeason:factor(season)2          FALSE     TRUE\nmeanTempZbySeason:factor(season)3          FALSE     TRUE\nmeanTempZbySeason:factor(season)4          FALSE     TRUE\nmeanTempZbySeason:observedWeightZ          FALSE     TRUE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nriverwb mitchell:factor(season)2           FALSE    FALSE\nriverwb obear:factor(season)2              FALSE    FALSE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwb mitchell:factor(season)3           FALSE    FALSE\nriverwb obear:factor(season)3              FALSE    FALSE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwb mitchell:factor(season)4           FALSE    FALSE\nriverwb obear:factor(season)4              FALSE    FALSE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwb mitchell:observedWeightZ           FALSE     TRUE\nriverwb obear:observedWeightZ              FALSE     TRUE\nriverwest brook:observedWeightZ            FALSE     TRUE\nriverwb mitchell:nIndZ                      TRUE    FALSE\nriverwb obear:nIndZ                        FALSE     TRUE\nriverwest brook:nIndZ                      FALSE     TRUE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE    FALSE\nfactor(season)4:observedWeightZ            FALSE     TRUE\nfactor(season)2:nIndZ                      FALSE     TRUE\nfactor(season)3:nIndZ                      FALSE     TRUE\nfactor(season)4:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndZ                      FALSE     TRUE\n\n\nCode\nanova(predBKT$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                       10088     7918.9\nmeanFlowByRiverZbySeason                    1   146.01     10087     7772.9\nmeanTempZbySeason                           1     0.19     10086     7772.7\nriver                                       3    75.72     10083     7697.0\nfactor(season)                              3  1158.29     10080     6538.7\nobservedWeightZ                             1   636.99     10079     5901.7\nnIndZ                                       1     6.38     10078     5895.3\nmeanFlowByRiverZbySeason:meanTempZbySeason  1    10.62     10077     5884.7\nmeanFlowByRiverZbySeason:river              3     7.01     10074     5877.7\nmeanFlowByRiverZbySeason:factor(season)     3   155.15     10071     5722.5\nmeanFlowByRiverZbySeason:observedWeightZ    1     0.60     10070     5721.9\nmeanFlowByRiverZbySeason:nIndZ              1     9.86     10069     5712.1\nmeanTempZbySeason:river                     3    10.61     10066     5701.5\nmeanTempZbySeason:factor(season)            3    18.19     10063     5683.3\nmeanTempZbySeason:observedWeightZ           1     0.00     10062     5683.3\nmeanTempZbySeason:nIndZ                     1     0.29     10061     5683.0\nriver:factor(season)                        9   110.72     10052     5572.3\nriver:observedWeightZ                       3     1.16     10049     5571.1\nriver:nIndZ                                 3    13.69     10046     5557.4\nfactor(season):observedWeightZ              3   107.98     10043     5449.4\nfactor(season):nIndZ                        3     1.33     10040     5448.1\nobservedWeightZ:nIndZ                       1     1.28     10039     5446.8\n\n\nCode\nAnova(predBKT$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1 148.2611  &lt; 2.2e-16 ***\nmeanTempZbySeason                           1   8.3974  0.0037575 ** \nriver                                       5  89.1425  &lt; 2.2e-16 ***\nfactor(season)                              5 158.5604  &lt; 2.2e-16 ***\nobservedWeightZ                             1 462.5555  &lt; 2.2e-16 ***\nnIndZ                                       1   0.1316  0.7168010    \nmeanFlowByRiverZbySeason:meanTempZbySeason  1   7.1947  0.0073120 ** \nmeanFlowByRiverZbySeason:river              3  17.4199  0.0005792 ***\nmeanFlowByRiverZbySeason:factor(season)     3 109.7067  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:observedWeightZ    1   1.6091  0.2046238    \nmeanFlowByRiverZbySeason:nIndZ              1   9.6856  0.0018572 ** \nmeanTempZbySeason:river                     3  10.0616  0.0180501 *  \nmeanTempZbySeason:factor(season)            3  12.3412  0.0063012 ** \nmeanTempZbySeason:observedWeightZ           1   0.0055  0.9406173    \nmeanTempZbySeason:nIndZ                     1   0.2400  0.6242108    \nriver:factor(season)                        9  65.5556  1.125e-10 ***\nriver:observedWeightZ                       3   3.0759  0.3800777    \nriver:nIndZ                                 3  12.2999  0.0064235 ** \nfactor(season):observedWeightZ              3  97.5802  &lt; 2.2e-16 ***\nfactor(season):nIndZ                        3   1.1988  0.7532887    \nobservedWeightZ:nIndZ                       1   1.2842  0.2571244    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predBKT$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.267 \n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBKT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\npredBKTWider &lt;- predBKT$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBKTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n16.14.3 Brown trout\nto do: exclude OS in all models\n\n\nCode\nspeciesIn &lt;- \"bnt\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\nCode\nmodBNT &lt;- runSppModels(cd1_z, speciesIn)\npredBNT &lt;- predictSpp(cd1_z, modBNT, speciesIn)\npredBNT$byAIC |&gt; dplyr::select(model, AIC, deviance)\n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1375.    1271.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1398.    1314.\n 3 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1400.    1316.\n 4 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1420.    1358.\n 5 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 1422.    1356.\n 6 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 1431.    1405.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 1433.    1405.\n 8 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1442.    1340.\n 9 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 1446.    1390.\n10 negGrowth ~ observedWeightZ                                    1560.    1556.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predBNT$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -301.15199955 -3.642621e+02 FALSE\nmeanFlowByRiverZbySeason                    -15.00975426  6.310428e+00 FALSE\nmeanTempZbySeason                             0.85448928  2.453874e+01  TRUE\nriverwb mitchell                            -13.48586891  1.027090e+01 FALSE\nriverwest brook                             251.93727718  2.221651e+02  TRUE\nfactor(season)2                             373.25450703  2.978181e+02  TRUE\nfactor(season)3                             419.02779974  3.008522e+02  TRUE\nfactor(season)4                             387.61528136  3.374702e+02  TRUE\nobservedWeightZ                               0.46038643  3.598083e+00  TRUE\nnIndZ                                      -314.88416633 -6.888051e+01 FALSE\nnIndBySpeciesZ                               60.76505212  2.334313e+02  TRUE\nmeanFlowByRiverZbySeason:meanTempZbySeason    0.01487906  5.854874e-01  TRUE\nmeanFlowByRiverZbySeason:riverwb mitchell    -4.28407124  2.217717e+00 FALSE\nmeanFlowByRiverZbySeason:riverwest brook     -0.46155827  1.104268e+00 FALSE\nmeanFlowByRiverZbySeason:factor(season)2     -7.61305213  1.364622e+01 FALSE\nmeanFlowByRiverZbySeason:factor(season)3     -6.73342569  1.456307e+01 FALSE\nmeanFlowByRiverZbySeason:factor(season)4     -5.58836764  1.577896e+01 FALSE\nmeanFlowByRiverZbySeason:observedWeightZ     -0.28086920  1.158485e-02 FALSE\nmeanFlowByRiverZbySeason:nIndZ               -0.39664740  2.808346e-01 FALSE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ       0.25918245  8.157933e-01  TRUE\nmeanTempZbySeason:riverwb mitchell          -18.02815604 -3.575450e-01 FALSE\nmeanTempZbySeason:riverwest brook            -0.68092534  6.921110e-01 FALSE\nmeanTempZbySeason:factor(season)2           -24.58699806 -9.649093e-01 FALSE\nmeanTempZbySeason:factor(season)3           -24.37224737 -7.314921e-01 FALSE\nmeanTempZbySeason:factor(season)4           -25.34575666 -1.617221e+00 FALSE\nmeanTempZbySeason:observedWeightZ            -0.12804939  1.113831e-01 FALSE\nmeanTempZbySeason:nIndZ                      -0.27231523  3.732244e-01 FALSE\nmeanTempZbySeason:nIndBySpeciesZ             -0.39288426  4.734065e-01 FALSE\nriverwb mitchell:factor(season)2            -23.02584697 -2.127269e+00 FALSE\nriverwest brook:factor(season)2            -221.65430939 -2.572386e+02 FALSE\nriverwb mitchell:factor(season)3            -13.41346618  9.175349e+00 FALSE\nriverwest brook:factor(season)3            -227.19904327 -3.559891e+02 FALSE\nriverwb mitchell:factor(season)4             -7.47976201  1.217443e+01 FALSE\nriverwest brook:factor(season)4            -223.65122363 -2.744307e+02 FALSE\nriverwb mitchell:observedWeightZ              0.87135992  1.212113e+01  TRUE\nriverwest brook:observedWeightZ              -0.23182295  5.827210e-01 FALSE\nriverwb mitchell:nIndZ                       -2.95933644  2.637899e+00 FALSE\nriverwest brook:nIndZ                        -0.97607008  8.977106e-01 FALSE\nriverwb mitchell:nIndBySpeciesZ               0.69357710  2.003143e+01  TRUE\nriverwest brook:nIndBySpeciesZ               -1.06195959  6.992152e-01 FALSE\nfactor(season)2:observedWeightZ              -2.99873482  9.139869e-03 FALSE\nfactor(season)3:observedWeightZ              -2.69336960  3.554230e-01 FALSE\nfactor(season)4:observedWeightZ              -3.09574678 -9.734888e-03 FALSE\nfactor(season)2:nIndZ                        66.24637726  3.143420e+02  TRUE\nfactor(season)3:nIndZ                        80.69284441  3.155961e+02  TRUE\nfactor(season)4:nIndZ                        70.28869089  3.153682e+02  TRUE\nfactor(season)2:nIndBySpeciesZ             -232.71191681 -6.082840e+01 FALSE\nfactor(season)3:nIndBySpeciesZ             -233.70645219 -6.171401e+01 FALSE\nfactor(season)4:nIndBySpeciesZ             -235.46876832 -6.349440e+01 FALSE\nobservedWeightZ:nIndZ                        -0.11086135  1.930223e-01 FALSE\nobservedWeightZ:nIndBySpeciesZ               -0.14849280  1.668524e-01 FALSE\nnIndZ:nIndBySpeciesZ                         -0.40726214  2.235470e-01 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                   FALSE     TRUE\nmeanTempZbySeason                          FALSE    FALSE\nriverwb mitchell                           FALSE     TRUE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE    FALSE\nnIndZ                                       TRUE    FALSE\nnIndBySpeciesZ                             FALSE    FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason FALSE    FALSE\nmeanFlowByRiverZbySeason:riverwb mitchell  FALSE     TRUE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)3   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE     TRUE\nmeanFlowByRiverZbySeason:observedWeightZ   FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndZ             FALSE     TRUE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ    FALSE    FALSE\nmeanTempZbySeason:riverwb mitchell          TRUE    FALSE\nmeanTempZbySeason:riverwest brook          FALSE     TRUE\nmeanTempZbySeason:factor(season)2           TRUE    FALSE\nmeanTempZbySeason:factor(season)3           TRUE    FALSE\nmeanTempZbySeason:factor(season)4           TRUE    FALSE\nmeanTempZbySeason:observedWeightZ          FALSE     TRUE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nmeanTempZbySeason:nIndBySpeciesZ           FALSE     TRUE\nriverwb mitchell:factor(season)2            TRUE    FALSE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwb mitchell:factor(season)3           FALSE     TRUE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwb mitchell:factor(season)4           FALSE     TRUE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwb mitchell:observedWeightZ           FALSE    FALSE\nriverwest brook:observedWeightZ            FALSE     TRUE\nriverwb mitchell:nIndZ                     FALSE     TRUE\nriverwest brook:nIndZ                      FALSE     TRUE\nriverwb mitchell:nIndBySpeciesZ            FALSE    FALSE\nriverwest brook:nIndBySpeciesZ             FALSE     TRUE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE     TRUE\nfactor(season)4:observedWeightZ             TRUE    FALSE\nfactor(season)2:nIndZ                      FALSE    FALSE\nfactor(season)3:nIndZ                      FALSE    FALSE\nfactor(season)4:nIndZ                      FALSE    FALSE\nfactor(season)2:nIndBySpeciesZ              TRUE    FALSE\nfactor(season)3:nIndBySpeciesZ              TRUE    FALSE\nfactor(season)4:nIndBySpeciesZ              TRUE    FALSE\nobservedWeightZ:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndBySpeciesZ             FALSE     TRUE\nnIndZ:nIndBySpeciesZ                       FALSE     TRUE\n\n\nCode\nanova(predBNT$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                        4655     1808.3\nmeanFlowByRiverZbySeason                    1   19.573      4654     1788.8\nmeanTempZbySeason                           1    5.969      4653     1782.8\nriver                                       2    0.194      4651     1782.6\nfactor(season)                              3   97.251      4648     1685.3\nobservedWeightZ                             1  244.900      4647     1440.4\nnIndZ                                       1    8.756      4646     1431.7\nnIndBySpeciesZ                              1    2.636      4645     1429.0\nmeanFlowByRiverZbySeason:meanTempZbySeason  1   13.560      4644     1415.5\nmeanFlowByRiverZbySeason:river              2    1.118      4642     1414.4\nmeanFlowByRiverZbySeason:factor(season)     3   33.420      4639     1380.9\nmeanFlowByRiverZbySeason:observedWeightZ    1    2.188      4638     1378.8\nmeanFlowByRiverZbySeason:nIndZ              1    2.044      4637     1376.7\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1    8.358      4636     1368.3\nmeanTempZbySeason:river                     2    1.135      4634     1367.2\nmeanTempZbySeason:factor(season)            3    9.394      4631     1357.8\nmeanTempZbySeason:observedWeightZ           1    0.178      4630     1357.6\nmeanTempZbySeason:nIndZ                     1    0.057      4629     1357.6\nmeanTempZbySeason:nIndBySpeciesZ            1    4.937      4628     1352.7\nriver:factor(season)                        6    5.806      4622     1346.8\nriver:observedWeightZ                       2    5.202      4620     1341.6\nriver:nIndZ                                 2    2.685      4618     1339.0\nriver:nIndBySpeciesZ                        2    6.388      4616     1332.6\nfactor(season):observedWeightZ              3    6.599      4613     1326.0\nfactor(season):nIndZ                        3   29.839      4610     1296.1\nfactor(season):nIndBySpeciesZ               3   23.924      4607     1272.2\nobservedWeightZ:nIndZ                       1    0.509      4606     1271.7\nobservedWeightZ:nIndBySpeciesZ              1    0.029      4605     1271.7\nnIndZ:nIndBySpeciesZ                        1    0.289      4604     1271.4\n\n\nCode\nAnova(predBNT$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1  20.3459  6.463e-06 ***\nmeanTempZbySeason                           1   0.1934  0.6600697    \nriver                                       2   3.6382  0.1621718    \nfactor(season)                              3   4.5887  0.2045118    \nobservedWeightZ                             1 206.4402  &lt; 2.2e-16 ***\nnIndZ                                       1   2.0303  0.1541869    \nnIndBySpeciesZ                              1   1.4231  0.2329018    \nmeanFlowByRiverZbySeason:meanTempZbySeason  1   4.1532  0.0415562 *  \nmeanFlowByRiverZbySeason:river              2   0.5991  0.7411593    \nmeanFlowByRiverZbySeason:factor(season)     3  13.7196  0.0033128 ** \nmeanFlowByRiverZbySeason:observedWeightZ    1   3.1174  0.0774622 .  \nmeanFlowByRiverZbySeason:nIndZ              1   0.1457  0.7027101    \nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1  13.7600  0.0002077 ***\nmeanTempZbySeason:river                     2   1.6118  0.4466823    \nmeanTempZbySeason:factor(season)            3   6.2547  0.0998564 .  \nmeanTempZbySeason:observedWeightZ           1   0.0187  0.8911618    \nmeanTempZbySeason:nIndZ                     1   0.0814  0.7754036    \nmeanTempZbySeason:nIndBySpeciesZ            1   0.0540  0.8163229    \nriver:factor(season)                        6   4.8994  0.5567762    \nriver:observedWeightZ                       2   3.2293  0.1989597    \nriver:nIndZ                                 2   0.0415  0.9794505    \nriver:nIndBySpeciesZ                        2   2.5596  0.2780985    \nfactor(season):observedWeightZ              3   6.7372  0.0807627 .  \nfactor(season):nIndZ                        3  21.5403  8.129e-05 ***\nfactor(season):nIndBySpeciesZ               3  20.4168  0.0001391 ***\nobservedWeightZ:nIndZ                       1   0.2624  0.6084521    \nobservedWeightZ:nIndBySpeciesZ              1   0.0149  0.9030032    \nnIndZ:nIndBySpeciesZ                        1   0.2865  0.5924830    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predBNT$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.214 \n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBNT$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\npredBNTWider &lt;- predBNT$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predBNTWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\n\n\n16.14.4 Atlantic salmon\n\n\nCode\nspeciesIn &lt;- \"ats\"\n\nggpairs(\n  cd1_z |&gt; filter(species == speciesIn) |&gt; \n  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)\n)\n\n\n\n\n\nCode\nmodATS &lt;- runSppModels(cd1_z, speciesIn)\npredATS &lt;- predictSpp(cd1_z, modATS, speciesIn)\npredATS$byAIC |&gt; dplyr::select(model, AIC, deviance) \n\n\n# A tibble: 26 × 3\n   model                                                            AIC deviance\n   &lt;chr&gt;                                                          &lt;dbl&gt;    &lt;dbl&gt;\n 1 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6434.    6348.\n 2 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6589.    6521.\n 3 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6632.    6564.\n 4 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + r… 6684.    6632.\n 5 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6779.    6709.\n 6 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6805.    6759.\n 7 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 6874.    6834.\n 8 negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + n… 6902.    6878.\n 9 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nI… 6903.    6877.\n10 negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * ri… 7119.    7055.\n# ℹ 16 more rows\n\n\nCode\n#https://rcompanion.org/rcompanion/e_06.html\nconfint(predATS$byAIC[1,]$fit[[1]]) |&gt; \n  as.data.frame() |&gt; \n  mutate(\n    lo = `2.5 %` &gt; 0,\n    hi =  `97.5 %` &lt; 0,\n    overlap0 = ifelse(`2.5 %` &gt; 0 | `97.5 %` &lt; 0, FALSE, TRUE))\n\n\n                                                   2.5 %        97.5 %    lo\n(Intercept)                                -5.394486e+03 -4.557456e+03 FALSE\nmeanFlowByRiverZbySeason                   -6.195946e+01 -4.020762e+01 FALSE\nmeanTempZbySeason                           3.148738e+01  1.130278e+02  TRUE\nriverwest brook                             4.480003e+03  5.281240e+03  TRUE\nfactor(season)2                             4.547773e+03  5.413752e+03  TRUE\nfactor(season)3                             4.590335e+03  5.446417e+03  TRUE\nfactor(season)4                             4.818344e+03  5.681265e+03  TRUE\nobservedWeightZ                             1.614782e+01  1.487030e+01  TRUE\nnIndZ                                       3.292589e+02  3.857591e+02  TRUE\nnIndBySpeciesZ                             -1.484374e+01 -1.255211e+01 FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason -4.757394e-01 -1.929458e-01 FALSE\nmeanFlowByRiverZbySeason:riverwest brook    4.738654e+01  5.863053e+01  TRUE\nmeanFlowByRiverZbySeason:factor(season)2   -8.554282e+00  8.056581e-01 FALSE\nmeanFlowByRiverZbySeason:factor(season)3   -1.034186e+01 -1.571621e+00 FALSE\nmeanFlowByRiverZbySeason:factor(season)4   -1.221914e+00  7.930008e+00 FALSE\nmeanFlowByRiverZbySeason:observedWeightZ   -2.060068e-01 -3.717710e-02 FALSE\nmeanFlowByRiverZbySeason:nIndZ              8.653587e-01  1.335813e+00  TRUE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ    -1.443640e+00 -8.642700e-01 FALSE\nmeanTempZbySeason:riverwest brook          -7.236147e+01 -3.966555e+01 FALSE\nmeanTempZbySeason:factor(season)2          -6.885899e+00 -8.356808e-01 FALSE\nmeanTempZbySeason:factor(season)3          -3.594578e+01 -2.527087e+00 FALSE\nmeanTempZbySeason:factor(season)4          -8.044405e+00 -2.337966e+00 FALSE\nmeanTempZbySeason:observedWeightZ           1.100925e-01  2.777140e-01  TRUE\nmeanTempZbySeason:nIndZ                    -1.674751e-01  1.225662e-01 FALSE\nmeanTempZbySeason:nIndBySpeciesZ           -1.525483e-01  2.015943e-01 FALSE\nriverwest brook:factor(season)2            -5.473390e+03 -4.571732e+03 FALSE\nriverwest brook:factor(season)3            -5.498613e+03 -4.610100e+03 FALSE\nriverwest brook:factor(season)4            -5.514973e+03 -4.624588e+03 FALSE\nriverwest brook:observedWeightZ            -4.323943e+01 -9.900848e+00 FALSE\nriverwest brook:nIndZ                      -5.788929e+01 -1.257691e+01 FALSE\nriverwest brook:nIndBySpeciesZ              5.103294e+00  5.048160e+00  TRUE\nfactor(season)2:observedWeightZ            -1.249492e+00  1.379425e+00 FALSE\nfactor(season)3:observedWeightZ            -4.044371e+00  7.745203e-01 FALSE\nfactor(season)4:observedWeightZ            -1.464341e+00  1.182757e+00 FALSE\nfactor(season)2:nIndZ                      -3.860249e+02 -3.248941e+02 FALSE\nfactor(season)3:nIndZ                      -3.973241e+02 -3.471580e+02 FALSE\nfactor(season)4:nIndZ                      -3.790332e+02 -3.181085e+02 FALSE\nfactor(season)2:nIndBySpeciesZ              8.380863e+00  1.061226e+01  TRUE\nfactor(season)3:nIndBySpeciesZ              8.950224e+00  1.108092e+01  TRUE\nfactor(season)4:nIndBySpeciesZ              6.565488e+00  8.805223e+00  TRUE\nobservedWeightZ:nIndZ                      -2.226427e-01  5.332988e-02 FALSE\nobservedWeightZ:nIndBySpeciesZ             -5.882043e-02  1.525532e-01 FALSE\nnIndZ:nIndBySpeciesZ                       -2.297603e-01 -2.246706e-01 FALSE\n                                              hi overlap0\n(Intercept)                                 TRUE    FALSE\nmeanFlowByRiverZbySeason                    TRUE    FALSE\nmeanTempZbySeason                          FALSE    FALSE\nriverwest brook                            FALSE    FALSE\nfactor(season)2                            FALSE    FALSE\nfactor(season)3                            FALSE    FALSE\nfactor(season)4                            FALSE    FALSE\nobservedWeightZ                            FALSE    FALSE\nnIndZ                                      FALSE    FALSE\nnIndBySpeciesZ                              TRUE    FALSE\nmeanFlowByRiverZbySeason:meanTempZbySeason  TRUE    FALSE\nmeanFlowByRiverZbySeason:riverwest brook   FALSE    FALSE\nmeanFlowByRiverZbySeason:factor(season)2   FALSE     TRUE\nmeanFlowByRiverZbySeason:factor(season)3    TRUE    FALSE\nmeanFlowByRiverZbySeason:factor(season)4   FALSE     TRUE\nmeanFlowByRiverZbySeason:observedWeightZ    TRUE    FALSE\nmeanFlowByRiverZbySeason:nIndZ             FALSE    FALSE\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     TRUE    FALSE\nmeanTempZbySeason:riverwest brook           TRUE    FALSE\nmeanTempZbySeason:factor(season)2           TRUE    FALSE\nmeanTempZbySeason:factor(season)3           TRUE    FALSE\nmeanTempZbySeason:factor(season)4           TRUE    FALSE\nmeanTempZbySeason:observedWeightZ          FALSE    FALSE\nmeanTempZbySeason:nIndZ                    FALSE     TRUE\nmeanTempZbySeason:nIndBySpeciesZ           FALSE     TRUE\nriverwest brook:factor(season)2             TRUE    FALSE\nriverwest brook:factor(season)3             TRUE    FALSE\nriverwest brook:factor(season)4             TRUE    FALSE\nriverwest brook:observedWeightZ             TRUE    FALSE\nriverwest brook:nIndZ                       TRUE    FALSE\nriverwest brook:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)2:observedWeightZ            FALSE     TRUE\nfactor(season)3:observedWeightZ            FALSE     TRUE\nfactor(season)4:observedWeightZ            FALSE     TRUE\nfactor(season)2:nIndZ                       TRUE    FALSE\nfactor(season)3:nIndZ                       TRUE    FALSE\nfactor(season)4:nIndZ                       TRUE    FALSE\nfactor(season)2:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)3:nIndBySpeciesZ             FALSE    FALSE\nfactor(season)4:nIndBySpeciesZ             FALSE    FALSE\nobservedWeightZ:nIndZ                      FALSE     TRUE\nobservedWeightZ:nIndBySpeciesZ             FALSE     TRUE\nnIndZ:nIndBySpeciesZ                        TRUE    FALSE\n\n\nCode\nanova(predATS$byAIC[1,]$fit[[1]])\n\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: negGrowth\n\nTerms added sequentially (first to last)\n\n                                           Df Deviance Resid. Df Resid. Dev\nNULL                                                        9342     9682.6\nmeanFlowByRiverZbySeason                    1   229.80      9341     9452.8\nmeanTempZbySeason                           1    22.08      9340     9430.8\nriver                                       1     0.50      9339     9430.2\nfactor(season)                              3  2000.77      9336     7429.5\nobservedWeightZ                             1   476.82      9335     6952.7\nnIndZ                                       1    18.31      9334     6934.4\nnIndBySpeciesZ                              1     3.39      9333     6931.0\nmeanFlowByRiverZbySeason:meanTempZbySeason  1    26.10      9332     6904.9\nmeanFlowByRiverZbySeason:river              1     0.79      9331     6904.1\nmeanFlowByRiverZbySeason:factor(season)     3    70.78      9328     6833.3\nmeanFlowByRiverZbySeason:observedWeightZ    1     5.80      9327     6827.5\nmeanFlowByRiverZbySeason:nIndZ              1    25.22      9326     6802.3\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1   131.14      9325     6671.1\nmeanTempZbySeason:river                     1     2.67      9324     6668.5\nmeanTempZbySeason:factor(season)            3   143.64      9321     6524.8\nmeanTempZbySeason:observedWeightZ           1    20.24      9320     6504.6\nmeanTempZbySeason:nIndZ                     1     2.97      9319     6501.6\nmeanTempZbySeason:nIndBySpeciesZ            1     0.22      9318     6501.4\nriver:factor(season)                        3     8.84      9315     6492.6\nriver:observedWeightZ                       1     1.39      9314     6491.2\nriver:nIndZ                                 1     0.03      9313     6491.1\nriver:nIndBySpeciesZ                        1     0.77      9312     6490.4\nfactor(season):observedWeightZ              3    50.72      9309     6439.6\nfactor(season):nIndZ                        3    22.53      9306     6417.1\nfactor(season):nIndBySpeciesZ               3    61.92      9303     6355.2\nobservedWeightZ:nIndZ                       1     0.29      9302     6354.9\nobservedWeightZ:nIndBySpeciesZ              1     1.18      9301     6353.7\nnIndZ:nIndBySpeciesZ                        1     5.22      9300     6348.5\n\n\nCode\nAnova(predATS$byAIC[1,]$fit[[1]], type=\"II\", test=\"Wald\")\n\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: negGrowth\n                                           Df    Chisq Pr(&gt;Chisq)    \nmeanFlowByRiverZbySeason                    1  41.1813  1.387e-10 ***\nmeanTempZbySeason                           1   0.1517   0.696911    \nriver                                       2   4.8088   0.090319 .  \nfactor(season)                              6 192.3949  &lt; 2.2e-16 ***\nobservedWeightZ                             1 275.1039  &lt; 2.2e-16 ***\nnIndZ                                       2  27.5964  1.017e-06 ***\nnIndBySpeciesZ                              1  16.3245  5.337e-05 ***\nmeanFlowByRiverZbySeason:meanTempZbySeason  1  21.3666  3.793e-06 ***\nmeanFlowByRiverZbySeason:river              1   1.0787   0.298999    \nmeanFlowByRiverZbySeason:factor(season)     3  96.5009  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:observedWeightZ    1   7.8609   0.005052 ** \nmeanFlowByRiverZbySeason:nIndZ              1  83.9283  &lt; 2.2e-16 ***\nmeanFlowByRiverZbySeason:nIndBySpeciesZ     1  60.8633  6.118e-15 ***\nmeanTempZbySeason:river                     1   1.2029   0.272749    \nmeanTempZbySeason:factor(season)            3  55.9292  4.350e-12 ***\nmeanTempZbySeason:observedWeightZ           1  20.4272  6.194e-06 ***\nmeanTempZbySeason:nIndZ                     1   0.0932   0.760191    \nmeanTempZbySeason:nIndBySpeciesZ            1   0.0718   0.788797    \nriver:factor(season)                        3   1.9340   0.586221    \nriver:observedWeightZ                       1   0.8754   0.349461    \nriver:nIndZ                                 1   0.7293   0.393106    \nriver:nIndBySpeciesZ                        1   0.6375   0.424608    \nfactor(season):observedWeightZ              3  46.4062  4.649e-10 ***\nfactor(season):nIndZ                        3  59.9397  6.055e-13 ***\nfactor(season):nIndBySpeciesZ               3  67.4872  1.473e-14 ***\nobservedWeightZ:nIndZ                       1   1.4141   0.234369    \nobservedWeightZ:nIndBySpeciesZ              1   0.7441   0.388366    \nnIndZ:nIndBySpeciesZ                        1   4.9598   0.025943 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nefronRSquared(predATS$byAIC[1,]$fit[[1]])\n\n\nEfronRSquared \n        0.333 \n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)\n\n\n\n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(observedWeightZ, pred, group = groupF)) +\n  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Body mass (mg)\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predATS$pred |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, nIndBySpeciesZ == 0, season &gt; 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\npredATSWider &lt;- predATS$pred |&gt; \n  filter(nIndZ %in% c(-1.5, 0, 1.5)) |&gt; \n  dplyr::select(-groupFN) |&gt; \n  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = \"nIndZ\")\n\ntempColors &lt;-  c(\"lightblue\", \"grey\", \"red\")\n\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Small fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0,  season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Medium fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)\n\n\n\n\n\nCode\nggplot(predATSWider |&gt; filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0,  season &gt; 1, riverGG == \"West Brook\"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +\n  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +\n  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +\n  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +\n  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +\n  scale_color_manual(values = tempColors) +\n  scale_fill_manual(values = tempColors) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Stream flow\", title = \"Large fish\") +\n  theme_publication() +    \n  facet_grid(seasonGG ~ riverGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#two-growth-models",
    "href": "modelGrowthInMass.html#two-growth-models",
    "title": "16  Growth in mass",
    "section": "16.15 Two growth models",
    "text": "16.15 Two growth models\n\n16.15.1 Size-adjusted growth model\n\n16.15.1.1 Get l-w relationships for size-adjusted growth model\nHere, we will explore size-independent growth in mass, see Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x. Size-independent growth (grWeightS) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().\ngrWeightS uses the slope of log(observedWeight) ~ log(grWeight) for each river and season and species to adjust growth.\nA simple linear models shows we need to get separate slopes for each river and season and species.\n\n\nCode\nggplot(cd1 |&gt; filter(grWeight &gt; 0), \n       aes(log(observedWeight), log(grWeight), color = riverGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"Log of mass (mg)\", x = \"Log of growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nmod0 &lt;- lm(log(grWeight) ~ log(observedWeight), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod1 &lt;- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |&gt; filter(grWeight &gt; 0))\nmod2 &lt;- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod3 &lt;- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |&gt; filter(grWeight &gt; 0))\nmod4 &lt;- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |&gt; filter(grWeight &gt; 0))\n\nAIC(mod0,mod1,mod2,mod3,mod4) |&gt; arrange(AIC)\n\n\n     df      AIC\nmod4 73 43925.12\nmod2 33 47539.49\nmod3  9 48036.13\nmod1  9 64659.88\nmod0  3 64744.59\n\n\n\n\n\n16.15.2 Compare size-adjusted and instantaneous growth\nDifferences don’t seem big enough to warrant the extra complexity from the s-adjusted growth metric\n\n\nCode\nggplot(cd1, aes(grWeight, grWeightS, color = riverGG)) +\n  geom_point(alpha = 0.05)  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  geom_abline(intercept = 0, slope = 1) +\n  labs(y = \"Gowth in mass\", x = \"Size-adjusted growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)\n\n\n\n\n\nCode\nggplot(cd1 |&gt; \n         dplyr::select(observedWeight, grWeight, grWeightS, seasonGG, speciesGG) |&gt; \n         pivot_longer(cols = c(grWeight, grWeightS)),\n       \n       aes(log(observedWeight), value, color = name)) +\n  geom_point(alpha = 0.05 )  +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(y = \"Log of mass (mg)\", x = \"Growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "href": "modelGrowthInMass.html#compare-growth-in-length-and-mass",
    "title": "16  Growth in mass",
    "section": "16.16 Compare growth in length and mass",
    "text": "16.16 Compare growth in length and mass\n\n16.16.1 Growth rate in length vs size-independent growth rate in mass\n\n\nCode\nggplot(cd1, aes(grLength, grWeightS)) +\n  geom_point(aes(size = observedWeight), alpha = 0.02) +\n  guides(size = guide_legend(override.aes = list(alpha = 1))) +\n  labs(x = \"Growth in length\", y = \"Size-adjusted growth in mass\") +\n  scale_color_discrete() +\n  theme_publication() +    \n  facet_grid(seasonGG~speciesGG)"
  },
  {
    "objectID": "modelGrowthInMass.html#deprecated-logistic-models-below",
    "href": "modelGrowthInMass.html#deprecated-logistic-models-below",
    "title": "16  Growth in mass",
    "section": "16.17 Deprecated logistic models below",
    "text": "16.17 Deprecated logistic models below\n\n16.17.1 Logistic model for flow and temperature, all species\n\n\n16.17.2 Model selection\n\n\nCode\nmodSpecies &lt;- c(\"bkt\", \"ats\", \"bnt\")\ncd1Mod &lt;- cd1 |&gt; filter(species == modSpecies)\n\nmodFT0 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * species, family = \"binomial\", data = cd1Mod)\nmodFT1 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river + species, family = \"binomial\", data = cd1Mod)\nmodFT2 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river + species, family = \"binomial\", data = cd1Mod)\nmodFT3 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason + river + species, family = \"binomial\", data = cd1Mod)\nmodFT4 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = \"binomial\", data = cd1Mod)\nmodFT5 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = \"binomial\", data = cd1Mod)\nmodFT6 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + species , family = \"binomial\", data = cd1Mod)\nmodFT7 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason, family = \"binomial\", data = cd1Mod)\n\n\nmodFT8 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) + species, family = \"binomial\", data = cd1Mod)\nmodFT9 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species, family = \"binomial\", data = cd1Mod)\nmodFT10 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason * river * factor(season) * species, family = \"binomial\", data = cd1Mod)\n\nmodFT11 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * observedWeight + species, family = \"binomial\", data = cd1Mod)\nmodFT12 &lt;- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species * observedWeight, family = \"binomial\", data = cd1Mod)\n\nAIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |&gt; arrange(AIC)\n\n\n         df        AIC\nmodFT8   66   5227.562\nmodFT1   18   6284.129\nmodFT0   36   6300.755\nmodFT2    9   6313.234\nmodFT3    8   6315.001\nmodFT6    6   6375.226\nmodFT4    7   6563.664\nmodFT5    7   6563.664\nmodFT7    4   6704.608\nmodFT11 130  92892.189\nmodFT12 261  93082.102\nmodFT10  71 107480.000\nmodFT9  137 110928.016\n\n\n\n\n16.17.3 Model results for additive model (not very good)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\n#summary(modFT3)\n#anova(modFT3)\n\npscl::pR2(modFT3)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n  McFadden \n0.07356826 \n\n\nCode\ncaret::varImp(modFT3) |&gt; arrange(desc(Overall))\n\n\n                                Overall\nspeciesbnt                    13.395579\nmeanFlowByRiverScaledBySeason 10.698930\nmeanTemperatureScaledBySeason  6.888871\nspeciesbkt                     5.964425\nriverwb mitchell               4.407149\nriverwest brook                3.037801\nriverwb obear                  2.973792\n\n\n\n\n16.17.4 Model results for full interactive model (best model)\n\n\nCode\n# https://www.statology.org/logistic-regression-in-r/\n#summary(modFT11)\n#anova(modFT11)\n\n# full interaction\npscl::pR2(modFT11)[\"McFadden\"]\n\n\nfitting null model for pseudo-r2\n\n\n McFadden \n-12.62397 \n\n\nCode\ncaret::varImp(modFT11) |&gt; arrange(desc(Overall))\n\n\n                                                                                                                 Overall\nspeciesbnt                                                                                                  1053786328.4\nspeciesbkt                                                                                                   284259874.7\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)3                                                  206190180.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)3                    202492714.1\nmeanTemperatureScaledBySeason:riverwb obear                                                                  189037491.4\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear                                    186017710.2\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)2:observedWeight                                   161645650.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)2:observedWeight     159547481.3\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)2                                                  152548068.3\nmeanTemperatureScaledBySeason:riverwb obear:observedWeight                                                   150405795.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:observedWeight                     149449176.8\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)3:observedWeight                                   148420772.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)3:observedWeight     144812887.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)2                    142789878.0\nmeanTemperatureScaledBySeason:observedWeight                                                                 121754595.8\nmeanTemperatureScaledBySeason:riverwest brook:observedWeight                                                 120294666.6\nriverwb obear:factor(season)4                                                                                119818800.5\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)4                                                  119290709.9\nriverwb obear:factor(season)4:observedWeight                                                                 118814327.3\nmeanTemperatureScaledBySeason:factor(season)3:observedWeight                                                 118323796.8\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)4:observedWeight                                   118156185.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:observedWeight                                   117653131.9\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:observedWeight                   116023954.5\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)3:observedWeight                                 113685884.1\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)3:observedWeight                   111606650.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)3:observedWeight   110512224.8\nobservedWeight                                                                                               108887205.0\nfactor(season)3:observedWeight                                                                               108824607.5\nmeanTemperatureScaledBySeason:factor(season)4:observedWeight                                                 108542695.0\nriverwest brook:observedWeight                                                                               107931962.1\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)4:observedWeight                                 106344025.7\nmeanFlowByRiverScaledBySeason:observedWeight                                                                 104692452.0\nriverwest brook:factor(season)3:observedWeight                                                               104525701.0\nmeanFlowByRiverScaledBySeason:riverwest brook:observedWeight                                                 102703433.1\nmeanFlowByRiverScaledBySeason:factor(season)3:observedWeight                                                 101209723.0\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)2:observedWeight                                 100089912.9\nmeanTemperatureScaledBySeason:factor(season)2:observedWeight                                                  99686484.3\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)3:observedWeight                                  98433651.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)4:observedWeight    95450552.8\nfactor(season)2:observedWeight                                                                                95233874.1\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)3                                                   94371077.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)4:observedWeight                    92346010.6\nriverwest brook:factor(season)2:observedWeight                                                                91630216.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)3:observedWeight   90865763.7\nriverwb obear:factor(season)3                                                                                 90834189.4\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)2:observedWeight                                  90031516.6\nmeanFlowByRiverScaledBySeason:factor(season)2:observedWeight                                                  88905912.0\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)3:observedWeight                                 88294339.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)2:observedWeight                    87353582.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook                                   85072563.4\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)2:observedWeight    83243402.1\nmeanTemperatureScaledBySeason:riverwb mitchell:observedWeight                                                 81376979.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:observedWeight                   81204962.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason                                                   80495127.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)3                  78174236.3\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)2                                                 78007829.0\nmeanTemperatureScaledBySeason                                                                                 77308664.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)3                   77054914.3\nmeanTemperatureScaledBySeason:factor(season)2                                                                 75968702.3\nmeanTemperatureScaledBySeason:riverwest brook                                                                 74404117.3\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)2                                   73970227.0\nriverwb obear:factor(season)2                                                                                 73068199.5\nmeanTemperatureScaledBySeason:factor(season)3                                                                 72660747.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)2                   71921879.8\nfactor(season)4:observedWeight                                                                                71684212.1\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)3                                                 71409760.7\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)3                                                70675664.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)3                                   70546012.6\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)2:observedWeight                                    68933859.8\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)2                                                   68930890.3\nriverwest brook:factor(season)4:observedWeight                                                                67079100.6\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)2:observedWeight                                 62493592.4\nriverwb obear:factor(season)2:observedWeight                                                                  61178852.0\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell                                  58303859.6\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)2:observedWeight   58247446.2\nmeanTemperatureScaledBySeason:riverwb mitchell                                                                57530539.0\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)4:observedWeight                                  57495116.6\nmeanFlowByRiverScaledBySeason:factor(season)4:observedWeight                                                  55561597.2\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)4:observedWeight                                 54566845.5\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)4                     53205422.8\nriverwest brook                                                                                               51723475.8\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)4:observedWeight   46298658.2\nmeanFlowByRiverScaledBySeason                                                                                 45759381.4\nriverwest brook:factor(season)3                                                                               42760303.7\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)4                                                   42481168.8\nriverwb mitchell:observedWeight                                                                               42452478.0\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)4                                                41310081.7\nmeanTemperatureScaledBySeason:factor(season)4                                                                 41038381.6\nmeanFlowByRiverScaledBySeason:factor(season)3                                                                 40739632.5\nmeanFlowByRiverScaledBySeason:riverwb mitchell:observedWeight                                                 39465254.6\nriverwb mitchell:factor(season)4:observedWeight                                                               39129885.8\nmeanFlowByRiverScaledBySeason:riverwest brook                                                                 38858474.9\nmeanTemperatureScaledBySeason:riverwest brook:factor(season)4                                                 38823558.4\nriverwb mitchell:factor(season)3:observedWeight                                                               38670169.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)4                  35714692.7\nfactor(season)3                                                                                               35462327.1\nriverwb obear                                                                                                 34674805.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)4:observedWeight                                 34248466.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwest brook:factor(season)4                   33658515.7\nmeanFlowByRiverScaledBySeason:riverwb obear:observedWeight                                                    33553609.2\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb obear:factor(season)4:observedWeight      33290054.3\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)3                                                 32275488.3\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)3:observedWeight                                 32046854.7\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:factor(season)4                                   30193110.9\nmeanFlowByRiverScaledBySeason:riverwb obear                                                                   29205676.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)2                                                28487627.7\nriverwb mitchell:factor(season)2                                                                              26014699.4\nriverwb obear:observedWeight                                                                                  25051017.6\nmeanTemperatureScaledBySeason:riverwb obear:factor(season)4:observedWeight                                    20663389.1\nmeanFlowByRiverScaledBySeason:riverwb obear:factor(season)3:observedWeight                                    20638663.9\nriverwest brook:factor(season)2                                                                               16126946.8\nriverwb mitchell:factor(season)2:observedWeight                                                               14311118.6\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)3                                                13948904.8\nriverwb obear:factor(season)3:observedWeight                                                                  12135696.3\nfactor(season)2                                                                                               10472604.3\nmeanFlowByRiverScaledBySeason:factor(season)2                                                                 10135106.6\nmeanTemperatureScaledBySeason:riverwb mitchell:factor(season)2                                                 8273083.0\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)2:observedWeight                                  7284177.1\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)4                                                  7256830.7\nmeanFlowByRiverScaledBySeason:riverwest brook:factor(season)2                                                  6902771.9\nmeanFlowByRiverScaledBySeason:factor(season)4                                                                  5025268.1\nmeanFlowByRiverScaledBySeason:meanTemperatureScaledBySeason:riverwb mitchell:factor(season)2                   3723864.2\nriverwb mitchell                                                                                               2206843.4\nriverwb mitchell:factor(season)3                                                                               1764088.5\nmeanFlowByRiverScaledBySeason:riverwb mitchell:factor(season)4                                                 1579048.1\nriverwb mitchell:factor(season)4                                                                               1292175.3\nriverwest brook:factor(season)4                                                                                1137844.7\nfactor(season)4                                                                                                 920754.4\nmeanFlowByRiverScaledBySeason:riverwb mitchell                                                                  362710.3\n\n\n\n\n16.17.5 Precict p(neg growth in mass)\n\n\nCode\npredD &lt;- expand.grid(\n  meanFlowByRiverScaledBySeason = seq(-1.5,1.5,0.25), \n  meanTemperatureScaledBySeason = seq(-1.5,1.5,0.25), \n  river = unique(cd1$river), \n  species = unique(cd1$species), \n  season = unique(cd1$season),\n  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)\n  )\n\n\npred &lt;- add_column(predD, \n                   pred = predict.glm(modFT11, predD, type = \"response\")) |&gt; \n        mutate(groupT = paste(river, species, season, meanTemperatureScaledBySeason, sep = \"_\"),\n               groupF = paste(river, species, season, meanFlowByRiverScaledBySeason, sep = \"_\"))\n\n\n\n\n16.17.6 Plot predictions\n\n\nCode\nggplot(pred |&gt; filter(meanTemperatureScaledBySeason %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowByRiverScaledBySeason, pred, group= groupT)) +\n  geom_line(aes(color = factor(meanTemperatureScaledBySeason))) +\n  labs(y = \"Probability of negative growth in mass\", x = \"Mean flow\") +\n  theme_publication() +    \n  facet_grid(season~species+river)"
  },
  {
    "objectID": "modelsCMR_NN_SIM.html#tt-model",
    "href": "modelsCMR_NN_SIM.html#tt-model",
    "title": "17  Simulation - CJS model",
    "section": "17.1 [t,t] model",
    "text": "17.1 [t,t] model\nModel with phi and p for each age-in-samples (column in the encounter history file)\nProbability of survival (phi) model structure:\nphi[t] &lt;- betaInt[t]\nProbability of capture (p) model structure:\np[t] &lt;- betaP[t]\nModel code is in ./models/cmrNN_SIM/tt/modelCMR_tt_NN_SIM_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_SIM/tt/modelCMR_tt_NN_SIM_makeFile.R  Model run output is stored in ./models/cmrNN_SIM/tt/runsOut/localSimData/\nSimulated data were created for 12 time steps (occasions), across a range of number of fish (n, 40, 200, 1000, 5000), simulated probability of capture (p, 0.2, 0.5 0.8) and probability of survival (phi, 0.2, 0.5 0.8, true) [may need to add replicates for a paper]. p’s and phi’s are constant across time, except When phi == true when phi’s follow this pattern (0.812,0.810,0.749,0.647,0.640,0.691,0.830,0.330,0.669,0.560,0.684), which is average survival across time in our long-term study area, the West Brook. The number of fish entering the simulations at each time step start at n/2 and are reduced by 1/2 for each subsequent time step. With this approach, the total number of fish entering approximates n, but the entering fish are spread over time in a way that is similar to what happens in the field.\nFor each set of simulation conditions, an encounter history (eh) file is created with the file name = eh_px.x_phixx_nxxxx.csv where xs are the values for each variable. Each row is a fish and each column is an occasion.\nSimulation output is stored in .RData files named as tt_NN_SIM__px.x_phixx_nxxxx.RData and model run summaries are stored in a cumulative .csv file local_summary_out_all.csv for all runs and local_summary_out_phi_sim.csv for runs with phi = (0.2, 0.5, 0.8) and local_summary_out_phi_sim.csv for runs with phi = true.\nIn the summary files, the variables are:\nX var mean sd X2.5. X50. X97.5. Rhat n.eff p phi n variable time phi_num,\nwhere:\nX = row number\nvar = the variable name(phi or p) combined with the time step\nmean = mean estimate across MCMC iterations\nsd = sd estimate across MCMC iterations\nX2.5. = 2.5 percentile estimate across MCMC iterations\nX50. = median estimate across MCMC iterations\nX97.5. = 97.5 percentile estimate across MCMC iterations\nRhat = indicator of model convergence for the variable. &lt; 1.05 is good. n.eff = effective number of observations in the estimate. Bigger is better p = the p value used in the simulation\nphi = the phi value used in the simulation. This is a character to accommodate the true possibility.\nn = the n value used in the simulation variable = the variable alone without the time step (as in var)\ntime = time step [1:12] phi_num = the phi value used in the simulation. This value is numeric."
  },
  {
    "objectID": "modelsCMR_NN_OB.html#tt-model",
    "href": "modelsCMR_NN_OB.html#tt-model",
    "title": "18  River 4 (IS) - CJS model",
    "section": "18.1 [t,t] model",
    "text": "18.1 [t,t] model\nModel with phi and p for each age-in-samples (column in the encounter history file)\nProbability of survival (phi) model structure:\nphi[t] &lt;- betaInt[t]\nProbability of capture (p) model structure:\np[t] &lt;- betaP[t]\nModel code is in ./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_NN_OB.R and saved as modelCMR_tt_NN_OB_target\nModel runs:\ntt_NN_OB_2023-06-14 23.RData: preliminary run only tracing phi and p\ntt_NN_OB_2023-06-15 08.RData: tracing phi and p and z [most recent]\n\n18.1.1 Retrieve model results\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  load('./models/cmrNN_OB/tt/runsOut/tt_NN_OB_mostRecent.RData')\n  out_NN_OB &lt;- d\n  \n  #Input data\n  eh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n18.1.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\n  out_NN_OB$modelCode\n\n\n{\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (t in 1:(T - 1)) {\n        phi[t] ~ dunif(0, 1)\n        gamma[1, 1, t] &lt;- phi[t]\n        gamma[1, 2, t] &lt;- 1 - phi[t]\n        gamma[2, 1, t] &lt;- 0\n        gamma[2, 2, t] &lt;- 1\n        p[t] ~ dunif(0, 1)\n        omega[1, 1, t] &lt;- 1 - p[t]\n        omega[1, 2, t] &lt;- p[t]\n        omega[2, 1, t] &lt;- 1\n        omega[2, 2, t] &lt;- 0\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in first[i]:(last[i] - 1)) {\n            z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j])\n            y[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, j])\n        }\n    }\n}\n\n\n\n\n18.1.3 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2000\n2\n5\n\n\n\n\n\n\n[1] “Run time = 33.374 mins”\n\n\n\n18.1.4 Plot traces\n\n\nCode\n  priors &lt;- runif(out_NN_OB$runData$nIter * out_NN_OB$runData$nChains, 0, 1)\n  MCMCtrace(object = out_NN_OB$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"phi\", \"p\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n18.1.5 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OB$mcmc, params = c(\"phi\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OB$mcmc, params = c(\"p\"))\n\n\n\n\n\nSummary values\n\n\nCode\n#|\n  (summary_tt &lt;- MCMCsummary(object = out_NN_OB$mcmc, params = c(\"phi\", \"p\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\"))\n\n\n       var  mean    sd  2.5%   50% 97.5% Rhat n.eff\n1   phi[1] 0.812 0.022 0.769 0.812 0.854 1.01   290\n2   phi[2] 0.810 0.025 0.762 0.811 0.859 1.00   218\n3   phi[3] 0.749 0.021 0.708 0.749 0.792 1.01   230\n4   phi[4] 0.647 0.021 0.606 0.647 0.689 1.00   361\n5   phi[5] 0.640 0.026 0.587 0.640 0.687 1.00   258\n6   phi[6] 0.691 0.035 0.629 0.690 0.764 1.05   206\n7   phi[7] 0.830 0.051 0.736 0.827 0.932 1.02   100\n8   phi[8] 0.330 0.032 0.271 0.330 0.393 1.00   312\n9   phi[9] 0.669 0.079 0.528 0.665 0.837 1.01   200\n10 phi[10] 0.560 0.090 0.401 0.556 0.754 1.08   188\n11 phi[11] 0.684 0.151 0.412 0.679 0.958 1.00   103\n12    p[1] 0.597 0.022 0.555 0.597 0.638 1.00   449\n13    p[2] 0.448 0.019 0.410 0.447 0.487 1.01   512\n14    p[3] 0.707 0.020 0.669 0.707 0.746 1.00   441\n15    p[4] 0.659 0.022 0.615 0.659 0.701 1.01   452\n16    p[5] 0.634 0.025 0.587 0.634 0.682 1.01   457\n17    p[6] 0.499 0.028 0.447 0.500 0.554 1.01   380\n18    p[7] 0.701 0.041 0.616 0.701 0.780 1.00   156\n19    p[8] 0.783 0.048 0.682 0.788 0.869 1.00   401\n20    p[9] 0.605 0.072 0.458 0.608 0.736 1.03   325\n21   p[10] 0.692 0.088 0.512 0.695 0.849 1.03   312\n22   p[11] 0.733 0.155 0.438 0.727 0.989 1.00   123\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt/modelCMR_tt_NN_OB_functionsToSource.R')\n  \n  summary_tt_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OB$mcmc, params = c(\"z\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  summary_tt_z &lt;- summary_tt_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      meanM1 = mean - 1,\n      pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong)\n\n\n\n\nCode\nojs_define(numTags_tt_OJS = dim(eh$tags)[1])\nojs_define(summary_tt_z_OJS = (summary_tt_z))\n\n\n\n\n18.1.6 Plot the probability of survival (z) for selected individuals\nSelect one or more individuals :\n\n\nCode\nviewof selectInd_tt = Inputs.select([...Array(numTags_tt_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummary_tt_z_OJS_T = transpose(summary_tt_z_OJS)\nsummary_tt_z_OJS_T_selected = summary_tt_z_OJS_T.filter((d) =&gt;\n  selectInd_tt.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated probability of survival and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last possible observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summary_tt_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summary_tt_z_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_tt_z_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_tt_z_OJS_T_selected, \n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_tt_z_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n18.1.7 Output model summary data for Xiaowei\n\n\nCode\n  write.csv(summary_tt, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt.csv')\n  \n  write.csv(summary_tt_z, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt_z.csv')\n  \n  # #Output input data to Xiaowei directory. Turn to TRUE to output.\n  # Output happens here: C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/modelsCMR_NN_OB_outputData.qmd\n  # if(FALSE) {\n  # \n  #   for (i in seq_along(eh)){\n  #     write.csv(eh[[i]], file = paste0('./models/cmrNN_OB/tt/dataOut/xiaowei/', \n  #                                      names(eh)[i], \n  #                                      \".csv\"), \n  #               row.names = F)\n  #   }\n  # }"
  },
  {
    "objectID": "modelsCMR_NN_OB.html#ss-model",
    "href": "modelsCMR_NN_OB.html#ss-model",
    "title": "18  River 4 (IS) - CJS model",
    "section": "18.2 [s,s] model",
    "text": "18.2 [s,s] model\nModel with phi and p for each season_isYOY (YOY = young-of-year, isYOY = juvenile or adult) combination. Season is hierarchical over time. There are no data for the isYOY = TRUE, season = 2 state.\nProbability of survival (phi) model structure:\nphi[yoy, s] &lt;- betaInt[yoy, s]\nProbability of capture (p) model structure:\np[yoy, s] &lt;- betaP[yoy, s]\nModel code is in ./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_makeFile.R\n\nModel runs:\n\n\n18.2.1 Retrieve Bayesian model results\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n#\n  load('./models/cmrNN_OB/ss/runsOut/ss_NN_OB_mostRecent.RData')\n  out_ss_NN_OB &lt;- d\n\n  #Input data\n  eh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n18.2.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file). isYOY = 1 signifies YOY = TRUE (juvenile), and isYOY = 2 signifies YOY = FALSE (adult)\n\n\nCode\nout_ss_NN_OB$modelCode\n\n\n{\n    {\n        delta[1] &lt;- 1\n        delta[2] &lt;- 0\n        for (i in 1:N) {\n            for (t in first[i]:(last[i] - 1)) {\n                gamma[1, 1, t, i] &lt;- phi[i, t]\n                gamma[1, 2, t, i] &lt;- 1 - phi[i, t]\n                gamma[2, 1, t, i] &lt;- 0\n                gamma[2, 2, t, i] &lt;- 1\n                omega[1, 1, t, i] &lt;- 1 - p[i, t]\n                omega[1, 2, t, i] &lt;- p[i, t]\n                omega[2, 1, t, i] &lt;- 1\n                omega[2, 2, t, i] &lt;- 0\n            }\n        }\n        for (i in 1:N) {\n            for (t in first[i]:(last[i] - 1)) {\n                logit(phi[i, t]) &lt;- phiInt[isYOY_DATA[i, t], \n                  seasons[t]]\n                logit(p[i, t]) &lt;- pInt[isYOY_DATA[i, t], seasons[t]]\n            }\n        }\n        for (yoy in 1:2) {\n            for (s in 1:4) {\n                phiInt[yoy, s] ~ T(dnorm(0, sd = 1/0.667), -3.5, \n                  3.5)\n                pInt[yoy, s] ~ dunif(0, 1)\n            }\n        }\n        for (i in 1:N) {\n            z[i, first[i]] ~ dcat(delta[1:2])\n            for (j in first[i]:(last[i] - 1)) {\n                z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j, i])\n                yDATA[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, \n                  j, i])\n            }\n        }\n    }\n}\n\n\n\n\n18.2.3 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2000\n2\n5\n\n\n\n\n\n\n[1] “Run time = 38.594 mins”\n\n\n\n18.2.4 Plot traces\n\n\nCode\n  priors &lt;- runif(out_ss_NN_OB$runData$nIter * out_ss_NN_OB$runData$nChains, 0, 1)\n  MCMCtrace(object = out_ss_NN_OB$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE,\n            params = c(\"phiInt\", \"pInt\"),\n            pdf = FALSE,\n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n18.2.5 Summary data\n\n\nCode\n#|\n  MCMCplot(object = out_ss_NN_OB$mcmc, params = c(\"phiInt\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_ss_NN_OB$mcmc, params = c(\"pInt\"))\n\n\n\n\n\nSummary values\n\n\nCode\n(summary_ss &lt;- tar_read(summary_ss_target))\n\n\n            var   mean    sd   2.5%   50% 97.5% Rhat n.eff   mean_01\n1  phiInt[1, 1]  1.356 0.134  1.111 1.347 1.660 1.00   298 0.7951088\n2  phiInt[2, 1]  1.204 0.197  0.851 1.191 1.645 1.01   282 0.7692356\n3  phiInt[1, 2] -0.008 1.409 -2.749 0.006 2.660 1.00  1200 0.4980000\n4  phiInt[2, 2]  0.299 0.073  0.162 0.297 0.441 1.05   327 0.5741980\n5  phiInt[1, 3]  1.458 0.127  1.218 1.454 1.713 1.01   368 0.8112266\n6  phiInt[2, 3]  0.586 0.098  0.412 0.583 0.795 1.05   363 0.6424468\n7  phiInt[1, 4]  1.291 0.116  1.067 1.288 1.507 1.04   424 0.7843164\n8  phiInt[2, 4]  0.737 0.133  0.497 0.730 1.005 1.01   298 0.6763395\n9    pInt[1, 1]  0.773 0.093  0.585 0.774 0.958 1.02   402 0.6841695\n10   pInt[2, 1]  0.929 0.060  0.785 0.945 0.997 1.04   591 0.7168724\n11   pInt[1, 2]  0.498 0.290  0.031 0.484 0.974 1.00  1200 0.6219892\n12   pInt[2, 2]  0.731 0.088  0.556 0.732 0.904 1.01   549 0.6750247\n13   pInt[1, 3]  0.405 0.080  0.254 0.406 0.562 1.00   636 0.5998884\n14   pInt[2, 3]  0.548 0.097  0.349 0.552 0.742 1.01   469 0.6336715\n15   pInt[1, 4]  0.022 0.019  0.001 0.017 0.073 1.00   489 0.5054998\n16   pInt[2, 4]  0.117 0.078  0.006 0.103 0.295 1.01   527 0.5292167\n\n\nCode\nsummary_ss_z0 &lt;- tar_read(summary_ss_z0_target)\nsummary_ss_phi0 &lt;- tar_read(summary_ss_phi0_target)\nsummary_ss_p0 &lt;- tar_read(summary_ss_p0_target)\n\n  # (summary_ss &lt;- MCMCsummary(object = out_ss_NN_OB$mcmc, params = c(\"phiInt\", \"pInt\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt; \n  #    mutate(mean_01 = exp(mean)/(1+exp(mean))))\n  # \n  # # To get the mMCMCSummaryRMNA function which I adapted to deal with NAs\n  # source('./models/cmrNN_OB/ss/modelCMR_ss_NN_OB_functionsToSource.R')\n  # \n  # summary_ss_z0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"z\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n  # \n  # # 'phi' has each individual, 'phiInt' does not\n  # summary_ss_phi0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"phi\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n  # \n  # summary_ss_p0 &lt;- MCMCSummaryRMNA(object = out_ss_NN_OB$mcmc, params = c(\"p\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt;\n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt;\n  #   dplyr::select(-c(t0, ind0))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- tar_read(ehLong_target)\n  firstLong &lt;-tar_read(firstLong_target)\n\n  lastLong &lt;- tar_read(lastLong_target)\n\n  cohortLong &lt;- tar_read(cohortLong_target)\n  #### z\n  summary_ss_z &lt;- tar_read(summary_ss_z_target)\n  \n  ##### p\n  summary_ss_p &lt;- tar_read(summary_ss_p_target)\n  \n  #### phi\n  summary_ss_phi &lt;- tar_read(summary_ss_phi_target)\n\n\n  # ehLong &lt;-\n  #   eh$eh |&gt;\n  #   as.data.frame() |&gt;\n  #   rownames_to_column(\"ind0\") |&gt;\n  #   pivot_longer(starts_with(\"ais\")) |&gt;\n  #   mutate(\n  #     t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n  #     enc = value,\n  #     ind = as.numeric(ind0)\n  #   ) |&gt;\n  #   dplyr::select(-c(name, value, ind0))\n  # \n  # firstLong &lt;- eh$first |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind)) |&gt;\n  #   rename(first = value)\n  # \n  # lastLong &lt;- eh$last |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind)) |&gt;\n  #   rename(last = value)\n  # \n  # cohortLong &lt;- eh$cohort |&gt;\n  #   as_tibble() |&gt;\n  #   rownames_to_column(\"ind\") |&gt;\n  #   mutate(ind = as.numeric(ind))\n  # \n  # #### z\n  # summary_ss_z &lt;- summary_ss_z0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.8, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n  # \n  # ##### p\n  # summary_ss_p &lt;- summary_ss_p0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.2, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n  # \n  # #### phi\n  # summary_ss_phi &lt;- summary_ss_phi0 |&gt;\n  #   left_join(ehLong) |&gt;\n  #   mutate(\n  #     meanM1 = mean - 1,\n  #     pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.2, 0)\n  #   ) |&gt;\n  #   left_join(firstLong) |&gt;\n  #   left_join(lastLong) |&gt;\n  #   left_join(cohortLong)\n\n\n\n\n18.2.6 Retrieve ML model results\nML model result are from Xioawei and Erhu at PITT\n\n\nCode\nif(!exists(\"np\")) {\n  np &lt;-import(\"numpy\")\n}\n\nxP0 &lt;- np$load(\"./data/in/fromXioawei/p_est.npy\")\n\nxP &lt;- xP0 |&gt; \n  as.data.frame() |&gt; \n  rowid_to_column(\"ind\") |&gt; \n  pivot_longer(cols = starts_with(\"V\")) |&gt; \n  separate_wider_delim(name, delim = \"V\", names = c(\"d\", \"t\")) |&gt; \n  dplyr::select(-d) |&gt; \n  mutate(t = as.numeric(t)) |&gt; \n  rename(xP = value)\n\n\nxPhi0 &lt;- np$load(\"./data/in/fromXioawei/phi_est.npy\")\n\nxPhi &lt;- xPhi0 |&gt; \n  as.data.frame() |&gt; \n  rowid_to_column(\"ind\") |&gt; \n  pivot_longer(cols = starts_with(\"V\")) |&gt; \n  separate_wider_delim(name, delim = \"V\", names = c(\"d\", \"t\")) |&gt; \n  dplyr::select(-d) |&gt; \n  mutate(t = as.numeric(t))|&gt; \n  rename(xPhi = value)\n\n\nPlot ML model results\n\n\nCode\nggplot(xP, aes(t, xP)) +\n  geom_point(alpha = 0.01)\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi)) +\n  geom_point(alpha = 0.01)\n\n\n\n\n\nPlot ML model results - jittered\n\n\nCode\nggplot(xP, aes(t, xP)) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi)) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\nGroup by individual\n\n\nCode\nggplot(xP, aes(t, xP, group = ind)) +\n  geom_line()\n\n\n\n\n\nCode\nggplot(xPhi, aes(t, xPhi, group = ind)) +\n  geom_line()\n\n\n\n\n\n\n\n18.2.7 Summarize ML model results\n\n\nCode\nsummary_xPhi &lt;- xPhi |&gt; \n  summarize(\n    meanPhi = mean(xPhi),\n    sdPhi = sd(xPhi)\n  )\n\nsummary_xP &lt;- xP |&gt; \n  summarize(\n    meanP = mean(xP),\n    sdP = sd(xP)\n  )\n\n\n\n\n18.2.8 Merge ML model results with Bayesian results\n\n\nCode\nsummary_ss_phi_x &lt;- summary_ss_phi |&gt; \n  left_join(xPhi)\n\nsummary_ss_p_x &lt;- summary_ss_p |&gt; \n  left_join(xP)\n\n\nPlot Bayes and ML model results for individual fish\n\n\nCode\nggplot(summary_ss_phi_x, aes(mean, xPhi, color = factor(t))) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\nCode\nggplot(summary_ss_p_x, aes(mean, xP, color = factor(t))) +\n  geom_jitter(alpha = 0.01)\n\n\n\n\n\nObservable interactivity\n\n\nCode\nojs_define(numTags_ss_OJS = dim(eh$tags)[1])\nojs_define(summary_ss_z_OJS = (summary_ss_z))\n\nojs_define(summary_ss_phi_x_OJS = (summary_ss_phi_x))\nojs_define(summary_ss_p_x_OJS = (summary_ss_p_x))\n\n\n\n\nCode\nsummary_ss_phi_x_OJS\n\n\n\n\n\n\n\n\n\n18.2.9 Plot the probabilities for selected individuals\nProbabilities are: alive (z), survival (phi), and detection (p)\n\n\nCode\nsummary_ss_z_OJS_T_selected\n\n\n\n\n\n\n\n\n\nCode\nsummary_ss_phi_x_OJS_T_selected\n\n\n\n\n\n\n\n\n\nCode\nsummary_ss_p_x_OJS_T_selected\n\n\n\n\n\n\n\n\n\n\n\nCode\nviewof selectInd_ss = Inputs.select([...Array(numTags_ss_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummary_ss_z_OJS_T = transpose(summary_ss_z_OJS)\nsummary_ss_z_OJS_T_selected = summary_ss_z_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\nsummary_ss_phi_x_OJS_T = transpose(summary_ss_phi_x_OJS)\nsummary_ss_phi_x_OJS_T_selected = summary_ss_phi_x_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\nsummary_ss_p_x_OJS_T = transpose(summary_ss_p_x_OJS)\nsummary_ss_p_x_OJS_T_selected = summary_ss_p_x_OJS_T.filter((d) =&gt;\n  selectInd_ss.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated probability of being alive and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last possible observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of alive\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summary_ss_z_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summary_ss_z_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_z_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_z_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_z_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n18.2.10 Compare survival with ML survival estimates\nML estimates are in orange\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\"\n    }),\n    Plot.line(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    \n    Plot.dot(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xPhi\",\n      stroke: \"orange\"\n    }),\n    Plot.line(summary_ss_phi_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xPhi\",\n      stroke: \"orange\"\n    }),\n    \n    Plot.ruleX(summary_ss_phi_x_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_phi_x_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_phi_x_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_phi_x_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n18.2.11 Compare probability of capture with ML survival estimates\nML estimates are in orange\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of capture\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\"\n    }),\n    Plot.line(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean\"\n    }),\n    \n    Plot.dot(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xP\",\n      stroke: \"orange\"\n    }),\n    Plot.line(summary_ss_p_x_OJS_T_selected, {\n      x: \"t\",\n      y: \"xP\",\n      stroke: \"orange\"\n    }),\n    \n    Plot.ruleX(summary_ss_p_x_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summary_ss_p_x_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      stroke: \"red\"\n    })\n    ,\n    Plot.text(summary_ss_p_x_OJS_T_selected,\n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summary_ss_p_x_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n18.2.12 Output model summary data for ML model\n\n\nCode\n  write.csv(summary_ss, './models/cmrNN_OB/ss/dataOut/xiaowei/summary_ss.csv')\n\n  write.csv(summary_ss_z, './models/cmrNN_OB/ss/dataOut/xiaowei/summary_ss_z.csv')\n\n  # #Output input data to Xiaowei directory. Turn to TRUE to output.\n  # Output happens here: C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/modelsCMR_NN_OB_outputData.qmd\n  # if(FALSE) {\n  #\n  #   for (i in seq_along(eh)){\n  #     write.csv(eh[[i]], file = paste0('./models/cmrNN_OB/tt/dataOut/xiaowei/',\n  #                                      names(eh)[i],\n  #                                      \".csv\"),\n  #               row.names = F)\n  #   }\n  # }"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#modelnum-1-git-model",
    "href": "modelsCMR_Growth_NN_OB.html#modelnum-1-git-model",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.1 modelNum 1: g(i,t) model",
    "text": "19.1 modelNum 1: g(i,t) model\nGrowth rate (gr) model structure:\ngr(t,i) &lt;- grInt(t,i)\nModel code is in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_growth_NN_OB.R and saved as modelCMR_tt_growth_NN_OB_target\nModel runs:"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#retrieve-model-results",
    "href": "modelsCMR_Growth_NN_OB.html#retrieve-model-results",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.2 Retrieve model results",
    "text": "19.2 Retrieve model results\n\n\nCode\nlibrary(targets)\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \nmodelNum = 1 # growth only\ndummy=2\n\n#load('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_mostRecent.RData')\nload(paste0('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_model', modelNum, '_mostRecent.RData'))\nout_NN_OBmod1 &lt;- d\nrm(d)\n\n#Input data\neh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n19.2.1 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\nout_NN_OBmod1$modelCode\n\n\n{\n    for (i in 1:N) {\n        weight[i, first[i]] ~ dnorm(meanWeight_AIS[first[i]], \n            sd = 2)\n        weightDATA[i, first[i]] ~ dnorm(weight[i, first[i]], \n            sd = weightSD)\n        for (t in (first[i]):(last[i] - 1)) {\n            weight[i, t + 1] &lt;- weight[i, t] + gr[i, t] * sampleIntervalDATA[i, \n                t]/90\n            weightDATA[i, t + 1] ~ dnorm(weight[i, t + 1], sd = weightSD)\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gr[i, t] ~ dnorm(grIntT[t], sd = 0.5)\n        }\n    }\n    for (t in 1:(T - 1)) {\n        grIntT[t] ~ dnorm(0, sd = 1000)\n    }\n}\n\n\n\n\n19.2.2 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2500\n2\n5\n\n\n\n\n\n\n[1] “Run time = 37.263 mins”\n\n\n\n19.2.3 Plot traces\n\n\nCode\n  priors &lt;- rnorm(out_NN_OBmod1$runData$nIter * out_NN_OBmod1$runData$nChains, 0, 1000)\n  MCMCtrace(object = out_NN_OBmod1$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"grIntT\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.2.4 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OBmod1$mcmc, params = c(\"grIntT\"))\n\n\n\n\n\nSummary values\n\n\nCode\n#|\n  (summaryMod1_tt_growth &lt;- MCMCsummary(object = out_NN_OBmod1$mcmc, params = c(\"grIntT\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\"))\n\n\n          var   mean    sd   2.5%    50%  97.5% Rhat n.eff\n1   grIntT[1]  1.171 0.026  1.119  1.172  1.218 1.00   158\n2   grIntT[2]  1.124 0.023  1.079  1.124  1.168 1.01    95\n3   grIntT[3]  9.274 0.029  9.220  9.273  9.336 1.00    93\n4   grIntT[4]  3.325 0.023  3.278  3.325  3.369 1.01   150\n5   grIntT[5]  0.592 0.031  0.533  0.590  0.657 1.07   132\n6   grIntT[6]  1.549 0.032  1.485  1.551  1.610 1.00   129\n7   grIntT[7] 17.131 0.045 17.050 17.130 17.216 1.02    71\n8   grIntT[8]  7.416 0.056  7.313  7.417  7.531 1.04    96\n9   grIntT[9] -1.551 0.094 -1.717 -1.558 -1.356 1.00    35\n10 grIntT[10]  4.074 0.095  3.875  4.078  4.254 1.03    32\n11 grIntT[11] 22.904 0.115 22.682 22.903 23.116 1.34    34\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R')\n  \n  #summaryMod1_tt_growth_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OBmod1$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n  summaryMod1_tt_growth_zGR &lt;- MCMCSummaryRMNA(object = out_NN_OBmod1$mcmc, params = c(\"gr\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod1_tt_growth_zW &lt;- MCMCSummaryRMNA(object = out_NN_OBmod1$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod1_tt_growth_z0 &lt;- summaryMod1_tt_growth_zW |&gt; \n    left_join(summaryMod1_tt_growth_zGR, by = c(\"ind\", \"t\"), suffix = c(\"_weight\", \"_gr\"))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n\n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  weightLong &lt;- \n    eh$weight |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      weightDATA = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  summaryMod1_tt_growth_z &lt;- summaryMod1_tt_growth_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      # meanM1 = mean - 1,\n      # pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong) |&gt; \n    left_join(weightLong) |&gt; \n    mutate(\n      resid = weightDATA - mean_weight\n    ) \n\n\n\n\nCode\n  resids &lt;- summaryMod1_tt_growth_z |&gt; \n    group_by(ind) |&gt; \n    summarize(\n      meanResid = mean(abs(resid), na.rm = TRUE),\n      n = n()\n    ) |&gt; \n    ungroup()\n\n  summaryMod1_tt_growth_zR &lt;- \n    summaryMod1_tt_growth_z |&gt; \n    left_join(resids)\n\n\n\n\nCode\n#  write.csv(summaryMod1_tt_growth_zR, './data/outForObservable/summaryMod1_tt_growth_zR.csv')\n\n\n\n\nCode\nojs_define(numTags_OJS = dim(eh$tags)[1])\nojs_define(summaryMod1_tt_growth_zR_OJS = (summaryMod1_tt_growth_zR))\n\n\n\n\n19.2.5 Plot predicted and observed masses for selected individuals\nSelect one or more individuals:\n\n\nCode\nviewof selectInd = Inputs.select([...Array(numTags_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummaryMod1_tt_growth_zR_OJS_T = transpose(summaryMod1_tt_growth_zR_OJS)\nsummaryMod1_tt_growth_zR_OJS_T_selected = summaryMod1_tt_growth_zR_OJS_T.filter((d) =&gt;\n  selectInd.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated mass and orange dots are observed masses. The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort. Green dots are estimated growth rates.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Body mass (mg)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    Plot.line(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    Plot.dot(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_gr\",\n      fill: \"green\"\n    }),\n    Plot.dot(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"weightDATA\",\n      fill: \"orange\"\n    }),\n    Plot.ruleX(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 3,\n      stroke: \"green\"\n    }),\n    Plot.ruleX(summaryMod1_tt_growth_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 3,\n      stroke: \"red\"\n    }),\n    Plot.text(summaryMod1_tt_growth_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 60,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Cohort = \" + d.cohort\n      })\n    ),\n    Plot.text(summaryMod1_tt_growth_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 56,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Residual = \" + d.meanResid\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod1_tt_growth_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#modelnum-2-phiit-git-pit-model",
    "href": "modelsCMR_Growth_NN_OB.html#modelnum-2-phiit-git-pit-model",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.3 modelNum 2: phi(i,t) + g(i,t), p(i,t) model",
    "text": "19.3 modelNum 2: phi(i,t) + g(i,t), p(i,t) model\nModel with phi and p for each age-in-samples (t = column in the encounter history file) and individual (i)\nProbability of survival (phi) model structure:\nphi(t,i) &lt;- phiInt(t,i)\nProbability of capture (p) model structure:\np(t,i) &lt;- pInt(t,i)\nGrowth rate (gr) model structure:\ngr(t,i) &lt;- grInt(t,i)\nSurvival/growth rate interaction:\nAdditive\nModel code is in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_growth_NN_OB.R and saved as modelCMR_tt_growth_NN_OB_target\nModel runs:\n\n\n19.3.1 Retrieve model results\n\n\nCode\nlibrary(targets)\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \nmodelNum = 2 # phi + growth\n\n#load('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_mostRecent.RData')\nload(paste0('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_model', modelNum, '_mostRecent.RData'))\nout_NN_OBmod2 &lt;- d\nrm(d)\n\n#Input data\neh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n19.3.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\nout_NN_OBmod2$modelCode\n\n\n{\n    for (i in 1:N) {\n        weight[i, first[i]] ~ dnorm(meanWeight_AIS[first[i]], \n            sd = 2)\n        weightDATA[i, first[i]] ~ dnorm(weight[i, first[i]], \n            sd = weightSD)\n        for (t in (first[i]):(last[i] - 1)) {\n            weight[i, t + 1] &lt;- weight[i, t] + gr[i, t] * sampleIntervalDATA[i, \n                t]/90\n            weightDATA[i, t + 1] ~ dnorm(weight[i, t + 1], sd = weightSD)\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gr[i, t] ~ dnorm(grIntT[t], sd = 0.5)\n        }\n    }\n    for (t in 1:(T - 1)) {\n        grIntT[t] ~ dnorm(0, sd = 1000)\n    }\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gamma[1, 1, t, i] &lt;- phi[i, t]\n            gamma[1, 2, t, i] &lt;- 1 - phi[i, t]\n            gamma[2, 1, t, i] &lt;- 0\n            gamma[2, 2, t, i] &lt;- 1\n        }\n    }\n    for (t in 1:(T - 1)) {\n        p[t] ~ dunif(0, 1)\n        omega[1, 1, t] &lt;- 1 - p[t]\n        omega[1, 2, t] &lt;- p[t]\n        omega[2, 1, t] &lt;- 1\n        omega[2, 2, t] &lt;- 0\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            logit(phi[i, t]) &lt;- phiInt[i, t]\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            phiInt[i, t] ~ dnorm(phiIntT[t], sd = 2)\n        }\n    }\n    for (t in 1:(T - 1)) {\n        phiIntT[t] ~ T(dnorm(0, sd = 1.5), -3.5, 3.5)\n        phiIntTOut[t] &lt;- ilogit(phiIntT[t])\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in first[i]:(last[i] - 1)) {\n            z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j, i])\n            yDATA[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, j])\n        }\n    }\n}\n\n\n\n\n19.3.3 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n7500\n5000\n2\n5\n\n\n\n\n\n\n[1] “Run time = 2.231 hours”\n\n\n\n19.3.4 Plot traces\n\n\nCode\n  priors &lt;- rnorm(out_NN_OBmod2$runData$nIter * out_NN_OBmod2$runData$nChains, 0, 1000)\n  MCMCtrace(object = out_NN_OBmod2$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"phiIntTOut\", \"grIntT\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.3.5 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OBmod2$mcmc, params = c(\"phiIntTOut\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod2$mcmc, params = c(\"p\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod2$mcmc, params = c(\"grIntT\"))\n\n\n\n\n\nSummary values\n\n\nCode\n#|\n(summaryMod2_tt_growth &lt;- MCMCsummary(object = out_NN_OBmod2$mcmc, params = c(\"phiIntTOut\", \"p\", \"grIntT\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\"))\n\n\n              var   mean    sd   2.5%    50%  97.5% Rhat n.eff\n1   phiIntTOut[1]  0.913 0.017  0.878  0.914  0.942 1.03    42\n2   phiIntTOut[2]  0.903 0.017  0.867  0.905  0.930 1.12    55\n3   phiIntTOut[3]  0.861 0.023  0.813  0.862  0.902 1.69    33\n4   phiIntTOut[4]  0.729 0.034  0.655  0.731  0.799 2.26    39\n5   phiIntTOut[5]  0.714 0.037  0.646  0.713  0.791 1.86    37\n6   phiIntTOut[6]  0.791 0.036  0.703  0.797  0.845 1.10    32\n7   phiIntTOut[7]  0.884 0.028  0.801  0.886  0.933 1.07    18\n8   phiIntTOut[8]  0.258 0.040  0.177  0.260  0.330 1.03    25\n9   phiIntTOut[9]  0.708 0.074  0.556  0.709  0.838 2.48    14\n10 phiIntTOut[10]  0.675 0.086  0.484  0.686  0.850 2.59    13\n11 phiIntTOut[11]  0.649 0.116  0.485  0.617  0.888 1.03    20\n12           p[1]  0.595 0.021  0.557  0.595  0.637 1.01   282\n13           p[2]  0.451 0.018  0.417  0.451  0.486 1.04   346\n14           p[3]  0.706 0.021  0.668  0.706  0.747 1.30   126\n15           p[4]  0.654 0.022  0.609  0.654  0.696 1.27   127\n16           p[5]  0.633 0.025  0.584  0.633  0.680 1.05   220\n17           p[6]  0.494 0.027  0.442  0.494  0.545 1.00   452\n18           p[7]  0.730 0.035  0.663  0.729  0.798 1.01   113\n19           p[8]  0.781 0.050  0.675  0.782  0.878 1.04   289\n20           p[9]  0.634 0.062  0.513  0.637  0.749 1.31   439\n21          p[10]  0.673 0.081  0.511  0.677  0.822 1.03   245\n22          p[11]  0.802 0.125  0.552  0.815  0.987 1.07   102\n23      grIntT[1]  1.172 0.028  1.117  1.171  1.229 1.06   119\n24      grIntT[2]  1.120 0.023  1.076  1.119  1.168 1.01   106\n25      grIntT[3]  9.281 0.029  9.222  9.281  9.337 1.20    92\n26      grIntT[4]  3.324 0.022  3.281  3.324  3.366 1.00   281\n27      grIntT[5]  0.583 0.030  0.525  0.583  0.638 1.00   117\n28      grIntT[6]  1.558 0.032  1.495  1.557  1.620 1.09   139\n29      grIntT[7] 17.114 0.041 17.035 17.113 17.200 1.10   102\n30      grIntT[8]  7.416 0.055  7.306  7.417  7.528 1.02    81\n31      grIntT[9] -1.559 0.083 -1.719 -1.559 -1.402 1.00    45\n32     grIntT[10]  4.095 0.091  3.917  4.098  4.284 1.10    43\n33     grIntT[11] 22.873 0.116 22.647 22.863 23.117 1.45    30\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R')\n  \n  #summaryMod2_tt_growth_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OBmod2$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n  summaryMod2_tt_w &lt;- MCMCSummaryRMNA(object = out_NN_OBmod2$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod2_tt_z &lt;- MCMCSummaryRMNA(object = out_NN_OBmod2$mcmc, params = c(\"z\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod2_tt_z0 &lt;- summaryMod2_tt_z |&gt; \n    left_join(summaryMod2_tt_w, by = c(\"ind\", \"t\"), suffix = c(\"_z\", \"_weight\"))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  weightLong &lt;- \n    eh$weight |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      weightDATA = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  summaryMod2_tt_z &lt;- summaryMod2_tt_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      meanM1 = mean_z - 1,\n      pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong) |&gt; \n    left_join(weightLong) |&gt; \n    mutate(\n      resid = weightDATA - mean_weight\n    ) \n    \n  # summaryMod2_tt_z &lt;- summaryMod2_tt_z0 |&gt; \n  #   left_join(ehLong) |&gt; \n  #   mutate(\n  #     # meanM1 = mean - 1,\n  #     # pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.8, 0)\n  #   ) |&gt; \n  #   left_join(firstLong) |&gt; \n  #   left_join(lastLong) |&gt; \n  #   left_join(cohortLong) \n\n\n\n\nCode\n  resids_mod2 &lt;- summaryMod2_tt_z |&gt; \n    group_by(ind) |&gt; \n    summarize(\n      meanResid = mean(abs(resid), na.rm = TRUE),\n      n = n()\n    ) |&gt; \n    ungroup()\n\n  summaryMod2_tt_zR &lt;- \n    summaryMod2_tt_z |&gt; \n    left_join(resids_mod2)\n\n\n\n\nCode\nojs_define(numTags_OJS_mod2 = dim(eh$tags)[1])\nojs_define(summaryMod2_tt_zR_OJS = (summaryMod2_tt_zR))\n#ojs_define(summary_tt_z_OJS = (summary_tt_z_mod2))\n\n\n\n\n19.3.6 Plot predicted and observed masses for selected individuals\nSelect one or more individuals:\n\n\nCode\nviewof selectInd_mod2 = Inputs.select([...Array(numTags_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummaryMod2_tt_zR_OJS_T = transpose(summaryMod2_tt_zR_OJS)\nsummaryMod2_tt_zR_OJS_T_selected = summaryMod2_tt_zR_OJS_T.filter((d) =&gt;\n  selectInd_mod2.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated mass and orange dots are observed masses. The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Body mass (mg)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    Plot.line(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    &lt;!-- Plot.dot(summaryMod2_tt_zR_OJS_T_selected, { --&gt;\n    &lt;!--   x: \"t\", --&gt;\n    &lt;!--   y: \"mean_gr\", --&gt;\n    &lt;!--   fill: \"green\" --&gt;\n    &lt;!-- }), --&gt;\n    Plot.dot(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"weightDATA\",\n      fill: \"orange\"\n    }),\n    Plot.ruleX(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 3,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 3,\n      \"stroke\": \"red\"\n    }),\n    Plot.text(summaryMod2_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 60,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Cohort = \" + d.cohort\n      })\n    ),\n    Plot.text(summaryMod2_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 56,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Residual = \" + d.meanResid\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod2_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.3.7 Plot survival\nBlack dots/line is estimated probability of survival and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod2_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      \"stroke\": \"red\"\n    })\n    ,\n    Plot.text(summaryMod2_tt_zR_OJS_T_selected, \n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod2_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#modelnum-3-phiit-git-pit-model",
    "href": "modelsCMR_Growth_NN_OB.html#modelnum-3-phiit-git-pit-model",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.4 modelNum 3: phi(i,t) * g(i,t), p(i,t) model",
    "text": "19.4 modelNum 3: phi(i,t) * g(i,t), p(i,t) model\nModel with phi and p for each age-in-samples (t = column in the encounter history file) and individual (i)\nProbability of survival (phi) model structure:\nphi(t,i) &lt;- phiInt(t,i) + weight(t,i) + weight(t,i)^2\nProbability of capture (p) model structure:\np(t,i) &lt;- pInt(t,i)\nGrowth rate (gr) model structure:\ngr(t,i) &lt;- grInt(t,i)\nSurvival/growth rate interaction:\nMultiplicative\nModel code is in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_growth_NN_OB.R and saved as modelCMR_tt_growth_NN_OB_target\nModel runs:\n\n\n19.4.1 Retrieve model results\n\n\nCode\nlibrary(targets)\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \nmodelNum = 3 # phi + growth\n\n#load('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_mostRecent.RData')\nload(paste0('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_model', modelNum, '_mostRecent.RData'))\nout_NN_OBmod3 &lt;- d\nrm(d)\n\n#Input data\neh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n19.4.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\nout_NN_OBmod3$modelCode\n\n\n{\n    for (i in 1:N) {\n        weight[i, first[i]] ~ dnorm(meanWeight_AISstd[first[i]], \n            sd = 2)\n        weightDATAstd[i, first[i]] ~ dnorm(weight[i, first[i]], \n            sd = weightSD)\n        for (t in (first[i]):(last[i] - 1)) {\n            weight[i, t + 1] &lt;- weight[i, t] + gr[i, t] * sampleIntervalDATA[i, \n                t]/90\n            weightDATAstd[i, t + 1] ~ dnorm(weight[i, t + 1], \n                sd = weightSD)\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gr[i, t] ~ dnorm(grIntT[t], sd = 0.5)\n        }\n    }\n    for (t in 1:(T - 1)) {\n        grIntT[t] ~ dnorm(0, sd = 1000)\n    }\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gamma[1, 1, t, i] &lt;- phi[i, t]\n            gamma[1, 2, t, i] &lt;- 1 - phi[i, t]\n            gamma[2, 1, t, i] &lt;- 0\n            gamma[2, 2, t, i] &lt;- 1\n        }\n    }\n    for (t in 1:(T - 1)) {\n        p[t] ~ dunif(0, 1)\n        omega[1, 1, t] &lt;- 1 - p[t]\n        omega[1, 2, t] &lt;- p[t]\n        omega[2, 1, t] &lt;- 1\n        omega[2, 2, t] &lt;- 0\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            logit(phi[i, t]) &lt;- phiInt[i, t] + phiBeta[1, i, \n                t] * weight[i, t] + phiBeta[2, i, t] * weight[i, \n                t] * weight[i, t]\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            phiInt[i, t] ~ dnorm(phiIntT[t], sd = 2)\n            for (b in 1:2) {\n                phiBeta[b, i, t] ~ dnorm(phiBetaT[b, t], sd = 1/0.667)\n            }\n        }\n    }\n    for (t in 1:(T - 1)) {\n        phiIntT[t] ~ T(dnorm(0, sd = 0.667), -3.5, 3.5)\n        phiIntTOut[t] &lt;- ilogit(phiIntT[t])\n        phiBetaT[1, t] ~ dnorm(0, sd = 1/0.667)\n        phiBetaT[2, t] ~ dnorm(0, sd = 1/0.667)\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in first[i]:(last[i] - 1)) {\n            z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j, i])\n            yDATA[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, j])\n        }\n    }\n}\n\n\n\n\n19.4.3 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n15000\n10000\n2\n5\n\n\n\n\n\n\n[1] “Run time = 6.035 hours”\n\n\n\n19.4.4 Plot traces\n\n\nCode\n  priors &lt;- rnorm(out_NN_OBmod3$runData$nIter * out_NN_OBmod3$runData$nChains, 0, 1000)\n  MCMCtrace(object = out_NN_OBmod3$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"phiIntTOut\", \"grIntT\"),\n            pdf = FALSE, \n            priors = priors)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.4.5 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OBmod3$mcmc, params = c(\"phiIntTOut\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod3$mcmc, params = c(\"phiBetaT\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod3$mcmc, params = c(\"p\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod3$mcmc, params = c(\"grIntT\"))\n\n\n\n\n\nSummary values\n\n\nCode\n#|\n(summaryMod3_tt_growth &lt;- MCMCsummary(object = out_NN_OBmod3$mcmc, params = c(\"phiIntTOut\", \"p\", \"grIntT\", \"phiBetaT\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\"))\n\n\n               var   mean    sd   2.5%    50%  97.5% Rhat n.eff\n1    phiIntTOut[1]  0.809 0.063  0.674  0.820  0.906 1.00    20\n2    phiIntTOut[2]  0.882 0.047  0.788  0.887  0.951 4.70    30\n3    phiIntTOut[3]  0.795 0.046  0.696  0.797  0.875 2.13    26\n4    phiIntTOut[4]  0.748 0.031  0.680  0.749  0.802 1.40    82\n5    phiIntTOut[5]  0.755 0.032  0.686  0.755  0.813 1.06    74\n6    phiIntTOut[6]  0.809 0.038  0.735  0.809  0.876 1.22    33\n7    phiIntTOut[7]  0.867 0.035  0.781  0.871  0.918 1.19    31\n8    phiIntTOut[8]  0.470 0.092  0.293  0.463  0.635 2.15    22\n9    phiIntTOut[9]  0.592 0.095  0.394  0.590  0.794 1.15    16\n10  phiIntTOut[10]  0.596 0.112  0.338  0.599  0.813 1.58    16\n11  phiIntTOut[11]  0.647 0.113  0.421  0.669  0.823 1.24    10\n12            p[1]  0.590 0.021  0.549  0.590  0.630 1.04   177\n13            p[2]  0.409 0.018  0.374  0.408  0.446 1.05   104\n14            p[3]  0.704 0.019  0.665  0.704  0.741 1.01   306\n15            p[4]  0.655 0.021  0.610  0.655  0.696 1.01   323\n16            p[5]  0.635 0.024  0.587  0.636  0.684 1.00   311\n17            p[6]  0.495 0.028  0.440  0.495  0.549 1.01   399\n18            p[7]  0.746 0.033  0.682  0.745  0.808 1.06   318\n19            p[8]  0.774 0.049  0.672  0.775  0.863 1.16   206\n20            p[9]  0.596 0.067  0.459  0.597  0.725 1.24    79\n21           p[10]  0.657 0.103  0.446  0.668  0.834 1.22    30\n22           p[11]  0.812 0.133  0.531  0.832  0.993 1.05    24\n23       grIntT[1]  0.122 0.027  0.064  0.122  0.171 1.01   292\n24       grIntT[2]  0.128 0.024  0.081  0.128  0.178 1.17   175\n25       grIntT[3]  0.899 0.029  0.842  0.899  0.956 1.35   166\n26       grIntT[4]  0.327 0.024  0.282  0.325  0.377 1.12   226\n27       grIntT[5]  0.075 0.033  0.011  0.075  0.140 1.03   140\n28       grIntT[6]  0.170 0.033  0.101  0.171  0.234 1.04   170\n29       grIntT[7]  1.642 0.044  1.550  1.643  1.724 1.02   117\n30       grIntT[8]  0.722 0.053  0.616  0.719  0.826 1.02    80\n31       grIntT[9] -0.164 0.091 -0.360 -0.165  0.014 1.08    28\n32      grIntT[10]  0.435 0.104  0.224  0.443  0.655 1.08    25\n33      grIntT[11]  2.150 0.119  1.924  2.152  2.385 1.13    41\n34  phiBetaT[1, 1] -2.174 0.657 -3.506 -2.077 -1.092 1.13    12\n35  phiBetaT[2, 1] -0.324 0.658 -1.536 -0.377  1.361 1.18    13\n36  phiBetaT[1, 2] -1.027 0.970 -2.812 -1.071  0.732 5.66     7\n37  phiBetaT[2, 2]  1.928 0.568  0.778  1.887  3.083 1.15    11\n38  phiBetaT[1, 3] -3.166 0.528 -3.974 -3.276 -2.059 3.41    12\n39  phiBetaT[2, 3] -2.785 0.549 -3.711 -2.847 -1.520 1.14    11\n40  phiBetaT[1, 4] -0.430 0.429 -1.190 -0.465  0.477 1.80    15\n41  phiBetaT[2, 4] -0.295 0.488 -1.244 -0.340  0.735 3.06    16\n42  phiBetaT[1, 5] -0.824 0.337 -1.427 -0.849 -0.151 1.60    19\n43  phiBetaT[2, 5]  0.176 0.349 -0.459  0.189  0.863 1.52    19\n44  phiBetaT[1, 6] -1.562 0.442 -2.438 -1.608 -0.550 1.98    13\n45  phiBetaT[2, 6]  1.016 0.417  0.263  1.035  1.728 3.74    26\n46  phiBetaT[1, 7] -0.577 0.832 -2.419 -0.659  0.896 2.99     6\n47  phiBetaT[2, 7]  0.856 0.583 -0.120  0.905  1.966 2.63    11\n48  phiBetaT[1, 8] -0.664 0.670 -1.946 -0.718  0.485 5.57    10\n49  phiBetaT[2, 8] -0.421 0.356 -1.007 -0.438  0.276 3.74    21\n50  phiBetaT[1, 9]  1.117 0.890 -0.927  1.363  2.444 1.00     6\n51  phiBetaT[2, 9]  0.277 0.547 -0.740  0.228  1.338 1.63    11\n52 phiBetaT[1, 10]  0.475 0.519 -0.451  0.476  1.442 1.30    12\n53 phiBetaT[2, 10]  0.052 0.542 -1.060  0.074  1.002 1.77     9\n54 phiBetaT[1, 11]  0.583 0.730 -0.578  0.474  1.929 1.91     6\n55 phiBetaT[2, 11] -0.083 0.480 -1.066 -0.032  0.828 1.44    13\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R')\n  \n  #summaryMod3_tt_growth_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OBmod3$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n  summaryMod3_tt_w &lt;- MCMCSummaryRMNA(object = out_NN_OBmod3$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod3_tt_z &lt;- MCMCSummaryRMNA(object = out_NN_OBmod3$mcmc, params = c(\"z\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod3_tt_PhiBetaT &lt;- MCMCSummaryRMNA(object = out_NN_OBmod3$mcmc, params = c(\"phiBetaT\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod3_tt_z0 &lt;- summaryMod3_tt_z |&gt; \n    left_join(summaryMod3_tt_w, by = c(\"ind\", \"t\"), suffix = c(\"_z\", \"_weight\"))\n\n\n\n\nCode\nsummaryMod3_tt_growth_phi &lt;- MCMCsummary(object = out_NN_OBmod3$mcmc, params = c(\"phiIntTOut\", \"grIntT\"), round = 3) |&gt; \n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      t = as.numeric(str_match(var, \"[0-9]+\"))\n    ) |&gt; \n    separate_wider_delim(var, \"[\", names = c(\"var1\", \"var2\")) |&gt; \n  dplyr::select(mean,var1,t) |&gt; \n  pivot_wider(names_from = var1, names_prefix = \"beta\", values_from = mean)\n\nsummaryMod3_tt_growth_phiBetas = MCMCsummary(object = out_NN_OBmod3$mcmc, params = c(\"phiBetaT\"), round = 3) |&gt; \n        rownames_to_column(var = \"var\") |&gt; \n        mutate(\n          beta = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n          t = as.numeric(str_match(var, \"([0-9]+), ([0-9]+)\")[,3])\n        ) |&gt; \n  dplyr::select(mean,beta,t) |&gt; \n  pivot_wider(names_from = beta, names_prefix = \"beta\", values_from = mean)\n\n\n\nsummaryMod3_tt_growth_phiParams &lt;-  \n  bind_cols(summaryMod3_tt_growth_phi, summaryMod3_tt_growth_phiBetas |&gt; dplyr::select(-t)) |&gt; \n  mutate(\n    phiInt = logit(betaphiIntTOut)\n  )\n\nweights = expand.grid(weights = seq(-2,2,0.25), t = 1:11)\n#add predictions...\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  weightLong &lt;- \n    eh$weight |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      weightDATA = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  meanWeight &lt;- mean(eh$weight, na.rm = TRUE)\n  sdWeight &lt;- sd(eh$weight, na.rm = TRUE)\n\n  summaryMod3_tt_z &lt;- summaryMod3_tt_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      meanM1 = mean_z - 1,\n      pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong) |&gt; \n    left_join(weightLong) |&gt; \n    mutate(\n      weightDATA_std = (weightDATA - meanWeight) / sdWeight, \n      resid = weightDATA_std - mean_weight\n    ) \n    \n  # summaryMod3_tt_z &lt;- summaryMod3_tt_z0 |&gt; \n  #   left_join(ehLong) |&gt; \n  #   mutate(\n  #     # meanM1 = mean - 1,\n  #     # pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.8, 0)\n  #   ) |&gt; \n  #   left_join(firstLong) |&gt; \n  #   left_join(lastLong) |&gt; \n  #   left_join(cohortLong) \n\n\n\n\nCode\n  resids_mod3 &lt;- summaryMod3_tt_z |&gt; \n    group_by(ind) |&gt; \n    summarize(\n      meanResid = mean(abs(resid), na.rm = TRUE),\n      n = n()\n    ) |&gt; \n    ungroup()\n\n  summaryMod3_tt_zR &lt;- \n    summaryMod3_tt_z |&gt; \n    left_join(resids_mod3)\n\n\n\n\nCode\nojs_define(numTags_OJS_mod3 = dim(eh$tags)[1])\nojs_define(summaryMod3_tt_zR_OJS = (summaryMod3_tt_zR))\n#ojs_define(summary_tt_z_OJS = (summary_tt_z_mod3))\n\n\n\n\n19.4.6 Plot predicted and observed masses for selected individuals\nSelect one or more individuals:\n\n\nCode\nviewof selectInd_mod3 = Inputs.select([...Array(numTags_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummaryMod3_tt_zR_OJS_T = transpose(summaryMod3_tt_zR_OJS)\nsummaryMod3_tt_zR_OJS_T_selected = summaryMod3_tt_zR_OJS_T.filter((d) =&gt;\n  selectInd_mod3.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated mass and orange dots are observed masses. The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Standardized body mass (mg)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    Plot.line(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    &lt;!-- Plot.dot(summaryMod3_tt_zR_OJS_T_selected, { --&gt;\n    &lt;!--   x: \"t\", --&gt;\n    &lt;!--   y: \"mean_gr\", --&gt;\n    &lt;!--   fill: \"green\" --&gt;\n    &lt;!-- }), --&gt;\n    Plot.dot(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"weightDATA_std\",\n      fill: \"orange\"\n    }),\n    Plot.ruleX(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 3,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 3,\n      \"stroke\": \"red\"\n    }),\n    Plot.text(summaryMod3_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 4,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Cohort = \" + d.cohort\n      })\n    ),\n    Plot.text(summaryMod3_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 3.5,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Residual = \" + d.meanResid\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod3_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.4.7 Plot survival\nBlack dots/line is estimated probability of survival and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod3_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      \"stroke\": \"red\"\n    })\n    ,\n    Plot.text(summaryMod3_tt_zR_OJS_T_selected, \n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod3_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#modelnum-4-phiiys-giys-pit-model",
    "href": "modelsCMR_Growth_NN_OB.html#modelnum-4-phiiys-giys-pit-model",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.5 modelNum 4: phi(i,ys) * g(i,ys), p(i,t) model",
    "text": "19.5 modelNum 4: phi(i,ys) * g(i,ys), p(i,t) model\nModel with phi and p for each yoy(y)/season(s) combination and individual (i)\nProbability of survival (phi) model structure:\nphi(t,i) &lt;- phiInt(ys,i) + weight(t,i) + weight(t,i)^2\nProbability of capture (p) model structure:\np(t,i) &lt;- pInt(t,i)\nGrowth rate (gr) model structure:\ngr(t,i) &lt;- grInt(ys,i)\nSurvival/growth rate interaction:\nMultiplicative\nModel code is in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R\nModel is run ‘by hand’ in ./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_makeFile.R\nNot using this: Targets are loaded in R/modelCMR_tt_growth_NN_OB.R and saved as modelCMR_tt_growth_NN_OB_target\nModel runs:\ntt_growth_NN_OB_model4_2023-06-29 19: quadratic phi - poor phi estimates. Very high phiInts. Run time = 2.04 hrs\n: make phi linear, add phiBetaMu, switch p[t,i] to p[i,t], add grBeta, grBetaMu\n\n19.5.1 Retrieve model results\n\n\nCode\nlibrary(targets)\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \nmodelNum = 4 # phi + growth\ndummy = 2\n\n#load('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_mostRecent.RData')\nload(paste0('./models/cmrNN_OB/tt_growth/runsOut/tt_growth_NN_OB_model', modelNum, '_mostRecent.RData'))\nout_NN_OBmod4 &lt;- d\nrm(d)\n\n#Input data\neh &lt;- tar_read(eh_OB_2002_2014_target)\n\n\n\n\n19.5.2 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\nout_NN_OBmod4$modelCode\n\n\n{\n    for (i in 1:N) {\n        weight[i, first[i]] ~ dnorm(meanWeight_AISstd[first[i]], \n            sd = 2)\n        weightDATAstd[i, first[i]] ~ dnorm(weight[i, first[i]], \n            sd = weightSD)\n        for (t in (first[i]):(last[i] - 1)) {\n            weight[i, t + 1] &lt;- weight[i, t] + gr[i, t] * sampleIntervalDATA[i, \n                t]/90\n            weightDATAstd[i, t + 1] ~ dnorm(weight[i, t + 1], \n                sd = weightSD)\n            gr[i, t] &lt;- grInt[isYOY_DATA[i, t], seasons[t]]\n        }\n    }\n    for (yoy in 1:2) {\n        for (s in 1:4) {\n            grInt[yoy, s] ~ dnorm(0, sd = 1/0.667)\n        }\n    }\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            gamma[1, 1, t, i] &lt;- phi[i, t]\n            gamma[1, 2, t, i] &lt;- 1 - phi[i, t]\n            gamma[2, 1, t, i] &lt;- 0\n            gamma[2, 2, t, i] &lt;- 1\n            omega[1, 1, t, i] &lt;- 1 - p[i, t]\n            omega[1, 2, t, i] &lt;- p[i, t]\n            omega[2, 1, t, i] &lt;- 1\n            omega[2, 2, t, i] &lt;- 0\n        }\n    }\n    for (i in 1:N) {\n        for (t in first[i]:(last[i] - 1)) {\n            logit(phi[i, t]) &lt;- phiInt[isYOY_DATA[i, t], seasons[t]] + \n                phiBeta[1, isYOY_DATA[i, t], seasons[t]] * weight[i, \n                  t]\n            logit(p[i, t]) &lt;- pInt[isYOY_DATA[i, t], seasons[t]]\n        }\n    }\n    for (yoy in 1:2) {\n        for (s in 1:4) {\n            phiInt[yoy, s] ~ T(dnorm(0, sd = 1/0.667), -3.5, \n                3.5)\n            pInt[yoy, s] ~ dunif(0, 1)\n            for (b in 1:1) {\n                phiBeta[b, yoy, s] ~ dnorm(phiBetaMu[b, yoy], \n                  sd = 1/0.667)\n            }\n        }\n    }\n    for (yoy in 1:2) {\n        for (b in 1:1) {\n            phiBetaMu[b, yoy] ~ dnorm(0, 1/0.667)\n        }\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in first[i]:(last[i] - 1)) {\n            z[i, j + 1] ~ dcat(gamma[z[i, j], 1:2, j, i])\n            yDATA[i, j + 1] ~ dcat(omega[z[i, j + 1], 1:2, j, \n                i])\n        }\n    }\n}\n\n\n\n\n19.5.3 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2500\n2\n5\n\n\n\n\n\n\n[1] “Run time = 1.253 hours”\n\n\n\n19.5.4 Plot traces\n\n\nCode\n  #priors &lt;- rnorm(out_NN_OBmod4$runData$nIter * out_NN_OBmod4$runData$nChains, 0, 1000)\n  MCMCtrace(object = out_NN_OBmod4$mcmc,\n            #ISB = FALSE,\n            #exact = TRUE, \n            params = c(\"phiInt\", \"grInt\"),\n            pdf = FALSE \n            #priors = priors\n            )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n19.5.5 Summary data\n\n\nCode\n  MCMCplot(object = out_NN_OBmod4$mcmc, params = c(\"phiInt\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod4$mcmc, params = c(\"phiBeta\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod4$mcmc, params = c(\"pInt\"))\n\n\n\n\n\nCode\n  MCMCplot(object = out_NN_OBmod4$mcmc, params = c(\"grInt\"))\n\n\n\n\n\nSummary values\n\n\nCode\n  # To get the mMCMCSummaryRMNA funcion which I adapted to deal with NAs\n  source('./models/cmrNN_OB/tt_growth/modelCMR_tt_growth_NN_OB_functionsToSource.R')\n\n  dummy=1\n  (summaryMod4_tt_growth &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"phiInt\", \"pInt\", \"grInt\", \"phiBeta\"), round = 3) %&gt;%\n      rownames_to_column(var = \"var\"))\n\n\n                var   mean    sd   2.5%    50%  97.5% Rhat n.eff\n1      phiInt[1, 1]  1.088 0.160  0.787  1.082  1.413 1.02   169\n2      phiInt[2, 1]  1.896 0.409  1.274  1.829  2.885 1.02    56\n3      phiInt[1, 2]  0.025 1.367 -2.662  0.059  2.567 1.00   953\n4      phiInt[2, 2]  0.470 0.080  0.316  0.468  0.635 1.00   264\n5      phiInt[1, 3]  1.585 0.257  1.110  1.580  2.115 1.06    60\n6      phiInt[2, 3]  0.723 0.116  0.515  0.722  0.943 1.04   186\n7      phiInt[1, 4]  1.140 0.188  0.776  1.140  1.519 1.03   111\n8      phiInt[2, 4]  0.861 0.154  0.579  0.861  1.154 1.00   217\n9        pInt[1, 1]  0.811 0.088  0.637  0.809  0.970 1.01   418\n10       pInt[2, 1]  0.790 0.143  0.465  0.814  0.987 1.01   116\n11       pInt[1, 2]  0.500 0.284  0.026  0.504  0.972 1.00  1000\n12       pInt[2, 2]  0.742 0.092  0.555  0.743  0.920 1.01   374\n13       pInt[1, 3]  0.391 0.086  0.225  0.390  0.562 1.01   619\n14       pInt[2, 3]  0.537 0.107  0.328  0.538  0.741 1.01   396\n15       pInt[1, 4]  0.021 0.019  0.001  0.016  0.071 1.05   373\n16       pInt[2, 4]  0.116 0.078  0.006  0.107  0.299 1.00   504\n17      grInt[1, 1]  0.838 0.014  0.810  0.837  0.866 1.03   103\n18      grInt[2, 1]  1.804 0.021  1.766  1.803  1.847 1.03   230\n19      grInt[1, 2]  0.052 1.491 -2.786  0.063  2.966 1.00  1088\n20      grInt[2, 2]  0.394 0.009  0.378  0.394  0.411 1.00   165\n21      grInt[1, 3]  0.095 0.013  0.070  0.095  0.121 1.06   164\n22      grInt[2, 3] -0.042 0.015 -0.072 -0.042 -0.013 1.00   178\n23      grInt[1, 4]  0.159 0.009  0.142  0.159  0.178 1.01   140\n24      grInt[2, 4]  0.203 0.012  0.180  0.203  0.226 1.00   139\n25 phiBeta[1, 1, 1] -0.439 0.215 -0.818 -0.442  0.007 1.00   318\n26 phiBeta[2, 1, 1]     NA    NA  0.000  0.000  0.000  NaN     0\n27 phiBeta[1, 2, 1] -0.331 0.208 -0.698 -0.343  0.076 1.08   166\n28 phiBeta[2, 2, 1]     NA    NA  0.000  0.000  0.000  NaN     0\n29 phiBeta[1, 1, 2] -0.059 1.635 -3.265 -0.073  3.164 1.01  1085\n30 phiBeta[2, 1, 2]     NA    NA  0.000  0.000  0.000  NaN     0\n31 phiBeta[1, 2, 2] -0.485 0.072 -0.625 -0.486 -0.340 1.00   309\n32 phiBeta[2, 2, 2]     NA    NA  0.000  0.000  0.000  NaN     0\n33 phiBeta[1, 1, 3]  0.137 0.353 -0.515  0.156  0.878 1.02    76\n34 phiBeta[2, 1, 3]     NA    NA  0.000  0.000  0.000  NaN     0\n35 phiBeta[1, 2, 3] -0.189 0.089 -0.361 -0.187 -0.013 1.07   329\n36 phiBeta[2, 2, 3]     NA    NA  0.000  0.000  0.000  NaN     0\n37 phiBeta[1, 1, 4] -0.248 0.248 -0.759 -0.245  0.245 1.06   116\n38 phiBeta[2, 1, 4]     NA    NA  0.000  0.000  0.000  NaN     0\n39 phiBeta[1, 2, 4] -0.238 0.115 -0.454 -0.242 -0.002 1.01   316\n40 phiBeta[2, 2, 4]     NA    NA  0.000  0.000  0.000  NaN     0\n\n\nCode\n  #summaryMod4_tt_growth_z0 &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"weight\"), round = 4) %&gt;%\n  summaryMod4_tt_w &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"weight\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  summaryMod4_tt_z &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"z\"), round = 3) %&gt;%\n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n      t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n      ind = as.numeric(ind0),\n      t = as.numeric(t0)\n    ) |&gt; \n    dplyr::select(-c(t0, ind0))\n  \n  # summaryMod4_tt_PhiBetaT &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"phiBeta\"), round = 3) %&gt;%\n  #   rownames_to_column(var = \"var\") |&gt; \n  #   mutate(\n  #     ind0 = str_match(var, \"([0-9]+), ([0-9]+)\")[,2],\n  #     t0 =   str_match(var, \"([0-9]+), ([0-9]+)\")[,3],\n  #     ind = as.numeric(ind0),\n  #     t = as.numeric(t0)\n  #   ) |&gt; \n  #   dplyr::select(-c(t0, ind0))\n  \n  summaryMod4_tt_z0 &lt;- summaryMod4_tt_z |&gt; \n    left_join(summaryMod4_tt_w, by = c(\"ind\", \"t\"), suffix = c(\"_z\", \"_weight\"))\n\n\nAdd other variables to summary values\n\n\nCode\n  ehLong &lt;- \n    eh$eh |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      enc = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  firstLong &lt;- eh$first |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(first = value)\n  \n  lastLong &lt;- eh$last |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) |&gt; \n    rename(last = value)\n    \n  cohortLong &lt;- eh$cohort |&gt; \n    as_tibble() |&gt; \n    rownames_to_column(\"ind\") |&gt; \n    mutate(ind = as.numeric(ind)) \n  \n  weightLong &lt;- \n    eh$weight |&gt;\n    as.data.frame() |&gt; \n    rownames_to_column(\"ind0\") |&gt; \n    pivot_longer(starts_with(\"ais\")) |&gt; \n    mutate(\n      t = as.numeric(str_match(name, \"([0-9]+)\")[,1]),\n      weightDATA = value,\n      ind = as.numeric(ind0)\n    ) |&gt; \n    dplyr::select(-c(name, value, ind0))\n  \n  meanWeight &lt;- mean(eh$weight, na.rm = TRUE)\n  sdWeight &lt;- sd(eh$weight, na.rm = TRUE)\n\n  summaryMod4_tt_z &lt;- summaryMod4_tt_z0 |&gt; \n    left_join(ehLong) |&gt; \n    mutate(\n      meanM1 = mean_z - 1,\n      pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n      enc8 = ifelse(enc == 1, 0.8, 0)\n    ) |&gt; \n    left_join(firstLong) |&gt; \n    left_join(lastLong) |&gt; \n    left_join(cohortLong) |&gt; \n    left_join(weightLong) |&gt; \n    mutate(\n      weightDATA_std = (weightDATA - meanWeight) / sdWeight, \n      resid = weightDATA_std - mean_weight\n    ) \n    \n  # summaryMod4_tt_z &lt;- summaryMod4_tt_z0 |&gt; \n  #   left_join(ehLong) |&gt; \n  #   mutate(\n  #     # meanM1 = mean - 1,\n  #     # pSurv = ifelse(meanM1 == 0, 1, 1 - meanM1),\n  #     enc8 = ifelse(enc == 1, 0.8, 0)\n  #   ) |&gt; \n  #   left_join(firstLong) |&gt; \n  #   left_join(lastLong) |&gt; \n  #   left_join(cohortLong) \n\n\n\n\nCode\n  resids_mod4 &lt;- summaryMod4_tt_z |&gt; \n    group_by(ind) |&gt; \n    summarize(\n      meanResid = mean(abs(resid), na.rm = TRUE),\n      n = n()\n    ) |&gt; \n    ungroup()\n\n  summaryMod4_tt_zR &lt;- \n    summaryMod4_tt_z |&gt; \n    left_join(resids_mod4)\n\n\n\n\nCode\nojs_define(numTags_OJS_mod4 = dim(eh$tags)[1])\nojs_define(summaryMod4_tt_zR_OJS = (summaryMod4_tt_zR))\n#ojs_define(summary_tt_z_OJS = (summary_tt_z_mod4))\n\n\n\n\n19.5.6 Plot predicted and observed masses for selected individuals\nSelect one or more individuals:\n\n\nCode\nviewof selectInd_mod4 = Inputs.select([...Array(numTags_OJS).keys()], {\n  label: \"Which fish?\",\n  value: 1,\n  step: 1,\n  multiple: true\n})\n\nsummaryMod4_tt_zR_OJS_T = transpose(summaryMod4_tt_zR_OJS)\nsummaryMod4_tt_zR_OJS_T_selected = summaryMod4_tt_zR_OJS_T.filter((d) =&gt;\n  selectInd_mod4.includes(d.ind)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlack dots/line is estimated mass and orange dots are observed masses. The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Standardized body mass (mg)\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    Plot.line(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"mean_weight\"\n    }),\n    &lt;!-- Plot.dot(summaryMod4_tt_zR_OJS_T_selected, { --&gt;\n    &lt;!--   x: \"t\", --&gt;\n    &lt;!--   y: \"mean_gr\", --&gt;\n    &lt;!--   fill: \"green\" --&gt;\n    &lt;!-- }), --&gt;\n    Plot.dot(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"weightDATA_std\",\n      fill: \"orange\"\n    }),\n    Plot.ruleX(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 3,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 3,\n      \"stroke\": \"red\"\n    }),\n    Plot.text(summaryMod4_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 4,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Cohort = \" + d.cohort\n      })\n    ),\n    Plot.text(summaryMod4_tt_zR_OJS_T_selected,\n      Plot.selectFirst({\n        x: 1,\n        y: 3.5,\n        frameAnchor: \"top-left\",\n        text: (d) =&gt; \"Residual = \" + d.meanResid\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod4_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.5.7 Plot survival\nBlack dots/line is estimated probability of survival and orange dots are encountered yes (y = 0.8)/no (y = 0). The green line is the first observation and the red line is the last observation. The number in the upper right corner of each panel is the fish’s cohort.\n\n\nCode\nPlot.plot({\n  width: width,\n  height: 350,\n  inset: 10,\n  color: {\n    scheme: \"greys\"\n  },\n  x: { label: \"Age/season combination\" },\n  y: { label: \"Probability of survival\" },\n  marks: [\n    Plot.frame(),\n    Plot.dot(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.dot(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"enc8\",\n      fill: \"orange\"\n    }),\n    Plot.line(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"t\",\n      y: \"pSurv\"\n    }),\n    Plot.ruleX(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"first\",\n      y: 1,\n      \"stroke\": \"green\"\n    }),\n    Plot.ruleX(summaryMod4_tt_zR_OJS_T_selected, {\n      x: \"last\",\n      y: 1,\n      \"stroke\": \"red\"\n    })\n    ,\n    Plot.text(summaryMod4_tt_zR_OJS_T_selected, \n      Plot.selectFirst({\n        x: 11,\n        y: 1,\n        text: d =&gt; d.cohort\n      })\n    )\n  ],\n  facet: {\n    data: summaryMod4_tt_zR_OJS_T_selected,\n    x: \"ind\"\n  }\n})\n\n\n\n\n\n\n\n\n\n19.5.8 Size-dependent survival\n\n\nCode\n  summaryMod4_tt_growth_phi &lt;- MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"phiInt\", \"grInt\"), round = 3) |&gt; \n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      yoy = as.numeric(str_match(var, \"([0-9]+), ([0-9]+)\")[,2]),\n      season = as.numeric(str_match(var, \"([0-9]+), ([0-9]+)\")[,3])\n    ) |&gt; \n    separate_wider_delim(var, \"[\", names = c(\"var1\", \"var2\")) |&gt; \n    dplyr::select(mean, var1, yoy, season) |&gt; \n    pivot_wider(names_from = var1,  values_from = mean)\n\n  summaryMod4_tt_growth_phiBetas = MCMCSummaryRMNA(object = out_NN_OBmod4$mcmc, params = c(\"phiBeta\"), round = 3) |&gt; \n    rownames_to_column(var = \"var\") |&gt; \n    mutate(\n      beta = str_match(var, \"([0-9]+), ([0-9]+), ([0-9]+)\")[,2],\n      yoy = as.numeric(str_match(var, \"([0-9]+), ([0-9]+), ([0-9]+)\")[,3]),\n      season = as.numeric(str_match(var, \"([0-9]+), ([0-9]+), ([0-9]+)\")[,4])\n    ) |&gt; \n    separate_wider_delim(var, \"[\", names = c(\"var1\", \"var2\")) |&gt; \n    dplyr::select(var1, mean, beta, yoy, season) |&gt; \n    pivot_wider(names_from = beta, names_prefix = \"beta_\", values_from = mean)\n  \n  summaryMod4_tt_growth_phiParams &lt;-  \n    bind_cols(summaryMod4_tt_growth_phi, summaryMod4_tt_growth_phiBetas |&gt; select(-c(yoy, season))) \n    # mutate(\n    #   phiInt = logit(betaphiIntTOut)\n    # )\n  \n  weights = expand.grid(weight = seq(-2,2,0.25), yoy = 1:2, season = 1:4) |&gt; \n    left_join(summaryMod4_tt_growth_phiParams) |&gt; \n    filter(!(yoy == 1 & season == 2)) |&gt; \n    mutate(pSurv = ilogit(phiInt + beta_1*weight))# + beta_2*weight^2))\n\n  ggplot(weights, aes(weight, pSurv, color = factor(season))) +\n    geom_point() +\n    geom_line() +\n    #theme_publication() +\n    facet_wrap(~yoy)"
  },
  {
    "objectID": "modelsCMR_Growth_NN_OB.html#output-model-summary-data-for-xiaowei",
    "href": "modelsCMR_Growth_NN_OB.html#output-model-summary-data-for-xiaowei",
    "title": "19  River 4 (IS) - CJS - growth model",
    "section": "19.6 Output model summary data for Xiaowei",
    "text": "19.6 Output model summary data for Xiaowei\n\n\nCode\n  #write.csv(summary_tt, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt.csv')\n  \n  #write.csv(summary_tt_z, './models/cmrNN_OB/tt/dataOut/xiaowei/summary_tt_z.csv')"
  },
  {
    "objectID": "modelsCMR_NN_SIM.html#simulations",
    "href": "modelsCMR_NN_SIM.html#simulations",
    "title": "17  Simulation - CJS model",
    "section": "17.2 Simulations",
    "text": "17.2 Simulations\n\n17.2.1 Get data\nSimulation data without phi == true\n\n\nCode\n summary &lt;- read.csv('./models/cmrNN_SIM/tt/runsOut/localSimData/local_summary_out_phi_sim.csv') |&gt; \n  mutate(median = X50.)\n\n summary_over_t &lt;- summary |&gt; \n   group_by(variable, p, phi_num, n) |&gt; \n   summarize(\n     mean = mean(median),\n     sd = sd(median),\n     count = n()\n   ) |&gt; \n   ungroup()\n \n  summary_over_t_time_lt_5 &lt;- summary |&gt;\n    filter(time &lt; 5) |&gt; \n   group_by(variable, p, phi_num, n) |&gt; \n   summarize(\n     mean = mean(median),\n     sd = sd(median),\n     count = n()\n   ) |&gt; \n   ungroup()\n\n\n\n\n17.2.2 Plot results\n\n17.2.2.1 Phi\nWith poor data, estimates trend towards 0.5, the mean of the prior on the variable.\n\n\nCode\nggplot(summary |&gt; filter(variable == \"phi\"), aes(time, mean, color = factor(p))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = phi_num)) +\n  labs(x = \"Time (age)\", y = \"Phi estimate\") +\n  facet_grid(phi_num ~ n)\n\n\n\n\n\nCode\nggplot(summary_over_t |&gt; filter(variable == \"phi\"), aes(p, mean, color = factor(phi_num))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = phi_num, color = factor(phi_num))) +\n  labs(x = \"Probability of capture (p)\", y = \"Phi estimate (mean across all occasions)\") +\n  ggtitle(\"All occasions\") +\n  facet_grid(~ n)\n\n\n\n\n\nCode\nggplot(summary_over_t_time_lt_5 |&gt; filter(variable == \"phi\"), aes(p, mean, color = factor(phi_num))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = phi_num, color = factor(phi_num))) +\n  labs(x = \"Probability of capture (p)\", y = \"Phi estimate (mean across first four occasions)\") +\n  ggtitle(\"First four occasions\") +\n  facet_grid(~ n)\n\n\n\n\n\n\n\n17.2.2.2 P\n\n\nCode\nggplot(summary |&gt; filter(variable == \"p\"), aes(time, mean, color = factor(phi_num))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = p)) +\n  labs(x = \"Time (age)\", y = \"P estimate\") +\n  facet_grid(p ~ n)\n\n\n\n\n\nCode\nggplot(summary_over_t |&gt; filter(variable == \"p\"), aes(phi_num, mean, color = factor(p))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = p, color = factor(p))) +\n  labs(x = \"Probability of survival (phi)\", y = \"P estimate (mean across occasions)\") +\n  facet_grid(~ n)\n\n\n\n\n\nCode\nggplot(summary_over_t_time_lt_5 |&gt; filter(variable == \"p\"), aes(phi_num, mean, color = factor(p))) +\n  geom_point() +\n  geom_line() +\n  geom_hline(aes(yintercept = p, color = factor(p))) +\n  labs(x = \"Probability of survival (phi)\", y = \"P estimate (mean across fisrt four occasions)\") +\n  ggtitle(\"First four occasions\") +\n  facet_grid(~ n)\n\n\n\n\n\nModel runs:\n\n\n\n\n17.2.3 Retrieve model results from a random simulation run\n\n\nCode\n# Following https://oliviergimenez.github.io/bayesian-cr-workshop/worksheets/4_demo.html\n# \n  load('./models/cmrNN_SIM/tt/runsOut/localSimData/tt_NN_SIM__p0.5_phi05_n5000.RData')\n  out_NN_SIM &lt;- d\n  \n  #Input data\n  eh &lt;- read.csv('./models/cmrNN_SIM/tt/runsOut/localSimData/eh_p0.5_phi05_n5000.csv')\n\n\n\n\n17.2.4 Model code\nIn the model code, a value of 1 for z or in gamma or omega signifies the individual is alive and a value of 2 signifies the individual is dead. y[i,j] is the observed data (encounter history file).\n\n\nCode\n  out_NN_SIM$modelCode\n\n\n{\n    delta[1] &lt;- 1\n    delta[2] &lt;- 0\n    for (t in 1:(T - 1)) {\n        phi[t] ~ dunif(0, 1)\n        gamma[1, 1, t] &lt;- phi[t]\n        gamma[1, 2, t] &lt;- 1 - phi[t]\n        gamma[2, 1, t] &lt;- 0\n        gamma[2, 2, t] &lt;- 1\n        p[t] ~ dunif(0, 1)\n        omega[1, 1, t] &lt;- 1 - p[t]\n        omega[1, 2, t] &lt;- p[t]\n        omega[2, 1, t] &lt;- 1\n        omega[2, 2, t] &lt;- 0\n    }\n    for (i in 1:N) {\n        z[i, first[i]] ~ dcat(delta[1:2])\n        for (j in (first[i] + 1):T) {\n            z[i, j] ~ dcat(gamma[z[i, j - 1], 1:2, j - 1])\n            y[i, j] ~ dcat(omega[z[i, j], 1:2, j - 1])\n        }\n    }\n}\n\n\n\n\n17.2.5 Model statistics\n\n\n\nRun statistics\n\n\nnIter\nnBurnin\nnChains\nthinRate\n\n\n\n\n5000\n2000\n2\n5\n\n\n\n\n\n\n[1] “Run time = 1.393 hours”"
  },
  {
    "objectID": "modelsCMR_NN_SIM.html#simulation-data-from-xioawei",
    "href": "modelsCMR_NN_SIM.html#simulation-data-from-xioawei",
    "title": "17  Simulation - CJS model",
    "section": "17.3 Simulation data from Xioawei",
    "text": "17.3 Simulation data from Xioawei\nDecided to use the simulations above, as these files have &gt; 50 time steps (cohorts are spread across time) and it is easier to interpret results with an age-based encounter history with 12 time steps.\nXiaowei and students created simulation files here that were downloaded into C:\\Users\\bletcher\\OneDrive - DOI\\projects\\wbBook_quarto_targets\\data\\in\\fromXioawei as synthetic_data-20240124T150938Z-001.zip and extracted into ./synthetic_data-20240124T150938Z-001. These .npy files are read into R and run using ./models/cmrNN_SIM/tt/modelCMR_tt_NN_SIM_makeFile.R to loop over all the files. Model output goes into C:/Users/bletcher/OneDrive - DOI/projects/wbBook_quarto_targets/models/cmrNN_SIM/tt/runsOut/ using the input file name concatenated between tt_NN_SIM and the date."
  }
]