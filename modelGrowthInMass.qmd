# Growth in mass

```{r}
#| label: dataModelFlowOptions
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
#| label: librariesModelsFlow
#| echo: false
library(getWBData)
library(lubridate)
library(kableExtra)
library(GGally)
library(lme4)
library(targets)
library(relaimpo)
library(caret)
library(pscl)
library(tidyverse)

`%notin%` <- Negate(`%in%`)
```


Distribution of growth, negative growth  
Causes of neg growth  
  - Extrinsic  
    - river, season, flow, temp  
  - intrinsic    
    - Sex (fall), life history, section, size, age, previous growth (CF?), movement (section/river)  
consequences of neg growth
   - survival  
   - future growth (length and mass)  
   - movement (section/river)  
   - reprod success?  
   - local density (con and hetero)  

Probs with growth in mass  
spawning loss mass in the fall, esp in OB

Interaction between flow:temp, diff btw WB (groundwater dominated at low flow so cold) and tribs (combo of surface and gw?)

Compare growth with t/f cycle diagrams for each river

compare condition factor among species - looks like bkt growing faster in weight

flow/temp circles with gr on top

## Get data
### Get electrofishing data
```{r}
#| label: readInAllData
dummy=0 # change to force cache update??
cd <- tar_read(cdWB_electro_target)

```

### Get environmental data
```{r}
#| label: readInAllDataEnv
dummy=0 # change to force cache update??
envIn <- tar_read(envDataWB_Target)

```

## Examine raw data
### Limit data to consecutive sample captures (cd1)  
Previous growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.
```{r}
#| label: consecSamples
# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> 
#   data.frame() |> 
#   filter(Freq > 0) |> 
#   arrange(Var1, Var2) |> 
#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> 
#   filter(year == 2010)

cd1 <- cd |> 
  filter(sampleNumberDiff == 1,
         tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> 
  mutate(negGrowth = grWeight < 0,
         month = month(date),
         dummy = 1) # change to force cache update
```

Labels for plotting
```{r}
## River ####################
cd1$riverGG <- factor(
    cd1$river,
    levels=c('west brook', 'wb jimmy', 'wb mitchell',"wb obear"),
    labels = c("West Brook","Open Large","Open Small","Isolated Small"),
    ordered = T
  )

envIn$riverGG <- factor(
    envIn$river,
    levels=c('west brook', 'wb jimmy', 'wb mitchell',"wb obear"),
    labels = c("West Brook","Open Large","Open Small","Isolated Small"),
    ordered = T
  )
##  Season ###################
cd1$seasonGG <- factor(
    cd1$season, 
    labels = c("Spring","Summer","Autumn","Winter"), 
    ordered = T
  )

envIn$seasonGG <- factor(
    envIn$season, 
    labels = c("Spring","Summer","Autumn","Winter"), 
    ordered = T
  )
## Species ######################
cd1$speciesGG <- factor(
    cd1$species, 
    levels = c('bkt','bnt','ats'), 
    labels = c("Brook trout", "Brown trout", "Atlantic salmon"), 
    ordered = T
  )

```

### Find outlier growth rates  
#### Negative outlier growth  
`1bf20ebe4e` and `1bf20ff490` have incorrect weights leading to very negative growth rates.  
Exclude these tags above. The rest of the quite negative growth fish seem plausible (remember we can't account for stomach contents or egg loss).
```{r}
#| label: negOutlier
cd |> 
  arrange(grWeightS) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)
```

#### Positive outlier growth 
Lots of very fast growth mostly in the spring. No clear way to exclude fish.
```{r}
#| label: posOutlier
cd1 |> 
  arrange(desc(grWeightS)) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> 
  print(n = 20)
```

### Raw length, weight data graphs
#### Distribution of growth rates
```{r}
#| label: rawlengthWeight
ggplot(cd1, aes(grWeight, color = speciesGG)) +
  geom_freqpoly(bins = 50) +
  labs(x = "Growth in mass (/d)", y = "Frequency") +
  scale_color_discrete() +
  facet_wrap(~season)
```

### Length vs weight by species
Very few outliers
```{r}
#| label: len_v_weight
plotLenW <- function(d, s){
  ggplot(d |> filter(species == s), aes(observedLength, observedWeight)) +
    geom_point(alpha = 0.5, size = 1) +
    scale_x_log10() +
    scale_y_log10() +
    ggtitle(s) +
    labs(x = "Length (mm)", y = "Mass (mg)") +
    scale_color_discrete() +
    facet_grid(riverGG~year, scales = 'free')
}

plotLenW(cd1, "bkt")
plotLenW(cd1, "bnt")
plotLenW(cd1, "ats")
```

### Weight vs weight at next sample
```{r}
#| label: weight_v_weight
plotWW <- function(d, s){
  ggplot(d |> filter(species == s), aes(observedWeight, lagObservedWeight, color = seasonGG)) +
    geom_point(alpha = 0.15) +
    guides(color = guide_legend(override.aes = list(alpha = 1))) +
    ggtitle(s) +
    labs(y = "mass (mg)", y = "Mass (mg) at next sample") +
    scale_color_discrete() +
    facet_wrap(~riverGG, scales = 'free')
}

plotWW(cd1, "bkt")
plotWW(cd1, "bnt")
plotWW(cd1, "ats")
```


## Two growth models
### Size-adjusted growth model
#### Get l-w relationships for size-adjusted growth model  
Here, we will explore size-independent growth in mass, see `Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x.`
Size-independent growth (`grWeightS`) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().  
`grWeightS` uses the slope of `log(observedWeight)` ~ `log(grWeight)` for each river and season and species to adjust growth.  
A simple linear models shows we need to get separate slopes for each river and season and species.  

```{r}
#| label: grW_models
ggplot(cd1 |> filter(grWeight > 0), 
       aes(log(observedWeight), log(grWeight), color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Log of growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

mod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))
mod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))
mod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))
mod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))
mod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))

AIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)
```

### Compare size-adjusted and instantaneous growth  
Differences don't seem big enough to warrant the extra complexity from the s-adjusted growth metric 
```{r}
#| label: grWeight_v_grWeightS
ggplot(cd1, aes(grWeight, grWeightS, color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_abline(intercept = 0, slope = 1) +
  labs(y = "Gowth in mass", x = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

ggplot(cd1 |> 
         dplyr::select(observedWeight, grWeight, grWeightS, seasonGG, speciesGG) |> 
         pivot_longer(cols = c(grWeight, grWeightS)),
       
       aes(log(observedWeight), value, color = name)) +
  geom_point(alpha = 0.05 )  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)
```


## Compare growth in length and mass  
### Growth rate in length vs size-independent growth rate in mass
```{r}
#| label: grLen_v_grWeightS
ggplot(cd1, aes(grLength, grWeightS)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)
```

### Growth rate in length vs 'instantaneous' growth rate in mass
```{r}
#| label: grLen_v_grWeight
ggplot(cd1, aes(grLength, grWeight)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

ggplot(cd1 |> filter(species=="bnt", season ==2), aes(grLength, grWeight, color = factor(year))) +
  geom_point( alpha = 1) +
  geom_smooth(method="lm", se=FALSE) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Growth in mass") +
  scale_color_discrete() 

#  facet_wrap(~year)
```


## Flow and temperature growth models
### Mean flow effect on growth?  
Maybe in Jimmy for bnt, or for ats
```{r}
#| label: flow_weight

plotFlowGR <- function(d, r){
ggplot(d |> filter(river == r), aes(meanFlowByRiver, grWeight, color = speciesGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_smooth(se = FALSE) +
  geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
  labs(x = "Mean flow", y = "Growth in mass") +
  scale_color_discrete() +
  ggtitle(r) +
  facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

plotFlowGR(cd1, "west brook")
plotFlowGR(cd1, "wb jimmy")
plotFlowGR(cd1, "wb mitchell")
plotFlowGR(cd1, "wb obear")
```

### Mean temperature effect on growth?  
Maybe in Jimmy for bnt, or for ats
```{r}
#| label: temp_grWeight

plotTempGR <- function(d, s){
  ggplot(d |> filter(seasonGG == s), aes(meanTemperature, grWeight, color = speciesGG)) +
    geom_point(alpha = 0.5)  +
    geom_smooth(method = "lm", se = FALSE) +
    geom_smooth(se = FALSE) +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
    labs(x = "Mean temperature (c)", y = "Growth in mass") +
    scale_color_discrete() +
    ggtitle(s) +
    facet_grid(speciesGG~riverGG)#, scales = 'free')
}

plotTempGR(cd1, "Spring")
plotTempGR(cd1, "Summer")
plotTempGR(cd1, "Autumn")
plotTempGR(cd1, "Winter")

```


## Negative vs positive growth
### Proportion of fish with negative growth by species/river/season
```{r}
#| label: neg_pos
ggplot(cd1 |> filter(!is.na(negGrowth)), aes(negGrowth)) +
  geom_bar() +
  facet_grid(seasonGG~speciesGG+riverGG, scales = "free")

propNegSRS <- cd1 |> 
  group_by(speciesGG, riverGG, seasonGG) |> 
  summarize(numNeg = sum(negGrowth, na.rm = TRUE),
            n = n()
            ) |> 
  mutate(numPos = n - numNeg,
         propPos = numPos/n,
         propNeg = numNeg/n)

ggplot(propNegSRS |> filter(n > 50), aes(seasonGG, propNeg, color = riverGG, group = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Season", y = "Proportion of fish with negative growth in mass") +
  scale_color_discrete() +
  facet_wrap(~speciesGG)

```

### Proportion of fish with negative growth by species/river/sampleNumber  
Break down season by year
```{r}
#| label: neg_posN
propNegSRsN <- cd1 |> 
  group_by(speciesGG, riverGG, sampleNumber, seasonGG, year) |> 
  summarize(numNeg = sum(negGrowth, na.rm = TRUE),
            n = n(),
            mT = mean(meanTemperature, na.rm = TRUE),
            mF = mean(meanFlowByRiver, na.rm = TRUE),
            mF_log10 = mean(log10(meanFlowByRiver), na.rm = TRUE)
            ) |> 
  mutate(numPos = n - numNeg,
         propPos = numPos/n,
         propNeg = numNeg/n) |> 
  ungroup()

ggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Year", y = "Proportion of fish with negative growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

```

## Environmental effects on proportion of fish with negative growth
### Proportion of fish with negative growth by **flow**
```{r}
#| label: negGrowth_flow

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("Mean flow") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("Mean flow") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  facet_grid(seasonGG~speciesGG)
```

### Proportion of fish with negative growth by **temperature**
```{r}
#| label: negGrowth_temp

plotNegGrowth_temp <- function(d, s){
  ggplot(d |> filter(n > 10, seasonGG == s), aes(mT, propNeg, color = riverGG)) +
    geom_point(aes(size = n)) +
    geom_smooth(method = "lm", se = FALSE) +
    scale_y_continuous("Proportion of fish with negative growth in mass") +
    scale_x_continuous("Mean temperature (C)") +
    scale_color_discrete() +
    ggtitle(s) +
    facet_grid(riverGG~speciesGG)
}
plotNegGrowth_temp(propNegSRsN, "Spring")
plotNegGrowth_temp(propNegSRsN, "Summer")
plotNegGrowth_temp(propNegSRsN, "Autumn")
plotNegGrowth_temp(propNegSRsN, "Winter")

```

### F/T cycle graphs  
#### Mean flow and temperature
```{r}
#| label: flow_temp_cycle_bySpecies
plot_mT_mF <- function(s, plotText){
  ggplot(propNegSRsN |> filter(n > 25, speciesGG == s), aes(mT, mF_log10, color = factor(seasonGG))) +
    geom_point(aes(size = propNeg)) +
    {if(plotText) geom_text(aes(label = year), vjust = 0, nudge_y = -0.075, check_overlap = FALSE, size = 3)} +
    ggtitle(s) +
    labs(x = "Mean temperature (C)", y = "log10 of mean Flow") +
    scale_color_discrete() +
    facet_wrap(~riverGG, scales = "free")
}

plot_mT_mF("Brook trout", FALSE)
plot_mT_mF("Brown trout", FALSE)
plot_mT_mF("Atlantic salmon", FALSE)

plot_mT_mF("Brook trout", TRUE)
plot_mT_mF("Brown trout", TRUE)
plot_mT_mF("Atlantic salmon", TRUE)
```

Mean flow and temperature values for each season and year for the West Brook  
Not very informative
```{r}
#| label: flow_temp_cycle_bySpeciesYear
#| 
ggplot(propNegSRsN |> filter(n > 10, riverGG == 'West Brook') |> arrange(riverGG, speciesGG, year, seasonGG), aes(mT, mF_log10)) +
  geom_line() +
  geom_point(aes(color = factor(seasonGG))) +
  facet_wrap(~year)
```

#### Merge propNeg into daily environmental data   
So we can style the graph by propNeg growth for each year/season
```{r}
#| label: mergePropNeg

envIn_propNeg <- envIn |> 
  left_join(propNegSRsN |> dplyr::select(riverGG, year, seasonGG, speciesGG, propNeg)) |> 
  mutate(yearSeason = paste(year, seasonGG, sep = "_"),
         dummy = 1)
```

Yearly temperature/flow cycles of daily data 
```{r}
#| label: mergePropNegPlot

plotMerged <- function(d, r, minYear = 2000, maxYear = 2017){
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear)), 
         aes(temperature, log10(flowByRiverm3s), color = seasonGG, group = seasonGG)) +
    geom_point() +
    geom_smooth(se = FALSE) +
    #geom_line() +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    facet_wrap(~year, scales = 'free')
}
# this plots f/t for all three species - good for filling in gaps
plotMerged(envIn_propNeg, "West Brook", 2000, 2017)
plotMerged(envIn_propNeg, "Open Large", 2002, 2017)
plotMerged(envIn_propNeg, "Open Small", 2002, 2017)
plotMerged(envIn_propNeg, "Isolated Small", 2002, 2017)
```

Smooths of temperature/flow cycles of daily data by season
```{r}
#| label: plotMergedBySeason
#| 
plotMergedBySeason <- function(d, r, minYear = 2000, maxYear = 2017) {
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), 
         aes(temperature, log10(flowByRiverm3s), 
             color = factor(year), group = year
             )
         ) +
    #geom_point() +
    geom_smooth(se = FALSE) +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    facet_wrap(~seasonGG, scales = 'free')
}

plotMergedBySeason(envIn_propNeg, "West Brook", 2000, 2017)
plotMergedBySeason(envIn_propNeg, "Open Large", 2002, 2017)
plotMergedBySeason(envIn_propNeg, "Open Small", 2002, 2017)
plotMergedBySeason(envIn_propNeg, "Isolated Small", 2002, 2017)
  
```

Smooths of temperature/flow cycles of daily data by season with line width = proportion of negative growth
```{r} 
#| label: plotMergedBySeason_LineWidth

plotMergedBySeason_LineWidth <- function(d, r, minYear = 2000, maxYear = 2017) {
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), 
         aes(temperature, log10(flowByRiverm3s),
             color = factor(year)#, group = year
             )
         ) +
    geom_point() +
    geom_smooth(aes(linewidth = propNeg + 0.1, group = propNeg), se = FALSE) +
    #geom_line() +
    ggtitle(r) +
    #facet_wrap(~seasonGG, scales = 'free')
  facet_grid(year~seasonGG, scales = 'free')
}

plotMergedBySeason_LineWidth(envIn_propNeg, "West Brook", 2000, 2017)
plotMergedBySeason_LineWidth(envIn_propNeg, "Open Large", 2002, 2017)
plotMergedBySeason_LineWidth(envIn_propNeg, "Open Small", 2002, 2017)
plotMergedBySeason_LineWidth(envIn_propNeg, "Isolated Small", 2002, 2017)
```

Plot F/T cycles by river, season, species with label for propNeg and conspecific and all-species abundances
```{r}
#| label: plotMergedBySeasonByEverything

indCountsBySpp <- cd1 |> 
  group_by(riverGG, seasonGG, speciesGG, year) |> 
  summarize(nIndBySpp = n())

indCounts <- cd1 |> 
  group_by(riverGG, seasonGG, year) |> 
  summarize(nInd = n())

propNegLabels <- envIn_propNeg |> 
  group_by(riverGG, seasonGG, speciesGG, year) |> 
  summarize(propNeg = mean(propNeg),
            minTemp = min(temperature),
            minFlow = min(flowByRiverm3s),
            maxTemp = max(temperature),
            maxFlow = max(flowByRiverm3s)) |> 
  left_join(indCountsBySpp) |> 
  left_join(indCounts)


plotMergedBySeasonByEverything <- function(d, d2, r, s, spp, minYear = 2000, maxYear = 2017){
  ggplot(d |> 
           filter(riverGG == r,
                  year %in% c(minYear:maxYear), 
                  !is.na(seasonGG), 
                  seasonGG == s, 
                  speciesGG == spp), 
         aes(temperature, log10(flowByRiverm3s))
         ) +
    geom_smooth(se = FALSE, color = "darkgrey") +
    geom_point(aes(color = yday)) +
    geom_text(aes(
      x = minTemp - 0.5, 
      y = log10(minFlow) - 0.1, 
      label = round(propNeg, 2), 
      size = propNeg + 1), 
        data = d2|> 
          filter(riverGG == r, 
                 seasonGG == s, 
                 speciesGG == spp)
        ) +
    geom_text(aes(
      x = maxTemp - minTemp + 0.0,
      y = log10(maxFlow) - 0.1,
      label = paste(paste("nInd=", nInd), paste("nIndBySpp=", nIndBySpp), sep = "\n")
      ),
        data = d2|>
          filter(riverGG == r,
                 seasonGG == s,
                 speciesGG == spp)
        ) +
    labs(x = "Temperature (c)", y = "log10 Flow") +
    ggtitle(paste(r, s, spp, sep = ", ")) +
  facet_wrap(~year)
}

plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brook trout", 2000, 2017)

plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brown trout", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brown trout", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brown trout", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brown trout", 2002, 2017)

plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Atlantic salmon", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Atlantic salmon", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Atlantic salmon", 2002, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Atlantic salmon", 2002, 2017)

```


```{r}
ggplot(propNegSRsN |> filter(n > 10, riverGG=="West Brook", speciesGG == "Brook trout"), 
       aes(year, propNeg, color = factor(seasonGG))) +
  geom_point(aes(size = n)) +
  geom_line() +
  ggtitle("West brook") +
  labs(x = "Year", y = "Proportion of fish with negative growth in mass") +
  scale_color_discrete() 
  #facet_wrap(~season)
```




## Logistic models for environmental effects on propNeg
### Standardize flow and temperature
```{r}
# getZ <- function(d){
#   list(
#     mean = mean(d, na.rm = TRUE),
#     sd = sd(d, na.rm = TRUE)
#   )
# }
# fZ <- getZ(cd1$meanFlowByRiver)
# fT <- getZ(cd1$meanTemperature)

z <- cd1 |> 
  group_by(season) |> 
  summarize(fZMean = mean(meanFlowByRiver, na.rm = TRUE),
            fZSd = sd(meanFlowByRiver, na.rm = TRUE),
            fTMean = mean(meanTemperature, na.rm = TRUE),
            fTSd = sd(meanTemperature, na.rm = TRUE)
            )

cd1 <- cd1 |> 
  left_join(z) |> 
  mutate(meanFlowByRiverZ = (meanFlowByRiver - fZMean)/fZSd,
         meanTempZ = (meanTemperature - fTMean)/fTSd)
```

### Raw data with logistic fit for flow effect 
```{r}
ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species)

ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```

### Raw data with logistic fit for temperature effect 
```{r}
ggplot(cd1 |> filter(!is.na(negGrowth), meanTempZ > -4), aes(meanTempZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean temperature") +
  facet_grid(season~species)
```

## Logistic model for flow and temperature, one species at a time  
Species occupy different rivers, so an all-species model will have unequal river representation across species and don't need to predict where species are not. 

Need to think through whether these models make sense...

```{r}

runSppModels <- function(d, speciesIn) {
  models =
    tibble(model = 
      c(
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river',
          'negGrowth ~ meanFlowByRiverZ * meanTempZ + river',
          'negGrowth ~ meanFlowByRiverZ + meanTempZ + river', 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ' , 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season)',
          
          'negGrowth ~ meanFlowByRiverZ + meanTempZ * river * factor(season)', 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * observedWeight' 
        )
    ) |>
    mutate(
      fit = map(model, ~glm(.x, family = "binomial", data = d |> filter(species == speciesIn))),
      glanced = map(fit, broom::glance),
      tidied = map(fit, broom::tidy)
    )
  return(models)
}

```

### Predict p(neg growth in mass)
```{r}
predictSpp <- function(dIn, modIn, speciesIn){
  d <- dIn |> filter(species == speciesIn)
  
  byAIC = modIn |> 
    unnest(glanced) |>
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, fit, tidied)
  
  predDSpp <- expand.grid(
    meanFlowByRiverZ = seq(-1.5,1.5,0.25), 
    meanTempZ = seq(-1.5,1.5,0.25), 
    river = unique(d$river), 
    season = unique(d$season),
    observedWeight = seq(min(d$observedWeight, na.rm = TRUE), max(d$observedWeight, na.rm = TRUE), 40)
    )
  
  
  pred <- add_column(predDSpp, 
                        pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = "response")) |> 
             mutate(groupT = paste(river, season, meanTempZ, sep = "_"),
                    groupF = paste(river, season, meanFlowByRiverZ, sep = "_"))
  return(
    list(
      pred = pred,
      byAIC = byAIC
      )
  )
}   


```


### Brook trout
```{r}
speciesIn <- "bkt"
modBKT <- runSppModels(cd1, speciesIn)
predBKT <- predictSpp(cd1, modBKT, speciesIn)


ggplot(predBKT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)

```

### Brown trout
```{r}
speciesIn <- "bnt"

modBNT <- runSppModels(cd1, speciesIn)
predBNT <- predictSpp(cd1, modBNT, speciesIn)


ggplot(predBNT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```

### Atlantic salmon
```{r}

speciesIn <- "ats"

modATS <- runSppModels(cd1, speciesIn)
predATS <- predictSpp(cd1, modATS, speciesIn)


ggplot(predATS$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```


### Pairs plots




## Deprecated logistic models below

## Logistic model for flow and temperature, all species
### Model selection
```{r}
#| label: logistic models all species
modSpecies <- c("bkt", "ats", "bnt")
cd1Mod <- cd1 |> filter(species == modSpecies)

modFT0 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * species, family = "binomial", data = cd1Mod)
modFT1 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river + species, family = "binomial", data = cd1Mod)
modFT2 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT3 <- glm(negGrowth ~ meanFlowByRiverZ + meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT4 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT5 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT6 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + species , family = "binomial", data = cd1Mod)
modFT7 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ, family = "binomial", data = cd1Mod)


modFT8 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) + species, family = "binomial", data = cd1Mod)
modFT9 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)
modFT10 <- glm(negGrowth ~ meanFlowByRiverZ + meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)

modFT11 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * observedWeight + species, family = "binomial", data = cd1Mod)
modFT12 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * species * observedWeight, family = "binomial", data = cd1Mod)

AIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |> arrange(AIC)
```

### Model results for additive model (not very good)
```{r}

# https://www.statology.org/logistic-regression-in-r/
#summary(modFT3)
#anova(modFT3)

pscl::pR2(modFT3)["McFadden"]
caret::varImp(modFT3) |> arrange(desc(Overall))


```

### Model results for full interactive model (best model)
```{r}

# https://www.statology.org/logistic-regression-in-r/
#summary(modFT11)
#anova(modFT11)

# full interaction
pscl::pR2(modFT11)["McFadden"]
caret::varImp(modFT11) |> arrange(desc(Overall))
```


### Precict p(neg growth in mass)
```{r}
predD <- expand.grid(
  meanFlowByRiverZ = seq(-1.5,1.5,0.25), 
  meanTempZ = seq(-1.5,1.5,0.25), 
  river = unique(cd1$river), 
  species = unique(cd1$species), 
  season = unique(cd1$season),
  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)
  )


pred <- add_column(predD, 
                   pred = predict.glm(modFT11, predD, type = "response")) |> 
        mutate(groupT = paste(river, species, season, meanTempZ, sep = "_"),
               groupF = paste(river, species, season, meanFlowByRiverZ, sep = "_"))
                   
```

### Plot predictions
```{r}


ggplot(pred |> filter(meanTempZ %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowByRiverZ, pred, group= groupT)) +
  geom_line(aes(color = factor(meanTempZ))) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```



