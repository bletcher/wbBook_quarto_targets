# Growth in mass

```{r}
#| label: dataModelFlowOptions
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
#| label: librariesModelsFlow
#| echo: false
library(getWBData)
library(lubridate)
library(kableExtra)
library(GGally)
library(lme4)
library(targets)
library(relaimpo)
library(caret)
library(pscl)
library(tidyverse)

`%notin%` <- Negate(`%in%`)
```

Distribution of growth, negative growth\
- Seasonal differences  
- Species differences in size/growth/CF
- Patterns of negative growth


Causes of neg growth\
- Extrinsic\
- river, season, flow, temp\
- intrinsic\
- Sex (fall), life history, section, size, age, previous growth (CF?), movement (section/river)\
consequences of neg growth - survival\
- future growth (length and mass)\
- movement (section/river)\
- reprod success?\
- local density (con and hetero)

Probs with growth in mass\
spawning loss mass in the fall, esp in OB

Interaction between flow:temp, diff btw WB (groundwater dominated at low flow so cold) and tribs (combo of surface and gw?)

Compare growth with t/f cycle diagrams for each river

compare condition factor among species - looks like bkt growing faster in weight

flow/temp circles with gr on top

## Get data

### Get electrofishing data

```{r}
#| label: readInAllData
cd <- tar_read(cdWB_electro_target) # raw data
cd1 <- tar_read(cd1_target)
propNegSRS <- tar_read(propNegSRS_target)
propNegSRsN <- tar_read(propNegSRsN_target)

indCountsBySpp <- tar_read(indCountsBySpp_target) 
indCounts <- tar_read(indCounts_target) 
propNegLabels <- tar_read(propNegLabels_target)

negGr_beforeLast <- tar_read(negGr_beforeLast_target)

meanNegSRsN <- tar_read(meanNegSRsN_target)
meanNegSRsNWide <- tar_read(meanNegSRsNWide_target)

# df for pairs plots
cd1Wide_grWeight <- tar_read(cd1Wide_grWeight_target)
cd1Wide_observedWeight <- tar_read(cd1Wide_observedWeight_target)
```

### Get environmental data

```{r}
#| label: readInAllDataEnv
dummy=0 # change to force cache update??
envIn <- tar_read(envIn_target)
envIn_propNeg <- tar_read(envIn_propNeg_target)
```

## Examine raw data

### Limit data to consecutive sample captures (cd1)

Previous growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.

```{r}
#| label: consecSamples
# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> 
#   data.frame() |> 
#   filter(Freq > 0) |> 
#   arrange(Var1, Var2) |> 
#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> 
#   filter(year == 2010)


##### in targets
# cd1 <- cd |> 
#   filter(sampleNumberDiff == 1,
#          tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> 
#   mutate(negGrowth = grWeight < 0,
#          month = month(date),
#          dummy = 1) # change to force cache update
```

### Find outlier growth rates

#### Negative outlier growth

`1bf20ebe4e` and `1bf20ff490` have incorrect weights leading to very negative growth rates.\
Exclude these tags in `cd1_target`. The rest of the quite negative growth fish seem plausible (remember we can't account for stomach contents or egg loss).

```{r}
#| label: negOutlier
cd |> 
  arrange(grWeightS) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)
```

#### Positive outlier growth

Lots of very fast growth mostly in the spring. No clear way to exclude fish. `1c2c582218` is excluded in `cd1_target` because of very high growth in length.

```{r}
#| label: posOutlier
cd1 |> 
  arrange(desc(grWeightS)) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> 
  print(n = 10)
```

### Raw length, weight data graphs

#### Distribution of growth rates

```{r}
#| label: rawlengthWeight
ggplot(cd1, aes(grWeight, color = speciesGG)) +
  geom_freqpoly(bins = 50) +
  labs(x = "Growth in mass (/d)", y = "Frequency") +
  scale_color_discrete() +
  facet_wrap(~seasonGG)

ggplot(cd1, aes(grLength, color = speciesGG)) +
  geom_freqpoly(bins = 50) +
  labs(x = "Growth in Length (mm/d)", y = "Frequency") +
  scale_color_discrete() +
  facet_wrap(~seasonGG)
```

### Length vs weight by species

Very few outliers

```{r}
#| label: len_v_weight
plotLenW <- function(d, s){
  ggplot(d |> filter(species == s), aes(observedLength, observedWeight)) +
    geom_point(alpha = 0.5, size = 1) +
    scale_x_log10() +
    scale_y_log10() +
    #ggtitle(s) +
    labs(x = "Length (mm)", y = "Mass (mg)") +
    scale_color_discrete() +
    facet_grid(riverGG~year, scales = 'free')
}
```

::: panel-tabset
#### Brook trout

```{r}
#| label: len_v_weight_bkt

plotLenW(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: len_v_weight_bnt

plotLenW(cd1, "bnt")
```

#### Atlantic salmon

```{r}
#| label: len_v_weight_ats

plotLenW(cd1, "ats")
```
:::

### Weight vs weight at next sample

```{r}
#| label: weight_v_weight
plotWW <- function(d, spp){
  ggplot(d |> filter(species == spp), aes(observedWeight, lagObservedWeight, color = seasonGG)) +
    geom_point(alpha = 0.15) +
    guides(color = guide_legend(override.aes = list(alpha = 1))) +
    labs(x = "Mass (mg)", y = "Mass (mg) at next sample") +
    scale_color_discrete() +
    facet_wrap(~riverGG, scales = 'free')
}
```

::: panel-tabset
#### Brook trout

```{r}
#| label: weight_v_weight_bkt

plotWW(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: weight_v_weight_bnt

plotWW(cd1, "bkt")
```

#### Atlantic salmon

```{r}
#| label: weight_v_weight_ats

plotWW(cd1, "ats")
```
:::

### Pairs plot

```{r}
#| label: pairs

plotPairs <- function(d0, sppIn, cohortIn, firstSamp = 1, lastSamp = 9){
  d <- d0 |> 
    filter(speciesGG == sppIn, cohort %in% cohortIn) |> 
    select_if(~any(!is.na(.))) |>  # remove all-NA columns
    filter(firstObserved != lastObserved - 1) # remove single obs fish
  
  lowerFn <- function(data, mapping, method = "lm", ...) {
    ggplot(data = data, mapping = mapping) +
      geom_vline(xintercept = 0, color = 'darkgrey') +
      geom_hline(yintercept = 0, color = 'darkgrey') +
      geom_abline(intercept = 0, slope = 1) +
      geom_point(aes(color = factor(cohort))) +
      geom_smooth(aes(color = factor(cohort)), method = method, se = FALSE, ...) +
      geom_smooth(color = 'black', size = 1.5, method = method, se = FALSE, ...) 
  }

  ggpairs(
    d |> 
      dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),
    columns = (firstSamp+1):(lastSamp+1),
    lower = list(continuous = wrap(lowerFn, method = "lm")),
    #ggplot2::ggtitle(paste(sppIn, cohortIn)),
    #ggplot2::aes(colour = factor(cohort)),
    upper = "blank"
  )
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: pairs_bkt

plotPairs(cd1Wide_grWeight, "Brook trout", 2000:2015)
#plotPairs(cd1Wide_observedWeight, "Brook trout", 2000:2015)
```

#### Brown trout

```{r}
#| label: pairs_bnt

plotPairs(cd1Wide_grWeight, "Brook trout", 2000:2015)
#plotPairs(cd1Wide_observedWeight, "Brook trout", 2000:2015)
```

#### Atlantic salmon

```{r}
#| label: pairs_ats

plotPairs(cd1Wide_grWeight, "Atlantic salmon", 2000:2015)
#plotPairs(cd1Wide_observedWeight, "Atlantic salmon", 2000:2015)
```
:::



### Growth rate in length vs growth rate in mass

```{r}
#| label: grLen_v_grWeight
ggplot(cd1, aes(grLength, grWeight)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

plotGrLenMass <- function(d, s){
  ggplot(cd1 |> filter(species==s), aes(grLength, grWeight, color = factor(year))) +
    geom_point(alpha = 0.5) +
    geom_smooth(method="lm", se=FALSE) +
    guides(size = guide_legend(override.aes = list(alpha = 1))) +
    labs(x = "Growth in length", y = "Growth in mass") +
    scale_color_discrete() +
    facet_wrap(~seasonGG, scales = 'free')  
}
#  facet_wrap(~year)
```

::: panel-tabset
#### Brook trout

```{r}
#| label: grLen_v_grWeight_bkt

plotGrLenMass(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: grLen_v_grWeight_bnt

plotGrLenMass(cd1, "bnt")
```

#### Atlantic salmon

```{r}
#| label: grLen_v_grWeight_ats

plotGrLenMass(cd1, "ats")
```
:::

No relationship between means of neg and pos growth

```{r}
#| label: posNegGR
#| 

ggplot(meanNegSRsN |> filter(speciesGG == "Brook trout"), aes(year, meanNegPos, color = negGrowth, group = negGrowth)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = 0) +
  facet_grid(seasonGG~riverGG)

ggplot(meanNegSRsNWide, aes(`FALSE`, `TRUE`)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  facet_grid(seasonGG~riverGG)
```

## Flow and temperature growth relationships

### Mean flow effect on growth?

```{r}
#| label: flow_weight

plotFlowGR <- function(d, r){
ggplot(d |> filter(river == r), aes(meanFlowByRiver, grWeight, color = speciesGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_smooth(se = FALSE) +
  geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
  labs(x = "Mean flow", y = "Growth in mass") +
  scale_color_discrete() +
  #ggtitle(r) +
  facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

```

::: panel-tabset
#### West Brook

```{r}
#| label: flow_weight_wb

plotFlowGR(cd1, "west brook")
```

#### Open Large

```{r}
#| label: flow_weight_ol

plotFlowGR(cd1, "wb jimmy")
```

#### Open Small

```{r}
#| label: flow_weight_os

plotFlowGR(cd1, "wb mitchell")
```

#### Isolated small

```{r}
#| label: flow_weight_is

plotFlowGR(cd1, "wb obear")
```
:::

### Mean temperature effect on growth?

Maybe in Jimmy for bnt, or for ats

```{r}
#| label: temp_grWeight

plotTempGR <- function(d, s){
  ggplot(d |> filter(seasonGG == s), aes(meanTemperature, grWeight, color = speciesGG)) +
    geom_point(alpha = 0.5)  +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    geom_smooth(se = FALSE, color = 'darkgrey') +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = 'darkgrey') +
    labs(x = "Mean temperature (c)", y = "Growth in mass") +
    scale_color_discrete() +
   # ggtitle(s) +
    facet_grid(speciesGG~riverGG)#, scales = 'free')
}

```

::: panel-tabset
#### Spring

```{r}
#| label: temp_grWeight_spring

plotTempGR(cd1, "Spring")
```

#### Summer

```{r}
#| label: temp_grWeight_summer

plotTempGR(cd1, "Summer")
```

#### Autumn

```{r}
#| label: temp_grWeight_autumn

plotTempGR(cd1, "Autumn")
```

#### Winter

```{r}
#| label: temp_grWeight_winter

plotTempGR(cd1, "Winter")
```
:::

TO ADD pairwise charts for comparisons btw species, bkt:bnt, etc

## Proportion of fish with **negative growth**

### Proportion of fish with negative growth by species/river/season

```{r}
#| label: neg_pos
ggplot(cd1 |> filter(!is.na(negGrowth)), aes(negGrowth)) +
  geom_bar() +
  facet_grid(seasonGG~speciesGG+riverGG, scales = "free")
```

### Proportion of fish with negative growth by species/season

```{r}
#| label: propNegBySeason

ggplot(propNegSRS |> filter(n > 50), aes(seasonGG, propNeg, color = riverGG, group = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Season", y = "Proportion of fish with negative growth in mass") +
  scale_color_discrete() +
  facet_wrap(~speciesGG)
```

### Proportion of fish with negative growth by species/river/year

```{r}
#| label: propNegWB_BKT

plotPropNegByRiver <- function(d, spp){
  ggplot(d |> filter(n > 10,  speciesGG == spp), 
         aes(year, propNeg, color = factor(seasonGG))) +
    geom_point(aes(size = n)) +
    geom_line() +
    labs(x = "Year", y = "Proportion of fish with negative growth in mass") +
    scale_color_discrete() +
    facet_wrap(~riverGG)
}
```

::: panel-tabset
#### Brook trout

```{r}
#| label: propNegWB_BKT_bkt

plotPropNegByRiver(propNegSRsN, "Brook trout")
```

#### Brown trout

```{r}
#| label: propNegWB_BKT_bnt

plotPropNegByRiver(propNegSRsN |> filter(riverGG != "Open Small"), "Brown trout")
```

#### Atlantic salmon

```{r}
#| label: propNegWB_BKT_ats

plotPropNegByRiver(propNegSRsN, "Atlantic salmon")
```
:::

### Proportion of fish with negative growth by species/river/year

Break down season by year, compare across rivers

```{r}
#| label: neg_posN

ggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Year", y = "Proportion of fish with negative growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

```

## Environmental effects on proportion of fish with negative growth

### Proportion of fish with negative growth by **flow**

```{r}
#| label: negGrowth_flow

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("Mean flow") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("Mean flow") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  facet_grid(seasonGG~speciesGG)
```

### Proportion of fish with negative growth by **temperature**

```{r}
#| label: negGrowth_temp

plotNegGrowth_temp <- function(d, s){
  ggplot(d |> filter(n > 10, seasonGG == s), aes(mT, propNeg, color = riverGG)) +
    geom_point(aes(size = n)) +
    geom_smooth(method = "lm", se = FALSE) +
    scale_y_continuous("Proportion of fish with negative growth in mass") +
    scale_x_continuous("Mean temperature (C)") +
    scale_color_discrete() +
    ggtitle(s) +
    facet_grid(riverGG~speciesGG)
}

```

::: panel-tabset
#### Spring

```{r}
#| label: negGrowth_tempSPring
plotNegGrowth_temp(propNegSRsN, "Spring")
```

#### Summer

```{r}
#| label: negGrowth_tempSummer
plotNegGrowth_temp(propNegSRsN, "Summer")
```

#### Autumn

```{r}
#| label: negGrowth_tempAutumn
plotNegGrowth_temp(propNegSRsN, "Autumn")
```

#### Winter

```{r}
#| label: negGrowth_tempWinter
plotNegGrowth_temp(propNegSRsN, "Winter")
```
:::

### Proportion of fish with negative growth by **3 species fish counts**

```{r}
#| label: negGrowth_counts3Spp

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(nInd, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("3 species count") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(nInd, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("3 species count") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  facet_grid(seasonGG~speciesGG)
```

### Proportion of fish with negative growth by **conspecific fish counts**

```{r}
#| label: negGrowth_counts1Spp

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(nIndBySpp, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("conspecific count") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(nIndBySpp, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_log10("conspecific count") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  facet_grid(seasonGG~speciesGG)
```

## F/T cycle graphs

### Mean flow and temperature

```{r}
#| label: flow_temp_cycle_bySpecies
plot_mT_mF <- function(d, s, plotText){
  ggplot(d |> filter(n > 25, speciesGG == s), aes(mT, mF_log10, color = factor(seasonGG))) +
    geom_point(aes(size = propNeg)) +
    {if(plotText) geom_text(aes(label = year), vjust = 0, nudge_y = -0.075, check_overlap = FALSE, size = 3)} +
    labs(x = "Mean temperature (C)", y = "log10 of mean Flow") +
    scale_color_discrete() +
    facet_wrap(~riverGG, scales = "free")
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: flow_temp_cycle_bySpecies_bkt

plot_mT_mF(propNegSRsN, "Brook trout", FALSE)
```

#### Brown trout

```{r}
#| label: flow_temp_cycle_bySpecies_bnt

plot_mT_mF(propNegSRsN, "Brown trout", FALSE)
```

#### Atlantic salmon

```{r}
#| label: flow_temp_cycle_bySpecies_ats

plot_mT_mF(propNegSRsN, "Atlantic salmon", FALSE)
```
:::

### Mean flow and temperature with year labels

#### panel-tabset
### Brook trout

```{r}
#| label: flow_temp_cycle_bySpeciesYear_bkt

plot_mT_mF(propNegSRsN, "Brook trout", TRUE)
```

#### Brown trout

```{r}
#| label: flow_temp_cycle_bySpeciesYear_bnt

plot_mT_mF(propNegSRsN, "Brown trout", TRUE)
```

#### Atlantic salmon

```{r}
#| label: flow_temp_cycle_bySpeciesYear_ats

plot_mT_mF(propNegSRsN, "Atlantic salmon", TRUE)
```
:::

Mean flow and temperature values for each season and year for the West Brook\
Not very informative

```{r}
#| label: flow_temp_cycle_bySpeciesYear2
#| 
ggplot(propNegSRsN |> filter(n > 10, riverGG == 'West Brook') |> arrange(riverGG, speciesGG, year, seasonGG), aes(mT, mF_log10)) +
  geom_line() +
  geom_point(aes(color = factor(seasonGG))) +
  facet_wrap(~year)
```

### Yearly temperature/flow cycles of daily data

```{r}
#| label: mergePropNegPlot

plotMerged <- function(d, r, minYear = 2000, maxYear = 2017){
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear)), 
         aes(temperature, log10(flowByRiverm3s), color = seasonGG, group = seasonGG)) +
    geom_point() +
    geom_smooth(se = FALSE) +
    #geom_line() +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    facet_wrap(~year, scales = 'free')
}
# this plots f/t for all three species - good for filling in gaps

```

::: panel-tabset
#### West Brook

```{r}
#| label: mergePropNegPlot_wb

plotMerged(envIn_propNeg, "West Brook", 2000, 2017)
```

#### Open Large

```{r}
#| label: mergePropNegPlot_ol

plotMerged(envIn_propNeg, "Open Large", 2002, 2017)
```

#### Open Small

```{r}
#| label: mergePropNegPlot_os

plotMerged(envIn_propNeg, "Open Small", 2002, 2017)
```

#### Isolated small

```{r}
#| label: fmergePropNegPlot_is

plotMerged(envIn_propNeg, "Isolated Small", 2002, 2017)
```
:::

### Smooths of temperature/flow cycles of daily data by season

```{r}
#| label: plotMergedBySeason
#| echo: true

plotMergedBySeason <- function(d, r, minYear = 2000, maxYear = 2017) {
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), 
         aes(temperature, log10(flowByRiverm3s), 
             color = factor(year), group = year
             )
         ) +
    #geom_point() +
    geom_smooth(se = FALSE) +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    facet_wrap(~seasonGG, scales = 'free')
}

```

::: panel-tabset
#### West Brook

```{r}
#| label: plotMergedBySeason_wb

plotMergedBySeason(envIn_propNeg, "West Brook", 2000, 2017)
```

#### Open Large

```{r}
#| label: plotMergedBySeason_ol

plotMergedBySeason(envIn_propNeg, "Open Large", 2002, 2017)
```

#### Open Small

```{r}
#| label: plotMergedBySeason_os

plotMergedBySeason(envIn_propNeg, "Open Small", 2002, 2017)
```

#### Isolated small

```{r}
#| label: plotMergedBySeason_is

plotMergedBySeason(envIn_propNeg, "Isolated Small", 2002, 2017)
```
:::

TO ADD: low flow high density important? Look at interaction btw flow:density

### F/T cycles with labels

Plot F/T cycles by river, season, species with label for propNeg and conspecific and all-species abundances

```{r}
#| label: plotMergedBySeasonByEverything

plotMergedBySeasonByEverything <- function(d, d2, r, s, spp, minYear = 2000, maxYear = 2017){
  ggplot(d |> 
           filter(riverGG == r,
                  year %in% c(minYear:maxYear), 
                  !is.na(seasonGG), 
                  seasonGG == s, 
                  speciesGG == spp), 
         aes(temperature, log10(flowByRiverm3s))
         ) +
    geom_smooth(se = FALSE, color = "darkgrey") +
    geom_point(aes(color = yday)) +
    geom_text(aes(
      x = minTemp + 3.0, 
      y = log10(minFlow) - 1, 
      label = paste("propNeg=",round(propNeg, 2)) 
      #size = propNeg
      ), 
        data = d2|> 
          filter(riverGG == r, 
                 year %in% c(minYear:maxYear),
                 seasonGG == s, 
                 speciesGG == spp)
        ) +
    geom_text(aes(
      x = minTemp + 3.0,
      y = log10(minFlow) - 0.3,
      label = paste(paste("nIndAllSpp=", nInd), paste("nIndBySpp=", nIndBySpp), sep = "\n")
      ),
        data = d2|>
          filter(riverGG == r,
                 year %in% c(minYear:maxYear),
                 seasonGG == s,
                 speciesGG == spp)
        ) +
    labs(x = "Temperature (c)", y = "log10 Flow") +
    ggtitle(paste(r, s, spp, sep = ", ")) +
  facet_wrap(~year)
}

```

#### West Brook

::: panel-tabset
#### Spring

```{r}
#| label: WBPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Atlantic salmon", 2000, 2017)


```

#### Summer

```{r}
#| label: WBPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Atlantic salmon", 2000, 2017)
```

#### Autumn

```{r}
#| label: WBPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Atlantic salmon", 2000, 2017)


```

#### Winter

```{r}
#| label: WBPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Atlantic salmon", 2000, 2017)
```
:::

#### Open Large

::: panel-tabset
#### Spring

```{r}
#| label: OLpanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Atlantic salmon", 2000, 2017)


```

#### Summer

```{r}
#| label: OLPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Atlantic salmon", 2000, 2017)
```

#### Autumn

```{r}
#| label: OLPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Atlantic salmon", 2000, 2017)


```

#### Winter

```{r}
#| label: OLPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Atlantic salmon", 2000, 2017)
```
:::

#### Open Small

::: panel-tabset
#### Spring

```{r}
#| label: OSPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Spring", "Brown trout", 2000, 2017)
```

#### Summer

```{r}
#| label: OSPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Summer", "Brown trout", 2000, 2017)

```

#### Autumn

```{r}
#| label: OSPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Autumn", "Brown trout", 2000, 2017)

```

#### Winter

```{r}
#| label: OSPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Winter", "Brown trout", 2000, 2017)

```
:::

#### Isolated Small

::: panel-tabset
#### Spring

```{r}
#| label: ISPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Spring", "Brook trout", 2000, 2017)
```

#### Summer

```{r}
#| label: ISPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Summer", "Brook trout", 2000, 2017)

```

#### Autumn

```{r}
#| label: ISPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Autumn", "Brook trout", 2000, 2017)

```

#### Winter

```{r}
#| label: ISPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Winter", "Brook trout", 2000, 2017)

```
:::

## Consequences of negative growth
### Growth and last observation  
Relationship between individual growth and length of subsequent observations (how many more observations before the last observatoin) for individual fish.
```{r}
#| label: negGrowth_samplesLeft
plotGrowthSamplesLeft <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011, samplesBeforeLast >= 0), aes(grWeight, samplesBeforeLast)) +
    geom_point(alpha = 0.3) +
    geom_smooth(method = "lm", se = FALSE) +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    facet_grid(seasonGG~year)
}

plotGrowthSamplesLeft(cd1, "Brook trout", "West Brook")
plotGrowthSamplesLeft(cd1, "Brook trout", "Open Large")
plotGrowthSamplesLeft(cd1, "Brook trout", "Open Small")
plotGrowthSamplesLeft(cd1, "Brook trout", "Isolated Small")

plotGrowthSamplesLeft(cd1, "Brown trout", "West Brook")
```

```{r}
#| label: negGrowth_samplesLeftNoYear
plotGrowthSamplesLeftNoYear <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011, samplesBeforeLast >= 0), aes(grWeight, samplesBeforeLast)) +
    geom_point(alpha = 0.3) +
    geom_smooth(method = "lm", se = FALSE) +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    facet_wrap(~seasonGG)
}

plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "West Brook")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Open Large")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Open Small")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Isolated Small")

plotGrowthSamplesLeftNoYear(cd1, "Brown trout", "West Brook")
plotGrowthSamplesLeftNoYear(cd1, "Atlantic salmon", "West Brook")
```

```{r}
#| label: negGrowth_means

plotGR_sampsBL <- function(d, spp, r) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r), aes(meanGR, samplesBeforeLast, color = negGrowth)) + 
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    facet_grid(speciesGG~seasonGG+riverGG, scales = "free")
}

plotGR_sampsBL(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook", "Open Large"))


plotGR_sampsBL2 <- function(d, spp, r) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r), aes(meanGR, samplesBeforeLast, color = speciesGG)) + 
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    facet_grid(riverGG~negGrowth+seasonGG, scales = "free")
}

plotGR_sampsBL2(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook", "Open Large"))

plotGR_sampsBL3 <- function(d, spp, r, ng) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r, negGrowth %in% ng), aes(meanGR, samplesBeforeLast, color = speciesGG)) + 
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    scale_color_discrete() +
    ggtitle(paste(spp, r, ng, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    facet_wrap(negGrowth~seasonGG, scales = "free")
}

plotGR_sampsBL3(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook"), FALSE)

plotGR_sampsBL3(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook"), TRUE)
```

TO ADD: mean samplesBeforeLast by negGR
TO ADD: knownZ=0 vs knownZ==1, growth in previous interval
```{r}

# cd1_target |> 
#       group_by(speciesGG, riverGG, seasonGG, samplesBeforeLast, negGrowth) |> 

```



### Growth and movement distance
TO add: break avg move into negGR/not negGR
```{r}
#| label: growthMovement

plotGR_moveDist <- function(d, spp, r) {
  ggplot(d |> filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + 
    geom_point(alpha = 0.2) +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Movement distance") +
    facet_grid(speciesGG~seasonGG, scales = "free")
}

plotGR_moveDist(cd1, c("Brook trout","Brown trout","Atlantic salmon"), c("West Brook"))


```

```{r}
#| label: growthMovement2

plotGR_moveDist2 <- function(d, spp, r) {
  ggplot(d |> filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + 
    geom_point(alpha = 0.2) +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Movement distance") +
    facet_grid(riverGG~seasonGG, scales = "free")
}

plotGR_moveDist2(cd1, c("Brook trout"), c("West Brook", "Open Large", "Open Small", "Isolated Small"))

plotGR_moveDist2(cd1, c("Brown trout"), c("West Brook", "Open Large", "Open Small"))
```



## Logistic models for environmental effects on propNeg

### Standardize flow and temperature

```{r}
#| label: flowTempZ
#| 
# getZ <- function(d){
#   list(
#     mean = mean(d, na.rm = TRUE),
#     sd = sd(d, na.rm = TRUE)
#   )
# }
# fZ <- getZ(cd1$meanFlowByRiver)
# fT <- getZ(cd1$meanTemperature)

z <- cd1 |> 
  group_by(season) |> 
  summarize(fZMean = mean(meanFlowByRiver, na.rm = TRUE),
            fZSd = sd(meanFlowByRiver, na.rm = TRUE),
            fTMean = mean(meanTemperature, na.rm = TRUE),
            fTSd = sd(meanTemperature, na.rm = TRUE)
            )

cd1 <- cd1 |> 
  left_join(z) |> 
  mutate(meanFlowByRiverZ = (meanFlowByRiver - fZMean)/fZSd,
         meanTempZ = (meanTemperature - fTMean)/fTSd)
```

### Raw data with logistic fit for flow effect

```{r}
#| label: logisticFlow

ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species)

ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```

### Raw data with logistic fit for temperature effect

```{r}
#| label: logisticTemp

ggplot(cd1 |> filter(!is.na(negGrowth), meanTempZ > -4), aes(meanTempZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean temperature") +
  facet_grid(season~species)
```

## Logistic model for flow and temperature, one species at a time

Species occupy different rivers, so an all-species model will have unequal river representation across species and don't need to predict where species are not.

Need to think through whether these models make sense...

```{r}
#| label: runLogisticModels
runSppModels <- function(d, speciesIn) {
  models =
    tibble(model = 
      c(
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river',
          'negGrowth ~ meanFlowByRiverZ * meanTempZ + river',
          'negGrowth ~ meanFlowByRiverZ + meanTempZ + river', 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ' , 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season)',
          
          'negGrowth ~ meanFlowByRiverZ + meanTempZ * river * factor(season)', 
          
          'negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * observedWeight' 
        )
    ) |>
    mutate(
      fit = map(model, ~glm(.x, family = "binomial", data = d |> filter(species == speciesIn))),
      glanced = map(fit, broom::glance),
      tidied = map(fit, broom::tidy)
    )
  return(models)
}

```

### Predict p(neg growth in mass)

```{r}
#| label: predictLogistic

predictSpp <- function(dIn, modIn, speciesIn){
  d <- dIn |> filter(species == speciesIn)
  
  byAIC = modIn |> 
    unnest(glanced) |>
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, fit, tidied)
  
  predDSpp <- expand.grid(
    meanFlowByRiverZ = seq(-1.5,1.5,0.25), 
    meanTempZ = seq(-1.5,1.5,0.25), 
    river = unique(d$river), 
    season = unique(d$season),
    observedWeight = seq(min(d$observedWeight, na.rm = TRUE), max(d$observedWeight, na.rm = TRUE), 40)
    )
  
  
  pred <- add_column(predDSpp, 
                        pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = "response")) |> 
             mutate(groupT = paste(river, season, meanTempZ, sep = "_"),
                    groupF = paste(river, season, meanFlowByRiverZ, sep = "_"))
  return(
    list(
      pred = pred,
      byAIC = byAIC
      )
  )
}   


```

### Brook trout

```{r}
#| label: modBKT
speciesIn <- "bkt"
modBKT <- runSppModels(cd1, speciesIn)
predBKT <- predictSpp(cd1, modBKT, speciesIn)


ggplot(predBKT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)

```

### Brown trout

```{r}
#| label: modBnt
#| 
speciesIn <- "bnt"

modBNT <- runSppModels(cd1, speciesIn)
predBNT <- predictSpp(cd1, modBNT, speciesIn)


ggplot(predBNT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```

### Atlantic salmon

```{r}
#| label: modAts
#| 
speciesIn <- "ats"

modATS <- runSppModels(cd1, speciesIn)
predATS <- predictSpp(cd1, modATS, speciesIn)


ggplot(predATS$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowByRiverZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```

## Two growth models

### Size-adjusted growth model

#### Get l-w relationships for size-adjusted growth model

Here, we will explore size-independent growth in mass, see `Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x.` Size-independent growth (`grWeightS`) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().\
`grWeightS` uses the slope of `log(observedWeight)` \~ `log(grWeight)` for each river and season and species to adjust growth.\
A simple linear models shows we need to get separate slopes for each river and season and species.

```{r}
#| label: grW_models
ggplot(cd1 |> filter(grWeight > 0), 
       aes(log(observedWeight), log(grWeight), color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Log of growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

mod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))
mod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))
mod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))
mod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))
mod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))

AIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)
```

### Compare size-adjusted and instantaneous growth

Differences don't seem big enough to warrant the extra complexity from the s-adjusted growth metric

```{r}
#| label: grWeight_v_grWeightS
ggplot(cd1, aes(grWeight, grWeightS, color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_abline(intercept = 0, slope = 1) +
  labs(y = "Gowth in mass", x = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)

ggplot(cd1 |> 
         dplyr::select(observedWeight, grWeight, grWeightS, seasonGG, speciesGG) |> 
         pivot_longer(cols = c(grWeight, grWeightS)),
       
       aes(log(observedWeight), value, color = name)) +
  geom_point(alpha = 0.05 )  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)
```

## Compare growth in length and mass

### Growth rate in length vs size-independent growth rate in mass

```{r}
#| label: grLen_v_grWeightS
ggplot(cd1, aes(grLength, grWeightS)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  facet_grid(seasonGG~speciesGG)
```

## **Deprecated** logistic models below

### Logistic model for flow and temperature, all species

### Model selection

```{r}
#| label: logistic models all species
modSpecies <- c("bkt", "ats", "bnt")
cd1Mod <- cd1 |> filter(species == modSpecies)

modFT0 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * species, family = "binomial", data = cd1Mod)
modFT1 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river + species, family = "binomial", data = cd1Mod)
modFT2 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT3 <- glm(negGrowth ~ meanFlowByRiverZ + meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT4 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT5 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT6 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ + species , family = "binomial", data = cd1Mod)
modFT7 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ, family = "binomial", data = cd1Mod)


modFT8 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) + species, family = "binomial", data = cd1Mod)
modFT9 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)
modFT10 <- glm(negGrowth ~ meanFlowByRiverZ + meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)

modFT11 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * observedWeight + species, family = "binomial", data = cd1Mod)
modFT12 <- glm(negGrowth ~ meanFlowByRiverZ * meanTempZ * river * factor(season) * species * observedWeight, family = "binomial", data = cd1Mod)

AIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |> arrange(AIC)
```

### Model results for additive model (not very good)

```{r}
#| label: badAdditiveModel
# https://www.statology.org/logistic-regression-in-r/
#summary(modFT3)
#anova(modFT3)

pscl::pR2(modFT3)["McFadden"]
caret::varImp(modFT3) |> arrange(desc(Overall))


```

### Model results for full interactive model (best model)

```{r}
#| label: fullModel
# https://www.statology.org/logistic-regression-in-r/
#summary(modFT11)
#anova(modFT11)

# full interaction
pscl::pR2(modFT11)["McFadden"]
caret::varImp(modFT11) |> arrange(desc(Overall))
```

### Precict p(neg growth in mass)

```{r}
#| label: predictFull
#| 
predD <- expand.grid(
  meanFlowByRiverZ = seq(-1.5,1.5,0.25), 
  meanTempZ = seq(-1.5,1.5,0.25), 
  river = unique(cd1$river), 
  species = unique(cd1$species), 
  season = unique(cd1$season),
  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)
  )


pred <- add_column(predD, 
                   pred = predict.glm(modFT11, predD, type = "response")) |> 
        mutate(groupT = paste(river, species, season, meanTempZ, sep = "_"),
               groupF = paste(river, species, season, meanFlowByRiverZ, sep = "_"))
                   
```

### Plot predictions

```{r}
#| label: plotPred

ggplot(pred |> filter(meanTempZ %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowByRiverZ, pred, group= groupT)) +
  geom_line(aes(color = factor(meanTempZ))) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```
