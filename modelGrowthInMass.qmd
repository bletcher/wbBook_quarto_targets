---
editor: 
  markdown: 
    wrap: 72
---

# Growth in mass

```{r}
#| label: dataModelGrowthInMassOptions
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
#| label: librariesModelsFlow
#| echo: false

######################################################

# for gams
library(gratia)
library(arm)
library(relaimpo)
library(GGally)
# library(linkedModels)
library(arrayhelpers)
library(mgcv)
#####################################################

library(getWBData)
library(lubridate)
library(kableExtra)
library(GGally)
library(lme4)
library(targets)
library(relaimpo)
library(caret)
library(pscl)

library(getPrepareWBData)

library(car)
library(lmtest)
library(rcompanion)

# for xgboost models
library(rsample)      # data splitting 
library(gbm)          # basic implementation
library(xgboost)      # a faster implementation of gbm
#library(h2o)          # a java-based platform
library(pdp)          # model visualization
library(lime)
library(vtreat)
library(Ckmeans.1d.dp)

library(hstats)

library(ggExtra)

library(tidyverse)

source('./R/generalFunctions.R')

`%notin%` <- Negate(`%in%`)
```

Distribution of growth, negative growth\
- Seasonal differences\
- Species differences in size/growth/CF - Patterns of negative growth

Causes of neg growth\
- Extrinsic\
- river, season, flow, temp\
- intrinsic\
- Sex (fall), life history, section, size, age, previous growth (CF?),
movement (section/river)\
consequences of neg growth - survival\
- future growth (length and mass)\
- movement (section/river)\
- reprod success?\
- local density (con and hetero)

Probs with growth in mass\
spawning loss mass in the fall, esp in OB

Interaction between flow:temp, diff btw WB (groundwater dominated at low
flow so cold) and tribs (combo of surface and gw?)

Compare growth with t/f cycle diagrams for each river

compare condition factor among species - looks like bkt growing faster
in weight

flow/temp circles with gr on top

## Get data

### Get electrofishing data

```{r}
#| label: readInAllData
#| cache: false
library(targets)
cd <- tar_read(cdWB_electro_target) # raw data

cd1 <- tar_read(cd1_target) # from modelGrowthInMass_target
propNegSRS <- tar_read(propNegSRS_target)
propNegSRsN <- tar_read(propNegSRsN_target)

indCountsBySpp <- tar_read(indCountsBySpp_target) 
indCounts <- tar_read(indCounts_target) 
propNegLabels <- tar_read(propNegLabels_target)

negGr_beforeLast <- tar_read(negGr_beforeLast_target)
negGr_beforeLastMean <- tar_read(negGr_beforeLastMean_target)
negGr_beforeLastMean_year <- tar_read(negGr_beforeLastMean_year_target)

meanNegSRsN <- tar_read(meanNegSRsN_target)
meanNegSRsNWide <- tar_read(meanNegSRsNWide_target)

# df for pairs plots
cd1Wide_grWeight <- tar_read(cd1Wide_grWeight_target)
cd1Wide_observedWeight <- tar_read(cd1Wide_observedWeight_target)

dGAM <- tar_read(dGAM_target) # from modelGrowthInMass_target
```

### Get environmental data

```{r}
#| label: readInAllDataEnv
#| cache: false
library(targets)
dummy=0 # change to force cache update??
envIn <- tar_read(envIn_target)
envIn_propNeg <- tar_read(envIn_propNeg_target)
```

## Examine raw data

### Limit data to consecutive sample captures (cd1)

Previous growth models with length used all possible observations for a
fish and interpolated missing observations. Here, we are just looking at
consecutive captures to estimate growth over just that interval.

```{r}
#| label: consecSamples
# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> 
#   data.frame() |> 
#   filter(Freq > 0) |> 
#   arrange(Var1, Var2) |> 
#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> 
#   filter(year == 2010)


##### in targets
# cd1 <- cd |> 
#   filter(sampleNumberDiff == 1,
#          tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> 
#   mutate(negGrowth = grWeight < 0,
#          month = month(date),
#          dummy = 1) # change to force cache update
```

### Find outlier growth rates

#### Negative outlier growth

`1bf20ebe4e` and `1bf20ff490` have incorrect weights leading to very
negative growth rates.\
Exclude these tags in `cd1_target`. The rest of the quite negative
growth fish seem plausible (remember we can't account for stomach
contents or egg loss).

```{r}
#| label: negOutlier
cd |> 
  arrange(grWeightS) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)
```

#### Positive outlier growth

Lots of very fast growth mostly in the spring. No clear way to exclude
fish. `1c2c582218` is excluded in `cd1_target` because of very high
growth in length.

```{r}
#| label: posOutlier
cd1 |> 
  arrange(desc(grWeightS)) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> 
  print(n = 10)
```

### Numbers of observations for analysis
```{r}
#| label: rawObs
#| 
min(cd1$year)
max(cd1$year)
table(cd1$species, cd1$year)


table(cd1$species)


```

```{r}
#| label: rawUniques
#| 

length(unique(cd1$tag))
cd1 |> 
  group_by(species) |> 
  summarize(tag = (unique(tag))) |> 
  reframe(count = n())


```


### Raw length, weight data graphs

#### Distribution of growth rates

```{r}
#| label: rawlengthWeight
ggplot(cd1, aes(grWeight, color = speciesGG, linetype = speciesGG)) +
  geom_freqpoly(bins = 50) +
  labs(x = "Growth in mass (/d)", y = "Frequency") +
  #scale_color_discrete() +
  geom_vline(xintercept = 0) +
  xlim(c(-0.01, 0.028)) +
  theme_publication() +
  scale_color_grey() +
  facet_wrap(~seasonGG)

ggplot(cd1, aes(grLength, color = speciesGG)) +
  geom_freqpoly(bins = 50) +
  labs(x = "Growth in Length (mm/d)", y = "Frequency") +
  scale_color_discrete() +
  geom_vline(xintercept = 0) +
  theme_publication() +
  facet_wrap(~seasonGG)
```

### Length vs weight by species

Very few outliers

```{r}
#| label: len_v_weight
plotLenW <- function(d, s){
  ggplot(d |> filter(species == s), aes(observedLength, observedWeight)) +
    geom_point(alpha = 0.5, size = 1) +
    scale_x_log10() +
    scale_y_log10() +
    #ggtitle(s) +
    labs(x = "Length (mm)", y = "Mass (mg)") +
    scale_color_discrete() +
    theme_publication() +
    facet_grid(riverGG~year, scales = 'free')
}
```

::: panel-tabset
#### Brook trout

```{r}
#| label: len_v_weight_bkt

plotLenW(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: len_v_weight_bnt

plotLenW(cd1, "bnt")
```

#### Atlantic salmon

```{r}
#| label: len_v_weight_ats

plotLenW(cd1, "ats")
```
:::

### Weight vs weight at next sample

```{r}
#| label: weight_v_weight
plotWW <- function(d, spp){
  ggplot(d |> filter(species == spp), aes(observedWeight, lagObservedWeight, color = seasonGG)) +
    geom_point(alpha = 0.15) +
    guides(color = guide_legend(override.aes = list(alpha = 1))) +
    labs(x = "Mass (mg)", y = "Mass (mg) at next sample") +
    scale_color_discrete() +
    theme_publication() +
    facet_wrap(~riverGG, scales = 'free')
}
```

::: panel-tabset
#### Brook trout

```{r}
#| label: weight_v_weight_bkt

plotWW(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: weight_v_weight_bnt

plotWW(cd1, "bnt")
```

#### Atlantic salmon

```{r}
#| label: weight_v_weight_ats

plotWW(cd1, "ats")
```
:::

### Growth rate pairs plots

By species, all cohorts\
Row and column labels in the pairs plots are 'age'\_'season'

```{r}
#| label: pairs

plotPairs <- function(d0, sppIn, cohortIn, firstSamp = 1, lastSamp = 9, upperBlank = FALSE){
  d <- d0 |> 
    filter(speciesGG == sppIn, cohort %in% cohortIn) |> 
    select_if(~any(!is.na(.))) |>  # remove all-NA columns
    filter(firstObserved != lastObserved - 1) # remove single obs fish
  
  lowerFn <- function(data, mapping, method = "lm", ...) {
    ggplot(data = data, mapping = mapping) +
      geom_vline(xintercept = 0, color = 'darkgrey') +
      geom_hline(yintercept = 0, color = 'darkgrey') +
      geom_abline(intercept = 0, slope = 1) +
      geom_smooth(aes(color = factor(cohort)), method = method, se = FALSE, ...) +
      geom_point(aes(color = factor(cohort))) +
      geom_smooth(color = 'black', size = 1.1, method = method, se = FALSE, ...) +
      theme_publication() 
  }

  if(upperBlank) {
    out <- ggpairs(
      d |> 
        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),
      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column
      lower = list(continuous = wrap(lowerFn, method = "lm")),
      upper = "blank"
    ) 
  } else {
    out <- ggpairs(
      d |> 
        dplyr::select(-c(speciesGG, tag, firstObserved, lastObserved)),
      columns = (firstSamp+1):(lastSamp+1), # +1 to skip cohort column
      lower = list(continuous = wrap(lowerFn, method = "lm"))
    )
  }
  return(out)
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: pairs_bkt

plotPairs(cd1Wide_grWeight, "Brook trout", 2000:2015, 1, 9)
#plotPairs(cd1Wide_observedWeight, "Brook trout", 2000:2015)
```

#### Brown trout

```{r}
#| label: pairs_bnt

plotPairs(cd1Wide_grWeight, "Brown trout", 2000:2015, 1, 9)
#plotPairs(cd1Wide_observedWeight, "Brook trout", 2000:2015)
```

#### Atlantic salmon

```{r}
#| label: pairs_ats

plotPairs(cd1Wide_grWeight, "Atlantic salmon", 2000:2015, 1, 8) # missing data in column 9
#plotPairs(cd1Wide_observedWeight, "Atlantic salmon", 2000:2015)
```
:::

#### Brook trout by cohort

Row and column labels are 'age'\_'season'\
Color by river - make new function

::: panel-tabset
#### 2000

```{r}
#| label: pairs_bkt2000

plotPairs(cd1Wide_grWeight, "Brook trout", 2000, 1, 8, upperBlank = TRUE)
```

#### 2001

```{r}
#| label: pairs_bkt2001

plotPairs(cd1Wide_grWeight, "Brook trout", 2001, upperBlank = TRUE)
```

#### 2002

```{r}
#| label: pairs_bkt2002

plotPairs(cd1Wide_grWeight, "Brook trout", 2002, 1, 9, upperBlank = TRUE)
```

#### 2003

```{r}
#| label: pairs_bkt2003

plotPairs(cd1Wide_grWeight, "Brook trout", 2003, upperBlank = TRUE)
```

#### 2004

```{r}
#| label: pairs_bkt2004

plotPairs(cd1Wide_grWeight, "Brook trout", 2004, upperBlank = TRUE)
```

#### 2005

```{r}
#| label: pairs_bkt2005

plotPairs(cd1Wide_grWeight, "Brook trout", 2005, upperBlank = TRUE)
```

#### 2006

```{r}
#| label: pairs_bkt2006

plotPairs(cd1Wide_grWeight, "Brook trout", 2006, upperBlank = TRUE)
```

#### 2007

```{r}
#| label: pairs_bkt2007

plotPairs(cd1Wide_grWeight, "Brook trout", 2007, upperBlank = TRUE)
```

#### 2008

```{r}
#| label: pairs_bkt2008

plotPairs(cd1Wide_grWeight, "Brook trout", 2008, upperBlank = TRUE)
```

#### 2009

```{r}
#| label: pairs_bkt2009

plotPairs(cd1Wide_grWeight, "Brook trout", 2009, upperBlank = TRUE)
```

#### 2010

```{r}
#| label: pairs_bkt2010

plotPairs(cd1Wide_grWeight, "Brook trout", 2010, 1, 8, upperBlank = TRUE)
```

#### 2011

```{r}
#| label: pairs_bkt2011

plotPairs(cd1Wide_grWeight, "Brook trout", 2011, 1, 7, upperBlank = TRUE)
```

#### 2012

```{r}
#| label: pairs_bkt2012

plotPairs(cd1Wide_grWeight, "Brook trout", 2012, upperBlank = TRUE)
```

#### 2013

```{r}
#| label: pairs_bkt2013

plotPairs(cd1Wide_grWeight, "Brook trout", 2013, upperBlank = TRUE)
```

#### 2014

```{r}
#| label: pairs_bkt2014

plotPairs(cd1Wide_grWeight, "Brook trout", 2014, 1, 5, upperBlank = TRUE)
```
:::

#### Consecutive season growth comparisons by age_season

Brook trout

```{r}
#| label: pairsByAgeSeason

ggplot(cd1Wide_grWeight |> filter(speciesGG == "Brook trout", cohort %in% 2000:2014, `0_4` < 0.01), aes(`0_3`, `0_4`, color = factor(cohort))) +
  geom_point() +
  geom_vline(xintercept = 0, color = 'darkgrey') +
  geom_hline(yintercept = 0, color = 'darkgrey') +
  #geom_abline(intercept = 0, slope = 1) +
  geom_smooth(method = "lm", se = FALSE, color = '#45454d') +
  guides(colour = FALSE) +
  theme_publication() +
  facet_wrap(~cohort)

ggplot(cd1Wide_grWeight |> filter(speciesGG == "Brook trout", cohort %in% 2000:2014), aes(`0_4`, `1_1`, color = factor(cohort))) +
  geom_point() +
  geom_vline(xintercept = 0, color = 'darkgrey') +
  geom_hline(yintercept = 0, color = 'darkgrey') +
  #geom_abline(intercept = 0, slope = 1) +
  geom_smooth(method = "lm", se = FALSE, color = '#45454d') +
  guides(colour = FALSE) +
  theme_publication() +  
  facet_wrap(~cohort)

ggplot(cd1Wide_grWeight |> filter(speciesGG == "Brook trout", cohort %in% 2000:2014), aes(`1_1`, `1_2`, color = factor(cohort))) +
  geom_point() +
  geom_vline(xintercept = 0, color = 'darkgrey') +
  geom_hline(yintercept = 0, color = 'darkgrey') +
  #geom_abline(intercept = 0, slope = 1) +
  geom_smooth(method = "lm", se = FALSE) +
  guides(colour = FALSE) +
  theme_publication() +  
  facet_wrap(~cohort)

ggplot(cd1Wide_grWeight |> filter(speciesGG == "Brook trout", cohort %in% 2000:2014), aes(`1_2`, `1_3`, color = factor(cohort))) +
  geom_point() +
  geom_vline(xintercept = 0, color = 'darkgrey') +
  geom_hline(yintercept = 0, color = 'darkgrey') +
  #geom_abline(intercept = 0, slope = 1) +
  geom_smooth(method = "lm", se = FALSE, color = '#45454d') +
  guides(colour = FALSE) +
  theme_publication() +  
  facet_wrap(~cohort)
 
ggplot(cd1Wide_grWeight |> filter(speciesGG == "Brook trout", cohort %in% 2000:2012), aes(`1_1`, `2_1`, color = factor(cohort))) +
  geom_point() +
  geom_vline(xintercept = 0, color = 'darkgrey') +
  geom_hline(yintercept = 0, color = 'darkgrey') +
  geom_abline(intercept = 0, slope = 1) +
  geom_smooth(method = "lm", se = FALSE, color = '#45454d') +
  guides(colour = FALSE) +
  theme_publication() +  
  facet_wrap(~cohort)
 
```

### Growth rate in length vs growth rate in mass

```{r}
#| label: grLen_v_grWeight
ggplot(cd1, aes(grLength, grWeight)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Growth in mass") +
  scale_color_discrete() +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)

plotGrLenMass <- function(d, s){
  ggplot(cd1 |> filter(species==s), aes(grLength, grWeight, color = factor(year))) +
    geom_point(alpha = 0.5) +
    geom_smooth(method="lm", se=FALSE) +
    guides(size = guide_legend(override.aes = list(alpha = 1))) +
    labs(x = "Growth in length", y = "Growth in mass") +
    scale_color_discrete() +
    theme_publication(legendPosition = "right", legendDirection = "vertical") +
    facet_wrap(~seasonGG, scales = 'free')  
}
#  facet_wrap(~year)
```

::: panel-tabset
#### Brook trout

```{r}
#| label: grLen_v_grWeight_bkt

plotGrLenMass(cd1, "bkt")
```

#### Brown trout

```{r}
#| label: grLen_v_grWeight_bnt

plotGrLenMass(cd1, "bnt")
```

#### Atlantic salmon

```{r}
#| label: grLen_v_grWeight_ats

plotGrLenMass(cd1, "ats")
```
:::

No relationship between means of neg and pos growth

```{r}
#| label: posNegGR
#| 

ggplot(meanNegSRsN |> filter(speciesGG == "Brook trout"), aes(year, meanNegPos, color = negGrowth, group = negGrowth)) +
  geom_point() +
  geom_line() +
  geom_hline(yintercept = 0) +
  theme_publication() +
  facet_grid(seasonGG~riverGG)

ggplot(meanNegSRsNWide, aes(`FALSE`, `TRUE`)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  theme_publication() +  
  facet_grid(seasonGG~riverGG)
```

## Body size effect on probability of negative growth
```{r}
#| label: propNegSize



ggplot(cd1 |> filter(!is.na(negGrowth), riverGG == "West Brook", seasonGG %in% c("Summer", "Autumn")), aes(observedWeight, negGrowth*1, color = speciesGG, fill = speciesGG)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  #geom_dotplot(x = observedWeight, y = negGrowth*1, fill = speciesGG) +
  #geom_smooth() +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial")
              
              #se = FALSE
              ) +
  theme_publication() +  
  labs(x = "Fish mass (mg)", y = "Probability of negative growth") +
  scale_color_grey() +
  scale_fill_grey() +
  xlim(c(0,200)) +
  facet_wrap(~seasonGG)


dfPlot <- cd1 |> filter(!is.na(negGrowth), riverGG == "West Brook", seasonGG %in% c("Summer", "Autumn"))

ggplot(dfPlot) +
  geom_point(aes(observedWeight, negGrowth*1, colour = speciesGG, fill = speciesGG),alpha = 0) +
  
  geom_density(aes(x = observedWeight, y = (-..density..* 4 + 1) , color = speciesGG, linetype = speciesGG), data = dfPlot |> filter(negGrowth == TRUE)) +
  
  geom_density(aes(x = observedWeight, ..density..* 4, color = speciesGG, linetype = speciesGG), data = dfPlot |> filter(negGrowth == FALSE)) +

  geom_smooth(aes(observedWeight, negGrowth*1, color = speciesGG, fill = speciesGG, linetype = speciesGG),
              method = "glm", 
              method.args = list(family = "binomial")
              ) +
  theme_publication() +  
  labs(x = "Fish mass (mg)", y = "Probability of negative growth") +
  scale_color_grey() +
  scale_fill_grey() +
  #scale_fill_brewer() +
  xlim(c(0,200)) +
  facet_wrap(~seasonGG)


#####################3

ggplot(cd1 |> filter(!is.na(negGrowth), species == "bkt", seasonGG %in% c("Summer", "Autumn")), aes(observedWeight, negGrowth*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  #geom_smooth() +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              color = "black"
              #se = FALSE
              ) +
  theme_publication() +  
  labs(x = "Fish mass (mg)", y = "Probability of negative growth") +
  facet_grid(seasonGG~riverGG)
####
dataPlotBKT <- cd1 |> filter(!is.na(negGrowth), species == "bkt", seasonGG %in% c("Summer", "Autumn"))
ggplot(dataPlotBKT, aes(observedWeight, negGrowth*1)) +
  geom_density(aes(x = observedWeight, y = (-..density..* 4 + 1) ), data = dataPlotBKT |> filter(negGrowth == TRUE)) +
  
  geom_density(aes(x = observedWeight, ..density..* 4), data = dataPlotBKT |> filter(negGrowth == FALSE)) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              color = "black"
              #se = FALSE
              ) +
  theme_publication() +  
  labs(x = "Fish mass (mg)", y = "Probability of negative growth") +
  facet_grid(seasonGG~riverGG)


############################

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG != "Spring"), aes(observedWeight, negGrowth*1, color = speciesGG)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  #geom_smooth() +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial")
              
              #se = FALSE
              ) +
  theme_publication() +  
  facet_grid(seasonGG~riverGG)

ggplot(cd1 |> filter(!is.na(negGrowth), species == "bkt", seasonGG != "Spring"), aes(observedWeight, negGrowth*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth() +
  geom_smooth(method = "lm") +
  theme_publication() +  
  facet_grid(seasonGG~riverGG)

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG == "Summer"), aes(observedWeight, negGrowth*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth() +
  geom_smooth(method = "lm") +
  theme_publication() +  
  facet_grid(speciesGG~riverGG, scales = "free")

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG == "Summer", speciesGG == "Brook trout", riverGG == "West Brook", year > 2001), aes(observedWeight, negGrowth*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth(se=FALSE) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  theme_publication() +  
  facet_wrap(~year)#, scales = "free")

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG == "Summer", speciesGG == "Brook trout", riverGG == "West Brook", year > 2001), aes(observedWeight, grWeight*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth(se=FALSE) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  theme_publication() +  
  facet_wrap(~year)#, scales = "free")

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG == "Summer", speciesGG == "Brook trout", riverGG == "West Brook", year > 2001), aes(ageInSamples, grWeight*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth(se=FALSE) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  theme_publication() +  
  facet_wrap(~year)#, scales = "free")

ggplot(cd1 |> filter(!is.na(negGrowth), seasonGG == "Summer", speciesGG == "Brook trout", riverGG == "West Brook", year > 2001, ageInSamples > 0), aes(ageInSamples, negGrowth*1)) +
  #geom_point(alpha = 0.1, ) +
  geom_jitter(alpha = 0.1, width = 0.0, height = 0.1) +
  geom_smooth(se=FALSE) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  theme_publication() +  
  facet_wrap(~year)#, scales = "free")
```


## Flow and temperature growth relationships

### Mean flow effect on growth?

```{r}
#| label: flow_weight

plotFlowGR <- function(d, r){
ggplot(d |> filter(river == r), aes(meanFlowByRiver, grWeight, color = speciesGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_smooth(se = FALSE) +
  geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2)) +
  labs(x = "Mean flow", y = "Growth in mass") +
  scale_color_discrete() +
  #ggtitle(r) +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)#, scales = 'free')
}

```

::: panel-tabset
#### West Brook

```{r}
#| label: flow_weight_wb

plotFlowGR(cd1, "west brook")
```

#### Open Large

```{r}
#| label: flow_weight_ol

plotFlowGR(cd1, "wb jimmy")
```

#### Open Small

```{r}
#| label: flow_weight_os

plotFlowGR(cd1, "wb mitchell")
```

#### Isolated small

```{r}
#| label: flow_weight_is

plotFlowGR(cd1, "wb obear")
```
:::

### Mean temperature effect on growth?

Maybe in Jimmy for bnt, or for ats

```{r}
#| label: temp_grWeight

plotTempGR <- function(d, s){
  ggplot(d |> filter(seasonGG == s), aes(meanTemperature, grWeight, color = speciesGG)) +
    geom_point(alpha = 0.5)  +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    geom_smooth(se = FALSE, color = 'darkgrey') +
    geom_smooth(method = "lm", se =FALSE, formula = y~poly(x,2), color = 'darkgrey') +
    labs(x = "Mean temperature (c)", y = "Growth in mass") +
    scale_color_discrete() +
   # ggtitle(s) +
    theme_publication() +  
    facet_grid(speciesGG~riverGG)#, scales = 'free')
}

```

::: panel-tabset
#### Spring

```{r}
#| label: temp_grWeight_spring

plotTempGR(cd1, "Spring")
```

#### Summer

```{r}
#| label: temp_grWeight_summer

plotTempGR(cd1, "Summer")
```

#### Autumn

```{r}
#| label: temp_grWeight_autumn

plotTempGR(cd1, "Autumn")
```

#### Winter

```{r}
#| label: temp_grWeight_winter

plotTempGR(cd1, "Winter")
```
:::

## Proportion of observations with **negative growth**  

Counts/proportions of negative growth  
Proportions for Table 1
```{r}
#| label: neg_posCounts

# All
cd1 |> 
  filter(!is.na(negGrowth)) |> 
  mutate(nTotal = n()) |> 
  group_by(nTotal, negGrowth) |> 
  summarize(n = n()) |> 
  mutate(prop = n/nTotal)

#by river
cd1 |> 
  filter(!is.na(negGrowth)) |> 
  group_by(riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))


#by species
cd1 |> 
  filter(!is.na(negGrowth)) |> 
  group_by(species, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by season
cd1 |> 
  filter(!is.na(negGrowth)) |> 
  group_by(season, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))


```

#### Brook trout
```{r}
#| label: propBKT

# by season
cd1 |> 
  filter(!is.na(negGrowth), species == 'bkt') |> 
  group_by(season, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by river
cd1 |> 
  filter(!is.na(negGrowth), species == 'bkt') |> 
  group_by(riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by season/river
cd1 |> 
  filter(!is.na(negGrowth), species == 'bkt') |> 
  group_by(season, riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))
```

#### Brown trout
```{r}
#| label: propBNT

# by season
cd1 |> 
  filter(!is.na(negGrowth), species == 'bnt') |> 
  group_by(season, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by river
cd1 |> 
  filter(!is.na(negGrowth), species == 'bnt') |> 
  group_by(riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by season/river
cd1 |> 
  filter(!is.na(negGrowth), species == 'bnt') |> 
  group_by(season, riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))
```

#### Atlantic salmon
```{r}
#| label: propATS

# by season
cd1 |> 
  filter(!is.na(negGrowth), species == 'ats') |> 
  group_by(season, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by river
cd1 |> 
  filter(!is.na(negGrowth), species == 'ats') |> 
  group_by(riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))

# by season/river
cd1 |> 
  filter(!is.na(negGrowth), species == 'ats') |> 
  group_by(season, riverGG, negGrowth) |> 
  summarize(n = n()) |> 
  pivot_wider(names_from = negGrowth, values_from = n) |> 
  mutate(prop = `TRUE`/(`TRUE` + `FALSE`))
```


### Proportion of observations with negative growth by species/river/season

```{r}
#| label: neg_pos
ggplot(cd1 |> filter(!is.na(negGrowth)), aes(negGrowth)) +
  geom_bar() +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG+riverGG, scales = "free")
```

### Proportion of observations with negative growth by species/season

```{r}
#| label: propNegBySeason

ggplot(propNegSRS |> filter(n > 50), aes(seasonGG, propNeg, color = riverGG, group = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Season", y = "Proportion of observations with negative growth in mass") +
  scale_color_discrete() +
  theme_publication() +  
  theme(axis.text.x = element_text(angle = 360-45, vjust = 0, hjust = 0.5)) +
  facet_wrap(~speciesGG)

```

### Proportion of observations with negative growth by species/river/year

```{r}
#| label: propNegWB_BKT

plotPropNegByRiver <- function(d, spp){
  ggplot(d |> filter(n > 20,  speciesGG == spp), 
         aes(year, propNeg, color = factor(seasonGG))) +
    geom_point(aes(size = n)) +
    geom_line() +
    labs(x = "Year", y = "Proportion of opnservations with negative growth in mass") +
    scale_color_discrete() +
    theme_publication() +  
    facet_wrap(~riverGG)
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: propNegWB_BKT_bkt

plotPropNegByRiver(propNegSRsN, "Brook trout")
```

#### Brown trout

```{r}
#| label: propNegWB_BKT_bnt

plotPropNegByRiver(propNegSRsN |> filter(riverGG != "Open Small"), "Brown trout")
```

#### Atlantic salmon

```{r}
#| label: propNegWB_BKT_ats

plotPropNegByRiver(propNegSRsN, "Atlantic salmon")
```
:::

### Proportion of observations with negative growth by species/river/year

Break down season by year, compare across rivers

```{r}
#| label: neg_posN

ggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Year", y = "Proportion of observations with negative growth in mass") +
  scale_color_discrete() +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 15, seasonGG == "Summer", speciesGG == "Brook trout", year > 2001), aes(year, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_line() +
  labs(x = "Year", y = "Proportion of observations with negative growth in mass") +
  scale_color_discrete() +
  theme_publication()
```

Trends across years
```{r}

ggplot(propNegSRsN |> filter(n > 15, year > 2001), aes(year, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se=FALSE) +
  labs(x = "Year", y = "Proportion of observations with negative growth in mass") +
  scale_color_discrete() +
  theme_publication() +
  facet_grid(seasonGG~speciesGG)


# Regression
propNegYear =lm(propNeg~year*riverGG, data = propNegSRsN |> filter(n > 15, year > 2001, seasonGG == "Summer", speciesGG == "Brook trout"))

summary(propNegYear)
anova(propNegYear)
```

## Negative growth by individual
Plot growth negative/positive for individual fish that lost mass. Order the individuals on the y-axis by proportion of observations that were negative.
```{r}
#| label: plotNegGrInd

plotIndNegGrowth <- function(sppIn, maxGr = 0){
  ggplot(
    cd1 |> 
      filter(
        species == sppIn, 
        cohort >= 2000, cohort <= 2013, 
        !is.na(negGrowth), 
        ageInSamples > 0,
        propNegGrowthByInd > maxGr,
        ageInSamples < 12
        ), 
    aes(ageInSamples, reorder(tag, propNegGrowthByInd))
  ) +
  geom_tile(
    aes(fill = negGrowth)#, colour = "grey50", linewidth = 0.2
  ) +
  scale_y_discrete("Individual fish") +
  scale_x_continuous(
    "Season and age",
    breaks = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15),
    labels = c("F0", "W0", "S1", "S1", "F1", "W1", "S2", "S2","F2", "W2", "S3", "S3","F3", "W3", "S4")) +
  scale_fill_manual(values = c("#E66100", "#5D3A9B")) +
  theme(
    axis.text.y=element_blank(),
    axis.ticks.y=element_blank()
  ) +
  facet_wrap(~cohort, scales = "free")
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: propIndNegWB_bkt

plotIndNegGrowth("bkt", -1)
```

#### Brown trout

```{r}
#| label: propIndNegWB_bnt

plotIndNegGrowth("bnt")
```

#### Atlantic salmon

```{r}
#| label: propIndNegWB_ats

plotIndNegGrowth("ats")
```
:::

```{r}
#| label: histNegGr

distinctIndNegGrowth <- 
  cd1 |> 
    filter(
      #species == "bkt", 
      cohort >= 2000, cohort <= 2013, 
      !is.na(negGrowth), 
      ageInSamples > 0,
      #propNegGrowthByInd > maxGr,
      ageInSamples < 12
    ) |> 
  dplyr::select(tag, speciesGG, propNegGrowthByInd, nPerInd) |> 
  distinct() |> 
  mutate(numNegIntervals = as.integer(propNegGrowthByInd * nPerInd))
  
  ggplot(
    distinctIndNegGrowth,
    aes(numNegIntervals)
  ) +
  geom_bar(aes(fill = speciesGG), position = "dodge") +
  scale_fill_grey() +
  theme_publication() +
  labs(
    x = "Number of intervals with negative growth", 
    y = "Count"
  ) +
  xlim(c(-0.5, 5))
  
  distinctIndNegGrowth |> 
    group_by(speciesGG, numNegIntervals) |> 
    summarize(
      nNegGrowthIntervals = n()
    )

  distinctIndNegGrowth |> 
  group_by(speciesGG) |> 
  summarize(
    nNegGrowthIntervals = n()
  )
  
  #bkt
  (propBKTNegGr <- 1 - 3872/5072)
    #bnt
  (propBNTNegGr <- 1 - 2320/2516)
    #bnt
  (propATSNegGr <- 1 - 1403/2388)
```


## Environmental effects on Proportion of observations with negative growth
### Models for proportions  
#### Brool trout
Probably delete this section
```{r}
#| label: propModBKT

propModBKT1 <- lm(propNeg ~ (mT + mF_log10 + nInd + seasonGG + riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT2 <- lm(propNeg ~ (mT + mF_log10 + nInd + seasonGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT3 <- lm(propNeg ~ (mT + mF_log10 + nInd )^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT4 <- lm(propNeg ~ (mT + mF_log10  + seasonGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT5 <- lm(propNeg ~ (mT  + nInd + seasonGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT6 <- lm(propNeg ~ (mT + mF_log10 + nInd )^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT7 <- lm(propNeg ~ (mT + mF_log10  + riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT8 <- lm(propNeg ~ (mT + seasonGG + riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT9 <- lm(propNeg ~ (nInd + seasonGG + riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT10 <- lm(propNeg ~ (mF_log10 + seasonGG + riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT11 <- lm(propNeg ~ (riverGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT12<- lm(propNeg ~ (seasonGG)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT13 <- lm(propNeg ~ (nInd)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT14 <- lm(propNeg ~ (mF_log10)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModBKT15 <- lm(propNeg ~ (mT)^2, data = propNegSRsN |> filter(speciesGG == "Brook trout"))

propModAIC <- AIC(propModBKT1, propModBKT2, propModBKT3, propModBKT4, propModBKT5, propModBKT6, propModBKT7, propModBKT8, propModBKT9, propModBKT10, propModBKT11, propModBKT12, propModBKT13, propModBKT14, propModBKT15) |>  arrange(AIC)

summary(rownames(propModAIC)[1])
get(rownames(propModAIC)[1])
```



### Proportion of observations with negative growth by **flow**

```{r}
#| label: negGrowth_flow

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10(bquote("Mean flow " ~ (m^3 ~ "·" ~ s^{-1}))) + #alt-250 for dot +
  scale_color_discrete() +
  ggtitle("West Brook") +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10(bquote("Mean flow " ~ (m^3 ~ "·" ~ s^{-1}))) + #alt-250 for dot
  scale_color_discrete(drop = FALSE) +
  ggtitle("Tributaries") +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, speciesGG == "Brook trout"), aes(mF, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10(bquote("Mean flow " ~ (m^3 ~ "·" ~ s^{-1}))) + #alt-250 for dot
  scale_color_discrete(drop = FALSE) +
  ggtitle("Brook trout") +
  theme_publication() +  
  facet_grid(seasonGG~riverGG, scales = "free")
```

### Proportion of observations with negative growth by **temperature**

```{r}
#| label: negGrowth_temp

plotNegGrowth_temp <- function(d, s){
  ggplot(d |> filter(n > 10, seasonGG == s), aes(mT, propNeg, color = riverGG)) +
    geom_point(aes(size = n)) +
    geom_smooth(method = "lm", se = FALSE) +
    scale_y_continuous("Proportion of observations with negative growth in mass") +
    scale_x_continuous("Mean temperature (C)") +
    scale_color_discrete() +
    ggtitle(s) +
    theme_publication() +  
    facet_grid(riverGG~speciesGG)
}

```

::: panel-tabset
#### Spring

```{r}
#| label: negGrowth_tempSPring
plotNegGrowth_temp(propNegSRsN, "Spring")
```

#### Summer

```{r}
#| label: negGrowth_tempSummer
plotNegGrowth_temp(propNegSRsN, "Summer")
```

#### Autumn

```{r}
#| label: negGrowth_tempAutumn
plotNegGrowth_temp(propNegSRsN, "Autumn")
```

#### Winter

```{r}
#| label: negGrowth_tempWinter
plotNegGrowth_temp(propNegSRsN, "Winter")
```
:::

### Proportion of observations with negative growth by **3 species fish counts**

```{r}
#| label: negGrowth_counts3Spp

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(nInd, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10("3 species count") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(nInd, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10("3 species count") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)
```

### Proportion of observations with negative growth by **conspecific fish counts**

```{r}
#| label: negGrowth_counts1Spp

ggplot(propNegSRsN |> filter(n > 10, riverGG == "West Brook"), aes(nIndBySpp, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10("conspecific count") +
  scale_color_discrete() +
  ggtitle("West Brook") +
  theme_publication() +
  facet_grid(seasonGG~speciesGG)

ggplot(propNegSRsN |> filter(n > 10, riverGG != "West Brook"), aes(nIndBySpp, propNeg, color = riverGG)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of observations with negative growth in mass") +
  scale_x_log10("conspecific count") +
  scale_color_discrete() +
  ggtitle("Tributaries") +
  theme_publication() +  
  facet_grid(seasonGG~speciesGG)
```



## XGBoost model for proportion of fish with negative growth

### Hyperparameter search grid

```{r}
#| label: runML_HP_propNeg

runHyperparamSearch <- function(d = propNegSRsN, vars = c("speciesGG", "riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"), nRoundsIn = 100000, early_stopping_roundsIn = 500) {
  
  set.seed(123)
  
  dML_propNeg <- d |> 
    dplyr::select(all_of(vars)) 
  
  # variable names
  features_propNeg <- setdiff(names(dML_propNeg), "propNeg")
  
  # Create the treatment plan from the training data
  treatplan_propNeg <- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)
  
  # Get the "clean" variable names from the scoreFrame
  new_vars_propNeg <- treatplan_propNeg %>%
    magrittr::use_series(scoreFrame) %>%        
    dplyr::filter(code %in% c("clean", "lev")) %>% 
    magrittr::use_series(varName)     
  
  # Prepare the training data
  features_train_propNeg <- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %>% as.matrix()
  response_train_propNeg <- dML_propNeg$propNeg
  
  # create hyperparameter grid
  hyper_grid_propNeg <- expand.grid(
    eta = c(.01, .05, .1, .3),
    max_depth = c(1, 3, 5, 7),
    min_child_weight = c(1, 3, 5, 7),
    subsample = c(.65, .8, 1),
    colsample_bytree = c(.8, .9, 1),
    optimal_trees = 0,               # a place to dump results
    min_RMSE = 0                     # a place to dump results
  )

  # reproducibility
    set.seed(123)
  #   
  # grid search
  for(i in 1:nrow(hyper_grid_propNeg)) {
    print(paste0(i, " out of ", nrow(hyper_grid_propNeg)))
    # create parameter list
    params_propNeg <- list(
      eta = hyper_grid_propNeg$eta[i],
      max_depth = hyper_grid_propNeg$max_depth[i],
      min_child_weight = hyper_grid_propNeg$min_child_weight[i],
      subsample = hyper_grid_propNeg$subsample[i],
      colsample_bytree = hyper_grid_propNeg$colsample_bytree[i]
    )
  
  
    # train model
    xgb.tune_propNeg <- xgb.cv(
      params = params_propNeg,
      data = features_train_propNeg,
      label = response_train_propNeg,
      nrounds = 100000,
      nfold = 5,
      objective = "reg:squarederror", #"reg:linear",  # for regression models
      verbose = 0,               # silent,
      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees
    )
  
    # add min training error and trees to grid
    hyper_grid_propNeg$optimal_trees[i] <- which.min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)
    hyper_grid_propNeg$min_RMSE[i] <- min(xgb.tune_propNeg$evaluation_log$test_rmse_mean)
  }
  
  return(hyper_grid_propNeg |> arrange(min_RMSE))
}
#   
# > #     eta max_depth min_child_weight subsample colsample_bytree optimal_trees  min_RMSE
# > # 1  0.10         1                7      0.80              0.9            57 0.1833918
# > # 2  0.10         3                3      1.00              1.0            52 0.1835447
# > # 3  0.05         3                1      0.65              0.9            88 0.1849762
# > # 4  0.01         3                7      1.00              0.9           514 0.1853950
# > # 5  0.30         5                1      0.80              1.0            17 0.1854102
# > # 6  0.01         3                3      0.65              0.8           438 0.1854346
# > # 7  0.30         5                1      1.00              0.9            14 0.1856684
# > # 8  0.01         1                3      0.65              0.9           560 0.1857717
# > # 9  0.30         3                1      1.00              1.0            13 0.1859183
# > # 10 0.30         3                3      0.65              0.8            21 0.1860299
# > # 11 0.05         7                3      0.80              0.8           123 0.1860336
# > # 12 0.01         3                5      0.80              1.0           512 0.1861016
# > # 13 0.10         3                7      0.65              1.0            45 0.1861042
# > # 14 0.10         3                5      1.00              1.0            55 0.1861160
# # > # 15 0.10         1                1      1.00              0.9           179 0.1861891
```


### Function to run models

```{r}
#| label: xgBoostPropNegFunction

# http://uc-r.github.io/gbm_regression
runXGB <- function(d = propNegSRsN, vars = c("speciesGG", "riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"), nRoundsIn = 100000, params = params_propNegIn) {
  
  set.seed(125)
  
  dML_propNeg <- d |> 
    dplyr::select(all_of(vars)) 
  
  # variable names
  features_propNeg <- setdiff(names(dML_propNeg), "propNeg")
  
  # Create the treatment plan from the training data
  treatplan_propNeg <- vtreat::designTreatmentsZ(dML_propNeg, features_propNeg, verbose = FALSE)
  
  # Get the "clean" variable names from the scoreFrame
  new_vars_propNeg <- treatplan_propNeg %>%
    magrittr::use_series(scoreFrame) %>%        
    dplyr::filter(code %in% c("clean", "lev")) %>% 
    magrittr::use_series(varName)     
  
  # Prepare the training data
  features_train_propNeg <- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %>% as.matrix()
  response_train_propNeg <- dML_propNeg$propNeg
  
  # Prepare the test data
  features_test_propNeg <- vtreat::prepare(treatplan_propNeg, dML_propNeg, varRestriction = new_vars_propNeg) %>% as.matrix()
  response_test_propNeg <- dML_propNeg$propNeg

  ##### Run model
  # parameter list - from the top model of the grid search above
  params_propNeg <- list(
    eta = params$eta, #0.01,
    max_depth = params$max_depth, #1,
    min_child_weight = params$min_child_weight, #7,
    subsample = params$subsample, #0.8,
    colsample_bytree = params$colsample_bytree #0.9
   # optimal_trees = params$optimal_trees
  )
  
  # train final model
  xgb.fit.final_propNeg <- xgboost(
    params = params_propNeg,
    data = features_train_propNeg,
    label = response_train_propNeg,
    nrounds = nRoundsIn,
    objective = "reg:squarederror",
    verbose = 0,
    early_stopping_rounds = 250 # stop if no improvement for 20 consecutive trees
  )
  

  return(
    list(
      dat = dML_propNeg,
      xgb = xgb.fit.final_propNeg,
      new_vars = new_vars_propNeg,
      features_train = features_train_propNeg,
      response_train = response_train_propNeg
    )
  )

}

```

### Brook trout
```{r}
#| label: runXGB_BKT1

#### uncomment to run hyperparameter search grid
# hpPropNegBKT <- runHyperparamSearch(
#   d = propNegSRsN |>  filter(speciesGG == "Brook trout", year > 2001),
#   vars = c("riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"),
#   early_stopping_roundsIn = 250
# )
# save(hpPropNegBKT, file = "./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData")
load("./data/out/XGBoost/hyperParam/hpPropNegBKT_250.RData")
hpPropNegBKT[1:10,]

#### uncomment to run XGBoost
# propNegBKT <- runXGB(
#   d = propNegSRsN |>  filter(speciesGG == "Brook trout", year > 2001),
#   vars = c("riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"),
#   params = hpPropNegBKT[1,]
# )
# save(propNegBKT, file = "./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData")
load("./data/out/XGBoost/modelRuns/XGBpropNegBKT_250.RData")

propNegBKT$xgb$best_iteration
propNegBKT$xgb$best_score

# variable importance plot
viBKT <- xgb.importance(model = propNegBKT$xgb)
xgb.plot.importance(viBKT, top_n = 10, measure = "Gain")

####################################################################
s_propNegBKT <- hstats(propNegBKT$xgb, v = propNegBKT$new_vars, X = propNegBKT$features_train)
s_propNegBKT
plot(s_propNegBKT)
# 
# # top 5 2-way interactions
# h2_pairwise(s_propNegBKT, normalize = FALSE, squared = FALSE, top_m = 8)
plot(s_propNegBKT, which = 1:2, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)
# 
# # 3-way interactions
# plot(s_propNegBKT, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pFlow_propNeg <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBKT$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_propNeg <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBKT$features_train) +
  geom_smooth(se = FALSE)

pNInd_propNeg <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBKT$features_train) +
  geom_smooth(se = FALSE)

pYear_propNeg <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBKT$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)

##################################################################
# all on one graph
pFlow_propNegDataBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),
         var = "Flow",
         speciesGG = "Brook Trout")

pMT_propNegDataBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(xScaled = (mT-mean(mT))/sd(mT),
         var = "Temperature",
         speciesGG = "Brook Trout")

pNInd_propNegDataBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Brook Trout")

pYear_propNegDataBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Brook Trout")


all_propNegDataBKT <- bind_rows(pFlow_propNegDataBKT, pMT_propNegDataBKT, pNInd_propNegDataBKT, pYear_propNegDataBKT)

(
all_propNegDataBKT_gg <- ggplot(all_propNegDataBKT, aes(xScaled, yhat, color = var)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_publication() +
  labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)

##################################################################
# All river on one graph
partialWBBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_West_Brook", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(riverGG = "West Brook") |> 
  rename(x = "riverGG_lev_x_West_Brook")

partialOLBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Large", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|> 
  mutate(riverGG = "Open Large") |> 
  rename(x = "riverGG_lev_x_Open_Large")

partialOSBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Small", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train) |> 
  mutate(riverGG = "Open Small") |> 
  rename(x = "riverGG_lev_x_Open_Small")

partialISBKT <- propNegBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Isolated_Small", n.trees = 1082, grid.resolution = 100, train = propNegBKT$features_train)|> 
  mutate(riverGG = "Isolated Small") |> 
  rename(x = "riverGG_lev_x_Isolated_Small")

partialRiversBKT <- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |> 
  filter(x %in% c(0,1)) |> 
  mutate(RiverEffect = ifelse(x ==1, "Yes", "No"),
         riverOrdered = factor(riverGG, levels = c("West Brook", "Open Large", "Open Small", "Isolated Small"), 
                             ordered = T))

ggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +
  geom_col(position = "dodge", linewidth = 1.5) +
  labs(y = "Effect on proportion of negative observations")

### Interaction plots ##################################################################

plot(partial_dep(propNegBKT$xgb, v = "mT", X = propNegBKT$features_train, BY = "mF_log10")) +
  geom_smooth(aes(color = mF_log10), se = FALSE)

plot(partial_dep(propNegBKT$xgb, v = "mF_log10", X = propNegBKT$features_train, BY = "mT")) +
  geom_smooth(aes(color = mT), se = FALSE)

plot(partial_dep(propNegBKT$xgb, v = "mF_log10", X = propNegBKT$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

##################################################################
```

### Brown trout
```{r}
#| label: runXGB_BNT
#| 
# hpPropNegBNT <- runHyperparamSearch(
#   d = propNegSRsN |>  filter(speciesGG == "Brown trout", year > 2001),
#   vars = c("riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"),
#   early_stopping_roundsIn = 250
# )
# save(hpPropNegBNT, file = "./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData")
load("./data/out/XGBoost/hyperParam/hpPropNegBNT_250.RData")
hpPropNegBNT[1:10,]


propNegBNT <- runXGB(
  d = propNegSRsN |>  filter(speciesGG == "Brown trout", year > 2001, nInd > 10),
  vars = c("riverGG", "year", "mT", "mF_log10", "nInd", "propNeg"),
  nRoundsIn = 250000,
  params = hpPropNegBNT[1,]
)
# save(propNegBNT, file = "./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData")
load("./data/out/XGBoost/modelRuns/XGBpropNegBNT_250.RData")

propNegBNT$xgb$best_iteration
propNegBNT$xgb$best_score

# variable importance plot
viBNT <- xgb.importance(model = propNegBNT$xgb)
xgb.plot.importance(viBNT, top_n = 10, measure = "Gain")
####################################################################
#s_propNegBNT <- hstats(propNegBNT$xgb, v = propNegBNT$new_vars, X = propNegBNT$features_train)
# s_propNegBNT
# plot(s_propNegBNT)
# 
# # top 5 2-way interactions
# h2_pairwise(s_propNegBNT, normalize = FALSE, squared = FALSE, top_m = 8)
# 
# # 3-way interactions
# plot(s_propNegBNT, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pFlow_propNeg <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBNT$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_propNeg <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBNT$features_train) +
  geom_smooth(se = FALSE)

pNInd_propNeg <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBNT$features_train) +
  geom_smooth(se = FALSE)

pYear_propNeg <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) %>%
  autoplot(rug = TRUE, train = propNegBNT$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pFlow_propNeg, pTemp_propNeg, pNInd_propNeg, pYear_propNeg, nrow = 2)

##################################################################
# all partials on one graph
pFlow_propNegDataBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),
         var = "Flow",
         speciesGG = "Brown Trout")

pMT_propNegDataBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(xScaled = (mT-mean(mT))/sd(mT),
         var = "Temperature",
         speciesGG = "Brown Trout")

pNInd_propNegDataBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Brown Trout")

pYear_propNegDataBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Brown Trout")


all_propNegDataBNT <- bind_rows(pFlow_propNegDataBNT, pMT_propNegDataBNT, pNInd_propNegDataBNT, pYear_propNegDataBNT)

(
all_propNegDataBNT_gg <- 
  ggplot(all_propNegDataBNT, aes(xScaled, yhat, color = var)) +
    #geom_point(alpha = 0.2) +
    geom_smooth(se = FALSE) +
    theme_publication() +
    labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)
##################################################################
# All river on one graph
partialWBBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_West_Brook", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(riverGG = "West Brook") |> 
  rename(x = "riverGG_lev_x_West_Brook")

partialOLBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Large", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train)|> 
  mutate(riverGG = "Open Large") |> 
  rename(x = "riverGG_lev_x_Open_Large")

partialOSBNT <- propNegBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Small", n.trees = 1082, grid.resolution = 100, train = propNegBNT$features_train) |> 
  mutate(riverGG = "Open Small") |> 
  rename(x = "riverGG_lev_x_Open_Small")


partialRiversBNT <- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |> 
  filter(x %in% c(0,1)) |> 
  mutate(RiverEffect = ifelse(x ==1, "Yes", "No"),
         riverOrdered = factor(riverGG, levels = c("West Brook", "Open Large", "Open Small"), 
                             ordered = T))

ggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +
  geom_col(position = "dodge", linewidth = 1.5) +
  labs(y = "Effect on proportion of negative observations")

### Interaction plots ##################################################################

plot(partial_dep(propNegBNT$xgb, v = "mT", X = propNegBNT$features_train, BY = "mF_log10")) +
  geom_smooth(aes(color = mF_log10), se = FALSE)

plot(partial_dep(propNegBNT$xgb, v = "mF_log10", X = propNegBNT$features_train, BY = "mT")) +
  geom_smooth(aes(color = mT), se = FALSE)

plot(partial_dep(propNegBNT$xgb, v = "mF_log10", X = propNegBNT$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

##################################################################
```

### Atlantic salmon
```{r}
#| label: runXGB_ATS

# hpPropNegATS <- runHyperparamSearch(
#   d = propNegSRsN |>  filter(speciesGG == "Atlantic salmon", riverGG == "West Brook", year < 2007),
#   vars = c("year", "mT", "mF_log10", "nInd", "propNeg"),
#   early_stopping_roundsIn = 250
# )
# save(hpPropNegATS, file = "./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData")
load("./data/out/XGBoost/hyperParam/hpPropNegATS_250.RData")
hpPropNegATS[1:10,]

propNegSRsN |> filter(speciesGG == "Atlantic salmon") |> 
  ggplot(aes(year, n, color = seasonGG)) + geom_line() + facet_wrap(~riverGG)

# propNegATS <- runXGB(
#   d = propNegSRsN |> filter(speciesGG == "Atlantic salmon", riverGG == "West Brook", year < 2007),
#   vars = c("year", "mT", "mF_log10", "nInd", "propNeg"),
#   params = hpPropNegATS[1,]
# )
# save(propNegATS, file = "./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData")
load("./data/out/XGBoost/modelRuns/XGBpropNegATS_250.RData")

propNegATS$xgb$best_iteration
propNegATS$xgb$best_score

# variable importance plot
viATS <- xgb.importance(model = propNegATS$xgb)
xgb.plot.importance(viATS, top_n = 10, measure = "Gain")
####################################################################
#s_propNegATS <- hstats(propNegATS$xgb, v = propNegATS$new_vars, X = propNegATS$features_train)
# s_propNegATS
# plot(s_propNegATS)
# 
# # top 5 2-way interactions
# h2_pairwise(s_propNegATS, normalize = FALSE, squared = FALSE, top_m = 8)
# 
# # 3-way interactions
# plot(s_propNegATS, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pFlow_propNegATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %>%
  autoplot(rug = TRUE, train = propNegATS$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_propNegATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %>%
  autoplot(rug = TRUE, train = propNegATS$features_train) +
  geom_smooth(se = FALSE)

pNInd_propNegATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %>%
  autoplot(rug = TRUE, train = propNegATS$features_train) +
  geom_smooth(se = FALSE)

pYear_propNegATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) %>%
  autoplot(rug = TRUE, train = propNegATS$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pFlow_propNegATS, pTemp_propNegATS, pNInd_propNegATS, pYear_propNegATS, nrow = 2)

##################################################################
# all on one graph
pFlow_propNegDataATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "mF_log10", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |> 
  mutate(xScaled = (mF_log10-mean(mF_log10))/sd(mF_log10),
         var = "Flow",
         speciesGG = "Atlantic Salmon")

pMT_propNegDataATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "mT", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |> 
  mutate(xScaled = (mT-mean(mT))/sd(mT),
         var = "Temperature",
         speciesGG = "Atlantic Salmon")

pNInd_propNegDataATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Atlantic Salmon")

pYear_propNegDataATS <- propNegATS$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 1082, grid.resolution = 100, train = propNegATS$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Atlantic Salmon")


all_propNegDataATS <- bind_rows(pFlow_propNegDataATS, pMT_propNegDataATS, pNInd_propNegDataATS, pYear_propNegDataATS)

(
all_propNegDataATS_gg <- 
ggplot(all_propNegDataATS, aes(xScaled, yhat, color = var)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_publication() +
  labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)
### Interaction plots ##################################################################

plot(partial_dep(propNegATS$xgb, v = "mT", X = propNegATS$features_train, BY = "mF_log10")) +
  geom_smooth(aes(color = mF_log10), se = FALSE)

plot(partial_dep(propNegATS$xgb, v = "mF_log10", X = propNegATS$features_train, BY = "mT")) +
  geom_smooth(aes(color = mT), se = FALSE)

plot(partial_dep(propNegATS$xgb, v = "mF_log10", X = propNegATS$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

##################################################################
```

### 3 species together
```{r}
#| label: threeSppVIP

# variable importance plots

viAll <- bind_rows(
  viBKT |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Brook Trout"),
  viBNT |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Brown Trout"),
  viATS |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Atlantic Salmon")
) |> 
  mutate(sppOrdered = factor(speciesGG, levels = c("Brook Trout", "Brown Trout", "Atlantic Salmon"), ordered = TRUE),
         feature2 = case_when(
           Feature == "mF_log10" ~ "Flow",
           Feature == "mT" ~ "Temperature",
           Feature == "nInd" ~ "Num Individuals",
           Feature == "year" ~ "Year")
  )

ggplot(viAll |> filter(Feature %in% c("mF_log10", "mT", "nInd", "year")), aes(feature2, Gain, fill = sppOrdered)) +
  geom_col(position = "dodge") +
  theme_publication() +
  scale_fill_grey() +
  labs(y = "Variable importance for the proportion of negative observations", x = "Variable")

########################################################

all_propNegData3spp <- bind_rows(all_propNegDataBKT, all_propNegDataBNT, all_propNegDataATS) |> 
  mutate(sppOrdered = factor(speciesGG, levels = c("Brook Trout", "Brown Trout", "Atlantic Salmon"), ordered = TRUE))

all_propNegData3sppFlow_gg <- ggplot(all_propNegData3spp |> filter(var == "Flow"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled flow") +
  theme(legend.position = "none")  


all_propNegData3sppTemp_gg <- ggplot(all_propNegData3spp |> filter(var == "Temperature"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled temperature") +
  theme(legend.position = "none")  

all_propNegData3sppNInd_gg <- ggplot(all_propNegData3spp |> filter(var == "Num inds"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled Number of individuals") +
  theme(legend.position = "none")  

all_propNegData3sppYear_gg <- ggplot(all_propNegData3spp |> filter(var == "Year"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
  scale_color_grey() +
  labs(y = NULL, x = "Year") +
  theme(legend.position = "none")  

gridExtra::grid.arrange(
  all_propNegData3sppFlow_gg, 
  all_propNegData3sppTemp_gg,
  all_propNegData3sppNInd_gg,
  all_propNegData3sppYear_gg,
  left = textGrob(expression(bold("Effect on proportion of negative observations")), rot = 90, gp = gpar(fontsize = 16))
)
#######################################

```


## F/T cycle graphs

### Mean flow and temperature

```{r}
#| label: flow_temp_cycle_bySpecies
plot_mT_mF <- function(d, s, plotText){
  ggplot(d |> filter(n > 25, speciesGG == s), aes(mT, mF_log10, color = factor(seasonGG))) +
    geom_point(aes(size = propNeg)) +
    {if(plotText) geom_text(aes(label = year), vjust = 0, nudge_y = -0.075, check_overlap = FALSE, size = 3)} +
    labs(x = "Mean temperature (C)", y = "log10 of mean Flow") +
    scale_color_discrete() +
    theme_publication() +  
    facet_wrap(~riverGG, scales = "free")
}

```

::: panel-tabset
#### Brook trout

```{r}
#| label: flow_temp_cycle_bySpecies_bkt

plot_mT_mF(propNegSRsN, "Brook trout", FALSE)
```

#### Brown trout

```{r}
#| label: flow_temp_cycle_bySpecies_bnt

plot_mT_mF(propNegSRsN, "Brown trout", FALSE)
```

#### Atlantic salmon

```{r}
#| label: flow_temp_cycle_bySpecies_ats

plot_mT_mF(propNegSRsN, "Atlantic salmon", FALSE)
```
:::

### Mean flow and temperature with year labels

#### panel-tabset

### Brook trout

```{r}
#| label: flow_temp_cycle_bySpeciesYear_bkt

plot_mT_mF(propNegSRsN, "Brook trout", TRUE)
```

#### Brown trout

```{r}
#| label: flow_temp_cycle_bySpeciesYear_bnt

plot_mT_mF(propNegSRsN, "Brown trout", TRUE)
```

#### Atlantic salmon

```{r}
#| label: flow_temp_cycle_bySpeciesYear_ats

plot_mT_mF(propNegSRsN, "Atlantic salmon", TRUE)
```

:::

Mean flow and temperature values for each season and year for the West
Brook\
Not very informative

```{r}
#| label: flow_temp_cycle_bySpeciesYear2
#| 
ggplot(propNegSRsN |> filter(n > 10, riverGG == 'West Brook') |> arrange(riverGG, speciesGG, year, seasonGG), aes(mT, mF_log10)) +
  geom_line() +
  geom_point(aes(color = factor(seasonGG))) +
  facet_wrap(~year)
```

### Yearly temperature/flow cycles of daily data

```{r}
#| label: mergePropNegPlot

plotMerged <- function(d, r, minYear = 2000, maxYear = 2017){
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear)), 
         aes(temperature, log10(flowByRiver), color = seasonGG, group = seasonGG)) +
    geom_point() +
    geom_smooth(se = FALSE) +
    #geom_line() +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    theme_publication() +  
    facet_wrap(~year, scales = 'free')
}
# this plots f/t for all three species - good for filling in gaps

```

::: panel-tabset
#### West Brook

```{r}
#| label: mergePropNegPlot_wb

plotMerged(envIn_propNeg, "West Brook", 2000, 2017)
```

#### Open Large

```{r}
#| label: mergePropNegPlot_ol

plotMerged(envIn_propNeg, "Open Large", 2002, 2017)
```

#### Open Small

```{r}
#| label: mergePropNegPlot_os

plotMerged(envIn_propNeg, "Open Small", 2002, 2017)
```

#### Isolated small

```{r}
#| label: fmergePropNegPlot_is

plotMerged(envIn_propNeg, "Isolated Small", 2002, 2017)
```
:::

### Smooths of temperature/flow cycles of daily data by season

```{r}
#| label: plotMergedBySeason
#| echo: true

plotMergedBySeason <- function(d, r, minYear = 2000, maxYear = 2017) {
  ggplot(d |> filter(riverGG == r, year %in% c(minYear:maxYear), !is.na(seasonGG)), 
         aes(temperature, log10(flowByRiver), 
             color = factor(year), group = year
             )
         ) +
    #geom_point() +
    geom_smooth(se = FALSE) +
    labs(x = "Temperature (C)", y = "log10 of Flow") +
    scale_color_discrete() +
    ggtitle(r) +
    theme_publication(legendPosition = "right", legendDirection = "vertical") +  
    facet_wrap(~seasonGG, scales = 'free')
}

```

::: panel-tabset
#### West Brook

```{r}
#| label: plotMergedBySeason_wb

plotMergedBySeason(envIn_propNeg, "West Brook", 2000, 2017)
```

#### Open Large

```{r}
#| label: plotMergedBySeason_ol

plotMergedBySeason(envIn_propNeg, "Open Large", 2002, 2017)
```

#### Open Small

```{r}
#| label: plotMergedBySeason_os

plotMergedBySeason(envIn_propNeg, "Open Small", 2002, 2017)
```

#### Isolated small

```{r}
#| label: plotMergedBySeason_is

plotMergedBySeason(envIn_propNeg, "Isolated Small", 2002, 2017)
```
:::

TO ADD: low flow high density important? Look at interaction btw
flow:density

### F/T cycles with labels

Plot F/T cycles by river, season, species with label for propNeg and
conspecific and all-species abundances

```{r}
#| label: plotMergedBySeasonByEverything

plotMergedBySeasonByEverything <- function(d, d2, r, s, spp, minYear = 2000, maxYear = 2017){
  ggplot(d |> 
           filter(riverGG == r,
                  year %in% c(minYear:maxYear), 
                  !is.na(seasonGG), 
                  seasonGG == s, 
                  speciesGG == spp), 
         aes(temperature, log10(flowByRiver))
         ) +
    geom_smooth(se = FALSE, color = "darkgrey") +
    geom_point(aes(color = yday)) +
    geom_text(aes(
      x = minTemp + 3.0, 
      y = log10(minFlow) - 1, 
      label = paste("propNeg=",round(propNeg, 2)) 
      #size = propNeg
      ), 
        data = d2|> 
          filter(riverGG == r, 
                 year %in% c(minYear:maxYear),
                 seasonGG == s, 
                 speciesGG == spp)
        ) +
    geom_text(aes(
      x = minTemp + 3.0,
      y = log10(minFlow) - 0.3,
      label = paste(paste("nIndAllSpp=", nInd), paste("nIndBySpp=", nIndBySpp), sep = "\n")
      ),
        data = d2|>
          filter(riverGG == r,
                 year %in% c(minYear:maxYear),
                 seasonGG == s,
                 speciesGG == spp)
        ) +
    labs(x = "Temperature (c)", y = "log10 Flow") +
    ggtitle(paste(r, s, spp, sep = ", ")) +
  theme_publication() +  
  facet_wrap(~year)
}

```

#### West Brook

::: panel-tabset
#### Spring

```{r}
#| label: WBPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Spring", "Atlantic salmon", 2000, 2017)


```

#### Summer

```{r}
#| label: WBPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Summer", "Atlantic salmon", 2000, 2017)
```

#### Autumn

```{r}
#| label: WBPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Autumn", "Atlantic salmon", 2000, 2017)


```

#### Winter

```{r}
#| label: WBPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "West Brook", "Winter", "Atlantic salmon", 2000, 2017)
```
:::

#### Open Large

::: panel-tabset
#### Spring

```{r}
#| label: OLpanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Spring", "Atlantic salmon", 2000, 2017)


```

#### Summer

```{r}
#| label: OLPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Summer", "Atlantic salmon", 2000, 2017)
```

#### Autumn

```{r}
#| label: OLPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Autumn", "Atlantic salmon", 2000, 2017)


```

#### Winter

```{r}
#| label: OLPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Brown trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Large", "Winter", "Atlantic salmon", 2000, 2017)
```
:::

#### Open Small

::: panel-tabset
#### Spring

```{r}
#| label: OSPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Spring", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Spring", "Brown trout", 2000, 2017)
```

#### Summer

```{r}
#| label: OSPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Summer", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Summer", "Brown trout", 2000, 2017)

```

#### Autumn

```{r}
#| label: OSPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Autumn", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Autumn", "Brown trout", 2000, 2017)

```

#### Winter

```{r}
#| label: OSPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Winter", "Brook trout", 2000, 2017)
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Open Small", "Winter", "Brown trout", 2000, 2017)

```
:::

#### Isolated Small

::: panel-tabset
#### Spring

```{r}
#| label: ISPanelSpring
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Spring", "Brook trout", 2000, 2017)
```

#### Summer

```{r}
#| label: ISPanelSummer
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Summer", "Brook trout", 2000, 2017)

```

#### Autumn

```{r}
#| label: ISPanelAutumn
#| fig-width: 13
#| fig-height: 10
#| 
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Autumn", "Brook trout", 2000, 2017)

```

#### Winter

```{r}
#| label: ISPanelWinter
#| fig-width: 13
#| fig-height: 10
plotMergedBySeasonByEverything(envIn_propNeg, propNegLabels, "Isolated Small", "Winter", "Brook trout", 2000, 2017)

```
:::

## Consequences of negative growth

### Growth and last observation  
#### All years  
Mean number of last observed sample as response variable
```{r}
#| label: negGrowth_samplesLeftMean

plot_negGr_beforeLastMean <- function(sppIn) {
  ggplot(negGr_beforeLastMean |> filter(speciesGG == sppIn, seasonGG != "Spring"), aes(negGrowth, meanSamplesBeforeLast, fill = negGrowth)) +
    geom_col() +
    theme_publication() +    
    facet_grid(seasonGG~riverGG)    
}

plot_negGr_beforeLastMean("Brook trout")
plot_negGr_beforeLastMean("Brown trout")
plot_negGr_beforeLastMean("Atlantic salmon")

  ggplot(negGr_beforeLastMean |> filter(speciesGG == "Brook trout", seasonGG != "Spring"), aes(meanGR, meanSamplesBeforeLast)) +
    geom_point(aes(color = riverGG, shape = riverGG)) +
    geom_line(aes(shape = riverGG, color = riverGG)) +
    #geom_smooth(method = "lm", se = FALSE) +
    theme_publication() +    
    facet_wrap(~seasonGG, scales = "free")

```

#### By year
```{r}
#| label: negGrowth_samplesLeftMean_year

  ggplot(negGr_beforeLastMean_year |> filter(n > 2, year > 2001, year < 2015, speciesGG == "Brook trout", seasonGG != "Spring"), aes(meanGR, meanSamplesBeforeLast)) +
    geom_point(aes(color = riverGG, shape = riverGG)) +
    geom_line(aes(shape = riverGG, color = riverGG)) +
    #geom_smooth(method = "lm", se = FALSE) +
    theme_publication() +    
    facet_grid(seasonGG ~ year, scales = "free")

```

Split data by samplesBeforeLast = 1 and samplesBeforeLast > 1.  
The graph shows mean growth for fish that were caught for the last time in the next sample or at some later sample
```{r}
#| label: negGrowth_samplesLeft01

numSamplesBeforeLastGT1_data <-  cd1 |>
  mutate(numSamplesBeforeLastGT1 = samplesBeforeLast > 1) |> 
  filter(!is.na(negGrowth)) |> 
  group_by(speciesGG, riverGG, seasonGG, numSamplesBeforeLastGT1) |> 
  summarize(
    meanGR = mean(grWeight, na.rm = TRUE),
    sdGR = sd(grWeight, na.rm = TRUE),
    meanSamplesBeforeLast = mean(samplesBeforeLast, na.rm = TRUE),
    sdSamplesBeforeLast = sd(samplesBeforeLast, na.rm = TRUE),
    ymax = meanGR + sdGR,
    n = n()
  )

 #  ggplot(tmp |> filter(n > 2, speciesGG == "Brook trout"), aes(numSamplesBeforeLastGT1, meanGR)) +
 #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +
 #    geom_col() +
 #    theme_publication() +    
 #    facet_grid(riverGG~seasonGG , scales = "free")
 #  
 # ggplot(tmp |> filter(n > 2, speciesGG == "Brown trout"), aes(numSamplesBeforeLastGT1, meanGR)) +
 #    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2) +
 #    geom_col() +
 #    theme_publication() +    
 #    facet_grid(riverGG~seasonGG , scales = "free")
 
   ggplot(numSamplesBeforeLastGT1_data |> filter(n > 2, !is.na(numSamplesBeforeLastGT1)), aes(numSamplesBeforeLastGT1, meanGR, fill = speciesGG, color = speciesGG)) +
    geom_errorbar(aes(x = numSamplesBeforeLastGT1, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +
    geom_col(position = "dodge") +
    theme_publication() +    
    facet_grid(riverGG~seasonGG , scales = "free")
   
  ggplot(numSamplesBeforeLastGT1_data |> filter(n > 2, !is.na(numSamplesBeforeLastGT1)), aes(speciesGG, meanGR, fill = numSamplesBeforeLastGT1, color = numSamplesBeforeLastGT1)) +
    geom_errorbar(aes(x = speciesGG, ymin = meanGR, ymax = ymax), width = 0.2, position = position_dodge(0.9)) +
    geom_col(position = "dodge") +
    theme_publication() +
    theme(axis.text.x = element_text(angle = 360 - 60, vjust = 0.3, hjust = 0.1)) +
    facet_grid(riverGG~seasonGG , scales = "free")

```

Relationship between individual growth and length of subsequent
observations (how many more observations before the last observation)
for individual fish.  

#### Broken up by years  
```{r}
#| label: negGrowth_samplesLeft
plotGrowthSamplesLeft <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011, samplesBeforeLast >= 0), aes(grWeight, samplesBeforeLast)) +
    geom_point(alpha = 0.3) +
    geom_smooth(method = "lm", se = FALSE) +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    theme_publication() +    
    facet_grid(seasonGG~year)
}

plotGrowthSamplesLeft(cd1, "Brook trout", "West Brook")
plotGrowthSamplesLeft(cd1, "Brook trout", "Open Large")
plotGrowthSamplesLeft(cd1, "Brook trout", "Open Small")
plotGrowthSamplesLeft(cd1, "Brook trout", "Isolated Small")

plotGrowthSamplesLeft(cd1, "Brown trout", "West Brook")
```

#### All years  
```{r}
#| label: negGrowth_samplesLeftNoYear
plotGrowthSamplesLeftNoYear <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011, samplesBeforeLast >= 0), aes(grWeight, samplesBeforeLast)) +
    geom_point(alpha = 0.3) +
    geom_smooth(method = "lm", se = FALSE) +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    theme_publication() +  
    facet_wrap(~seasonGG)
}

plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "West Brook")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Open Large")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Open Small")
plotGrowthSamplesLeftNoYear(cd1, "Brook trout", "Isolated Small")

plotGrowthSamplesLeftNoYear(cd1, "Brown trout", "West Brook")
plotGrowthSamplesLeftNoYear(cd1, "Atlantic salmon", "West Brook")
```

#### Break up by pos/neg growth  
```{r}
#| label: negGrowth_means

plotGR_sampsBL <- function(d, spp, r) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r), aes(meanGR, samplesBeforeLast, color = negGrowth)) + 
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    theme_publication() +    
    facet_grid(speciesGG~seasonGG+riverGG, scales = "free")
}

plotGR_sampsBL(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook", "Open Large"))


plotGR_sampsBL2 <- function(d, spp, r) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(meanGR, samplesBeforeLast, color = speciesGG)) + 
    geom_point(aes(size = n)) +
    geom_smooth(method = "lm", se = FALSE) +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    theme_publication() +    
    facet_grid(riverGG~negGrowth+seasonGG, scales = "free")
}

plotGR_sampsBL2(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook", "Open Large"))

plotGR_sampsBL3 <- function(d, spp, r, ng) {
  ggplot(d |> filter(n > 5, speciesGG %in% spp, riverGG %in% r, negGrowth %in% ng), aes(meanGR, samplesBeforeLast, color = speciesGG)) + 
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    scale_color_discrete() +
    ggtitle(paste(spp, r, ng, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Number of samples before last observation") +
    theme_publication() +    
    facet_wrap(negGrowth~seasonGG, scales = "free")
}

plotGR_sampsBL3(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook"), FALSE)

plotGR_sampsBL3(negGr_beforeLast, c("Brook trout","Brown trout", "Atlantic salmon"), c("West Brook"), TRUE)
```

TO ADD: mean samplesBeforeLast by negGR 
```{r}
#| label: growthKnkownZPosNeg
plotGrowthKnownZPosNeg <- function(d, spp, r){
  ggplot(d |> filter(speciesGG %in% spp, riverGG == r, year < 2011, !is.na(samplesBeforeLast)), aes(grWeight, color = samplesBeforeLast == 1)) +
    geom_boxplot() +
    geom_vline(xintercept = 0) +
    ggtitle(paste(r)) +
    theme_publication() +   
    theme(axis.text.y = element_blank()) +
    facet_grid(speciesGG~seasonGG, scales = "free")
}

plotGrowthKnownZPosNeg(cd1, c("Brook trout", "Brown trout", "Atlantic salmon"), "West Brook")
plotGrowthKnownZPosNeg(cd1, c("Brook trout", "Brown trout", "Atlantic salmon"), "Open Large")
plotGrowthKnownZPosNeg(cd1, c("Brook trout", "Brown trout"), "Open Small")
plotGrowthKnownZPosNeg(cd1, c("Brook trout"), "Isolated Small")

```




TO ADD: knownZ=0 vs knownZ==1, growth in previous interval
```{r}
#| label: growthKnkownZ
plotGrowthKnownZ <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011), aes(grWeight, color = samplesBeforeLast == 1)) +
    geom_density() +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    theme_publication() +    
    facet_wrap(~seasonGG, scales = "free")
}

plotGrowthKnownZ(cd1, "Brook trout", "West Brook")
plotGrowthKnownZ(cd1, "Brook trout", "Open Large")
plotGrowthKnownZ(cd1, "Brook trout", "Open Small")
plotGrowthKnownZ(cd1, "Brook trout", "Isolated Small")

plotGrowthKnownZ(cd1, "Brown trout", "West Brook")
plotGrowthKnownZ(cd1, "Brown trout", "Open Large")
plotGrowthKnownZ(cd1, "Brown trout", "Open Small")


```

By year
```{r}
#| label: growthKnkownZByYear
plotGrowthKnownZByYear <- function(d, spp, r){
  ggplot(d |> filter(speciesGG == spp, riverGG == r, year < 2011), aes(grWeight, color = samplesBeforeLast == 1)) +
    geom_boxplot() +
    geom_vline(xintercept = 0) +
    ggtitle(paste(spp, r, sep = ", ")) +
    theme_publication() +    
    facet_grid(year~seasonGG)
}

plotGrowthKnownZByYear(cd1, "Brook trout", "West Brook")
plotGrowthKnownZByYear(cd1, "Brook trout", "Open Large")
plotGrowthKnownZByYear(cd1, "Brook trout", "Open Small")
plotGrowthKnownZByYear(cd1, "Brook trout", "Isolated Small")




```

### Growth and movement distance

TO add: break avg move into negGR/not negGR
```{r}
#| label: growthMovementNegPos

plotGR_moveDistNegPos <- function(d, spp, r) {
  ggplot(d |> filter(speciesGG %in% spp, riverGG %in% r, !is.na(negGrowth)), aes(distMoved, color = negGrowth)) + 
    geom_boxplot() +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Movement distance") +
    theme_publication() +  
    theme(axis.text.y = element_blank()) +
    facet_grid(speciesGG~seasonGG, scales = "free")
}

plotGR_moveDistNegPos(cd1, c("Brook trout","Brown trout","Atlantic salmon"), c("West Brook"))

```


```{r}
#| label: growthMovement

plotGR_moveDist <- function(d, spp, r) {
  ggplot(d |> filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + 
    geom_point(alpha = 0.2) +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Movement distance") +
    theme_publication() +    
    facet_grid(speciesGG~seasonGG, scales = "free")
}

plotGR_moveDist(cd1, c("Brook trout","Brown trout","Atlantic salmon"), c("West Brook"))

```

```{r}
#| label: growthMovement2

plotGR_moveDist2 <- function(d, spp, r) {
  ggplot(d |> filter(speciesGG %in% spp, riverGG %in% r), aes(grWeight, distMoved, color = speciesGG)) + 
    geom_point(alpha = 0.2) +
    geom_smooth(method = "lm", se = FALSE, color = 'darkgrey') +
    scale_color_discrete() +
    ggtitle(paste(spp, r, sep = ", ")) +
    labs(x = "Individual growth in mass", y = "Movement distance") +
    theme_publication() +    
    facet_grid(riverGG~seasonGG, scales = "free")
}

plotGR_moveDist2(cd1, c("Brook trout"), c("West Brook", "Open Large", "Open Small", "Isolated Small"))

plotGR_moveDist2(cd1, c("Brown trout"), c("West Brook", "Open Large", "Open Small"))
```

## Machine Learning models - individual data

Using xgBoost to explore patterns in:\
- Binary, lose mass:gain mass\
- Regression, growth in mass

### Binary model with negative growth, yes:no

Not yet in targets....


### Function to run hyperparameters

```{r}
#| label: runML_HP_negGrowth

runHyperparamSearchIndData <- function(d = cd1, vars = c("riverGG", "observedWeight", "cohort", "age", "meanTemperature", "meanFlowByRiver", "negGrowth"), nRoundsIn = 150000, early_stopping_roundsIn = 50) {
  
  #set.seed(123)
  
  dML_negGrowth <- d |> 
    mutate(age = year - cohort) |> 
    dplyr::select(all_of(vars)) 
  
  # variable names
  features_negGrowth <- setdiff(names(dML_negGrowth), "negGrowth")
  
  # Create the treatment plan from the training data
  treatplan_negGrowth <- vtreat::designTreatmentsZ(dML_negGrowth, features_negGrowth, verbose = FALSE)
  
  # Get the "clean" variable names from the scoreFrame
  new_vars_negGrowth <- treatplan_negGrowth %>%
    magrittr::use_series(scoreFrame) %>%        
    dplyr::filter(code %in% c("clean", "lev")) %>% 
    magrittr::use_series(varName)     
  
  # Prepare the training data
  features_train_negGrowth <- vtreat::prepare(treatplan_negGrowth, dML_negGrowth, varRestriction = new_vars_negGrowth) %>% as.matrix()
  response_train_negGrowth <- dML_negGrowth$negGrowth
  
  # create hyperparameter grid
  hyper_grid_negGrowth <- expand.grid(
    eta = c(.01, .05, .1, .3),
    max_depth = c(1, 3, 5, 7),
    min_child_weight = c(1, 3, 5, 7),
    subsample = c(.65, .8, 1),
    colsample_bytree = c(.8, .9, 1),
    optimal_trees = 0,               # a place to dump results
    min_logloss = 0                     # a place to dump results
  )

  # reproducibility
    #set.seed(123)
  #   
  # grid search
  for(i in 1:nrow(hyper_grid_negGrowth)) {
    print(paste0(i, " out of ", nrow(hyper_grid_negGrowth)))
    # create parameter list
    params_negGrowth <- list(
      eta = hyper_grid_negGrowth$eta[i],
      max_depth = hyper_grid_negGrowth$max_depth[i],
      min_child_weight = hyper_grid_negGrowth$min_child_weight[i],
      subsample = hyper_grid_negGrowth$subsample[i],
      colsample_bytree = hyper_grid_negGrowth$colsample_bytree[i]
    )
  
  
    # train model
    xgb.tune_negGrowth <- xgb.cv(
      params = params_negGrowth,
      data = features_train_negGrowth,
      label = response_train_negGrowth,
      nrounds = nRoundsIn,
      nfold = 5,
      objective = "binary:logistic", #"reg:linear",  # for regression models
      verbose = 0,               # silent,
      early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for x consecutive trees
    )
  
    # add min training error and trees to grid
    hyper_grid_negGrowth$optimal_trees[i] <- which.min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)
    hyper_grid_negGrowth$min_logloss[i] <- min(xgb.tune_negGrowth$evaluation_log$test_logloss_mean)
  }
  
  return(hyper_grid_negGrowth |> arrange(min_logloss))
}

```


### Function to run models

```{r}
#| label: xgBoostNegGrowthFunction

# http://uc-r.github.io/gbm_regression
runXGB_indData <- function(d = cd1, vars = c("riverGG", "observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "negGrowth"), nRoundsIn = 200000, early_stopping_roundsIn = 50, params = params_negGrowthIn) {
  
  #set.seed(125)
  
  dML <- d |> 
    mutate(age = year - cohort) |> 
    dplyr::select(all_of(vars))
    
  
  # variable names
  features_negGrowth <- setdiff(names(dML), "negGrowth")
  
  # Create the treatment plan from the training data
  treatplan_negGrowth <- vtreat::designTreatmentsZ(dML, features_negGrowth, verbose = FALSE)
  
  # Get the "clean" variable names from the scoreFrame
  new_vars_negGrowth <- treatplan_negGrowth %>%
    magrittr::use_series(scoreFrame) %>%        
    dplyr::filter(code %in% c("clean", "lev")) %>% 
    magrittr::use_series(varName)     
  
  # Prepare the training data
  features_train_negGrowth <- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %>% as.matrix()
  response_train_negGrowth <- dML$negGrowth
  
  # Prepare the test data
  features_test_negGrowth <- vtreat::prepare(treatplan_negGrowth, dML, varRestriction = new_vars_negGrowth) %>% as.matrix()
  response_test_negGrowth <- dML$negGrowth

  ##### Run model
  # parameter list - from the top model of the grid search above
  params_negGrowth <- list(
    eta = params$eta, #0.01,
    max_depth = params$max_depth, #1,
    min_child_weight = params$min_child_weight, #7,
    subsample = params$subsample, #0.8,
    colsample_bytree = params$colsample_bytree #0.9
   # optimal_trees = params$optimal_trees
  )
  
  # train final model
  xgb.fit.final_negGrowth <- xgboost(
    params = params_negGrowth,
    data = features_train_negGrowth,
    label = response_train_negGrowth,
    nrounds = nRoundsIn,
    objective = "binary:logistic",
    verbose = 1,
    early_stopping_rounds = early_stopping_roundsIn # stop if no improvement for 20 consecutive trees
  )
  

  return(
    list(
      dat = dML,
      xgb = xgb.fit.final_negGrowth,
      new_vars = new_vars_negGrowth,
      features_train = features_train_negGrowth,
      response_train = response_train_negGrowth
    )
  )

}

```

### Brook trout
#### Run hyperparameter grid and main model
```{r}
#| label: xgbIndBKT

runHP_BKT = FALSE
runXGB_BKT = FALSE

if (runHP_BKT) {
  hpNegGrowthBKT <- runHyperparamSearchIndData(
    d = cd1 |>  filter(speciesGG == "Brook trout", !is.na(grWeight), year > 2001) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("riverGG", "observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 50000,
    early_stopping_roundsIn = 10
  )
  save(hpNegGrowthBKT, file = "./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData")
} else {
  load("./data/out/XGBoost/hyperParam/hpNegGrowthBKT.RData")
}

hpNegGrowthBKT[1:10,]

if (runXGB_BKT) {
  negGrowthBKT <- runXGB_indData(
    d = cd1 |>  filter(speciesGG == "Brook trout", !is.na(grWeight), year > 2001) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("riverGG", "observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 200000,
    early_stopping_roundsIn = 20,
    params = hpNegGrowthBKT[1,]
  )
save(negGrowthBKT, file = "./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData")
} else {
  load("./data/out/XGBoost/modelRuns/XGBnegGrowthBKT.RData")
}
negGrowthBKT$xgb$best_iteration
negGrowthBKT$xgb$best_score

# plot error vs number trees
ggplot(negGrowthBKT$xgb$evaluation_log) +
  geom_line(aes(iter, train_logloss), color = "red") 
#  geom_line(aes(iter, test_logloss), color = "blue")
```

```{r}
#| label: xgbIndBKT_figs
#| 
# variable importance plot
viBKT_negGrowth <- xgb.importance(model = negGrowthBKT$xgb)
xgb.plot.importance(viBKT_negGrowth, top_n = 10, measure = "Gain")

####################################################################
s_negGrowthBKT <- hstats(negGrowthBKT$xgb, v = negGrowthBKT$new_vars, X = negGrowthBKT$features_train)
s_negGrowthBKT
plot(s_negGrowthBKT)
# 
# # top 5 2-way interactions
# h2_pairwise(s_negGrowthBKT, normalize = FALSE, squared = FALSE, top_m = 8)
plot(s_negGrowthBKT, which = 1:2, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)
# 
# # 3-way interactions
# plot(s_negGrowthBKT, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pWeight_negGrowth <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "observedWeight", n.trees = 10, grid.resolution = 25, train = negGrowthBKT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +
  geom_smooth(se = FALSE)

#n.trees = 1082, grid.resolution = 100,

pFlow_negGrowth <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_negGrowth <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +
  geom_smooth(se = FALSE)

pNInd_negGrowth <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +
  geom_smooth(se = FALSE)

pYear_negGrowth <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBKT$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)

##################################################################
# all on one graph
pWeight_negGrowthDataBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "observedWeight", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),
         var = "Mass",
         speciesGG = "Brook Trout")

pFlow_negGrowthDataBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),
         var = "Flow",
         speciesGG = "Brook Trout")

pMT_negGrowthDataBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),
         var = "Temperature",
         speciesGG = "Brook Trout")

pNInd_negGrowthDataBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Brook Trout")

pYear_negGrowthDataBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Brook Trout")


all_negGrowthDataBKT <- bind_rows(pWeight_negGrowthDataBKT, pFlow_negGrowthDataBKT, pMT_negGrowthDataBKT, pNInd_negGrowthDataBKT, pYear_negGrowthDataBKT)

(
all_negGrowthDataBKT_gg <- ggplot(all_negGrowthDataBKT, aes(xScaled, yhat, color = var)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_publication() +
  labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)

##################################################################
# All river on one graph
partialWBBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_West_Brook", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(riverGG = "West Brook") |> 
  rename(x = "riverGG_lev_x_West_Brook")

partialOLBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Large", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|> 
  mutate(riverGG = "Open Large") |> 
  rename(x = "riverGG_lev_x_Open_Large")

partialOSBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Small", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train) |> 
  mutate(riverGG = "Open Small") |> 
  rename(x = "riverGG_lev_x_Open_Small")

partialISBKT <- negGrowthBKT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Isolated_Small", n.trees = 10, grid.resolution = 50, train = negGrowthBKT$features_train)|> 
  mutate(riverGG = "Isolated Small") |> 
  rename(x = "riverGG_lev_x_Isolated_Small")

partialRiversBKT <- bind_rows(partialWBBKT, partialOLBKT, partialOSBKT, partialISBKT) |> 
  filter(x %in% c(0,1)) |> 
  mutate(RiverEffect = ifelse(x ==1, "Yes", "No"),
         riverOrdered = factor(riverGG, levels = c("West Brook", "Open Large", "Open Small", "Isolated Small"), 
                             ordered = T))

ggplot(partialRiversBKT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +
  geom_col(position = "dodge", linewidth = 1.5) +
  labs(y = "Effect on proportion of negative observations")

### Interaction plots ##################################################################

plot(partial_dep(negGrowthBKT$xgb, v = "meanTemperature", X = negGrowthBKT$features_train, BY = "meanFlowByRiver")) +
  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)

plot(partial_dep(negGrowthBKT$xgb, v = "meanFlowByRiver", X = negGrowthBKT$features_train, BY = "meanTemperature")) +
  geom_smooth(aes(color = meanTemperature), se = FALSE)

plot(partial_dep(negGrowthBKT$xgb, v = "meanFlowByRiver", X = negGrowthBKT$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

```

### Brown trout
#### Run hyperparameter grid and main model
```{r}
#| label: xgbIndBNT

runHP_BNT = FALSE
runXGB_BNT = FALSE

if (runHP_BNT) {
  hpNegGrowthBNT <- runHyperparamSearchIndData(
    d = cd1 |>  filter(speciesGG == "Brown trout", !is.na(grWeight), year > 2001) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("riverGG", "observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 50000,
    early_stopping_roundsIn = 10
  )
  save(hpNegGrowthBNT, file = "./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData")
} else {
  load("./data/out/XGBoost/hyperParam/hpNegGrowthBNT.RData")
}
  
  hpNegGrowthBNT[1:10,]

if (runXGB_BNT) {
  negGrowthBNT <- runXGB_indData(
    d = cd1 |>  filter(speciesGG == "Brown trout", !is.na(grWeight), year > 2001) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("riverGG", "observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 200000,
    early_stopping_roundsIn = 20,
    params = hpNegGrowthBNT[1,]
  )
  save(negGrowthBNT, file = "./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData")
} else {
  load("./data/out/XGBoost/modelRuns/XGBnegGrowthBNT.RData")
}
negGrowthBNT$xgb$best_iteration
negGrowthBNT$xgb$best_score

# plot error vs number trees
ggplot(negGrowthBNT$xgb$evaluation_log) +
  geom_line(aes(iter, train_logloss), color = "red") 
#  geom_line(aes(iter, test_logloss), color = "blue")
```

```{r}
#| label: xgbIndBNT_figs
# variable importance plot
viBNT_negGrowth <- xgb.importance(model = negGrowthBNT$xgb)
xgb.plot.importance(viBNT_negGrowth, top_n = 10, measure = "Gain")

####################################################################
s_negGrowthBNT <- hstats(negGrowthBNT$xgb, v = negGrowthBNT$new_vars, X = negGrowthBNT$features_train)
s_negGrowthBNT
plot(s_negGrowthBNT)
# 
# # top 5 2-way interactions
# h2_pairwise(s_negGrowthBNT, normalize = FALSE, squared = FALSE, top_m = 8)
plot(s_negGrowthBNT, which = 1:2, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)
# 
# # 3-way interactions
# plot(s_negGrowthBNT, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pWeight_negGrowth <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "observedWeight", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +
  geom_smooth(se = FALSE)

pFlow_negGrowth <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_negGrowth <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +
  geom_smooth(se = FALSE)

pNInd_negGrowth <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +
  geom_smooth(se = FALSE)

pYear_negGrowth <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthBNT$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)

##################################################################
# all on one graph
pFlow_negGrowthDataBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),
         var = "Flow",
         speciesGG = "Brown Trout")

pMT_negGrowthDataBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),
         var = "Temperature",
         speciesGG = "Brown Trout")

pNInd_negGrowthDataBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Brown Trout")

pYear_negGrowthDataBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Brown Trout")


all_negGrowthDataBNT <- bind_rows(pFlow_negGrowthDataBNT, pMT_negGrowthDataBNT, pNInd_negGrowthDataBNT, pYear_negGrowthDataBNT)

(
all_negGrowthDataBNT_gg <- ggplot(all_negGrowthDataBNT, aes(xScaled, yhat, color = var)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_publication() +
  labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)

##################################################################
# All river on one graph
partialWBBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_West_Brook", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(riverGG = "West Brook") |> 
  rename(x = "riverGG_lev_x_West_Brook")

partialOLBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Large", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train)|> 
  mutate(riverGG = "Open Large") |> 
  rename(x = "riverGG_lev_x_Open_Large")

partialOSBNT <- negGrowthBNT$xgb %>%
  pdp::partial(pred.var = "riverGG_lev_x_Open_Small", n.trees = 10, grid.resolution = 50, train = negGrowthBNT$features_train) |> 
  mutate(riverGG = "Open Small") |> 
  rename(x = "riverGG_lev_x_Open_Small")

partialRiversBNT <- bind_rows(partialWBBNT, partialOLBNT, partialOSBNT) |> 
  filter(x %in% c(0,1)) |> 
  mutate(RiverEffect = ifelse(x ==1, "Yes", "No"),
         riverOrdered = factor(riverGG, levels = c("West Brook", "Open Large", "Open Small"), 
                             ordered = T))

ggplot(partialRiversBNT, aes(riverOrdered, yhat, fill = factor(RiverEffect))) +
  geom_col(position = "dodge", linewidth = 1.5) +
  labs(y = "Effect on proportion of negative observations")

### Interaction plots ##################################################################

plot(partial_dep(negGrowthBNT$xgb, v = "meanTemperature", X = negGrowthBNT$features_train, BY = "meanFlowByRiver")) +
  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)

plot(partial_dep(negGrowthBNT$xgb, v = "meanFlowByRiver", X = negGrowthBNT$features_train, BY = "meanTemperature")) +
  geom_smooth(aes(color = meanTemperature), se = FALSE)

plot(partial_dep(negGrowthBNT$xgb, v = "meanFlowByRiver", X = negGrowthBNT$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

```

### Atlantic salmon
#### Run hyperparameter grid and main model
```{r}
#| label: xgbIndATS

runHP_ATS = FALSE
runXGB_ATS = FALSE

if (runHP_ATS) {
  hpNegGrowthATS <- runHyperparamSearchIndData(
    d = cd1 |>  filter(speciesGG == "Atlantic salmon", !is.na(grWeight)) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 50000,
    early_stopping_roundsIn = 10
  )
  save(hpNegGrowthATS, file = "./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData")
} else {  
  load("./data/out/XGBoost/hyperParam/hpNegGrowthATS.RData")
}  
hpNegGrowthATS[1:10,]

if (runXGB_ATS) {
  negGrowthATS <- runXGB_indData(
    d = cd1 |>  filter(speciesGG == "Atlantic salmon", !is.na(grWeight)) |>
      left_join(tar_read(indCounts_target)) |>
      left_join(tar_read(indCountsBySpp_target)),
    vars = c("observedWeight", "year", "age", "meanTemperature", "meanFlowByRiver", "nInd", "nIndBySpp", "negGrowth"),
    nRoundsIn = 200000,
    early_stopping_roundsIn = 20,
    params = hpNegGrowthATS[1,]
  )
  save(negGrowthATS, file = "./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData")
} else {
  load("./data/out/XGBoost/modelRuns/XGBnegGrowthATS.RData")
}
negGrowthATS$xgb$best_iteration
negGrowthATS$xgb$best_score

# plot error vs number trees
ggplot(negGrowthATS$xgb$evaluation_log) +
  geom_line(aes(iter, train_logloss), color = "red") 
#  geom_line(aes(iter, test_logloss), color = "blue")
```

```{r}
#| label: xgbIndATS_figs
# variable importance plot
viATS_negGrowth <- xgb.importance(model = negGrowthATS$xgb)
xgb.plot.importance(viATS_negGrowth, top_n = 10, measure = "Gain")

####################################################################
s_negGrowthATS <- hstats(negGrowthATS$xgb, v = negGrowthATS$new_vars, X = negGrowthATS$features_train)
s_negGrowthATS
plot(s_negGrowthATS)
# 
# # top 5 2-way interactions
# h2_pairwise(s_negGrowthATS, normalize = FALSE, squared = FALSE, top_m = 8)
plot(s_negGrowthATS, which = 1:2, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)
# 
# # 3-way interactions
# plot(s_negGrowthATS, which = 1:3, normalize = F, squared = F, facet_scales = "free_y", ncol = 1)

## Partial dep plots ################################################################

pWeight_negGrowth <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "observedWeight", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthATS$features_train) +
  geom_smooth(se = FALSE)

pFlow_negGrowth <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthATS$features_train) +
  geom_smooth(se = FALSE)
  #scale_y_discrete() +
  #ggtitle("PDP")
pTemp_negGrowth <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthATS$features_train) +
  geom_smooth(se = FALSE)

pNInd_negGrowth <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthATS$features_train) +
  geom_smooth(se = FALSE)

pYear_negGrowth <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) %>%
  autoplot(rug = TRUE, train = negGrowthATS$features_train) +
  geom_smooth(se = FALSE)

gridExtra::grid.arrange(pWeight_negGrowth, pFlow_negGrowth, pTemp_negGrowth, pNInd_negGrowth, pYear_negGrowth, nrow = 3)

##################################################################
# all on one graph

pWeight_negGrowthDataATS <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "observedWeight", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |> 
  mutate(xScaled = (observedWeight-mean(observedWeight))/sd(observedWeight),
         var = "Mass",
         speciesGG = "Atlantic salmon")

pFlow_negGrowthDataATS <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "meanFlowByRiver", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |> 
  mutate(xScaled = (meanFlowByRiver-mean(meanFlowByRiver))/sd(meanFlowByRiver),
         var = "Flow",
         speciesGG = "Atlantic salmon")

pMT_negGrowthDataATS <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "meanTemperature", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |> 
  mutate(xScaled = (meanTemperature-mean(meanTemperature))/sd(meanTemperature),
         var = "Temperature",
         speciesGG = "Atlantic salmon")

pNInd_negGrowthDataATS <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "nInd", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |> 
  mutate(xScaled = (nInd-mean(nInd))/sd(nInd),
         var = "Num inds",
         speciesGG = "Atlantic salmon")

pYear_negGrowthDataATS <- negGrowthATS$xgb %>%
  pdp::partial(pred.var = "year", n.trees = 10, grid.resolution = 50, train = negGrowthATS$features_train) |> 
  mutate(xScaled = (year-mean(year))/sd(year),
         var = "Year",
         speciesGG = "Atlantic salmon")


all_negGrowthDataATS <- bind_rows(pWeight_negGrowthDataATS, pFlow_negGrowthDataATS, pMT_negGrowthDataATS, pNInd_negGrowthDataATS, pYear_negGrowthDataATS)

(
all_negGrowthDataATS_gg <- ggplot(all_negGrowthDataATS, aes(xScaled, yhat, color = var)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE) +
  theme_publication() +
  labs(y = "Effect on proportion of negative observations", x = "Scaled value")
)


### Interaction plots ##################################################################

plot(partial_dep(negGrowthATS$xgb, v = "meanTemperature", X = negGrowthATS$features_train, BY = "meanFlowByRiver")) +
  geom_smooth(aes(color = meanFlowByRiver), se = FALSE)

plot(partial_dep(negGrowthATS$xgb, v = "meanFlowByRiver", X = negGrowthATS$features_train, BY = "meanTemperature")) +
  geom_smooth(aes(color = meanTemperature), se = FALSE)

plot(partial_dep(negGrowthATS$xgb, v = "meanFlowByRiver", X = negGrowthATS$features_train, BY = c("nInd"))) +
  geom_smooth(aes(color = nInd), se = FALSE)

```

### All 3 species
```{r}
#| label: partial3sppIndProbNeg

# variable importance plots

viAll_negGrowth <- bind_rows(
  viBKT_negGrowth |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Brook Trout"),
  viBNT_negGrowth |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Brown Trout"),
  viATS_negGrowth |> dplyr::select(Feature, Gain) |> mutate(speciesGG = "Atlantic Salmon")
) |> 
  mutate(sppOrdered = factor(speciesGG, levels = c("Brook Trout", "Brown Trout", "Atlantic Salmon"), ordered = TRUE),
         feature2 = case_when(
           Feature == "observedWeight" ~ "Fish mass",
           Feature == "meanFlowByRiver" ~ "Flow",
           Feature == "meanTemperature" ~ "Temperature",
           Feature == "nInd" ~ "Num Individuals",
           Feature == "year" ~ "Year")
  )

ggplot(viAll_negGrowth |> filter(Feature %in% c("observedWeight", "meanFlowByRiver", "meanTemperature", "nInd", "year")), aes(feature2, Gain, fill = sppOrdered)) +
  geom_col(position = "dodge") +
  theme_publication() +
  scale_fill_grey() +
  labs(y = "Variable importance for the proportion of negative observations", x = "Variable")

########################################################

all_negGrowthData3spp <- bind_rows(all_negGrowthDataBKT, all_negGrowthDataBNT, all_negGrowthDataATS) |> 
  mutate(sppOrdered = factor(speciesGG, levels = c("Brook Trout", "Brown Trout", "Atlantic Salmon"), ordered = TRUE))

all_negGrowthData3sppMass_gg <- ggplot(all_negGrowthData3spp |> filter(var == "Mass"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled fish mass") +
  theme(legend.position = "none")  


all_negGrowthData3sppFlow_gg <- ggplot(all_negGrowthData3spp |> filter(var == "Flow"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled flow") +
  theme(legend.position = "none")  


all_negGrowthData3sppTemp_gg <- ggplot(all_negGrowthData3spp |> filter(var == "Temperature"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled temperature") +
  theme(legend.position = "none")  

all_negGrowthData3sppNInd_gg <- ggplot(all_negGrowthData3spp |> filter(var == "Num inds"), aes(xScaled, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
    scale_color_grey() +
  labs(y = NULL, x = "Scaled Number of individuals") +
  theme(legend.position = "none")  

all_negGrowthData3sppYear_gg <- ggplot(all_negGrowthData3spp |> filter(var == "Year"), aes(year, yhat, color = sppOrdered, linetype = sppOrdered)) +
  #geom_point(alpha = 0.2) +
  geom_smooth(se = FALSE, linewidth = 1.5) +
  theme_publication() +
  scale_color_grey() +
  labs(y = NULL, x = "Year") +
  theme(legend.position = "none")  

gridExtra::grid.arrange(
  all_negGrowthData3sppMass_gg,
  all_negGrowthData3sppFlow_gg, 
  all_negGrowthData3sppTemp_gg,
  all_negGrowthData3sppNInd_gg,
  #all_negGrowthData3sppYear_gg,
  left = textGrob(expression(bold("Effect on proportion of negative observations")), rot = 90, gp = gpar(fontsize = 16))
)

all_negGrowthData3sppYear_gg
#######################################
```

### Growth model, continuous growth

can we add season, river interactions? or do separate analyses?

```{r}
#| label: readInTargets_W
#| cache: false
library(targets)
dML_W <- tar_read(dML_W_target)
treatplan_W <- tar_read(treatplan_W_target)
features_train_W <- tar_read(features_train_W_target)
new_vars_W <- tar_read(new_vars_W_target)

# dimensions of one-hot encoded data
features_train_W <- tar_read(features_train_W_target)
features_test_W <- tar_read(features_test_W_target)

response_train_W <- tar_read(response_train_W_target)
response_test_W <- tar_read(response_test_W_target)

# run from targets
hyper_grid_W <- tar_read(hyper_grid_W_target)
topModel_W <- tar_read(topModel_W_target)


finalModels_W <- tar_read(finalModels_W_target)

modelToUse <- 1
```

#### Run first model

```{r}
#| label: runML1_W
#| 
# reproducibility
set.seed(1234)

xgb.fit1_W <- xgb.cv(
  data = features_train_W,
  label = response_train_W,
  nrounds = 500,
  nfold = 5,
  objective = "reg:squarederror",  # for regression models
  verbose = 0,               # silent,
  early_stopping_rounds = 10
)

# get number of trees that minimize error
xgb.fit1_W$evaluation_log %>%
  dplyr::summarise(
    ntrees.train = which(train_rmse_mean == min(train_rmse_mean))[1],
    rmse.train   = min(train_rmse_mean),
    ntrees.test  = which(test_rmse_mean == min(test_rmse_mean))[1],
    rmse.test   = min(test_rmse_mean),
  )

# plot error vs number trees
ggplot(xgb.fit1_W$evaluation_log) +
  geom_line(aes(iter, train_rmse_mean), color = "red") +
  geom_line(aes(iter, test_rmse_mean), color = "blue")
```

#### Hyperparameter search grid

```{r}
#| label: runML_HP_W


# create hyperparameter grid
# original grid - using a smaller one in targets
# hyper_grid_W0 <- expand.grid(
#   eta = c(.01, .05, .1, .3),
#   max_depth = c(1, 3, 5, 7),
#   min_child_weight = c(1, 3, 5, 7),
#   subsample = c(.65, .8, 1), 
#   colsample_bytree = c(.8, .9, 1),
#   optimal_trees = 0,               # a place to dump results
#   min_RMSE = 0                     # a place to dump results
# )
# nrow(hyper_grid_W0)



# Original run using hyper_grid_W0 
# eta max_depth min_child_weight
# subsample colsample_bytree optimal_trees min_RMSE 1 0.01 7 5 0.65 0.8
# 1376 0.001847600 2 0.05 7 3 0.80 0.9 292 0.001848465 3 0.01 7 7 0.80 0.9
# 1382 0.001849086 4 0.01 5 1 0.80 0.8 2399 0.001849250 5 0.05 7 3 0.80
# 0.8 281 0.001849258 6 0.01 5 3 0.65 0.8 2147 0.001849905 7 0.05 5 1 0.65
# 0.8 459 0.001849931 8 0.01 5 5 0.80 0.9 2296 0.001850049 9 0.01 7 5 0.65
# 0.9 1402 0.001850246 10 0.01 7 7 0.65 0.8 1382 0.001850544 11 0.01 7 3
# 0.65 0.8 1384 0.001850704 12 0.05 3 3 0.80 0.8 1509 0.001850763 13 0.01
# 7 7 0.80 0.8 1453 0.001850975 14 0.01 7 1 0.80 1.0 1281 0.001851069 15
# 0.01 7 1 0.80 0.8 1473 0.001851078


```


#### Variable importance plot

```{r}
#| label: vipContinuous_W
#| cache: false

#importance_matrix_W <- tar_read(importance_matrix_W_target)

# variable importance plot


```

#### Partial dependence plots

```{r}
#| label: pdpContinuous_W

create_xgb_plots <- function(d = finalModels_W, f = features_train_W, modelToUse = modelToUse) {
  
  imp <- xgb.ggplot.importance(d$importanceMatrix[[modelToUse]], top_n = 10, measure = "Gain") + 
    ggtitle(paste0("Model #", modelToUse))

  pW_W <- d$xgb[[modelToUse]] %>%
    pdp::partial(pred.var = "observedWeight", n.trees = 1082, grid.resolution = 100, train = f) %>%
    autoplot(rug = TRUE, train = f) 
  
  pFlow_W <- d$xgb[[modelToUse]] %>%
    pdp::partial(pred.var = "meanFlowByRiver", n.trees = 1082, grid.resolution = 100, train = f) %>%
    autoplot(rug = TRUE, train = f)
  
  pTemp_W <- d$xgb[[modelToUse]] %>%
    pdp::partial(pred.var = "meanTemperature", n.trees = 1082, grid.resolution = 100, train = f) %>%
    autoplot(rug = TRUE, train = f)
  
  pAge_W <- d$xgb[[modelToUse]] %>%
    pdp::partial(pred.var = "age", n.trees = 1082, grid.resolution = 100, train = f) %>%
    autoplot(rug = TRUE, train = f)
  
  pCohort_W <- d$xgb[[modelToUse]] %>%
    pdp::partial(pred.var = "cohort", n.trees = 1082, grid.resolution = 100, train = f) %>%
    autoplot(rug = TRUE, train = f)


  partials <- gridExtra::grid.arrange(pW_W, pFlow_W, pTemp_W, pAge_W, pCohort_W, nrow = 3, top=textGrob(paste0("Model #", modelToUse)))
  
 return(list(imp, partials)) 
}

create_xgb_plots(finalModels_W, features_train_W, modelToUse = 1)
create_xgb_plots(finalModels_W, features_train_W, modelToUse = 2)
create_xgb_plots(finalModels_W, features_train_W, modelToUse = 3)
create_xgb_plots(finalModels_W, features_train_W, modelToUse = 4)
create_xgb_plots(finalModels_W, features_train_W, modelToUse = 5)
create_xgb_plots(finalModels_W, features_train_W, modelToUse = 15)
```

#### Lime

```{r}
#| label: limeContinuous_W

# get a few observations to perform local interpretation on
local_obs_W <- dML_W[1:3, ]

# one-hot encode the local observations to be assessed.
local_obs_onehot_W <- vtreat::prepare(treatplan_W, local_obs_W, varRestriction = new_vars_W)

# apply LIME
explainer_W <- lime(data.frame(features_train_W), finalModels_W$xgb[[modelToUse]], quantile_bins = FALSE)
explanation_W <- lime::explain(local_obs_onehot_W, explainer_W, n_features = 5, n_labels = 2)
plot_features(explanation_W)
```

#### Predict

```{r}
#| label: predict_W


createPredictions <- function(d = finalModels_W, f = features_test_W, r = response_test_W, modelToUse = modelToUse) {
  
  pred_W <- predict(d$xgb[[modelToUse]], f)
  rmse <- caret::RMSE(pred_W, r)
  r2 <- caret::R2(pred_W, r)
  
  obsPred_W <- bind_cols(obs = r, pred = pred_W, f)
  
  return(list(r2 = r2, rmse = rmse, obsPred_W = obsPred_W))
}

```

```{r}
#| label: obsPred_W
#| 

predsOP_W <- createPredictions(finalModels_W, features_test_W, response_test_W, modelToUse) 

ggplot(predsOP_W$obsPred_W, aes(obs, pred)) +
  geom_point(alpha = 0.2) +
  labs(x = "Observed growth rate", y = "Predicted growth rate") +
  geom_smooth(method = "lm", se = FALSE) +
  ggtitle(paste0("r2 = ", round(predsOP_W$r2, 2), " RMSE = ", round(predsOP_W$rmse, 5)))

ggplot(predsOP_W$obsPred_W, aes(obs, pred)) +
  geom_point(alpha = 0.2) +
  labs(x = "Observed growth rate", y = "Predicted growth rate") +
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap(~cohort)
```

```{r}
#| label: UsingGridInputs
#| 
renameLev <- function(d) {
  d |>  
    str_split("_lev_x_") |> 
    map(~.x[2]) |> 
    unlist()
}

createPredictionsGrid <- function(d = finalModels_W, pg = gridPred, modelToUse = modelToUse){
  #, f = features_test_W, r = response_test_W, nSeq = 5, modelToUse = modelToUse) {
  
  predGrid <- predict(d$xgb[[modelToUse]], pg)
  gridPredOut <- bind_cols(pg, pred = predGrid) |> 
    rename_with(
      renameLev,  
      contains("_lev_x_")
    ) |>  
    rowwise() |> 
    mutate(
      sumRiver = sum(Isolated_Small + Open_Large + Open_Small + West_Brook),
      sumSeason = sum(Autumn + Spring + Summer + Winter)
    ) |>   
    filter(
      sumRiver == 1,
      sumSeason == 1
    ) |>   
    mutate(
      across(c('Isolated_Small':'Winter'), ~.x == 1)
    )

  return(gridPredOut)
}



nSeq <- 5
xGrid <- expand_grid(
    observedWeight = 40, #seq(min(f[,"observedWeight"]), max(f[,"observedWeight"]), length.out = nSeq),
    cohort = 2010, #seq(min(f[,"cohort"]), max(f[,"cohort"]), length.out = nSeq),
    age = 1, #seq(min(f[,"age"]), max(f[,"age"]), length.out = nSeq),
    meanTemperature = seq(min(features_test_W[,"meanTemperature"]), max(features_test_W[,"meanTemperature"]), length.out = nSeq * 3),
    meanFlowByRiver = seq(min(features_test_W[,"meanFlowByRiver"]), max(features_test_W[,"meanFlowByRiver"]), length.out = nSeq * 3),
    riverGG_lev_x_Isolated_Small = c(0, 1),
    riverGG_lev_x_Open_Large = c(0, 1),
    riverGG_lev_x_Open_Small = c(0, 1),
    riverGG_lev_x_West_Brook = c(0, 1),
    seasonGG_lev_x_Autumn = c(0, 1),
    seasonGG_lev_x_Spring = c(0, 1),
    seasonGG_lev_x_Summer = c(0, 1),
    seasonGG_lev_x_Winter = c(0, 1)
  ) |> 
  as.matrix()


preds_W <- createPredictionsGrid(
  finalModels_W, 
  xGrid,
  modelToUse
) 


ggplot(preds_W |> 
         filter(
           #Isolated_Small, Open_Large, Open_Small, West_Brook, 
           #Autumn, Spring, Summer, Winter
           ), 
       aes(meanFlowByRiver, pred, color = meanTemperature, group = meanTemperature)) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream flow", y = "Predicted growth rate") +
  geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  facet_grid(Isolated_Small+Open_Large+Open_Small+West_Brook ~ Spring+Summer+Autumn+Winter)

# use seasonal zScores for environmetnal data
```


#### When and where do fish have predicted negative growth?
```{r}
#| label: negPredGrowth_W

predNeg <- preds_W |> filter(pred < 0.000)
predNeg |> 
  count(Isolated_Small, Open_Large, Open_Small, West_Brook, Autumn, Spring, Summer, Winter) |> 
  arrange(desc(n))

predNeg |> 
  count(Autumn, Spring, Summer, Winter) |> 
  arrange(desc(n))

predNeg |> 
  count(Isolated_Small, Open_Large, Open_Small, West_Brook) |> 
  arrange(desc(n))

```

## GAM for individual growth
```{r}
#| label: gamGrowthRaw

#riverGG, seasonGG, observedWeight, cohort, age, meanTemperature, meanFlowByRiver, negGrowth


kValue <- 4 

ggplot(dGAM |> filter(speciesGG != "Atlantic salmon"), aes(flowByRiverS, grWeight, group = speciesGG, color = speciesGG)) +
  geom_point(alpha = 0.2) +
  geom_smooth(method = "gam", 
              formula = y ~ s(x, bs = "cs", fx = TRUE, k = kValue), 
              se = FALSE) +
  theme_publication() +    
  facet_grid(seasonGG~riverGG)

ggplot(dGAM |> filter(speciesGG != "Atlantic salmon"), aes(flowByRiverSR, grWeight, group = speciesGG, color = speciesGG)) +
  geom_point(alpha = 0.1) +
  geom_hline(yintercept = 0) +
  geom_smooth(method = "gam", 
              formula = y ~ s(x, bs = "cs", fx = TRUE, k = kValue), 
              se = FALSE) +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~riverGG, scales = "free")


ggplot(dGAM |> filter(speciesGG != "Atlantic salmon"), aes(tempSR, grWeight, group = speciesGG, color = speciesGG)) +
  geom_point(alpha = 0.1) +
  geom_hline(yintercept = 0) +
  geom_smooth(method = "gam", 
              formula = y ~ s(x, bs = "cs", fx = TRUE, k = kValue), 
              se = FALSE) +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~riverGG, scales = "free")
```

### Linear models for growth  
Initial test of model structure for GAMs
```{r}
#| label: linearModelGrowth

runLinearModels <- function(d, speciesIn) {
  models =
    tibble(model = 
      c(
          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF * ageF)',
          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR * observedWeight + cohortF)',
          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF * ageF)',
          'grWeight ~ (riverGG * seasonGG * tempSR * flowByRiverSR + cohortF)',
          'grWeight ~ (riverGG * seasonGG + tempSR * flowByRiverSR + cohortF * ageF)',
          'grWeight ~ (riverGG * seasonGG + tempSR + flowByRiverSR + cohortF * ageF)'
       )
    ) |>
    mutate(
      fit = map(model, ~lm(.x, data = d |> filter(speciesGG == speciesIn))),
      glanced = map(fit, broom::glance),
      tidied = map(fit, broom::tidy)
    )
  return(models)
}


```
#### Brook trout  
Most complex model has lowest AIC
```{r}
#| label: linBKT
#| 
speciesIn <- "Brook trout"
modLinearBKT <- runLinearModels(dGAM, speciesIn)

modLinearBKT |> 
    unnest(glanced) |>
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, fit, tidied)




```
#### Brown trout  
Most complex model has lowest AIC
```{r}
#| label: linBNT
#| 
speciesIn <- "Brown trout"
modLinearBNT <- runLinearModels(dGAM, speciesIn)

modLinearBNT |> 
    unnest(glanced) |>
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, fit, tidied)




```
These linear models suggest that we need significant complexity in GAM models  

### GAM models for growth  
This modeling approach map() (which I would like to use), throws an error using bam(). Use gamX model approach below.
```{r}
#| label: gamModelsGrowth
#| 
runGAMModels <- function(d, speciesIn, kIn) {
  models =
    tibble(model = 
      c(
            'grWeight ~ riverGG * seasonGG * observedWeight + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG)',
            
            'grWeight ~ riverGG * seasonGG * observedWeight * tempSR * flowByRiverSR + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG)'
       )
    ) |>
    mutate(
      fit = map(model, ~ bam(.x, method = "REML", data = d |> filter(speciesGG == speciesIn, cohort %in% 2000:2013)))
  #    glanced = map(fit, broom::glance),
  #    tidied = map(fit, broom::tidy)
    )
  return(models)
}


# 
# speciesIn <- "Brook trout"
# modLinearBKT <- runGAMModels(dGAM, speciesIn, kValue)
# 
# modLinearBKT |> 
#     unnest(glanced) |>
#     arrange(AIC) |>
#     dplyr::select(model, AIC, df.residual, fit, tidied)


```

#### Brook trout - flow by river
```{r}
#| label: gamModsBKTFBR

speciesIn <- "Brook trout"
kIn <- 4

gam0 <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowSR)^2 + cohortF * ageF +             
               s(flowSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
######

gam0ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

gam1ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR)^2 + cohortF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

# age matters, what about taking out length?
gam2ByRiver <- bam(grWeight ~ (riverGG + seasonGG  + tempSR + flowByRiverSR)^2 + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")

#nope, need to keep length
#How about without the interactions?
gam3ByRiver <- bam(grWeight ~ (riverGG + seasonGG + observedWeight + tempSR + flowByRiverSR) + cohortF * ageF +             
               s(flowByRiverSR, bs = "cr", k = kIn, by = riverGG) +
               s(flowByRiverSR, bs = "cr", k = kIn, by = seasonGG) +
               s(tempSR, bs = "cr", k = kIn, by = riverGG) +
               s(tempSR, bs = "cr", k = kIn, by = seasonGG),
             data = dGAM |> filter(speciesGG == speciesIn, cohort %in% 2000:2013), method = "REML")
#nope, need the interactions

AIC(gam0ByRiver, gam1ByRiver, gam2ByRiver, gam3ByRiver) |> arrange(AIC)
```


#### Brook trout - compare flow and flow by river gams
```{r}
#| label: gamModsCompare

predictBKTgam <- function(dIn, modInFlowByRiver){

  # predMat0 <- 
  #   expand.grid(
  #     flowSR = seq(-1.5,1.5,0.25), 
  #     tempSR = seq(-1.5,1.5,0.25), 
  #     riverGG = unique(dIn$riverGG), 
  #     seasonGG= unique(dIn$seasonGG),
  #     observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
  #     cohortF = 2000:2013,#uunique(dIn$cohortF),
  #     ageF = 0:4,#unique(dIn$ageF),
  #     byRiver = FALSE
  # )
  # predMat <- 
  #   add_column(
  #     pred = predict.bam(modInFlow, predMat0),
  #     predMat0
  #   ) |> 
  #   rename(flow = flowSR, temp = tempSR)
  
  predMatByRiver0 <- 
    expand.grid(
      flowByRiverSR = seq(-1.5,1.5,0.25), 
      tempSR = seq(-1.5,1.5,0.25), 
      riverGG = unique(dIn$riverGG), 
      seasonGG= unique(dIn$seasonGG),
      observedWeight = seq(2, max(dIn$observedWeight, na.rm = TRUE)/2, 20),
      cohortF = 2000:2013,#unique(dIn$cohortF),
      ageF = 0:4,#unique(dIn$ageF),
      byRiver = TRUE
    ) 
  predMatByRiver <- 
    add_column(
      pred = predict.bam(modInFlowByRiver, predMatByRiver0),
      predMatByRiver0
    ) |> 
    rename(flow = flowByRiverSR, temp = tempSR)

  return(predMatByRiver)
}

gamBKTPredictions <- predictBKTgam(dGAM, gam0ByRiver)

```

#### Graph predictions
```{r}
#| label: graphGAMPredictions
unique(gamBKTPredictions$observedWeight)

ggplot(
  gamBKTPredictions |> 
    filter(
      observedWeight %in% c(22), 
      cohortF == 2012, 
      ageF == 0
    ), 
  aes(temp, pred, color = (flow), group = (flow))) +
  geom_point(alpha = 0.2) +
  labs(x = "Stream temperature", y = "Predicted growth rate") +
  #geom_smooth(se = FALSE) +
  geom_hline(yintercept = 0) +
  theme_publication() +    
  facet_grid(seasonGG~riverGG+byRiver, scales = 'free')

```


## Logistic models for environmental effects on negGrowth

### Standardize flow and temperature

```{r}
#| label: flowTempZ
#| 
# getZ <- function(d){
#   list(
#     mean = mean(d, na.rm = TRUE),
#     sd = sd(d, na.rm = TRUE)
#   )
# }
# fZ <- getZ(cd1$meanFlowByRiver)
# fT <- getZ(cd1$meanTemperature)

z <- cd1 |> 
  left_join(tar_read(indCounts_target)) |>
  left_join(tar_read(indCountsBySpp_target)) |> 
  group_by(riverGG, speciesGG) |> 
  summarize(
    fQMean = mean(meanFlowByRiver, na.rm = TRUE),
    fQSd = sd(meanFlowByRiver, na.rm = TRUE),
    fTMean = mean(meanTemperature, na.rm = TRUE),
    fTSd = sd(meanTemperature, na.rm = TRUE),
    fMMean = mean(observedWeight, na.rm = TRUE),
    fMSd = sd(observedWeight, na.rm = TRUE),
    fnIndMean = mean(nInd, na.rm = TRUE),
    fnIndSd = sd(nInd, na.rm = TRUE),
    fnIndBySpeciesMean = mean(nIndBySpp, na.rm = TRUE),
    fnIndBySpeciesSd = sd(nIndBySpp, na.rm = TRUE)
  )

zBySeason <- cd1 |> 
  group_by(riverGG, speciesGG, seasonGG) |> 
  summarize(fQbySeasonMean = mean(meanFlowByRiver, na.rm = TRUE),
            fQbySeasonSd = sd(meanFlowByRiver, na.rm = TRUE),
            fTbySeasonMean = mean(meanTemperature, na.rm = TRUE),
            fTbySeasonSd = sd(meanTemperature, na.rm = TRUE)
            )

cd1_z <- cd1 |> 
    left_join(tar_read(indCounts_target)) |>
  left_join(tar_read(indCountsBySpp_target)) |> 
  left_join(z) |> 
  left_join(zBySeason) |> 
  mutate(
    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,
    nIndZ = (nInd - fnIndMean)/fnIndSd,
    nIndBySpeciesZ = (nIndBySpp - fnIndBySpeciesMean)/fnIndBySpeciesSd,
    observedWeightZ = (observedWeight - fMMean)/fMSd,
    
    meanFlowByRiverZ = (meanFlowByRiver - fQMean)/fQSd,
    meanTempZ = (meanTemperature - fTMean)/fTSd,
    
    meanFlowByRiverZbySeason = (meanFlowByRiver - fQbySeasonMean)/fQbySeasonSd,
    meanTempZbySeason = (meanTemperature - fTbySeasonMean)/fTbySeasonSd,
  )
```

### Raw data with logistic fit for flow effect

```{r}
#| label: logisticFlow

ggplot(cd1_z |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  theme_publication() +    
  facet_grid(seasonGG~speciesGG)

ggplot(cd1_z |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZ, negGrowth * 1, color = riverGG)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  theme_publication() +    
  facet_grid(seasonGG ~ speciesGG + riverGG)

# ggplot(cd1_z |> filter(!is.na(negGrowth)), aes(meanFlowByRiverZbySeason, negGrowth * 1, color = riverGG)) +
#   geom_point(alpha = 0.1) +
#   geom_smooth(method = "glm", 
#               method.args = list(family = "binomial"),
#               se = FALSE) +
#   labs(y = "Probability of negative growth in mass", x = "Mean flow (scaled by season)") +
#   theme_publication() +    
#   facet_grid(seasonGG ~ speciesGG + riverGG)
```

### Raw data with logistic fit for temperature effect

```{r}
#| label: logisticTemp

ggplot(cd1_z |> filter(!is.na(negGrowth), meanTempZbySeason > -4), aes(meanTempZbySeason, negGrowth * 1, color = riverGG)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean temperature (scaled by season)") +
  theme_publication() +    
  facet_grid(seasonGG ~ speciesGG)
```

### Raw data with logistic fit for observedWeight effect

```{r}
#| label: logisticWeight

ggplot(cd1_z |> filter(!is.na(negGrowth), meanTempZbySeason > -4), aes(observedWeightZ, negGrowth * 1, color = riverGG)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mass (mg, scaled by species and river)") +
  theme_publication() +    
  facet_grid(seasonGG ~ speciesGG)
```


## Logistic model for flow and temperature, one species at a time

Species occupy different rivers, so an all-species model will have
unequal river representation across species and don't need to predict
where species are not.

Need to think through whether these models make sense...

```{r}
#| label: runLogisticModels
library(car)

runSppModels <- function(d, speciesIn) {
  models =
    tibble(model = 
      c(
          'negGrowth ~ meanFlowByRiverZbySeason',
          'negGrowth ~ meanTempZbySeason',
          'negGrowth ~ river',
          'negGrowth ~ factor(season)',
          'negGrowth ~ observedWeightZ',
          'negGrowth ~ nIndBySpeciesZ',
          'negGrowth ~ nIndZ',
        
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river',
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason + river',
          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason + river', 
          
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason', 
          
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season)',
          
          'negGrowth ~ meanFlowByRiverZbySeason + meanTempZbySeason * river * factor(season)', 
          
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ)^2',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndBySpeciesZ)^2',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^2',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ + nIndBySpeciesZ)^2',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + river + factor(season) + observedWeightZ + nIndZ)^3',
          
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ * nIndBySpeciesZ',
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * factor(season) * observedWeightZ + nIndBySpeciesZ',
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ + factor(season)',
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ + nIndBySpeciesZ * factor(season)',
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * river * observedWeightZ * nIndBySpeciesZ + factor(season)',
          
          'negGrowth ~ meanFlowByRiverZbySeason * meanTempZbySeason * nIndBySpeciesZ + river + observedWeightZ + factor(season)',
          'negGrowth ~ (meanFlowByRiverZbySeason + meanTempZbySeason + nIndBySpeciesZ)^2 + river + observedWeightZ + factor(season)'
    
        )
    ) |>
    mutate(
      fit = map(model, ~glm(.x, family = "binomial", data = d |> filter(species == speciesIn))),
      glanced = map(fit, broom::glance),
      tidied = map(fit, broom::tidy)
      # anova = map(fit, anova),
      # summary = map(fit, summary),
      # confint = map(fit, confint)
    )
  return(models)
}

```

### Predict p(neg growth in mass)

```{r}
#| label: predictLogistic

predictSpp <- function(dIn, modIn, speciesIn){
  d <- dIn |> filter(species == speciesIn)
  
  byAIC = modIn |> 
    unnest(glanced) |> 
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, deviance, fit, tidied) 
  
  predDSpp <- expand.grid(
    meanFlowByRiverZbySeason = seq(-1.5,1.5,0.25), 
    meanTempZbySeason = seq(-1.5,1.5,0.25), 
    river = unique(d$river), 
    season = unique(d$season),
    observedWeightZ = seq(-1.5,1.5,0.25),
    nIndBySpeciesZ = seq(-1.5,1.5,0.25),
    nIndZ = seq(-1.5,1.5,0.25)
    )
  
  
  pred <- add_column(predDSpp, 
                     pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = "response")) |> 
             mutate(groupT = paste(river, season, meanTempZbySeason, sep = "_"),
                    groupF = paste(river, season, meanFlowByRiverZbySeason, sep = "_"),
                    groupTM = paste(river, season, meanTempZbySeason, observedWeightZ, sep = "_"),
                    groupFN = paste(river, season, meanFlowByRiverZbySeason, nIndZ, sep = "_")) |> 
    addGG_noSpecies()
  
  return(
    list(
      pred = pred,
      byAIC = byAIC
    )
  )
}  


```

### Brook trout
In the figures with the shading, the shading is the range of effects from number of individuals, with the darker line on one edge of the shaded area representing high numbers of individuals. 
```{r}
#| label: modBKT

speciesIn <- "bkt"

ggpairs(
  cd1_z |> filter(species == speciesIn) |> 
  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)
)


modBKT <- runSppModels(cd1_z, speciesIn)
predBKT <- predictSpp(cd1_z, modBKT, speciesIn)
predBKT$byAIC |> dplyr::select(model, AIC, deviance) 

#https://rcompanion.org/rcompanion/e_06.html
confint(predBKT$byAIC[1,]$fit[[1]]) |> 
  as.data.frame() |> 
  mutate(
    lo = `2.5 %` > 0,
    hi =  `97.5 %` < 0,
    overlap0 = ifelse(`2.5 %` > 0 | `97.5 %` < 0, FALSE, TRUE))

anova(predBKT$byAIC[1,]$fit[[1]])

Anova(predBKT$byAIC[1,]$fit[[1]], type="II", test="Wald")

efronRSquared(predBKT$byAIC[1,]$fit[[1]])


ggplot(predBKT$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)

ggplot(predBKT$pred |> filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBKT$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season > 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)


predBKTWider <- predBKT$pred |> 
  filter(nIndZ %in% c(-1.5, 0, 1.5)) |> 
  dplyr::select(-groupFN) |> 
  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = "nIndZ")

tempColors <-  c("lightblue", "grey", "red")

ggplot(predBKTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Small fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBKTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Medium fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBKTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Large fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)


```

### Brown trout
to do: exclude OS in all models
```{r}
#| label: modBnt
#| 
speciesIn <- "bnt"

ggpairs(
  cd1_z |> filter(species == speciesIn) |> 
  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)
)


modBNT <- runSppModels(cd1_z, speciesIn)
predBNT <- predictSpp(cd1_z, modBNT, speciesIn)
predBNT$byAIC |> dplyr::select(model, AIC, deviance)

#https://rcompanion.org/rcompanion/e_06.html
confint(predBNT$byAIC[1,]$fit[[1]]) |> 
  as.data.frame() |> 
  mutate(
    lo = `2.5 %` > 0,
    hi =  `97.5 %` < 0,
    overlap0 = ifelse(`2.5 %` > 0 | `97.5 %` < 0, FALSE, TRUE))

anova(predBNT$byAIC[1,]$fit[[1]])

Anova(predBNT$byAIC[1,]$fit[[1]], type="II", test="Wald")

efronRSquared(predBNT$byAIC[1,]$fit[[1]])


ggplot(predBNT$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)

ggplot(predBNT$pred |> filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBNT$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, season > 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)


predBNTWider <- predBNT$pred |> 
  filter(nIndZ %in% c(-1.5, 0, 1.5)) |> 
  dplyr::select(-groupFN) |> 
  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = "nIndZ")

tempColors <-  c("lightblue", "grey", "red")

ggplot(predBNTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Small fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBNTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Medium fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predBNTWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Large fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)



```

### Atlantic salmon

```{r}
#| label: modAts
#| 
speciesIn <- "ats"

ggpairs(
  cd1_z |> filter(species == speciesIn) |> 
  dplyr::select(meanFlowByRiverZbySeason, meanTempZbySeason, observedWeightZ, nIndBySpeciesZ, nIndZ, river, season)
)


modATS <- runSppModels(cd1_z, speciesIn)
predATS <- predictSpp(cd1_z, modATS, speciesIn)
predATS$byAIC |> dplyr::select(model, AIC, deviance) 

#https://rcompanion.org/rcompanion/e_06.html
confint(predATS$byAIC[1,]$fit[[1]]) |> 
  as.data.frame() |> 
  mutate(
    lo = `2.5 %` > 0,
    hi =  `97.5 %` < 0,
    overlap0 = ifelse(`2.5 %` > 0 | `97.5 %` < 0, FALSE, TRUE))

anova(predATS$byAIC[1,]$fit[[1]])

Anova(predATS$byAIC[1,]$fit[[1]], type="II", test="Wald")

efronRSquared(predATS$byAIC[1,]$fit[[1]])


ggplot(predATS$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG + meanTempZbySeason)

ggplot(predATS$pred |> filter(meanTempZbySeason == 0, meanFlowByRiverZbySeason %in% c(-1.5,0,1.5), nIndZ == 0, nIndBySpeciesZ == 0, season > 1), aes(observedWeightZ, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowByRiverZbySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predATS$pred |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndZ == 0, nIndBySpeciesZ == 0, season > 1), aes(meanFlowByRiverZbySeason, pred, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason))) + #, linetype = factor(observedWeightZ))) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)


predATSWider <- predATS$pred |> 
  filter(nIndZ %in% c(-1.5, 0, 1.5)) |> 
  dplyr::select(-groupFN) |> 
  pivot_wider(values_from = pred, names_from = nIndZ, names_prefix = "nIndZ")

tempColors <-  c("lightblue", "grey", "red")

ggplot(predATSWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == -1.5, nIndBySpeciesZ == 0, season > 1, riverGG == "West Brook"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Small fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predATSWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 0, nIndBySpeciesZ == 0,  season > 1, riverGG == "West Brook"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Medium fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)

ggplot(predATSWider |> filter(meanTempZbySeason %in% c(-1.5,0,1.5), observedWeightZ == 1.5, nIndBySpeciesZ == 0,  season > 1, riverGG == "West Brook"), aes(meanFlowByRiverZbySeason, nIndZ0, group = groupTM)) +
  geom_line(aes(color = factor(meanTempZbySeason)), linewidth = 1) + #, linetype = factor(observedWeightZ))) +
  #geom_line(aes(meanFlowByRiverZbySeason, `nIndZ-1.5`, color = factor(meanTempZbySeason)), alpha = 0.5, linetype = 2, linewidth = 0.75) +
  geom_line(aes(meanFlowByRiverZbySeason, nIndZ1.5, color = factor(meanTempZbySeason)), alpha = 0.33, linewidth = 0.75) +
  geom_ribbon(aes(meanFlowByRiverZbySeason, ymin = `nIndZ-1.5`, max = nIndZ1.5, fill = factor(meanTempZbySeason)), alpha = 0.3) +
  scale_color_manual(values = tempColors) +
  scale_fill_manual(values = tempColors) +
  labs(y = "Probability of negative growth in mass", x = "Stream flow", title = "Large fish") +
  theme_publication() +    
  facet_grid(seasonGG ~ riverGG)


```

## Two growth models

### Size-adjusted growth model

#### Get l-w relationships for size-adjusted growth model

Here, we will explore size-independent growth in mass, see
`Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x.`
Size-independent growth (`grWeightS`) is calculated in
getDataElectro_targets.R file using addSizeIndGrowthWeight().\
`grWeightS` uses the slope of `log(observedWeight)` \~ `log(grWeight)`
for each river and season and species to adjust growth.\
A simple linear models shows we need to get separate slopes for each
river and season and species.

```{r}
#| label: grW_models
ggplot(cd1 |> filter(grWeight > 0), 
       aes(log(observedWeight), log(grWeight), color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Log of growth in mass") +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~speciesGG)

mod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))
mod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))
mod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))
mod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))
mod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))

AIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)
```

### Compare size-adjusted and instantaneous growth

Differences don't seem big enough to warrant the extra complexity from
the s-adjusted growth metric

```{r}
#| label: grWeight_v_grWeightS
ggplot(cd1, aes(grWeight, grWeightS, color = riverGG)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_abline(intercept = 0, slope = 1) +
  labs(y = "Gowth in mass", x = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~speciesGG)

ggplot(cd1 |> 
         dplyr::select(observedWeight, grWeight, grWeightS, seasonGG, speciesGG) |> 
         pivot_longer(cols = c(grWeight, grWeightS)),
       
       aes(log(observedWeight), value, color = name)) +
  geom_point(alpha = 0.05 )  +
  geom_smooth(method = "lm", se = FALSE) +
  labs(y = "Log of mass (mg)", x = "Growth in mass") +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~speciesGG)
```

## Compare growth in length and mass

### Growth rate in length vs size-independent growth rate in mass

```{r}
#| label: grLen_v_grWeightS
ggplot(cd1, aes(grLength, grWeightS)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  labs(x = "Growth in length", y = "Size-adjusted growth in mass") +
  scale_color_discrete() +
  theme_publication() +    
  facet_grid(seasonGG~speciesGG)
```

## **Deprecated** logistic models below

### Logistic model for flow and temperature, all species

### Model selection

```{r}
#| label: logistic models all species
modSpecies <- c("bkt", "ats", "bnt")
cd1Mod <- cd1 |> filter(species == modSpecies)

modFT0 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * species, family = "binomial", data = cd1Mod)
modFT1 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river + species, family = "binomial", data = cd1Mod)
modFT2 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river + species, family = "binomial", data = cd1Mod)
modFT3 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason + river + species, family = "binomial", data = cd1Mod)
modFT4 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = "binomial", data = cd1Mod)
modFT5 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + river , family = "binomial", data = cd1Mod)
modFT6 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason + species , family = "binomial", data = cd1Mod)
modFT7 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason, family = "binomial", data = cd1Mod)


modFT8 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) + species, family = "binomial", data = cd1Mod)
modFT9 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species, family = "binomial", data = cd1Mod)
modFT10 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason + meanTemperatureScaledBySeason * river * factor(season) * species, family = "binomial", data = cd1Mod)

modFT11 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * observedWeight + species, family = "binomial", data = cd1Mod)
modFT12 <- glm(negGrowth ~ meanFlowByRiverScaledBySeason * meanTemperatureScaledBySeason * river * factor(season) * species * observedWeight, family = "binomial", data = cd1Mod)

AIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |> arrange(AIC)
```

### Model results for additive model (not very good)

```{r}
#| label: badAdditiveModel
# https://www.statology.org/logistic-regression-in-r/
#summary(modFT3)
#anova(modFT3)

pscl::pR2(modFT3)["McFadden"]
caret::varImp(modFT3) |> arrange(desc(Overall))


```

### Model results for full interactive model (best model)

```{r}
#| label: fullModel
# https://www.statology.org/logistic-regression-in-r/
#summary(modFT11)
#anova(modFT11)

# full interaction
pscl::pR2(modFT11)["McFadden"]
caret::varImp(modFT11) |> arrange(desc(Overall))
```

### Precict p(neg growth in mass)

```{r}
#| label: predictFull
#| 
predD <- expand.grid(
  meanFlowByRiverScaledBySeason = seq(-1.5,1.5,0.25), 
  meanTemperatureScaledBySeason = seq(-1.5,1.5,0.25), 
  river = unique(cd1$river), 
  species = unique(cd1$species), 
  season = unique(cd1$season),
  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)
  )


pred <- add_column(predD, 
                   pred = predict.glm(modFT11, predD, type = "response")) |> 
        mutate(groupT = paste(river, species, season, meanTemperatureScaledBySeason, sep = "_"),
               groupF = paste(river, species, season, meanFlowByRiverScaledBySeason, sep = "_"))
                   
```

### Plot predictions

```{r}
#| label: plotPred

ggplot(pred |> filter(meanTemperatureScaledBySeason %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowByRiverScaledBySeason, pred, group= groupT)) +
  geom_line(aes(color = factor(meanTemperatureScaledBySeason))) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  theme_publication() +    
  facet_grid(season~species+river)
```
