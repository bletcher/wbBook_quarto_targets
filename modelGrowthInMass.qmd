# Growth in mass

```{r}
#| label: dataModelFlowOptions
#| include: false
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
```

```{r}
#| label: librariesModelsFlow
#| echo: false
library(getWBData)
library(tidyverse)
library(lubridate)
library(kableExtra)
library(GGally)
library(lme4)
library(targets)
library(relaimpo)
library(caret)
library(pscl)
```

Distribution of growth, negative growth
Causes of neg growth  
  - Extrinsic
    - river, season, flow, temp
  - intrinsic  
    - Sex (fall), life history, section, size, age, previous growth (CF?), movement (section/river) 
consequences of neg growth
   - survival  
   - future growth (length and mass)
   - movement (section/river)
   - reprod success?  
   - local density (con and hetero)

Probs with growth in mass  
spawning loss mass in the fall, esp in OB

Interaction between flow:temp, diff btw WB (groundwater dominated at low flow so cold) and tribs (combo of surface and gw?)

Compare growth with t/f cycle diagrams for each river

compare condition factor among species - looks like bkt growing faster in weight

flow/temp circles with gr on top

## Examine raw data
### Get electrofishing data
```{r}
#| label: readInAllData
cd <- tar_read(cdWB_electro_target)

```

### Limit data to consecutive sample captures (cd1)  
Previous growth models with length used all possible observations for a fish and interpolated missing observations. Here, we are just looking at consecutive captures to estimate growth over just that interval.
```{r}
#| label: consecSamples
# table(as.numeric(cd$sampleNumber), as.numeric(cd$lagSampleNumber), cd$season, cd$year) |> 
#   data.frame() |> 
#   filter(Freq > 0) |> 
#   arrange(Var1, Var2) |> 
#   rename(firstCapt = Var1, secondCapt = Var2, season = Var3, year = Var4) |> 
#   filter(year == 2010)

`%notin%` <- Negate(`%in%`)

cd1 <- cd |> 
  filter(sampleNumberDiff == 1,
         tag %notin% c('1bf20ff490', '1bf20ebe4e')) |> 
  mutate(negGrowth = grWeight < 0)
```


### Find outlier growth rates  
#### Negative outlier growth  
`1bf20ebe4e` and `1bf20ff490` have incorrect weights leading to very negative growth rates.  
Exclude these tags above. The rest of the quite negative growth fish seem plausible (remember we can't account for stomach contents or egg loss).
```{r}
cd |> 
  arrange(grWeightS) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS)
```

#### Positive outlier growth 
Lots of very fast growth mostly in the spring. No clear way to exclude fish.
```{r}
cd1 |> 
  arrange(desc(grWeightS)) |> 
  dplyr::select(tag, species, season, sampleNumber, lagSampleNumber, observedWeight, lagObservedWeight, grWeightS) |> 
  print(n = 20)
```

### Raw length, weight data graphs
#### Distribution of growth rates
```{r}
ggplot(cd1, aes(grWeight, color = factor(species))) +
  geom_freqpoly(bins = 100) +
  facet_wrap(~season)
```

### Length vs weight by species
Very few outliers
```{r}
ggplot(cd1 |> filter(species == "bkt"), aes(observedLength, observedWeight)) +
  geom_point(alpha = 0.5, size = 1) +
  scale_x_log10() +
  scale_y_log10() +
  ggtitle("Brook trout") +
  facet_grid(river~year, scales = 'free')

ggplot(cd1 |> filter(species == "bnt"), aes(observedLength, observedWeight)) +
  geom_point(alpha = 0.5, size = 1) +
  scale_x_log10() +
  scale_y_log10() +
  ggtitle("Brown trout") +
  facet_grid(river~year, scales = 'free')

ggplot(cd1 |> filter(species == "ats"), aes(observedLength, observedWeight)) +
  geom_point(alpha = 0.5, size = 1) +
  scale_x_log10() +
  scale_y_log10() +
  ggtitle("Atlantic salmon") +
  facet_grid(river~year, scales = 'free')
```

### Weight vs weight at next sample
```{r}
ggplot(cd1 |> filter(species == "bkt"), aes(observedWeight, lagObservedWeight, color = factor(season))) +
  geom_point(alpha = 0.15) +
  guides(color = guide_legend(override.aes = list(alpha = 1))) +
  ggtitle("Brook trout") +
  facet_wrap(~river, scales = 'free')

ggplot(cd1 |> filter(species == "bnt", river != "wb mitchell"), aes(observedWeight, lagObservedWeight, color = factor(season))) +
  geom_point(alpha = 0.15) +
  guides(color = guide_legend(override.aes = list(alpha = 1))) +
  ggtitle("Brown trout") +
  facet_wrap(~river, scales = 'free')

ggplot(cd1 |> filter(species == "ats", river =="west brook"), aes(observedWeight, lagObservedWeight, color = factor(season))) +
  geom_point(alpha = 0.15) +
  guides(color = guide_legend(override.aes = list(alpha = 1))) +
  ggtitle("Atlantic salmon") +
  facet_wrap(~river, scales = 'free')
```


## Two growth models
### Size-adjusted growth model
#### Get l-w relationships for size-adjusted growth model  
Here, we will explore size-independent growth in mass, see `Sigourney, D. B., B H Letcher, M. Obedzinski, and R. A. Cunjak. “Size-Independent Growth in Fishes: Patterns, Models and Metrics.” Journal of Fish Biology 72, no. 10 (2008): 2435–55. https://doi.org/10.1111/j.1095-8649.2008.01830.x.`
Size-independent growth (`grWeightS`) is calculated in getDataElectro_targets.R file using addSizeIndGrowthWeight().  
`grWeightS` uses the slope of `log(observedWeight)` ~ `log(grWeight)` for each river and season and species to adjust growth.  
A simple linear models shows we need to get separate slopes for each river and season and species.  

```{r}

ggplot(cd1 |> filter(grWeight > 0), 
       aes(log(observedWeight), log(grWeight), color = river)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  facet_grid(season~species)

mod0 <- lm(log(grWeight) ~ log(observedWeight), data = cd1 |> filter(grWeight > 0))
mod1 <- lm(log(grWeight) ~ log(observedWeight) * river, data = cd1 |> filter(grWeight > 0))
mod2 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season), data = cd1 |> filter(grWeight > 0))
mod3 <- lm(log(grWeight) ~ log(observedWeight) * factor(season), data = cd1 |> filter(grWeight > 0))
mod4 <- lm(log(grWeight) ~ log(observedWeight) * river * factor(season) * species, data = cd1 |> filter(grWeight > 0))

AIC(mod0,mod1,mod2,mod3,mod4) |> arrange(AIC)
```

### Compare size-adjusted and instantaneous growth  
Differences don't seem big enough to warrant the extra complexity from the s-adjusted growth metric 
```{r}
ggplot(cd1, aes(grWeight, grWeightS, color = river)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  geom_abline(intercept = 0, slope = 1) +
  facet_grid(season~species)

ggplot(cd1 |> 
         dplyr::select(observedWeight, grWeight, grWeightS, season, species) |> 
         pivot_longer(cols = c(grWeight, grWeightS)),
       
       aes(log(observedWeight), value, color = name)) +
  geom_point(alpha = 0.05 )  +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Growth rate") +
  facet_grid(season~species)
```


## Compare growth in length and mass  
### Growth rate in length vs size-independent growth rate in mass
```{r}

ggplot(cd1, aes(grLength, grWeightS)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  facet_grid(season~species)
```

### Growth rate in length vs 'instantaneous' growth rate in mass
```{r}

ggplot(cd1, aes(grLength, grWeight)) +
  geom_point(aes(size = observedWeight), alpha = 0.02) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) +
  facet_grid(season~species)

ggplot(cd1 |> filter(species=="bnt", season ==2), aes(grLength, grWeight, color = factor(year))) +
  geom_point( alpha = 1) +
  geom_smooth(method="lm", se=FALSE) +
  guides(size = guide_legend(override.aes = list(alpha = 1))) 


#  facet_wrap(~year)
```


## Flow and temperature gorwth models
### Mean flow effect on growth?  
Maybe in Jimmy for bnt, or for ats
```{r}

ggplot(cd1, aes(meanFlow, grWeight, color = river)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  facet_grid(season~species, scales = 'free')
```

Fall season only
```{r}
ggplot(cd1 |> filter(season == 3), aes(meanFlow, grWeight, color = river)) +
  geom_point(alpha = 0.1)  +
  geom_smooth(method = "lm", se = FALSE) +
  facet_grid(season~species, scales = 'free')

```


### Mean temperature effect on growth?  
Maybe in Jimmy for bnt, or for ats
```{r}

ggplot(cd1, aes(meanTemperature, grWeight, color = river)) +
  geom_point(alpha = 0.05)  +
  geom_smooth(method = "lm", se = FALSE) +
  facet_grid(season~species, scales = 'free')

ggplot(cd1 |> filter(species == 'bkt'), aes(meanTemperature, grWeight, color = river)) +
  geom_point(alpha = 0.1)  +
  geom_smooth(method = "lm", se = FALSE) +
  ggtitle('Species = brook trout') +
  facet_wrap(~season, scales = 'free')

ggplot(cd1 |> filter(species == 'bnt'), aes(meanTemperature, grWeight, color = river)) +
  geom_point(alpha = 0.1)  +
  geom_smooth(method = "lm", se = FALSE) +
  ggtitle('Species = brown trout') +
  facet_wrap(~season, scales = 'free')

ggplot(cd1 |> filter(species == 'ats'), aes(meanTemperature, grWeight, color = river)) +
  geom_point(alpha = 0.1)  +
  geom_smooth(method = "lm", se = FALSE) +
  ggtitle('Species = Atlantic salmon') +
  facet_wrap(~season, scales = 'free')


```


## Negative vs positive growth
### Proportion of fish with negative growth by species/river/season
```{r}
ggplot(cd1, aes(negGrowth)) +
  geom_bar() +
  facet_grid(season~species+river, scales = "free")

propNegSRS <- cd1 |> 
  group_by(species, river, season) |> 
  summarize(numNeg = sum(negGrowth, na.rm = TRUE),
            n = n()
            ) |> 
  mutate(numPos = n - numNeg,
         propPos = numPos/n,
         propNeg = numNeg/n)

ggplot(propNegSRS |> filter(n > 50), aes(season, propNeg, color = river)) +
  geom_point(aes(size = n)) +
  geom_line() +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  facet_wrap(~species)

```

### Proportion of fish with negative growth by species/river/sampleNumber  
Break down season by year
```{r}
propNegSRsN <- cd1 |> 
  group_by(species, river, sampleNumber, season, year) |> 
  summarize(numNeg = sum(negGrowth, na.rm = TRUE),
            n = n(),
            mT = mean(meanTemperature, na.rm = TRUE),
            mF = mean(meanFlow, na.rm = TRUE)
            ) |> 
  mutate(numPos = n - numNeg,
         propPos = numPos/n,
         propNeg = numNeg/n)

ggplot(propNegSRsN |> filter(n > 10), aes(year, propNeg, color = river)) +
  geom_point(aes(size = n)) +
  geom_line() +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  facet_grid(season~species)
```

## Environmental effects on proportion of fish with negative growth
### Proportion of fish with negative growth by **flow**
```{r}

ggplot(propNegSRsN |> filter(n > 10), aes(mF, propNeg, color = river)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_continuous("Mean Flow") +
  facet_grid(season~species)
```

### Proportion of fish with negative growth by **temperature**
```{r}

ggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_continuous("Mean Temperature") +
  facet_grid(season~species, scales = "free")
```
Rotate graph so we can have free scales for each season
```{r}
ggplot(propNegSRsN |> filter(n > 10), aes(mT, propNeg, color = river)) +
  geom_point(aes(size = n)) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_y_continuous("Proportion of fish with negative growth in mass") +
  scale_x_continuous("Mean Temperature") +
  facet_grid(species~season, scales = "free")
```

## Logistic models for environmental effects on propNeg
### Standardize flow and temperature
```{r}
# getZ <- function(d){
#   list(
#     mean = mean(d, na.rm = TRUE),
#     sd = sd(d, na.rm = TRUE)
#   )
# }
# fZ <- getZ(cd1$meanFlow)
# fT <- getZ(cd1$meanTemperature)

z <- cd1 |> 
  group_by(season) |> 
  summarize(fZMean = mean(meanFlow, na.rm = TRUE),
            fZSd = sd(meanFlow, na.rm = TRUE),
            fTMean = mean(meanTemperature, na.rm = TRUE),
            fTSd = sd(meanTemperature, na.rm = TRUE)
            )

cd1 <- cd1 |> 
  left_join(z) |> 
  mutate(meanFlowZ = (meanFlow - fZMean)/fZSd,
         meanTempZ = (meanTemperature - fTMean)/fTSd)
```

### Raw data with logistic fit for flow effect 
```{r}
ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species)

ggplot(cd1 |> filter(!is.na(negGrowth)), aes(meanFlowZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```

### Raw data with logistic fit for temperature effect 
```{r}
ggplot(cd1 |> filter(!is.na(negGrowth), meanTempZ > -4), aes(meanTempZ, negGrowth * 1, color = river)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = "glm", 
              method.args = list(family = "binomial"),
              se = FALSE) +
  labs(y = "Probability of negative growth in mass", x = "Mean temperature") +
  facet_grid(season~species)
```

## Logistic model for flow and temperature, one species at a time  
Species occupy different rivers, so an all-species model will have unequal river representation across species and don't need to predict where species are not. 

Need to think through whether these models make sense...

```{r}

runSppModels <- function(d, speciesIn) {
  models =
    tibble(model = 
      c(
          'negGrowth ~ meanFlowZ * meanTempZ * river',
          'negGrowth ~ meanFlowZ * meanTempZ + river',
          'negGrowth ~ meanFlowZ + meanTempZ + river', 
          
          'negGrowth ~ meanFlowZ * meanTempZ' , 
          
          'negGrowth ~ meanFlowZ * meanTempZ * river * factor(season)',
          
          'negGrowth ~ meanFlowZ + meanTempZ * river * factor(season)', 
          
          'negGrowth ~ meanFlowZ * meanTempZ * river * factor(season) * observedWeight' 
        )
    ) |>
    mutate(
      fit = map(model, ~glm(.x, family = "binomial", data = d |> filter(species == speciesIn))),
      glanced = map(fit, broom::glance),
      tidied = map(fit, broom::tidy)
    )
  return(models)
}

```

### Predict p(neg growth in mass)
```{r}
predictSpp <- function(dIn, modIn, speciesIn){
  d <- dIn |> filter(species == speciesIn)
  
  byAIC = modIn |> 
    unnest(glanced) |>
    arrange(AIC) |>
    dplyr::select(model, AIC, df.residual, fit, tidied)
  
  predDSpp <- expand.grid(
    meanFlowZ = seq(-1.5,1.5,0.25), 
    meanTempZ = seq(-1.5,1.5,0.25), 
    river = unique(d$river), 
    season = unique(d$season),
    observedWeight = seq(min(d$observedWeight, na.rm = TRUE), max(d$observedWeight, na.rm = TRUE), 40)
    )
  
  
  pred <- add_column(predDSpp, 
                        pred = predict.glm(byAIC[1,]$fit[[1]], predDSpp, type = "response")) |> 
             mutate(groupT = paste(river, season, meanTempZ, sep = "_"),
                    groupF = paste(river, season, meanFlowZ, sep = "_"))
  return(
    list(
      pred = pred,
      byAIC = byAIC
      )
  )
}   


```


### Brook trout
```{r}
speciesIn <- "bkt"
modBKT <- runSppModels(cd1, speciesIn)
predBKT <- predictSpp(cd1, modBKT, speciesIn)


ggplot(predBKT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)

```

### Brown trout
```{r}
speciesIn <- "bnt"

modBNT <- runSppModels(cd1, speciesIn)
predBNT <- predictSpp(cd1, modBNT, speciesIn)


ggplot(predBNT$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```

### Atlantic salmon
```{r}

speciesIn <- "ats"

modATS <- runSppModels(cd1, speciesIn)
predATS <- predictSpp(cd1, modATS, speciesIn)


ggplot(predATS$pred |> filter(meanTempZ %in% c(-1.5,0,1.5), meanFlowZ %in% c(-1.5,0,1.5)), aes(observedWeight, pred, group = groupF)) +
  geom_line(aes(color = factor(meanFlowZ))) +
  labs(y = "Probability of negative growth in mass", x = "Body mass (mg)") +
  facet_grid(season~river+meanTempZ)
```


### Pairs plots




## Deprecated logistic models below

## Logistic model for flow and temperature, all species
### Model selection
```{r}
#| label: logistic models all species
modSpecies <- c("bkt", "ats", "bnt")
cd1Mod <- cd1 |> filter(species == modSpecies)

modFT0 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * species, family = "binomial", data = cd1Mod)
modFT1 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river + species, family = "binomial", data = cd1Mod)
modFT2 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT3 <- glm(negGrowth ~ meanFlowZ + meanTempZ + river + species, family = "binomial", data = cd1Mod)
modFT4 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT5 <- glm(negGrowth ~ meanFlowZ * meanTempZ + river , family = "binomial", data = cd1Mod)
modFT6 <- glm(negGrowth ~ meanFlowZ * meanTempZ + species , family = "binomial", data = cd1Mod)
modFT7 <- glm(negGrowth ~ meanFlowZ * meanTempZ, family = "binomial", data = cd1Mod)


modFT8 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * factor(season) + species, family = "binomial", data = cd1Mod)
modFT9 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)
modFT10 <- glm(negGrowth ~ meanFlowZ + meanTempZ * river * factor(season) * species, family = "binomial", data = cd1Mod)

modFT11 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * factor(season) * observedWeight + species, family = "binomial", data = cd1Mod)
modFT12 <- glm(negGrowth ~ meanFlowZ * meanTempZ * river * factor(season) * species * observedWeight, family = "binomial", data = cd1Mod)

AIC(modFT0, modFT1,modFT2, modFT3,modFT4,modFT5, modFT6,modFT7,modFT8,modFT9,modFT10, modFT11, modFT12) |> arrange(AIC)
```

### Model results for additive model (not very good)
```{r}

# https://www.statology.org/logistic-regression-in-r/
#summary(modFT3)
#anova(modFT3)

pscl::pR2(modFT3)["McFadden"]
caret::varImp(modFT3) |> arrange(desc(Overall))


```

### Model results for full interactive model (best model)
```{r}

# https://www.statology.org/logistic-regression-in-r/
#summary(modFT11)
#anova(modFT11)

# full interaction
pscl::pR2(modFT11)["McFadden"]
caret::varImp(modFT11) |> arrange(desc(Overall))
```


### Precict p(neg growth in mass)
```{r}
predD <- expand.grid(
  meanFlowZ = seq(-1.5,1.5,0.25), 
  meanTempZ = seq(-1.5,1.5,0.25), 
  river = unique(cd1$river), 
  species = unique(cd1$species), 
  season = unique(cd1$season),
  observedWeight = seq(min(cd1$observedWeight, na.rm = TRUE), max(cd1$observedWeight, na.rm = TRUE), 40)
  )


pred <- add_column(predD, 
                   pred = predict.glm(modFT11, predD, type = "response")) |> 
        mutate(groupT = paste(river, species, season, meanTempZ, sep = "_"),
               groupF = paste(river, species, season, meanFlowZ, sep = "_"))
                   
```

### Plot predictions
```{r}


ggplot(pred |> filter(meanTempZ %in% c(-1.5,0,1.5), observedWeight == 161.3), aes(meanFlowZ, pred, group= groupT)) +
  geom_line(aes(color = factor(meanTempZ))) +
  labs(y = "Probability of negative growth in mass", x = "Mean flow") +
  facet_grid(season~species+river)
```



